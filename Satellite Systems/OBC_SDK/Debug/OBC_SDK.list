
OBC_SDK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000103e8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000b94  08010598  08010598  00020598  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  0801112c  0801112c  0002112c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08011130  08011130  00021130  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000001ec  20000000  08011134  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ccmram       00000000  10000000  10000000  000301ec  2**0
                  CONTENTS
  7 .bss          0000801c  200001ec  200001ec  000301ec  2**2
                  ALLOC
  8 ._user_heap_stack 00002000  20008208  20008208  000301ec  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000301ec  2**0
                  CONTENTS, READONLY
 10 .debug_info   000239e6  00000000  00000000  0003021c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000051c7  00000000  00000000  00053c02  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00001de0  00000000  00000000  00058dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 00001b88  00000000  00000000  0005abb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0000b8d2  00000000  00000000  0005c738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0002a645  00000000  00000000  0006800a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    000f5bb9  00000000  00000000  0009264f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000050  00000000  00000000  00188208  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00008da8  00000000  00000000  00188258  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .stab         000000b4  00000000  00000000  00191000  2**2
                  CONTENTS, READONLY, DEBUGGING
 20 .stabstr      000001c7  00000000  00000000  001910b4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200001ec 	.word	0x200001ec
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08010580 	.word	0x08010580

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200001f0 	.word	0x200001f0
 80001ec:	08010580 	.word	0x08010580

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_d2f>:
 8000bc8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bcc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bd0:	bf24      	itt	cs
 8000bd2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bd6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bda:	d90d      	bls.n	8000bf8 <__aeabi_d2f+0x30>
 8000bdc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000be0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000be4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000be8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bf0:	bf08      	it	eq
 8000bf2:	f020 0001 	biceq.w	r0, r0, #1
 8000bf6:	4770      	bx	lr
 8000bf8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bfc:	d121      	bne.n	8000c42 <__aeabi_d2f+0x7a>
 8000bfe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c02:	bfbc      	itt	lt
 8000c04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c08:	4770      	bxlt	lr
 8000c0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c12:	f1c2 0218 	rsb	r2, r2, #24
 8000c16:	f1c2 0c20 	rsb	ip, r2, #32
 8000c1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c22:	bf18      	it	ne
 8000c24:	f040 0001 	orrne.w	r0, r0, #1
 8000c28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c34:	ea40 000c 	orr.w	r0, r0, ip
 8000c38:	fa23 f302 	lsr.w	r3, r3, r2
 8000c3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c40:	e7cc      	b.n	8000bdc <__aeabi_d2f+0x14>
 8000c42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c46:	d107      	bne.n	8000c58 <__aeabi_d2f+0x90>
 8000c48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c4c:	bf1e      	ittt	ne
 8000c4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c56:	4770      	bxne	lr
 8000c58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c64:	4770      	bx	lr
 8000c66:	bf00      	nop

08000c68 <Main_Task>:
bool LOW_POWER_MODE = 0;

/*
 * @brief Main Task/Thread
 */
void Main_Task(void const * argument){
 8000c68:	b5b0      	push	{r4, r5, r7, lr}
 8000c6a:	b096      	sub	sp, #88	; 0x58
 8000c6c:	af00      	add	r7, sp, #0
 8000c6e:	6078      	str	r0, [r7, #4]
    debug_printf("Starting Main function.\r\n");
 8000c70:	48b8      	ldr	r0, [pc, #736]	; (8000f54 <Main_Task+0x2ec>)
 8000c72:	f002 ff95 	bl	8003ba0 <debug_printf>

    debug_led_green(5, 500);
 8000c76:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8000c7a:	2005      	movs	r0, #5
 8000c7c:	f002 fff6 	bl	8003c6c <debug_led_green>
    //Initialize Mutexes with CMSIS RTOS
    // EPS I2C
    osMutexDef(EPS_I2C_Mutex);
 8000c80:	2300      	movs	r3, #0
 8000c82:	653b      	str	r3, [r7, #80]	; 0x50
    EPS_I2C_Mutex = osMutexCreate(osMutex(EPS_I2C_Mutex));
 8000c84:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000c88:	4618      	mov	r0, r3
 8000c8a:	f009 ff22 	bl	800aad2 <osMutexCreate>
 8000c8e:	4603      	mov	r3, r0
 8000c90:	4ab1      	ldr	r2, [pc, #708]	; (8000f58 <Main_Task+0x2f0>)
 8000c92:	6013      	str	r3, [r2, #0]

    // UART
    osMutexDef(UART_Mutex);
 8000c94:	2300      	movs	r3, #0
 8000c96:	64fb      	str	r3, [r7, #76]	; 0x4c
    UART_Mutex = osMutexCreate(osMutex(UART_Mutex));
 8000c98:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000c9c:	4618      	mov	r0, r3
 8000c9e:	f009 ff18 	bl	800aad2 <osMutexCreate>
 8000ca2:	4603      	mov	r3, r0
 8000ca4:	4aad      	ldr	r2, [pc, #692]	; (8000f5c <Main_Task+0x2f4>)
 8000ca6:	6013      	str	r3, [r2, #0]

    // I2C Errors
    osMutexDef(Num_I2C_Errors_Mutex);
 8000ca8:	2300      	movs	r3, #0
 8000caa:	64bb      	str	r3, [r7, #72]	; 0x48
    Num_I2C_Errors_Mutex = osMutexCreate(osMutex(Num_I2C_Errors_Mutex));
 8000cac:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8000cb0:	4618      	mov	r0, r3
 8000cb2:	f009 ff0e 	bl	800aad2 <osMutexCreate>
 8000cb6:	4603      	mov	r3, r0
 8000cb8:	4aa9      	ldr	r2, [pc, #676]	; (8000f60 <Main_Task+0x2f8>)
 8000cba:	6013      	str	r3, [r2, #0]

    // Battery
    osMutexDef(Battery_Capacity_Mutex);
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	647b      	str	r3, [r7, #68]	; 0x44
    Battery_Capacity_Mutex = osMutexCreate(osMutex(Battery_Capacity_Mutex));
 8000cc0:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	f009 ff04 	bl	800aad2 <osMutexCreate>
 8000cca:	4603      	mov	r3, r0
 8000ccc:	4aa5      	ldr	r2, [pc, #660]	; (8000f64 <Main_Task+0x2fc>)
 8000cce:	6013      	str	r3, [r2, #0]

    // ADCS
    osMutexDef(ADCS_Active_Mutex);
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	643b      	str	r3, [r7, #64]	; 0x40
    ADCS_Active_Mutex = osMutexCreate(osMutex(ADCS_Active_Mutex));
 8000cd4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8000cd8:	4618      	mov	r0, r3
 8000cda:	f009 fefa 	bl	800aad2 <osMutexCreate>
 8000cde:	4603      	mov	r3, r0
 8000ce0:	4aa1      	ldr	r2, [pc, #644]	; (8000f68 <Main_Task+0x300>)
 8000ce2:	6013      	str	r3, [r2, #0]

    // Low Power
    osMutexDef(Low_Power_Mode_Mutex);
 8000ce4:	2300      	movs	r3, #0
 8000ce6:	63fb      	str	r3, [r7, #60]	; 0x3c
    Low_Power_Mode_Mutex = osMutexCreate(osMutex(Low_Power_Mode_Mutex));
 8000ce8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000cec:	4618      	mov	r0, r3
 8000cee:	f009 fef0 	bl	800aad2 <osMutexCreate>
 8000cf2:	4603      	mov	r3, r0
 8000cf4:	4a9d      	ldr	r2, [pc, #628]	; (8000f6c <Main_Task+0x304>)
 8000cf6:	6013      	str	r3, [r2, #0]

    // UHF
    osMutexDef(UHF_UART_Mutex);
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	63bb      	str	r3, [r7, #56]	; 0x38
    UHF_UART_Mutex = osMutexCreate(osMutex(UHF_UART_Mutex));
 8000cfc:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000d00:	4618      	mov	r0, r3
 8000d02:	f009 fee6 	bl	800aad2 <osMutexCreate>
 8000d06:	4603      	mov	r3, r0
 8000d08:	4a99      	ldr	r2, [pc, #612]	; (8000f70 <Main_Task+0x308>)
 8000d0a:	6013      	str	r3, [r2, #0]

    // Power on UHF code goes here
    HAL_StatusTypeDef status2 = HAL_OK;
 8000d0c:	2300      	movs	r3, #0
 8000d0e:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    status2 = enable_UHF();
 8000d12:	f001 f99f 	bl	8002054 <enable_UHF>
 8000d16:	4603      	mov	r3, r0
 8000d18:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    debug_printf("Commanding EPS to enable UHF");
 8000d1c:	4895      	ldr	r0, [pc, #596]	; (8000f74 <Main_Task+0x30c>)
 8000d1e:	f002 ff3f 	bl	8003ba0 <debug_printf>
    if(status2 != HAL_OK){
 8000d22:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000d26:	2b00      	cmp	r3, #0
 8000d28:	d003      	beq.n	8000d32 <Main_Task+0xca>
        debug_printf("EPS UHF Enable Error");
 8000d2a:	4893      	ldr	r0, [pc, #588]	; (8000f78 <Main_Task+0x310>)
 8000d2c:	f002 ff38 	bl	8003ba0 <debug_printf>
 8000d30:	e002      	b.n	8000d38 <Main_Task+0xd0>
    }else{
        debug_printf("Power to UHF Enabled");
 8000d32:	4892      	ldr	r0, [pc, #584]	; (8000f7c <Main_Task+0x314>)
 8000d34:	f002 ff34 	bl	8003ba0 <debug_printf>
    }
    osDelay(2000); //Delay to allow the UHF to turn on properly (not the problem but probably good practice)
 8000d38:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8000d3c:	f009 feb5 	bl	800aaaa <osDelay>

    // Turns on SDR/Payload
    debug_printf("Commanding EPS to enable payload");
 8000d40:	488f      	ldr	r0, [pc, #572]	; (8000f80 <Main_Task+0x318>)
 8000d42:	f002 ff2d 	bl	8003ba0 <debug_printf>
    status2 = enable_Payload();
 8000d46:	f001 f961 	bl	800200c <enable_Payload>
 8000d4a:	4603      	mov	r3, r0
 8000d4c:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    if(status2 != HAL_OK){
 8000d50:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000d54:	2b00      	cmp	r3, #0
 8000d56:	d003      	beq.n	8000d60 <Main_Task+0xf8>
        debug_printf("EPS Payload Enable Error");
 8000d58:	488a      	ldr	r0, [pc, #552]	; (8000f84 <Main_Task+0x31c>)
 8000d5a:	f002 ff21 	bl	8003ba0 <debug_printf>
 8000d5e:	e002      	b.n	8000d66 <Main_Task+0xfe>
    }else{
        debug_printf("Power to Payload Enabled");
 8000d60:	4889      	ldr	r0, [pc, #548]	; (8000f88 <Main_Task+0x320>)
 8000d62:	f002 ff1d 	bl	8003ba0 <debug_printf>
    }

    // Turns on Boost Board
    debug_printf("Commanding EPS to enable Boost Board");
 8000d66:	4889      	ldr	r0, [pc, #548]	; (8000f8c <Main_Task+0x324>)
 8000d68:	f002 ff1a 	bl	8003ba0 <debug_printf>
    enable_Boost_Board();
 8000d6c:	f001 f93c 	bl	8001fe8 <enable_Boost_Board>
    if(status2 != HAL_OK){
 8000d70:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000d74:	2b00      	cmp	r3, #0
 8000d76:	d003      	beq.n	8000d80 <Main_Task+0x118>
        debug_printf("EPS Boost Board Enable Error");
 8000d78:	4885      	ldr	r0, [pc, #532]	; (8000f90 <Main_Task+0x328>)
 8000d7a:	f002 ff11 	bl	8003ba0 <debug_printf>
 8000d7e:	e002      	b.n	8000d86 <Main_Task+0x11e>
    }else{
        debug_printf("Power to Boost Board Enabled");
 8000d80:	4884      	ldr	r0, [pc, #528]	; (8000f94 <Main_Task+0x32c>)
 8000d82:	f002 ff0d 	bl	8003ba0 <debug_printf>
    // Magnetometer Deployment is done by the ADCS function

    // Antenna Deployment
    // TODO: Antenna Deployment Function Goes Here (DO NOT RUN WITH ACTUAL ANTENNA UNTIL FLIGHT, IT IS SINGLE USE)
    //DEPLOY_ANTENNA(30);
    debug_printf("Sending 0x1F to I2C slave address 0x33");
 8000d86:	4884      	ldr	r0, [pc, #528]	; (8000f98 <Main_Task+0x330>)
 8000d88:	f002 ff0a 	bl	8003ba0 <debug_printf>

    // Beacon Configuration
    debug_printf("Starting UHF Beacon Configuration");
 8000d8c:	4883      	ldr	r0, [pc, #524]	; (8000f9c <Main_Task+0x334>)
 8000d8e:	f002 ff07 	bl	8003ba0 <debug_printf>
    uint8_t initial_beacon_text[] = "Hello I Am Space Co32"; // Beacon Message
 8000d92:	4b83      	ldr	r3, [pc, #524]	; (8000fa0 <Main_Task+0x338>)
 8000d94:	f107 0420 	add.w	r4, r7, #32
 8000d98:	461d      	mov	r5, r3
 8000d9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000d9c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000d9e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8000da2:	6020      	str	r0, [r4, #0]
 8000da4:	3404      	adds	r4, #4
 8000da6:	8021      	strh	r1, [r4, #0]

    // Beacon Period
    debug_printf("Commanding UHF to set beacon period.");
 8000da8:	487e      	ldr	r0, [pc, #504]	; (8000fa4 <Main_Task+0x33c>)
 8000daa:	f002 fef9 	bl	8003ba0 <debug_printf>
    status2 = SET_BEACON_PERIOD(20);
 8000dae:	2014      	movs	r0, #20
 8000db0:	f002 fba0 	bl	80034f4 <SET_BEACON_PERIOD>
 8000db4:	4603      	mov	r3, r0
 8000db6:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    if (status2 != HAL_OK){
 8000dba:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d003      	beq.n	8000dca <Main_Task+0x162>
        debug_printf("Beacon period set error");
 8000dc2:	4879      	ldr	r0, [pc, #484]	; (8000fa8 <Main_Task+0x340>)
 8000dc4:	f002 feec 	bl	8003ba0 <debug_printf>
 8000dc8:	e002      	b.n	8000dd0 <Main_Task+0x168>
    } else{
        debug_printf("Beacon period set successfully");
 8000dca:	4878      	ldr	r0, [pc, #480]	; (8000fac <Main_Task+0x344>)
 8000dcc:	f002 fee8 	bl	8003ba0 <debug_printf>
    }
    osDelay(500);
 8000dd0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000dd4:	f009 fe69 	bl	800aaaa <osDelay>

    // Beacon Text
    debug_printf("Commanding UHF to set beacon text.");
 8000dd8:	4875      	ldr	r0, [pc, #468]	; (8000fb0 <Main_Task+0x348>)
 8000dda:	f002 fee1 	bl	8003ba0 <debug_printf>
    status2 = SET_BEACON_TEXT(initial_beacon_text, 21);
 8000dde:	f107 0320 	add.w	r3, r7, #32
 8000de2:	2115      	movs	r1, #21
 8000de4:	4618      	mov	r0, r3
 8000de6:	f002 fbc9 	bl	800357c <SET_BEACON_TEXT>
 8000dea:	4603      	mov	r3, r0
 8000dec:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57

    if (status2 != HAL_OK) {
 8000df0:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000df4:	2b00      	cmp	r3, #0
 8000df6:	d003      	beq.n	8000e00 <Main_Task+0x198>
        debug_printf("Beacon text set error");
 8000df8:	486e      	ldr	r0, [pc, #440]	; (8000fb4 <Main_Task+0x34c>)
 8000dfa:	f002 fed1 	bl	8003ba0 <debug_printf>
 8000dfe:	e008      	b.n	8000e12 <Main_Task+0x1aa>
    } else{
        debug_printf("Beacon text successfully set to: ");
 8000e00:	486d      	ldr	r0, [pc, #436]	; (8000fb8 <Main_Task+0x350>)
 8000e02:	f002 fecd 	bl	8003ba0 <debug_printf>
        debug_printf("%s", initial_beacon_text);
 8000e06:	f107 0320 	add.w	r3, r7, #32
 8000e0a:	4619      	mov	r1, r3
 8000e0c:	486b      	ldr	r0, [pc, #428]	; (8000fbc <Main_Task+0x354>)
 8000e0e:	f002 fec7 	bl	8003ba0 <debug_printf>
    }
    osDelay(1000);
 8000e12:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000e16:	f009 fe48 	bl	800aaaa <osDelay>


    debug_printf("Commanding UHF to start beacon.");
 8000e1a:	4869      	ldr	r0, [pc, #420]	; (8000fc0 <Main_Task+0x358>)
 8000e1c:	f002 fec0 	bl	8003ba0 <debug_printf>
    status2 = START_BEACON();
 8000e20:	f002 faba 	bl	8003398 <START_BEACON>
 8000e24:	4603      	mov	r3, r0
 8000e26:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    if (status2 != HAL_OK) {
 8000e2a:	f897 3057 	ldrb.w	r3, [r7, #87]	; 0x57
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d003      	beq.n	8000e3a <Main_Task+0x1d2>
        debug_printf("Beacon start error");
 8000e32:	4864      	ldr	r0, [pc, #400]	; (8000fc4 <Main_Task+0x35c>)
 8000e34:	f002 feb4 	bl	8003ba0 <debug_printf>
 8000e38:	e002      	b.n	8000e40 <Main_Task+0x1d8>
    } else {
        debug_printf("Beacon successfully started");
 8000e3a:	4863      	ldr	r0, [pc, #396]	; (8000fc8 <Main_Task+0x360>)
 8000e3c:	f002 feb0 	bl	8003ba0 <debug_printf>
    }
    osDelay(10000);
 8000e40:	f242 7010 	movw	r0, #10000	; 0x2710
 8000e44:	f009 fe31 	bl	800aaaa <osDelay>



    debug_printf("Commanding UHF to turn off beacon.");
 8000e48:	4860      	ldr	r0, [pc, #384]	; (8000fcc <Main_Task+0x364>)
 8000e4a:	f002 fea9 	bl	8003ba0 <debug_printf>
    status2 = END_BEACON();
 8000e4e:	f002 fafd 	bl	800344c <END_BEACON>
 8000e52:	4603      	mov	r3, r0
 8000e54:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    debug_printf("Beacon should be off");
 8000e58:	485d      	ldr	r0, [pc, #372]	; (8000fd0 <Main_Task+0x368>)
 8000e5a:	f002 fea1 	bl	8003ba0 <debug_printf>
    osDelay(1000);
 8000e5e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000e62:	f009 fe22 	bl	800aaaa <osDelay>

    debug_printf("Setting pipe timeout");
 8000e66:	485b      	ldr	r0, [pc, #364]	; (8000fd4 <Main_Task+0x36c>)
 8000e68:	f002 fe9a 	bl	8003ba0 <debug_printf>
    status2 = SET_PIPE_TIMEOUT(3);
 8000e6c:	2003      	movs	r0, #3
 8000e6e:	f002 fca5 	bl	80037bc <SET_PIPE_TIMEOUT>
 8000e72:	4603      	mov	r3, r0
 8000e74:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    debug_printf("Pipe timeout set");
 8000e78:	4857      	ldr	r0, [pc, #348]	; (8000fd8 <Main_Task+0x370>)
 8000e7a:	f002 fe91 	bl	8003ba0 <debug_printf>
    osDelay(1000);
 8000e7e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000e82:	f009 fe12 	bl	800aaaa <osDelay>

    uint8_t dest_callsign[] = "W0ISU"; // default - KENISU
 8000e86:	4a55      	ldr	r2, [pc, #340]	; (8000fdc <Main_Task+0x374>)
 8000e88:	f107 0318 	add.w	r3, r7, #24
 8000e8c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000e90:	6018      	str	r0, [r3, #0]
 8000e92:	3304      	adds	r3, #4
 8000e94:	8019      	strh	r1, [r3, #0]
    debug_printf("Setting destination callsign");
 8000e96:	4852      	ldr	r0, [pc, #328]	; (8000fe0 <Main_Task+0x378>)
 8000e98:	f002 fe82 	bl	8003ba0 <debug_printf>
    status2 = SET_DESTINATION_CALLSIGN(dest_callsign);
 8000e9c:	f107 0318 	add.w	r3, r7, #24
 8000ea0:	4618      	mov	r0, r3
 8000ea2:	f002 fc0d 	bl	80036c0 <SET_DESTINATION_CALLSIGN>
 8000ea6:	4603      	mov	r3, r0
 8000ea8:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    debug_printf("destination callsign set");
 8000eac:	484d      	ldr	r0, [pc, #308]	; (8000fe4 <Main_Task+0x37c>)
 8000eae:	f002 fe77 	bl	8003ba0 <debug_printf>
    osDelay(1000);
 8000eb2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000eb6:	f009 fdf8 	bl	800aaaa <osDelay>

    uint8_t src_callsign[] = "KENISU"; // default - W0ISU
 8000eba:	4a4b      	ldr	r2, [pc, #300]	; (8000fe8 <Main_Task+0x380>)
 8000ebc:	f107 0310 	add.w	r3, r7, #16
 8000ec0:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000ec4:	6018      	str	r0, [r3, #0]
 8000ec6:	3304      	adds	r3, #4
 8000ec8:	8019      	strh	r1, [r3, #0]
 8000eca:	3302      	adds	r3, #2
 8000ecc:	0c0a      	lsrs	r2, r1, #16
 8000ece:	701a      	strb	r2, [r3, #0]
    debug_printf("Setting Source callsign");
 8000ed0:	4846      	ldr	r0, [pc, #280]	; (8000fec <Main_Task+0x384>)
 8000ed2:	f002 fe65 	bl	8003ba0 <debug_printf>
    status2 = SET_SOURCE_CALLSIGN(src_callsign);
 8000ed6:	f107 0310 	add.w	r3, r7, #16
 8000eda:	4618      	mov	r0, r3
 8000edc:	f002 fc2f 	bl	800373e <SET_SOURCE_CALLSIGN>
 8000ee0:	4603      	mov	r3, r0
 8000ee2:	f887 3057 	strb.w	r3, [r7, #87]	; 0x57
    debug_printf("source callsign set");
 8000ee6:	4842      	ldr	r0, [pc, #264]	; (8000ff0 <Main_Task+0x388>)
 8000ee8:	f002 fe5a 	bl	8003ba0 <debug_printf>
    osDelay(1000);
 8000eec:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000ef0:	f009 fddb 	bl	800aaaa <osDelay>

    float temperaturevalue;
    debug_printf("Getting UHF temperature");
 8000ef4:	483f      	ldr	r0, [pc, #252]	; (8000ff4 <Main_Task+0x38c>)
 8000ef6:	f002 fe53 	bl	8003ba0 <debug_printf>
    GET_UHF_TEMP(&temperaturevalue);
 8000efa:	f107 030c 	add.w	r3, r7, #12
 8000efe:	4618      	mov	r0, r3
 8000f00:	f002 fcce 	bl	80038a0 <GET_UHF_TEMP>
    debug_printf("%lf",temperaturevalue);
 8000f04:	68fb      	ldr	r3, [r7, #12]
 8000f06:	4618      	mov	r0, r3
 8000f08:	f7ff fb2e 	bl	8000568 <__aeabi_f2d>
 8000f0c:	4602      	mov	r2, r0
 8000f0e:	460b      	mov	r3, r1
 8000f10:	4839      	ldr	r0, [pc, #228]	; (8000ff8 <Main_Task+0x390>)
 8000f12:	f002 fe45 	bl	8003ba0 <debug_printf>
    // Enable Transparent Mode
    // TODO: Send command to UHF transceiver to enable transparent mode

    // Detumbling Sequence
    // TODO: Detumbling functions (ADCS) go here
    debug_printf("Beginning detumbling sequence");
 8000f16:	4839      	ldr	r0, [pc, #228]	; (8000ffc <Main_Task+0x394>)
 8000f18:	f002 fe42 	bl	8003ba0 <debug_printf>
    * TODO: Create health checks:
    * EPS, ADCS, SDR, OBC, UHF transceiver
    */

    // Flashes the lights to let you know that the startup sequence completed, then starts other threads
    debug_led_green(10,50);
 8000f1c:	2132      	movs	r1, #50	; 0x32
 8000f1e:	200a      	movs	r0, #10
 8000f20:	f002 fea4 	bl	8003c6c <debug_led_green>
    debug_led_amber(10,50);
 8000f24:	2132      	movs	r1, #50	; 0x32
 8000f26:	200a      	movs	r0, #10
 8000f28:	f002 feca 	bl	8003cc0 <debug_led_amber>

    while(1){
        GREEN_LED_ON();
 8000f2c:	4b34      	ldr	r3, [pc, #208]	; (8001000 <Main_Task+0x398>)
 8000f2e:	695b      	ldr	r3, [r3, #20]
 8000f30:	4a33      	ldr	r2, [pc, #204]	; (8001000 <Main_Task+0x398>)
 8000f32:	f043 0310 	orr.w	r3, r3, #16
 8000f36:	6153      	str	r3, [r2, #20]
        osDelay(150);
 8000f38:	2096      	movs	r0, #150	; 0x96
 8000f3a:	f009 fdb6 	bl	800aaaa <osDelay>
        GREEN_LED_OFF();
 8000f3e:	4b30      	ldr	r3, [pc, #192]	; (8001000 <Main_Task+0x398>)
 8000f40:	695b      	ldr	r3, [r3, #20]
 8000f42:	4a2f      	ldr	r2, [pc, #188]	; (8001000 <Main_Task+0x398>)
 8000f44:	f023 0310 	bic.w	r3, r3, #16
 8000f48:	6153      	str	r3, [r2, #20]
        osDelay(150);
 8000f4a:	2096      	movs	r0, #150	; 0x96
 8000f4c:	f009 fdad 	bl	800aaaa <osDelay>
        GREEN_LED_ON();
 8000f50:	e7ec      	b.n	8000f2c <Main_Task+0x2c4>
 8000f52:	bf00      	nop
 8000f54:	0801059c 	.word	0x0801059c
 8000f58:	20000228 	.word	0x20000228
 8000f5c:	2000022c 	.word	0x2000022c
 8000f60:	20000230 	.word	0x20000230
 8000f64:	20000234 	.word	0x20000234
 8000f68:	20000238 	.word	0x20000238
 8000f6c:	2000023c 	.word	0x2000023c
 8000f70:	20000240 	.word	0x20000240
 8000f74:	080105b8 	.word	0x080105b8
 8000f78:	080105d8 	.word	0x080105d8
 8000f7c:	080105f0 	.word	0x080105f0
 8000f80:	08010608 	.word	0x08010608
 8000f84:	0801062c 	.word	0x0801062c
 8000f88:	08010648 	.word	0x08010648
 8000f8c:	08010664 	.word	0x08010664
 8000f90:	0801068c 	.word	0x0801068c
 8000f94:	080106ac 	.word	0x080106ac
 8000f98:	080106cc 	.word	0x080106cc
 8000f9c:	080106f4 	.word	0x080106f4
 8000fa0:	08010938 	.word	0x08010938
 8000fa4:	08010718 	.word	0x08010718
 8000fa8:	08010740 	.word	0x08010740
 8000fac:	08010758 	.word	0x08010758
 8000fb0:	08010778 	.word	0x08010778
 8000fb4:	0801079c 	.word	0x0801079c
 8000fb8:	080107b4 	.word	0x080107b4
 8000fbc:	080107d8 	.word	0x080107d8
 8000fc0:	080107dc 	.word	0x080107dc
 8000fc4:	080107fc 	.word	0x080107fc
 8000fc8:	08010810 	.word	0x08010810
 8000fcc:	0801082c 	.word	0x0801082c
 8000fd0:	08010850 	.word	0x08010850
 8000fd4:	08010868 	.word	0x08010868
 8000fd8:	08010880 	.word	0x08010880
 8000fdc:	08010950 	.word	0x08010950
 8000fe0:	08010894 	.word	0x08010894
 8000fe4:	080108b4 	.word	0x080108b4
 8000fe8:	08010958 	.word	0x08010958
 8000fec:	080108d0 	.word	0x080108d0
 8000ff0:	080108e8 	.word	0x080108e8
 8000ff4:	080108fc 	.word	0x080108fc
 8000ff8:	08010914 	.word	0x08010914
 8000ffc:	08010918 	.word	0x08010918
 8001000:	40020800 	.word	0x40020800

08001004 <UHF_Rx_Task>:
}

/*
 * @brief main UHF Task/Thread
 */
void UHF_Rx_Task(void const * argument){
 8001004:	b580      	push	{r7, lr}
 8001006:	b082      	sub	sp, #8
 8001008:	af00      	add	r7, sp, #0
 800100a:	6078      	str	r0, [r7, #4]
    debug_printf("Starting UHF reception function.\r\n");
 800100c:	4803      	ldr	r0, [pc, #12]	; (800101c <UHF_Rx_Task+0x18>)
 800100e:	f002 fdc7 	bl	8003ba0 <debug_printf>

    //HAL_UART_Receive_IT(&huart6,GroundStationRxBuffer, 4); //These have been moved to main.c where they are declared and defined
    //HAL_UART_Receive_IT(&huart1,GroundStationRxBuffer, 4);

    while(1){
        osDelay(10000); //The actual handleCySatPacket stuff should run in the callback so we shouldn't need this thread at all
 8001012:	f242 7010 	movw	r0, #10000	; 0x2710
 8001016:	f009 fd48 	bl	800aaaa <osDelay>
 800101a:	e7fa      	b.n	8001012 <UHF_Rx_Task+0xe>
 800101c:	08010960 	.word	0x08010960

08001020 <UHF_Tx_Task>:
}

/*
 * @brief main UHF Task/Thread
 */
void UHF_Tx_Task(void const * argument){
 8001020:	b580      	push	{r7, lr}
 8001022:	b082      	sub	sp, #8
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
    debug_printf("Starting UHF function.\r\n");
 8001028:	4803      	ldr	r0, [pc, #12]	; (8001038 <UHF_Tx_Task+0x18>)
 800102a:	f002 fdb9 	bl	8003ba0 <debug_printf>

    while(1){
        //AMBER_LED_ON();
        //HAL_UART_Transmit(&huart6, 1234567890123456789012345678901234567890, 40, 1000);
        //AMBER_LED_OFF();
        osDelay(5000);
 800102e:	f241 3088 	movw	r0, #5000	; 0x1388
 8001032:	f009 fd3a 	bl	800aaaa <osDelay>
 8001036:	e7fa      	b.n	800102e <UHF_Tx_Task+0xe>
 8001038:	08010984 	.word	0x08010984

0800103c <ADCS_Task>:


/*
 * @brief main ADCS Task/Thread
 */
void ADCS_Task(void const * argument){
 800103c:	b580      	push	{r7, lr}
 800103e:	b084      	sub	sp, #16
 8001040:	af00      	add	r7, sp, #0
 8001042:	6078      	str	r0, [r7, #4]
    osDelay(999999999999); //TODO: Remove, this is for testing
 8001044:	481a      	ldr	r0, [pc, #104]	; (80010b0 <ADCS_Task+0x74>)
 8001046:	f009 fd30 	bl	800aaaa <osDelay>
    debug_printf("Starting ADCS function.\r\n");
 800104a:	481a      	ldr	r0, [pc, #104]	; (80010b4 <ADCS_Task+0x78>)
 800104c:	f002 fda8 	bl	8003ba0 <debug_printf>

    HAL_StatusTypeDef status;
    //status = enable_EPS_Output_1(); //Enabling the boost board is done in the main task
    status = enable_EPS_5v_Bus();
 8001050:	f000 ff82 	bl	8001f58 <enable_EPS_5v_Bus>
 8001054:	4603      	mov	r3, r0
 8001056:	73fb      	strb	r3, [r7, #15]
    status = enable_EPS_LUP_3v();
 8001058:	f000 ff90 	bl	8001f7c <enable_EPS_LUP_3v>
 800105c:	4603      	mov	r3, r0
 800105e:	73fb      	strb	r3, [r7, #15]
    status = enable_EPS_LUP_5v();
 8001060:	f000 ff95 	bl	8001f8e <enable_EPS_LUP_5v>
 8001064:	4603      	mov	r3, r0
 8001066:	73fb      	strb	r3, [r7, #15]
        debug_printf("Pitch did not stay constant!\r\n");
    else if(result == FAULT_Y_RATE)
        debug_printf("Did not go to 0 y-rate and then back up to Y-Thompson rate.\r\n");
        */ //Ask Lexi about this stuff

    osMutexWait(ADCS_Active_Mutex, 500);
 8001068:	4b13      	ldr	r3, [pc, #76]	; (80010b8 <ADCS_Task+0x7c>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001070:	4618      	mov	r0, r3
 8001072:	f009 fd3b 	bl	800aaec <osMutexWait>
    ADCS_ACTIVE = 1;
 8001076:	4b11      	ldr	r3, [pc, #68]	; (80010bc <ADCS_Task+0x80>)
 8001078:	2201      	movs	r2, #1
 800107a:	701a      	strb	r2, [r3, #0]
    osMutexRelease(ADCS_Active_Mutex);
 800107c:	4b0e      	ldr	r3, [pc, #56]	; (80010b8 <ADCS_Task+0x7c>)
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	4618      	mov	r0, r3
 8001082:	f009 fd83 	bl	800ab8c <osMutexRelease>
    while(1){
        GREEN_LED_ON();
 8001086:	4b0e      	ldr	r3, [pc, #56]	; (80010c0 <ADCS_Task+0x84>)
 8001088:	695b      	ldr	r3, [r3, #20]
 800108a:	4a0d      	ldr	r2, [pc, #52]	; (80010c0 <ADCS_Task+0x84>)
 800108c:	f043 0310 	orr.w	r3, r3, #16
 8001090:	6153      	str	r3, [r2, #20]
        osDelay(1000);
 8001092:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001096:	f009 fd08 	bl	800aaaa <osDelay>
        GREEN_LED_OFF();
 800109a:	4b09      	ldr	r3, [pc, #36]	; (80010c0 <ADCS_Task+0x84>)
 800109c:	695b      	ldr	r3, [r3, #20]
 800109e:	4a08      	ldr	r2, [pc, #32]	; (80010c0 <ADCS_Task+0x84>)
 80010a0:	f023 0310 	bic.w	r3, r3, #16
 80010a4:	6153      	str	r3, [r2, #20]
        osDelay(1000);
 80010a6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80010aa:	f009 fcfe 	bl	800aaaa <osDelay>
        GREEN_LED_ON();
 80010ae:	e7ea      	b.n	8001086 <ADCS_Task+0x4a>
 80010b0:	d4a50fff 	.word	0xd4a50fff
 80010b4:	080109a0 	.word	0x080109a0
 80010b8:	20000238 	.word	0x20000238
 80010bc:	2000020c 	.word	0x2000020c
 80010c0:	40020800 	.word	0x40020800

080010c4 <BatteryCapacity_Task>:
}

/*
 * @brief Task/Thread responsible for calculating battery capacity
 */
void BatteryCapacity_Task(void const * argument){
 80010c4:	b580      	push	{r7, lr}
 80010c6:	b092      	sub	sp, #72	; 0x48
 80010c8:	af00      	add	r7, sp, #0
 80010ca:	6078      	str	r0, [r7, #4]
    osDelay(999999999999); //TODO: Remove, this is for testing
 80010cc:	4881      	ldr	r0, [pc, #516]	; (80012d4 <BatteryCapacity_Task+0x210>)
 80010ce:	f009 fcec 	bl	800aaaa <osDelay>
    debug_printf("Starting battery capacity function.\r\n");
 80010d2:	4881      	ldr	r0, [pc, #516]	; (80012d8 <BatteryCapacity_Task+0x214>)
 80010d4:	f002 fd64 	bl	8003ba0 <debug_printf>
    float y_voltage, y_neg_current, y_pos_current;
    float z_voltage, z_neg_current, z_pos_current;
    float total_input_power;
    float total_output_power;

    uint32_t PreviousWakeTime = osKernelSysTick();
 80010d8:	f009 fcb0 	bl	800aa3c <osKernelSysTick>
 80010dc:	4603      	mov	r3, r0
 80010de:	60fb      	str	r3, [r7, #12]

    while(1){

        READ_EPS_INPUT_CONDITION(&input_conditions);
 80010e0:	f107 0336 	add.w	r3, r7, #54	; 0x36
 80010e4:	4618      	mov	r0, r3
 80010e6:	f000 fdb3 	bl	8001c50 <READ_EPS_INPUT_CONDITION>
        if((input_conditions & 0x20)==0x20){ // Charge Complete
 80010ea:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80010ec:	f003 0320 	and.w	r3, r3, #32
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d00f      	beq.n	8001114 <BatteryCapacity_Task+0x50>
            osMutexWait(Battery_Capacity_Mutex, 500);
 80010f4:	4b79      	ldr	r3, [pc, #484]	; (80012dc <BatteryCapacity_Task+0x218>)
 80010f6:	681b      	ldr	r3, [r3, #0]
 80010f8:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 80010fc:	4618      	mov	r0, r3
 80010fe:	f009 fcf5 	bl	800aaec <osMutexWait>
            BATTERY_CAPACITY = original_battery_capacity;
 8001102:	4a77      	ldr	r2, [pc, #476]	; (80012e0 <BatteryCapacity_Task+0x21c>)
 8001104:	4b77      	ldr	r3, [pc, #476]	; (80012e4 <BatteryCapacity_Task+0x220>)
 8001106:	601a      	str	r2, [r3, #0]
            osMutexRelease(Battery_Capacity_Mutex);
 8001108:	4b74      	ldr	r3, [pc, #464]	; (80012dc <BatteryCapacity_Task+0x218>)
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	4618      	mov	r0, r3
 800110e:	f009 fd3d 	bl	800ab8c <osMutexRelease>
 8001112:	e033      	b.n	800117c <BatteryCapacity_Task+0xb8>
        }
        else{ // Not Fully Charged
            READ_EPS_5V_CURRENT(&Five_Bus_Current);
 8001114:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8001118:	4618      	mov	r0, r3
 800111a:	f000 fc61 	bl	80019e0 <READ_EPS_5V_CURRENT>
            READ_EPS_3V_CURRENT(&Three_Bus_Current);
 800111e:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8001122:	4618      	mov	r0, r3
 8001124:	f000 fc2a 	bl	800197c <READ_EPS_3V_CURRENT>

            total_output_power = (5*Five_Bus_Current)+(3*Three_Bus_Current);
 8001128:	edd7 7a0f 	vldr	s15, [r7, #60]	; 0x3c
 800112c:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8001130:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001134:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 8001138:	eef0 6a08 	vmov.f32	s13, #8	; 0x40400000  3.0
 800113c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8001140:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001144:	edc7 7a11 	vstr	s15, [r7, #68]	; 0x44
            osMutexWait(Battery_Capacity_Mutex, 500);
 8001148:	4b64      	ldr	r3, [pc, #400]	; (80012dc <BatteryCapacity_Task+0x218>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001150:	4618      	mov	r0, r3
 8001152:	f009 fccb 	bl	800aaec <osMutexWait>
            BATTERY_CAPACITY -= total_output_power/3600;
 8001156:	4b63      	ldr	r3, [pc, #396]	; (80012e4 <BatteryCapacity_Task+0x220>)
 8001158:	ed93 7a00 	vldr	s14, [r3]
 800115c:	edd7 6a11 	vldr	s13, [r7, #68]	; 0x44
 8001160:	ed9f 6a61 	vldr	s12, [pc, #388]	; 80012e8 <BatteryCapacity_Task+0x224>
 8001164:	eec6 7a86 	vdiv.f32	s15, s13, s12
 8001168:	ee77 7a67 	vsub.f32	s15, s14, s15
 800116c:	4b5d      	ldr	r3, [pc, #372]	; (80012e4 <BatteryCapacity_Task+0x220>)
 800116e:	edc3 7a00 	vstr	s15, [r3]
            osMutexRelease(Battery_Capacity_Mutex);
 8001172:	4b5a      	ldr	r3, [pc, #360]	; (80012dc <BatteryCapacity_Task+0x218>)
 8001174:	681b      	ldr	r3, [r3, #0]
 8001176:	4618      	mov	r0, r3
 8001178:	f009 fd08 	bl	800ab8c <osMutexRelease>
        }

        if((input_conditions & 0x40)==0x40){ // Charge in Progress
 800117c:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 800117e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001182:	2b00      	cmp	r3, #0
 8001184:	d072      	beq.n	800126c <BatteryCapacity_Task+0x1a8>
            READ_EPS_SOLAR_X_VOLTAGE(&x_voltage);
 8001186:	f107 0330 	add.w	r3, r7, #48	; 0x30
 800118a:	4618      	mov	r0, r3
 800118c:	f000 fa34 	bl	80015f8 <READ_EPS_SOLAR_X_VOLTAGE>
            READ_EPS_SOLAR_X_NEG_CURRENT(&x_neg_current);
 8001190:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001194:	4618      	mov	r0, r3
 8001196:	f000 fa61 	bl	800165c <READ_EPS_SOLAR_X_NEG_CURRENT>
            READ_EPS_SOLAR_X_POS_CURRENT(&x_pos_current);
 800119a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800119e:	4618      	mov	r0, r3
 80011a0:	f000 fa8e 	bl	80016c0 <READ_EPS_SOLAR_X_POS_CURRENT>

            READ_EPS_SOLAR_Y_VOLTAGE(&y_voltage);
 80011a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80011a8:	4618      	mov	r0, r3
 80011aa:	f000 fabb 	bl	8001724 <READ_EPS_SOLAR_Y_VOLTAGE>
            READ_EPS_SOLAR_Y_NEG_CURRENT(&y_neg_current);
 80011ae:	f107 0320 	add.w	r3, r7, #32
 80011b2:	4618      	mov	r0, r3
 80011b4:	f000 fae8 	bl	8001788 <READ_EPS_SOLAR_Y_NEG_CURRENT>
            READ_EPS_SOLAR_Y_POS_CURRENT(&y_pos_current);
 80011b8:	f107 031c 	add.w	r3, r7, #28
 80011bc:	4618      	mov	r0, r3
 80011be:	f000 fb15 	bl	80017ec <READ_EPS_SOLAR_Y_POS_CURRENT>

            READ_EPS_SOLAR_Z_VOLTAGE(&z_voltage);
 80011c2:	f107 0318 	add.w	r3, r7, #24
 80011c6:	4618      	mov	r0, r3
 80011c8:	f000 fb42 	bl	8001850 <READ_EPS_SOLAR_Z_VOLTAGE>
            READ_EPS_SOLAR_Z_NEG_CURRENT(&z_neg_current);
 80011cc:	f107 0314 	add.w	r3, r7, #20
 80011d0:	4618      	mov	r0, r3
 80011d2:	f000 fb6f 	bl	80018b4 <READ_EPS_SOLAR_Z_NEG_CURRENT>
            READ_EPS_SOLAR_Z_POS_CURRENT(&z_pos_current);
 80011d6:	f107 0310 	add.w	r3, r7, #16
 80011da:	4618      	mov	r0, r3
 80011dc:	f000 fb9c 	bl	8001918 <READ_EPS_SOLAR_Z_POS_CURRENT>

            total_input_power = (x_voltage*(x_neg_current+x_pos_current));
 80011e0:	ed97 7a0b 	vldr	s14, [r7, #44]	; 0x2c
 80011e4:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80011e8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80011ec:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 80011f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80011f4:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
            total_input_power += (y_voltage*(y_neg_current+y_pos_current));
 80011f8:	ed97 7a08 	vldr	s14, [r7, #32]
 80011fc:	edd7 7a07 	vldr	s15, [r7, #28]
 8001200:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001204:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8001208:	ee67 7a27 	vmul.f32	s15, s14, s15
 800120c:	ed97 7a10 	vldr	s14, [r7, #64]	; 0x40
 8001210:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001214:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40
            total_input_power += (z_voltage*(z_neg_current+z_pos_current));
 8001218:	ed97 7a05 	vldr	s14, [r7, #20]
 800121c:	edd7 7a04 	vldr	s15, [r7, #16]
 8001220:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001224:	edd7 7a06 	vldr	s15, [r7, #24]
 8001228:	ee67 7a27 	vmul.f32	s15, s14, s15
 800122c:	ed97 7a10 	vldr	s14, [r7, #64]	; 0x40
 8001230:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001234:	edc7 7a10 	vstr	s15, [r7, #64]	; 0x40

            osMutexWait(Battery_Capacity_Mutex, 500);
 8001238:	4b28      	ldr	r3, [pc, #160]	; (80012dc <BatteryCapacity_Task+0x218>)
 800123a:	681b      	ldr	r3, [r3, #0]
 800123c:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001240:	4618      	mov	r0, r3
 8001242:	f009 fc53 	bl	800aaec <osMutexWait>
            BATTERY_CAPACITY += total_input_power/3600;
 8001246:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 800124a:	eddf 6a27 	vldr	s13, [pc, #156]	; 80012e8 <BatteryCapacity_Task+0x224>
 800124e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001252:	4b24      	ldr	r3, [pc, #144]	; (80012e4 <BatteryCapacity_Task+0x220>)
 8001254:	edd3 7a00 	vldr	s15, [r3]
 8001258:	ee77 7a27 	vadd.f32	s15, s14, s15
 800125c:	4b21      	ldr	r3, [pc, #132]	; (80012e4 <BatteryCapacity_Task+0x220>)
 800125e:	edc3 7a00 	vstr	s15, [r3]
            osMutexRelease(Battery_Capacity_Mutex);
 8001262:	4b1e      	ldr	r3, [pc, #120]	; (80012dc <BatteryCapacity_Task+0x218>)
 8001264:	681b      	ldr	r3, [r3, #0]
 8001266:	4618      	mov	r0, r3
 8001268:	f009 fc90 	bl	800ab8c <osMutexRelease>
        }
        osMutexWait(Battery_Capacity_Mutex, 500);
 800126c:	4b1b      	ldr	r3, [pc, #108]	; (80012dc <BatteryCapacity_Task+0x218>)
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001274:	4618      	mov	r0, r3
 8001276:	f009 fc39 	bl	800aaec <osMutexWait>
        osMutexWait(Low_Power_Mode_Mutex, 500);
 800127a:	4b1c      	ldr	r3, [pc, #112]	; (80012ec <BatteryCapacity_Task+0x228>)
 800127c:	681b      	ldr	r3, [r3, #0]
 800127e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8001282:	4618      	mov	r0, r3
 8001284:	f009 fc32 	bl	800aaec <osMutexWait>
        if(BATTERY_CAPACITY < 3){
 8001288:	4b16      	ldr	r3, [pc, #88]	; (80012e4 <BatteryCapacity_Task+0x220>)
 800128a:	edd3 7a00 	vldr	s15, [r3]
 800128e:	eeb0 7a08 	vmov.f32	s14, #8	; 0x40400000  3.0
 8001292:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001296:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800129a:	d408      	bmi.n	80012ae <BatteryCapacity_Task+0x1ea>
            //LOW_POWER_MODE = 1; //TODO: Uncomment this, I commented it for testing
        }
        else if((LOW_POWER_MODE==1)&(BATTERY_CAPACITY>8)){
 800129c:	4b11      	ldr	r3, [pc, #68]	; (80012e4 <BatteryCapacity_Task+0x220>)
 800129e:	edd3 7a00 	vldr	s15, [r3]
 80012a2:	eeb2 7a00 	vmov.f32	s14, #32	; 0x41000000  8.0
 80012a6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80012aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
            //LOW_POWER_MODE = 0;
        }
        osMutexRelease(Low_Power_Mode_Mutex);
 80012ae:	4b0f      	ldr	r3, [pc, #60]	; (80012ec <BatteryCapacity_Task+0x228>)
 80012b0:	681b      	ldr	r3, [r3, #0]
 80012b2:	4618      	mov	r0, r3
 80012b4:	f009 fc6a 	bl	800ab8c <osMutexRelease>
        osMutexRelease(Battery_Capacity_Mutex);
 80012b8:	4b08      	ldr	r3, [pc, #32]	; (80012dc <BatteryCapacity_Task+0x218>)
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	4618      	mov	r0, r3
 80012be:	f009 fc65 	bl	800ab8c <osMutexRelease>

        osDelayUntil(&PreviousWakeTime, 1000); // Delay for 1 second
 80012c2:	f107 030c 	add.w	r3, r7, #12
 80012c6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80012ca:	4618      	mov	r0, r3
 80012cc:	f009 fc9f 	bl	800ac0e <osDelayUntil>
        READ_EPS_INPUT_CONDITION(&input_conditions);
 80012d0:	e706      	b.n	80010e0 <BatteryCapacity_Task+0x1c>
 80012d2:	bf00      	nop
 80012d4:	d4a50fff 	.word	0xd4a50fff
 80012d8:	080109bc 	.word	0x080109bc
 80012dc:	20000234 	.word	0x20000234
 80012e0:	418f102e 	.word	0x418f102e
 80012e4:	20000000 	.word	0x20000000
 80012e8:	45610000 	.word	0x45610000
 80012ec:	2000023c 	.word	0x2000023c

080012f0 <parseCySatPacket>:
 80012f0:	b590      	push	{r4, r7, lr}
 80012f2:	b087      	sub	sp, #28
 80012f4:	af00      	add	r7, sp, #0
 80012f6:	6078      	str	r0, [r7, #4]
 80012f8:	6039      	str	r1, [r7, #0]
 80012fa:	683b      	ldr	r3, [r7, #0]
 80012fc:	785b      	ldrb	r3, [r3, #1]
 80012fe:	733b      	strb	r3, [r7, #12]
 8001300:	683b      	ldr	r3, [r7, #0]
 8001302:	789b      	ldrb	r3, [r3, #2]
 8001304:	737b      	strb	r3, [r7, #13]
 8001306:	683b      	ldr	r3, [r7, #0]
 8001308:	78db      	ldrb	r3, [r3, #3]
 800130a:	73bb      	strb	r3, [r7, #14]
 800130c:	7bbb      	ldrb	r3, [r7, #14]
 800130e:	4618      	mov	r0, r3
 8001310:	f00c f9c0 	bl	800d694 <malloc>
 8001314:	4603      	mov	r3, r0
 8001316:	613b      	str	r3, [r7, #16]
 8001318:	6938      	ldr	r0, [r7, #16]
 800131a:	683b      	ldr	r3, [r7, #0]
 800131c:	3304      	adds	r3, #4
 800131e:	7bba      	ldrb	r2, [r7, #14]
 8001320:	4619      	mov	r1, r3
 8001322:	f00c f9c7 	bl	800d6b4 <memcpy>
 8001326:	7bbb      	ldrb	r3, [r7, #14]
 8001328:	3304      	adds	r3, #4
 800132a:	683a      	ldr	r2, [r7, #0]
 800132c:	4413      	add	r3, r2
 800132e:	781b      	ldrb	r3, [r3, #0]
 8001330:	753b      	strb	r3, [r7, #20]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	461c      	mov	r4, r3
 8001336:	f107 030c 	add.w	r3, r7, #12
 800133a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800133e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8001342:	6878      	ldr	r0, [r7, #4]
 8001344:	371c      	adds	r7, #28
 8001346:	46bd      	mov	sp, r7
 8001348:	bd90      	pop	{r4, r7, pc}
	...

0800134c <sendCySatPacket>:
 800134c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001350:	b089      	sub	sp, #36	; 0x24
 8001352:	af00      	add	r7, sp, #0
 8001354:	1d3b      	adds	r3, r7, #4
 8001356:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800135a:	466b      	mov	r3, sp
 800135c:	461e      	mov	r6, r3
 800135e:	79bb      	ldrb	r3, [r7, #6]
 8001360:	1d59      	adds	r1, r3, #5
 8001362:	1e4b      	subs	r3, r1, #1
 8001364:	617b      	str	r3, [r7, #20]
 8001366:	460a      	mov	r2, r1
 8001368:	2300      	movs	r3, #0
 800136a:	4690      	mov	r8, r2
 800136c:	4699      	mov	r9, r3
 800136e:	f04f 0200 	mov.w	r2, #0
 8001372:	f04f 0300 	mov.w	r3, #0
 8001376:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800137a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800137e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001382:	460a      	mov	r2, r1
 8001384:	2300      	movs	r3, #0
 8001386:	4614      	mov	r4, r2
 8001388:	461d      	mov	r5, r3
 800138a:	f04f 0200 	mov.w	r2, #0
 800138e:	f04f 0300 	mov.w	r3, #0
 8001392:	00eb      	lsls	r3, r5, #3
 8001394:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8001398:	00e2      	lsls	r2, r4, #3
 800139a:	460b      	mov	r3, r1
 800139c:	3307      	adds	r3, #7
 800139e:	08db      	lsrs	r3, r3, #3
 80013a0:	00db      	lsls	r3, r3, #3
 80013a2:	ebad 0d03 	sub.w	sp, sp, r3
 80013a6:	466b      	mov	r3, sp
 80013a8:	3300      	adds	r3, #0
 80013aa:	613b      	str	r3, [r7, #16]
 80013ac:	693b      	ldr	r3, [r7, #16]
 80013ae:	22ff      	movs	r2, #255	; 0xff
 80013b0:	701a      	strb	r2, [r3, #0]
 80013b2:	793a      	ldrb	r2, [r7, #4]
 80013b4:	693b      	ldr	r3, [r7, #16]
 80013b6:	705a      	strb	r2, [r3, #1]
 80013b8:	797a      	ldrb	r2, [r7, #5]
 80013ba:	693b      	ldr	r3, [r7, #16]
 80013bc:	709a      	strb	r2, [r3, #2]
 80013be:	79ba      	ldrb	r2, [r7, #6]
 80013c0:	693b      	ldr	r3, [r7, #16]
 80013c2:	70da      	strb	r2, [r3, #3]
 80013c4:	2300      	movs	r3, #0
 80013c6:	61bb      	str	r3, [r7, #24]
 80013c8:	e00a      	b.n	80013e0 <sendCySatPacket+0x94>
 80013ca:	68ba      	ldr	r2, [r7, #8]
 80013cc:	69bb      	ldr	r3, [r7, #24]
 80013ce:	441a      	add	r2, r3
 80013d0:	69bb      	ldr	r3, [r7, #24]
 80013d2:	3304      	adds	r3, #4
 80013d4:	7811      	ldrb	r1, [r2, #0]
 80013d6:	693a      	ldr	r2, [r7, #16]
 80013d8:	54d1      	strb	r1, [r2, r3]
 80013da:	69bb      	ldr	r3, [r7, #24]
 80013dc:	3301      	adds	r3, #1
 80013de:	61bb      	str	r3, [r7, #24]
 80013e0:	79bb      	ldrb	r3, [r7, #6]
 80013e2:	461a      	mov	r2, r3
 80013e4:	69bb      	ldr	r3, [r7, #24]
 80013e6:	4293      	cmp	r3, r2
 80013e8:	dbef      	blt.n	80013ca <sendCySatPacket+0x7e>
 80013ea:	79bb      	ldrb	r3, [r7, #6]
 80013ec:	3304      	adds	r3, #4
 80013ee:	7b39      	ldrb	r1, [r7, #12]
 80013f0:	693a      	ldr	r2, [r7, #16]
 80013f2:	54d1      	strb	r1, [r2, r3]
 80013f4:	2301      	movs	r3, #1
 80013f6:	77fb      	strb	r3, [r7, #31]
 80013f8:	793b      	ldrb	r3, [r7, #4]
 80013fa:	2b0a      	cmp	r3, #10
 80013fc:	d10c      	bne.n	8001418 <sendCySatPacket+0xcc>
 80013fe:	79bb      	ldrb	r3, [r7, #6]
 8001400:	b29b      	uxth	r3, r3
 8001402:	3305      	adds	r3, #5
 8001404:	b29a      	uxth	r2, r3
 8001406:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800140a:	6939      	ldr	r1, [r7, #16]
 800140c:	480d      	ldr	r0, [pc, #52]	; (8001444 <sendCySatPacket+0xf8>)
 800140e:	f006 fede 	bl	80081ce <HAL_UART_Transmit>
 8001412:	4603      	mov	r3, r0
 8001414:	77fb      	strb	r3, [r7, #31]
 8001416:	e00e      	b.n	8001436 <sendCySatPacket+0xea>
 8001418:	793b      	ldrb	r3, [r7, #4]
 800141a:	2b28      	cmp	r3, #40	; 0x28
 800141c:	d10b      	bne.n	8001436 <sendCySatPacket+0xea>
 800141e:	79bb      	ldrb	r3, [r7, #6]
 8001420:	b29b      	uxth	r3, r3
 8001422:	3305      	adds	r3, #5
 8001424:	b29a      	uxth	r2, r3
 8001426:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800142a:	6939      	ldr	r1, [r7, #16]
 800142c:	4806      	ldr	r0, [pc, #24]	; (8001448 <sendCySatPacket+0xfc>)
 800142e:	f006 fece 	bl	80081ce <HAL_UART_Transmit>
 8001432:	4603      	mov	r3, r0
 8001434:	77fb      	strb	r3, [r7, #31]
 8001436:	7ffb      	ldrb	r3, [r7, #31]
 8001438:	46b5      	mov	sp, r6
 800143a:	4618      	mov	r0, r3
 800143c:	3724      	adds	r7, #36	; 0x24
 800143e:	46bd      	mov	sp, r7
 8001440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001444:	200006bc 	.word	0x200006bc
 8001448:	200006fc 	.word	0x200006fc

0800144c <generateCySatChecksum>:
 800144c:	b480      	push	{r7}
 800144e:	b089      	sub	sp, #36	; 0x24
 8001450:	af00      	add	r7, sp, #0
 8001452:	1d3b      	adds	r3, r7, #4
 8001454:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001458:	2300      	movs	r3, #0
 800145a:	61bb      	str	r3, [r7, #24]
 800145c:	793b      	ldrb	r3, [r7, #4]
 800145e:	461a      	mov	r2, r3
 8001460:	69bb      	ldr	r3, [r7, #24]
 8001462:	4413      	add	r3, r2
 8001464:	61bb      	str	r3, [r7, #24]
 8001466:	797b      	ldrb	r3, [r7, #5]
 8001468:	461a      	mov	r2, r3
 800146a:	69bb      	ldr	r3, [r7, #24]
 800146c:	4413      	add	r3, r2
 800146e:	61bb      	str	r3, [r7, #24]
 8001470:	79bb      	ldrb	r3, [r7, #6]
 8001472:	461a      	mov	r2, r3
 8001474:	69bb      	ldr	r3, [r7, #24]
 8001476:	4413      	add	r3, r2
 8001478:	61bb      	str	r3, [r7, #24]
 800147a:	2300      	movs	r3, #0
 800147c:	61fb      	str	r3, [r7, #28]
 800147e:	e00a      	b.n	8001496 <generateCySatChecksum+0x4a>
 8001480:	68ba      	ldr	r2, [r7, #8]
 8001482:	69fb      	ldr	r3, [r7, #28]
 8001484:	4413      	add	r3, r2
 8001486:	781b      	ldrb	r3, [r3, #0]
 8001488:	461a      	mov	r2, r3
 800148a:	69bb      	ldr	r3, [r7, #24]
 800148c:	4413      	add	r3, r2
 800148e:	61bb      	str	r3, [r7, #24]
 8001490:	69fb      	ldr	r3, [r7, #28]
 8001492:	3301      	adds	r3, #1
 8001494:	61fb      	str	r3, [r7, #28]
 8001496:	79bb      	ldrb	r3, [r7, #6]
 8001498:	461a      	mov	r2, r3
 800149a:	69fb      	ldr	r3, [r7, #28]
 800149c:	4293      	cmp	r3, r2
 800149e:	dbef      	blt.n	8001480 <generateCySatChecksum+0x34>
 80014a0:	69bb      	ldr	r3, [r7, #24]
 80014a2:	75fb      	strb	r3, [r7, #23]
 80014a4:	7dfb      	ldrb	r3, [r7, #23]
 80014a6:	43db      	mvns	r3, r3
 80014a8:	b2db      	uxtb	r3, r3
 80014aa:	4618      	mov	r0, r3
 80014ac:	3724      	adds	r7, #36	; 0x24
 80014ae:	46bd      	mov	sp, r7
 80014b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014b4:	4770      	bx	lr

080014b6 <validateCySatChecksum>:
 80014b6:	b480      	push	{r7}
 80014b8:	b087      	sub	sp, #28
 80014ba:	af00      	add	r7, sp, #0
 80014bc:	1d3b      	adds	r3, r7, #4
 80014be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80014c2:	2300      	movs	r3, #0
 80014c4:	613b      	str	r3, [r7, #16]
 80014c6:	793b      	ldrb	r3, [r7, #4]
 80014c8:	461a      	mov	r2, r3
 80014ca:	693b      	ldr	r3, [r7, #16]
 80014cc:	4413      	add	r3, r2
 80014ce:	613b      	str	r3, [r7, #16]
 80014d0:	797b      	ldrb	r3, [r7, #5]
 80014d2:	461a      	mov	r2, r3
 80014d4:	693b      	ldr	r3, [r7, #16]
 80014d6:	4413      	add	r3, r2
 80014d8:	613b      	str	r3, [r7, #16]
 80014da:	79bb      	ldrb	r3, [r7, #6]
 80014dc:	461a      	mov	r2, r3
 80014de:	693b      	ldr	r3, [r7, #16]
 80014e0:	4413      	add	r3, r2
 80014e2:	613b      	str	r3, [r7, #16]
 80014e4:	2300      	movs	r3, #0
 80014e6:	617b      	str	r3, [r7, #20]
 80014e8:	e00a      	b.n	8001500 <validateCySatChecksum+0x4a>
 80014ea:	68ba      	ldr	r2, [r7, #8]
 80014ec:	697b      	ldr	r3, [r7, #20]
 80014ee:	4413      	add	r3, r2
 80014f0:	781b      	ldrb	r3, [r3, #0]
 80014f2:	461a      	mov	r2, r3
 80014f4:	693b      	ldr	r3, [r7, #16]
 80014f6:	4413      	add	r3, r2
 80014f8:	613b      	str	r3, [r7, #16]
 80014fa:	697b      	ldr	r3, [r7, #20]
 80014fc:	3301      	adds	r3, #1
 80014fe:	617b      	str	r3, [r7, #20]
 8001500:	79bb      	ldrb	r3, [r7, #6]
 8001502:	461a      	mov	r2, r3
 8001504:	697b      	ldr	r3, [r7, #20]
 8001506:	4293      	cmp	r3, r2
 8001508:	dbef      	blt.n	80014ea <validateCySatChecksum+0x34>
 800150a:	7b3b      	ldrb	r3, [r7, #12]
 800150c:	461a      	mov	r2, r3
 800150e:	693b      	ldr	r3, [r7, #16]
 8001510:	4413      	add	r3, r2
 8001512:	613b      	str	r3, [r7, #16]
 8001514:	693b      	ldr	r3, [r7, #16]
 8001516:	b2db      	uxtb	r3, r3
 8001518:	2bff      	cmp	r3, #255	; 0xff
 800151a:	d101      	bne.n	8001520 <validateCySatChecksum+0x6a>
 800151c:	2301      	movs	r3, #1
 800151e:	e000      	b.n	8001522 <validateCySatChecksum+0x6c>
 8001520:	2300      	movs	r3, #0
 8001522:	4618      	mov	r0, r3
 8001524:	371c      	adds	r7, #28
 8001526:	46bd      	mov	sp, r7
 8001528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800152c:	4770      	bx	lr
	...

08001530 <READ_EPS_BATTERY_VOLTAGE>:
/**
  * @brief Reads the voltage level of the EPS battery voltage bus and stores the value in the pointed to address
  * @param volt_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATTERY_VOLTAGE(float* volt_ptr){
 8001530:	b580      	push	{r7, lr}
 8001532:	b084      	sub	sp, #16
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001538:	2301      	movs	r3, #1
 800153a:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 1; //battery voltage command
 800153c:	2301      	movs	r3, #1
 800153e:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001540:	f107 0208 	add.w	r2, r7, #8
 8001544:	7bbb      	ldrb	r3, [r7, #14]
 8001546:	4611      	mov	r1, r2
 8001548:	4618      	mov	r0, r3
 800154a:	f000 fddd 	bl	8002108 <EPS_READ>
 800154e:	4603      	mov	r3, r0
 8001550:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001552:	7bfb      	ldrb	r3, [r7, #15]
 8001554:	2b00      	cmp	r3, #0
 8001556:	d001      	beq.n	800155c <READ_EPS_BATTERY_VOLTAGE+0x2c>
        return status;
 8001558:	7bfb      	ldrb	r3, [r7, #15]
 800155a:	e014      	b.n	8001586 <READ_EPS_BATTERY_VOLTAGE+0x56>
    }
    uint16_t raw_voltage = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 800155c:	7a3b      	ldrb	r3, [r7, #8]
 800155e:	b29b      	uxth	r3, r3
 8001560:	021b      	lsls	r3, r3, #8
 8001562:	b29a      	uxth	r2, r3
 8001564:	7a7b      	ldrb	r3, [r7, #9]
 8001566:	b29b      	uxth	r3, r3
 8001568:	4413      	add	r3, r2
 800156a:	81bb      	strh	r3, [r7, #12]
    (*volt_ptr) = 0.0023394775f * (float) raw_voltage; //multiply by the conversion coeff
 800156c:	89bb      	ldrh	r3, [r7, #12]
 800156e:	ee07 3a90 	vmov	s15, r3
 8001572:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001576:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001590 <READ_EPS_BATTERY_VOLTAGE+0x60>
 800157a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	edc3 7a00 	vstr	s15, [r3]
    //should not be greater than 0.0023394775 * 4095 = 9.58 V
    return status;
 8001584:	7bfb      	ldrb	r3, [r7, #15]
}
 8001586:	4618      	mov	r0, r3
 8001588:	3710      	adds	r7, #16
 800158a:	46bd      	mov	sp, r7
 800158c:	bd80      	pop	{r7, pc}
 800158e:	bf00      	nop
 8001590:	3b1951eb 	.word	0x3b1951eb

08001594 <READ_EPS_BATTERY_CURRENT>:
/**
  * @brief Reads the current level of the EPS battery bus and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATTERY_CURRENT(float* curr_ptr){
 8001594:	b580      	push	{r7, lr}
 8001596:	b084      	sub	sp, #16
 8001598:	af00      	add	r7, sp, #0
 800159a:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 800159c:	2301      	movs	r3, #1
 800159e:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 2; //battery current command
 80015a0:	2302      	movs	r3, #2
 80015a2:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 80015a4:	f107 0208 	add.w	r2, r7, #8
 80015a8:	7bbb      	ldrb	r3, [r7, #14]
 80015aa:	4611      	mov	r1, r2
 80015ac:	4618      	mov	r0, r3
 80015ae:	f000 fdab 	bl	8002108 <EPS_READ>
 80015b2:	4603      	mov	r3, r0
 80015b4:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 80015b6:	7bfb      	ldrb	r3, [r7, #15]
 80015b8:	2b00      	cmp	r3, #0
 80015ba:	d001      	beq.n	80015c0 <READ_EPS_BATTERY_CURRENT+0x2c>
        return status;
 80015bc:	7bfb      	ldrb	r3, [r7, #15]
 80015be:	e014      	b.n	80015ea <READ_EPS_BATTERY_CURRENT+0x56>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 80015c0:	7a3b      	ldrb	r3, [r7, #8]
 80015c2:	b29b      	uxth	r3, r3
 80015c4:	021b      	lsls	r3, r3, #8
 80015c6:	b29a      	uxth	r2, r3
 80015c8:	7a7b      	ldrb	r3, [r7, #9]
 80015ca:	b29b      	uxth	r3, r3
 80015cc:	4413      	add	r3, r2
 80015ce:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0030517578f * (float) raw_value; //multiply by the conversion coeff
 80015d0:	89bb      	ldrh	r3, [r7, #12]
 80015d2:	ee07 3a90 	vmov	s15, r3
 80015d6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80015da:	ed9f 7a06 	vldr	s14, [pc, #24]	; 80015f4 <READ_EPS_BATTERY_CURRENT+0x60>
 80015de:	ee67 7a87 	vmul.f32	s15, s15, s14
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	edc3 7a00 	vstr	s15, [r3]
    //should not be greater than 0.0030517578f * 4095 = 12.497 A
    return status;
 80015e8:	7bfb      	ldrb	r3, [r7, #15]
}
 80015ea:	4618      	mov	r0, r3
 80015ec:	3710      	adds	r7, #16
 80015ee:	46bd      	mov	sp, r7
 80015f0:	bd80      	pop	{r7, pc}
 80015f2:	bf00      	nop
 80015f4:	3b480000 	.word	0x3b480000

080015f8 <READ_EPS_SOLAR_X_VOLTAGE>:
/**
  * @brief Reads the voltage of the X-axis in volts and stores the value in the pointed to address
  * @param volt_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_X_VOLTAGE(float* volt_ptr){
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b084      	sub	sp, #16
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001600:	2301      	movs	r3, #1
 8001602:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 5; //solar panel x-axis voltage command
 8001604:	2305      	movs	r3, #5
 8001606:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001608:	f107 0208 	add.w	r2, r7, #8
 800160c:	7bbb      	ldrb	r3, [r7, #14]
 800160e:	4611      	mov	r1, r2
 8001610:	4618      	mov	r0, r3
 8001612:	f000 fd79 	bl	8002108 <EPS_READ>
 8001616:	4603      	mov	r3, r0
 8001618:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800161a:	7bfb      	ldrb	r3, [r7, #15]
 800161c:	2b00      	cmp	r3, #0
 800161e:	d001      	beq.n	8001624 <READ_EPS_SOLAR_X_VOLTAGE+0x2c>
        return status;
 8001620:	7bfb      	ldrb	r3, [r7, #15]
 8001622:	e014      	b.n	800164e <READ_EPS_SOLAR_X_VOLTAGE+0x56>
    }
    uint16_t raw_voltage = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001624:	7a3b      	ldrb	r3, [r7, #8]
 8001626:	b29b      	uxth	r3, r3
 8001628:	021b      	lsls	r3, r3, #8
 800162a:	b29a      	uxth	r2, r3
 800162c:	7a7b      	ldrb	r3, [r7, #9]
 800162e:	b29b      	uxth	r3, r3
 8001630:	4413      	add	r3, r2
 8001632:	81bb      	strh	r3, [r7, #12]
    (*volt_ptr) = 0.0024414063f * (float) raw_voltage; //multiply by the conversion coeff
 8001634:	89bb      	ldrh	r3, [r7, #12]
 8001636:	ee07 3a90 	vmov	s15, r3
 800163a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800163e:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001658 <READ_EPS_SOLAR_X_VOLTAGE+0x60>
 8001642:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	edc3 7a00 	vstr	s15, [r3]
    return status;
 800164c:	7bfb      	ldrb	r3, [r7, #15]
}
 800164e:	4618      	mov	r0, r3
 8001650:	3710      	adds	r7, #16
 8001652:	46bd      	mov	sp, r7
 8001654:	bd80      	pop	{r7, pc}
 8001656:	bf00      	nop
 8001658:	3b200000 	.word	0x3b200000

0800165c <READ_EPS_SOLAR_X_NEG_CURRENT>:
/**
  * @brief Reads the voltage of the X- facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_X_NEG_CURRENT(float* curr_ptr){
 800165c:	b580      	push	{r7, lr}
 800165e:	b084      	sub	sp, #16
 8001660:	af00      	add	r7, sp, #0
 8001662:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001664:	2301      	movs	r3, #1
 8001666:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 6; //solar panel x- current command
 8001668:	2306      	movs	r3, #6
 800166a:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 800166c:	f107 0208 	add.w	r2, r7, #8
 8001670:	7bbb      	ldrb	r3, [r7, #14]
 8001672:	4611      	mov	r1, r2
 8001674:	4618      	mov	r0, r3
 8001676:	f000 fd47 	bl	8002108 <EPS_READ>
 800167a:	4603      	mov	r3, r0
 800167c:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800167e:	7bfb      	ldrb	r3, [r7, #15]
 8001680:	2b00      	cmp	r3, #0
 8001682:	d001      	beq.n	8001688 <READ_EPS_SOLAR_X_NEG_CURRENT+0x2c>
        return status;
 8001684:	7bfb      	ldrb	r3, [r7, #15]
 8001686:	e014      	b.n	80016b2 <READ_EPS_SOLAR_X_NEG_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001688:	7a3b      	ldrb	r3, [r7, #8]
 800168a:	b29b      	uxth	r3, r3
 800168c:	021b      	lsls	r3, r3, #8
 800168e:	b29a      	uxth	r2, r3
 8001690:	7a7b      	ldrb	r3, [r7, #9]
 8001692:	b29b      	uxth	r3, r3
 8001694:	4413      	add	r3, r2
 8001696:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 8001698:	89bb      	ldrh	r3, [r7, #12]
 800169a:	ee07 3a90 	vmov	s15, r3
 800169e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80016a2:	ed9f 7a06 	vldr	s14, [pc, #24]	; 80016bc <READ_EPS_SOLAR_X_NEG_CURRENT+0x60>
 80016a6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80016aa:	687b      	ldr	r3, [r7, #4]
 80016ac:	edc3 7a00 	vstr	s15, [r3]
    return status;
 80016b0:	7bfb      	ldrb	r3, [r7, #15]
}
 80016b2:	4618      	mov	r0, r3
 80016b4:	3710      	adds	r7, #16
 80016b6:	46bd      	mov	sp, r7
 80016b8:	bd80      	pop	{r7, pc}
 80016ba:	bf00      	nop
 80016bc:	3a200001 	.word	0x3a200001

080016c0 <READ_EPS_SOLAR_X_POS_CURRENT>:
/**
  * @brief Reads the voltage of the X+ facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_X_POS_CURRENT(float* curr_ptr){
 80016c0:	b580      	push	{r7, lr}
 80016c2:	b084      	sub	sp, #16
 80016c4:	af00      	add	r7, sp, #0
 80016c6:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 80016c8:	2301      	movs	r3, #1
 80016ca:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 7; //solar panel x+ current command
 80016cc:	2307      	movs	r3, #7
 80016ce:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 80016d0:	f107 0208 	add.w	r2, r7, #8
 80016d4:	7bbb      	ldrb	r3, [r7, #14]
 80016d6:	4611      	mov	r1, r2
 80016d8:	4618      	mov	r0, r3
 80016da:	f000 fd15 	bl	8002108 <EPS_READ>
 80016de:	4603      	mov	r3, r0
 80016e0:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 80016e2:	7bfb      	ldrb	r3, [r7, #15]
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d001      	beq.n	80016ec <READ_EPS_SOLAR_X_POS_CURRENT+0x2c>
        return status;
 80016e8:	7bfb      	ldrb	r3, [r7, #15]
 80016ea:	e014      	b.n	8001716 <READ_EPS_SOLAR_X_POS_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 80016ec:	7a3b      	ldrb	r3, [r7, #8]
 80016ee:	b29b      	uxth	r3, r3
 80016f0:	021b      	lsls	r3, r3, #8
 80016f2:	b29a      	uxth	r2, r3
 80016f4:	7a7b      	ldrb	r3, [r7, #9]
 80016f6:	b29b      	uxth	r3, r3
 80016f8:	4413      	add	r3, r2
 80016fa:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 80016fc:	89bb      	ldrh	r3, [r7, #12]
 80016fe:	ee07 3a90 	vmov	s15, r3
 8001702:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001706:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001720 <READ_EPS_SOLAR_X_POS_CURRENT+0x60>
 800170a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001714:	7bfb      	ldrb	r3, [r7, #15]
}
 8001716:	4618      	mov	r0, r3
 8001718:	3710      	adds	r7, #16
 800171a:	46bd      	mov	sp, r7
 800171c:	bd80      	pop	{r7, pc}
 800171e:	bf00      	nop
 8001720:	3a200001 	.word	0x3a200001

08001724 <READ_EPS_SOLAR_Y_VOLTAGE>:
/**
  * @brief Reads the voltage of the Y-axis in volts and stores the value in the pointed to address
  * @param volt_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Y_VOLTAGE(float* volt_ptr){
 8001724:	b580      	push	{r7, lr}
 8001726:	b084      	sub	sp, #16
 8001728:	af00      	add	r7, sp, #0
 800172a:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 800172c:	2301      	movs	r3, #1
 800172e:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 8; //solar panel y-axis voltage command
 8001730:	2308      	movs	r3, #8
 8001732:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001734:	f107 0208 	add.w	r2, r7, #8
 8001738:	7bbb      	ldrb	r3, [r7, #14]
 800173a:	4611      	mov	r1, r2
 800173c:	4618      	mov	r0, r3
 800173e:	f000 fce3 	bl	8002108 <EPS_READ>
 8001742:	4603      	mov	r3, r0
 8001744:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001746:	7bfb      	ldrb	r3, [r7, #15]
 8001748:	2b00      	cmp	r3, #0
 800174a:	d001      	beq.n	8001750 <READ_EPS_SOLAR_Y_VOLTAGE+0x2c>
        return status;
 800174c:	7bfb      	ldrb	r3, [r7, #15]
 800174e:	e014      	b.n	800177a <READ_EPS_SOLAR_Y_VOLTAGE+0x56>
    }
    uint16_t raw_voltage = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001750:	7a3b      	ldrb	r3, [r7, #8]
 8001752:	b29b      	uxth	r3, r3
 8001754:	021b      	lsls	r3, r3, #8
 8001756:	b29a      	uxth	r2, r3
 8001758:	7a7b      	ldrb	r3, [r7, #9]
 800175a:	b29b      	uxth	r3, r3
 800175c:	4413      	add	r3, r2
 800175e:	81bb      	strh	r3, [r7, #12]
    (*volt_ptr) = 0.0024414063f * (float) raw_voltage; //multiply by the conversion coeff
 8001760:	89bb      	ldrh	r3, [r7, #12]
 8001762:	ee07 3a90 	vmov	s15, r3
 8001766:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800176a:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001784 <READ_EPS_SOLAR_Y_VOLTAGE+0x60>
 800176e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001778:	7bfb      	ldrb	r3, [r7, #15]
}
 800177a:	4618      	mov	r0, r3
 800177c:	3710      	adds	r7, #16
 800177e:	46bd      	mov	sp, r7
 8001780:	bd80      	pop	{r7, pc}
 8001782:	bf00      	nop
 8001784:	3b200000 	.word	0x3b200000

08001788 <READ_EPS_SOLAR_Y_NEG_CURRENT>:
/**
  * @brief Reads the voltage of the Y- facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Y_NEG_CURRENT(float* curr_ptr){
 8001788:	b580      	push	{r7, lr}
 800178a:	b084      	sub	sp, #16
 800178c:	af00      	add	r7, sp, #0
 800178e:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001790:	2301      	movs	r3, #1
 8001792:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 9; //solar panel y- current command
 8001794:	2309      	movs	r3, #9
 8001796:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001798:	f107 0208 	add.w	r2, r7, #8
 800179c:	7bbb      	ldrb	r3, [r7, #14]
 800179e:	4611      	mov	r1, r2
 80017a0:	4618      	mov	r0, r3
 80017a2:	f000 fcb1 	bl	8002108 <EPS_READ>
 80017a6:	4603      	mov	r3, r0
 80017a8:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 80017aa:	7bfb      	ldrb	r3, [r7, #15]
 80017ac:	2b00      	cmp	r3, #0
 80017ae:	d001      	beq.n	80017b4 <READ_EPS_SOLAR_Y_NEG_CURRENT+0x2c>
        return status;
 80017b0:	7bfb      	ldrb	r3, [r7, #15]
 80017b2:	e014      	b.n	80017de <READ_EPS_SOLAR_Y_NEG_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 80017b4:	7a3b      	ldrb	r3, [r7, #8]
 80017b6:	b29b      	uxth	r3, r3
 80017b8:	021b      	lsls	r3, r3, #8
 80017ba:	b29a      	uxth	r2, r3
 80017bc:	7a7b      	ldrb	r3, [r7, #9]
 80017be:	b29b      	uxth	r3, r3
 80017c0:	4413      	add	r3, r2
 80017c2:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 80017c4:	89bb      	ldrh	r3, [r7, #12]
 80017c6:	ee07 3a90 	vmov	s15, r3
 80017ca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80017ce:	ed9f 7a06 	vldr	s14, [pc, #24]	; 80017e8 <READ_EPS_SOLAR_Y_NEG_CURRENT+0x60>
 80017d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	edc3 7a00 	vstr	s15, [r3]
    return status;
 80017dc:	7bfb      	ldrb	r3, [r7, #15]
}
 80017de:	4618      	mov	r0, r3
 80017e0:	3710      	adds	r7, #16
 80017e2:	46bd      	mov	sp, r7
 80017e4:	bd80      	pop	{r7, pc}
 80017e6:	bf00      	nop
 80017e8:	3a200001 	.word	0x3a200001

080017ec <READ_EPS_SOLAR_Y_POS_CURRENT>:
/**
  * @brief Reads the voltage of the Y+ facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Y_POS_CURRENT(float* curr_ptr){
 80017ec:	b580      	push	{r7, lr}
 80017ee:	b084      	sub	sp, #16
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 80017f4:	2301      	movs	r3, #1
 80017f6:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 10; //solar panel y+ current command
 80017f8:	230a      	movs	r3, #10
 80017fa:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 80017fc:	f107 0208 	add.w	r2, r7, #8
 8001800:	7bbb      	ldrb	r3, [r7, #14]
 8001802:	4611      	mov	r1, r2
 8001804:	4618      	mov	r0, r3
 8001806:	f000 fc7f 	bl	8002108 <EPS_READ>
 800180a:	4603      	mov	r3, r0
 800180c:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800180e:	7bfb      	ldrb	r3, [r7, #15]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d001      	beq.n	8001818 <READ_EPS_SOLAR_Y_POS_CURRENT+0x2c>
        return status;
 8001814:	7bfb      	ldrb	r3, [r7, #15]
 8001816:	e014      	b.n	8001842 <READ_EPS_SOLAR_Y_POS_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001818:	7a3b      	ldrb	r3, [r7, #8]
 800181a:	b29b      	uxth	r3, r3
 800181c:	021b      	lsls	r3, r3, #8
 800181e:	b29a      	uxth	r2, r3
 8001820:	7a7b      	ldrb	r3, [r7, #9]
 8001822:	b29b      	uxth	r3, r3
 8001824:	4413      	add	r3, r2
 8001826:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 8001828:	89bb      	ldrh	r3, [r7, #12]
 800182a:	ee07 3a90 	vmov	s15, r3
 800182e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001832:	ed9f 7a06 	vldr	s14, [pc, #24]	; 800184c <READ_EPS_SOLAR_Y_POS_CURRENT+0x60>
 8001836:	ee67 7a87 	vmul.f32	s15, s15, s14
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001840:	7bfb      	ldrb	r3, [r7, #15]
}
 8001842:	4618      	mov	r0, r3
 8001844:	3710      	adds	r7, #16
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}
 800184a:	bf00      	nop
 800184c:	3a200001 	.word	0x3a200001

08001850 <READ_EPS_SOLAR_Z_VOLTAGE>:
/**
  * @brief Reads the voltage of the Y-axis in volts and stores the value in the pointed to address
  * @param volt_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Z_VOLTAGE(float* volt_ptr){
 8001850:	b580      	push	{r7, lr}
 8001852:	b084      	sub	sp, #16
 8001854:	af00      	add	r7, sp, #0
 8001856:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001858:	2301      	movs	r3, #1
 800185a:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 11; //solar panel z-axis voltage command
 800185c:	230b      	movs	r3, #11
 800185e:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001860:	f107 0208 	add.w	r2, r7, #8
 8001864:	7bbb      	ldrb	r3, [r7, #14]
 8001866:	4611      	mov	r1, r2
 8001868:	4618      	mov	r0, r3
 800186a:	f000 fc4d 	bl	8002108 <EPS_READ>
 800186e:	4603      	mov	r3, r0
 8001870:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001872:	7bfb      	ldrb	r3, [r7, #15]
 8001874:	2b00      	cmp	r3, #0
 8001876:	d001      	beq.n	800187c <READ_EPS_SOLAR_Z_VOLTAGE+0x2c>
        return status;
 8001878:	7bfb      	ldrb	r3, [r7, #15]
 800187a:	e014      	b.n	80018a6 <READ_EPS_SOLAR_Z_VOLTAGE+0x56>
    }
    uint16_t raw_voltage = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 800187c:	7a3b      	ldrb	r3, [r7, #8]
 800187e:	b29b      	uxth	r3, r3
 8001880:	021b      	lsls	r3, r3, #8
 8001882:	b29a      	uxth	r2, r3
 8001884:	7a7b      	ldrb	r3, [r7, #9]
 8001886:	b29b      	uxth	r3, r3
 8001888:	4413      	add	r3, r2
 800188a:	81bb      	strh	r3, [r7, #12]
    (*volt_ptr) = 0.0024414063f * (float) raw_voltage; //multiply by the conversion coeff
 800188c:	89bb      	ldrh	r3, [r7, #12]
 800188e:	ee07 3a90 	vmov	s15, r3
 8001892:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001896:	ed9f 7a06 	vldr	s14, [pc, #24]	; 80018b0 <READ_EPS_SOLAR_Z_VOLTAGE+0x60>
 800189a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	edc3 7a00 	vstr	s15, [r3]
    return status;
 80018a4:	7bfb      	ldrb	r3, [r7, #15]
}
 80018a6:	4618      	mov	r0, r3
 80018a8:	3710      	adds	r7, #16
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}
 80018ae:	bf00      	nop
 80018b0:	3b200000 	.word	0x3b200000

080018b4 <READ_EPS_SOLAR_Z_NEG_CURRENT>:
/**
  * @brief Reads the voltage of the Z- facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Z_NEG_CURRENT(float* curr_ptr){
 80018b4:	b580      	push	{r7, lr}
 80018b6:	b084      	sub	sp, #16
 80018b8:	af00      	add	r7, sp, #0
 80018ba:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 80018bc:	2301      	movs	r3, #1
 80018be:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 12; //solar panel z- current command
 80018c0:	230c      	movs	r3, #12
 80018c2:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 80018c4:	f107 0208 	add.w	r2, r7, #8
 80018c8:	7bbb      	ldrb	r3, [r7, #14]
 80018ca:	4611      	mov	r1, r2
 80018cc:	4618      	mov	r0, r3
 80018ce:	f000 fc1b 	bl	8002108 <EPS_READ>
 80018d2:	4603      	mov	r3, r0
 80018d4:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 80018d6:	7bfb      	ldrb	r3, [r7, #15]
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d001      	beq.n	80018e0 <READ_EPS_SOLAR_Z_NEG_CURRENT+0x2c>
        return status;
 80018dc:	7bfb      	ldrb	r3, [r7, #15]
 80018de:	e014      	b.n	800190a <READ_EPS_SOLAR_Z_NEG_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 80018e0:	7a3b      	ldrb	r3, [r7, #8]
 80018e2:	b29b      	uxth	r3, r3
 80018e4:	021b      	lsls	r3, r3, #8
 80018e6:	b29a      	uxth	r2, r3
 80018e8:	7a7b      	ldrb	r3, [r7, #9]
 80018ea:	b29b      	uxth	r3, r3
 80018ec:	4413      	add	r3, r2
 80018ee:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 80018f0:	89bb      	ldrh	r3, [r7, #12]
 80018f2:	ee07 3a90 	vmov	s15, r3
 80018f6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80018fa:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001914 <READ_EPS_SOLAR_Z_NEG_CURRENT+0x60>
 80018fe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001908:	7bfb      	ldrb	r3, [r7, #15]
}
 800190a:	4618      	mov	r0, r3
 800190c:	3710      	adds	r7, #16
 800190e:	46bd      	mov	sp, r7
 8001910:	bd80      	pop	{r7, pc}
 8001912:	bf00      	nop
 8001914:	3a200001 	.word	0x3a200001

08001918 <READ_EPS_SOLAR_Z_POS_CURRENT>:
/**
  * @brief Reads the voltage of the Z+ facing solar panels in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SOLAR_Z_POS_CURRENT(float* curr_ptr){
 8001918:	b580      	push	{r7, lr}
 800191a:	b084      	sub	sp, #16
 800191c:	af00      	add	r7, sp, #0
 800191e:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001920:	2301      	movs	r3, #1
 8001922:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 13; //solar panel z+ current command
 8001924:	230d      	movs	r3, #13
 8001926:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001928:	f107 0208 	add.w	r2, r7, #8
 800192c:	7bbb      	ldrb	r3, [r7, #14]
 800192e:	4611      	mov	r1, r2
 8001930:	4618      	mov	r0, r3
 8001932:	f000 fbe9 	bl	8002108 <EPS_READ>
 8001936:	4603      	mov	r3, r0
 8001938:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800193a:	7bfb      	ldrb	r3, [r7, #15]
 800193c:	2b00      	cmp	r3, #0
 800193e:	d001      	beq.n	8001944 <READ_EPS_SOLAR_Z_POS_CURRENT+0x2c>
        return status;
 8001940:	7bfb      	ldrb	r3, [r7, #15]
 8001942:	e014      	b.n	800196e <READ_EPS_SOLAR_Z_POS_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001944:	7a3b      	ldrb	r3, [r7, #8]
 8001946:	b29b      	uxth	r3, r3
 8001948:	021b      	lsls	r3, r3, #8
 800194a:	b29a      	uxth	r2, r3
 800194c:	7a7b      	ldrb	r3, [r7, #9]
 800194e:	b29b      	uxth	r3, r3
 8001950:	4413      	add	r3, r2
 8001952:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0006103516f * (float) raw_current; //multiply by the conversion coeff
 8001954:	89bb      	ldrh	r3, [r7, #12]
 8001956:	ee07 3a90 	vmov	s15, r3
 800195a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800195e:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001978 <READ_EPS_SOLAR_Z_POS_CURRENT+0x60>
 8001962:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	edc3 7a00 	vstr	s15, [r3]
    return status;
 800196c:	7bfb      	ldrb	r3, [r7, #15]
}
 800196e:	4618      	mov	r0, r3
 8001970:	3710      	adds	r7, #16
 8001972:	46bd      	mov	sp, r7
 8001974:	bd80      	pop	{r7, pc}
 8001976:	bf00      	nop
 8001978:	3a200001 	.word	0x3a200001

0800197c <READ_EPS_3V_CURRENT>:
/**
  * @brief Reads the current of the EPS 3.3v bus in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_3V_CURRENT(float* curr_ptr){
 800197c:	b580      	push	{r7, lr}
 800197e:	b084      	sub	sp, #16
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001984:	2301      	movs	r3, #1
 8001986:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 14; //3.3v bus current command
 8001988:	230e      	movs	r3, #14
 800198a:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 800198c:	f107 0208 	add.w	r2, r7, #8
 8001990:	7bbb      	ldrb	r3, [r7, #14]
 8001992:	4611      	mov	r1, r2
 8001994:	4618      	mov	r0, r3
 8001996:	f000 fbb7 	bl	8002108 <EPS_READ>
 800199a:	4603      	mov	r3, r0
 800199c:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800199e:	7bfb      	ldrb	r3, [r7, #15]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d001      	beq.n	80019a8 <READ_EPS_3V_CURRENT+0x2c>
        return status;
 80019a4:	7bfb      	ldrb	r3, [r7, #15]
 80019a6:	e014      	b.n	80019d2 <READ_EPS_3V_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 80019a8:	7a3b      	ldrb	r3, [r7, #8]
 80019aa:	b29b      	uxth	r3, r3
 80019ac:	021b      	lsls	r3, r3, #8
 80019ae:	b29a      	uxth	r2, r3
 80019b0:	7a7b      	ldrb	r3, [r7, #9]
 80019b2:	b29b      	uxth	r3, r3
 80019b4:	4413      	add	r3, r2
 80019b6:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0020345052f * (float) raw_current; //multiply by the conversion coeff
 80019b8:	89bb      	ldrh	r3, [r7, #12]
 80019ba:	ee07 3a90 	vmov	s15, r3
 80019be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80019c2:	ed9f 7a06 	vldr	s14, [pc, #24]	; 80019dc <READ_EPS_3V_CURRENT+0x60>
 80019c6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	edc3 7a00 	vstr	s15, [r3]
    return status;
 80019d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80019d2:	4618      	mov	r0, r3
 80019d4:	3710      	adds	r7, #16
 80019d6:	46bd      	mov	sp, r7
 80019d8:	bd80      	pop	{r7, pc}
 80019da:	bf00      	nop
 80019dc:	3b055555 	.word	0x3b055555

080019e0 <READ_EPS_5V_CURRENT>:
/**
  * @brief Reads the current of the EPS 5v bus in amps and stores the value in the pointed to address
  * @param curr_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_5V_CURRENT(float* curr_ptr){
 80019e0:	b580      	push	{r7, lr}
 80019e2:	b084      	sub	sp, #16
 80019e4:	af00      	add	r7, sp, #0
 80019e6:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 80019e8:	2301      	movs	r3, #1
 80019ea:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 15; //5v bus current command
 80019ec:	230f      	movs	r3, #15
 80019ee:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 80019f0:	f107 0208 	add.w	r2, r7, #8
 80019f4:	7bbb      	ldrb	r3, [r7, #14]
 80019f6:	4611      	mov	r1, r2
 80019f8:	4618      	mov	r0, r3
 80019fa:	f000 fb85 	bl	8002108 <EPS_READ>
 80019fe:	4603      	mov	r3, r0
 8001a00:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001a02:	7bfb      	ldrb	r3, [r7, #15]
 8001a04:	2b00      	cmp	r3, #0
 8001a06:	d001      	beq.n	8001a0c <READ_EPS_5V_CURRENT+0x2c>
        return status;
 8001a08:	7bfb      	ldrb	r3, [r7, #15]
 8001a0a:	e014      	b.n	8001a36 <READ_EPS_5V_CURRENT+0x56>
    }
    uint16_t raw_current = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001a0c:	7a3b      	ldrb	r3, [r7, #8]
 8001a0e:	b29b      	uxth	r3, r3
 8001a10:	021b      	lsls	r3, r3, #8
 8001a12:	b29a      	uxth	r2, r3
 8001a14:	7a7b      	ldrb	r3, [r7, #9]
 8001a16:	b29b      	uxth	r3, r3
 8001a18:	4413      	add	r3, r2
 8001a1a:	81bb      	strh	r3, [r7, #12]
    (*curr_ptr) = 0.0020345052f * (float) raw_current; //multiply by the conversion coeff
 8001a1c:	89bb      	ldrh	r3, [r7, #12]
 8001a1e:	ee07 3a90 	vmov	s15, r3
 8001a22:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a26:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001a40 <READ_EPS_5V_CURRENT+0x60>
 8001a2a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001a34:	7bfb      	ldrb	r3, [r7, #15]
}
 8001a36:	4618      	mov	r0, r3
 8001a38:	3710      	adds	r7, #16
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	3b055555 	.word	0x3b055555

08001a44 <READ_EPS_MCU_TEMP>:
/**
  * @brief Reads the temperature of the EPS microcontroller in degrees Celsius and stores the value in the pointed to address
  * @param temp_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_MCU_TEMP(float* temp_ptr){
 8001a44:	b580      	push	{r7, lr}
 8001a46:	b084      	sub	sp, #16
 8001a48:	af00      	add	r7, sp, #0
 8001a4a:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001a4c:	2301      	movs	r3, #1
 8001a4e:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 18; //MCU temperature command
 8001a50:	2312      	movs	r3, #18
 8001a52:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001a54:	f107 0208 	add.w	r2, r7, #8
 8001a58:	7bbb      	ldrb	r3, [r7, #14]
 8001a5a:	4611      	mov	r1, r2
 8001a5c:	4618      	mov	r0, r3
 8001a5e:	f000 fb53 	bl	8002108 <EPS_READ>
 8001a62:	4603      	mov	r3, r0
 8001a64:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001a66:	7bfb      	ldrb	r3, [r7, #15]
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d001      	beq.n	8001a70 <READ_EPS_MCU_TEMP+0x2c>
        return status;
 8001a6c:	7bfb      	ldrb	r3, [r7, #15]
 8001a6e:	e01c      	b.n	8001aaa <READ_EPS_MCU_TEMP+0x66>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001a70:	7a3b      	ldrb	r3, [r7, #8]
 8001a72:	b29b      	uxth	r3, r3
 8001a74:	021b      	lsls	r3, r3, #8
 8001a76:	b29a      	uxth	r2, r3
 8001a78:	7a7b      	ldrb	r3, [r7, #9]
 8001a7a:	b29b      	uxth	r3, r3
 8001a7c:	4413      	add	r3, r2
 8001a7e:	81bb      	strh	r3, [r7, #12]
    (*temp_ptr) = (((float) raw_value * 0.0006103516f) - 0.986f) / 0.00355f;
 8001a80:	89bb      	ldrh	r3, [r7, #12]
 8001a82:	ee07 3a90 	vmov	s15, r3
 8001a86:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001a8a:	ed9f 7a0a 	vldr	s14, [pc, #40]	; 8001ab4 <READ_EPS_MCU_TEMP+0x70>
 8001a8e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a92:	ed9f 7a09 	vldr	s14, [pc, #36]	; 8001ab8 <READ_EPS_MCU_TEMP+0x74>
 8001a96:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8001a9a:	eddf 6a08 	vldr	s13, [pc, #32]	; 8001abc <READ_EPS_MCU_TEMP+0x78>
 8001a9e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001aa2:	687b      	ldr	r3, [r7, #4]
 8001aa4:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001aa8:	7bfb      	ldrb	r3, [r7, #15]
}
 8001aaa:	4618      	mov	r0, r3
 8001aac:	3710      	adds	r7, #16
 8001aae:	46bd      	mov	sp, r7
 8001ab0:	bd80      	pop	{r7, pc}
 8001ab2:	bf00      	nop
 8001ab4:	3a200001 	.word	0x3a200001
 8001ab8:	3f7c6a7f 	.word	0x3f7c6a7f
 8001abc:	3b68a71e 	.word	0x3b68a71e

08001ac0 <READ_EPS_BATT_1_TEMP>:
/**
  * @brief Reads the temperature of the EPS battery cell 1 in degrees Celsius and stores the value in the pointed to address
  * @param temp_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATT_1_TEMP(float* temp_ptr){
 8001ac0:	b580      	push	{r7, lr}
 8001ac2:	b084      	sub	sp, #16
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001ac8:	2301      	movs	r3, #1
 8001aca:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 19; //battery cell 1 temperature command
 8001acc:	2313      	movs	r3, #19
 8001ace:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001ad0:	f107 0208 	add.w	r2, r7, #8
 8001ad4:	7bbb      	ldrb	r3, [r7, #14]
 8001ad6:	4611      	mov	r1, r2
 8001ad8:	4618      	mov	r0, r3
 8001ada:	f000 fb15 	bl	8002108 <EPS_READ>
 8001ade:	4603      	mov	r3, r0
 8001ae0:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001ae2:	7bfb      	ldrb	r3, [r7, #15]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d001      	beq.n	8001aec <READ_EPS_BATT_1_TEMP+0x2c>
        return status;
 8001ae8:	7bfb      	ldrb	r3, [r7, #15]
 8001aea:	e014      	b.n	8001b16 <READ_EPS_BATT_1_TEMP+0x56>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001aec:	7a3b      	ldrb	r3, [r7, #8]
 8001aee:	b29b      	uxth	r3, r3
 8001af0:	021b      	lsls	r3, r3, #8
 8001af2:	b29a      	uxth	r2, r3
 8001af4:	7a7b      	ldrb	r3, [r7, #9]
 8001af6:	b29b      	uxth	r3, r3
 8001af8:	4413      	add	r3, r2
 8001afa:	81bb      	strh	r3, [r7, #12]
    (*temp_ptr) = 0.00390625f * (float) raw_value;
 8001afc:	89bb      	ldrh	r3, [r7, #12]
 8001afe:	ee07 3a90 	vmov	s15, r3
 8001b02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001b06:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001b20 <READ_EPS_BATT_1_TEMP+0x60>
 8001b0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b0e:	687b      	ldr	r3, [r7, #4]
 8001b10:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001b14:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b16:	4618      	mov	r0, r3
 8001b18:	3710      	adds	r7, #16
 8001b1a:	46bd      	mov	sp, r7
 8001b1c:	bd80      	pop	{r7, pc}
 8001b1e:	bf00      	nop
 8001b20:	3b800000 	.word	0x3b800000

08001b24 <READ_EPS_BATT_2_TEMP>:
/**
  * @brief Reads the temperature of the EPS battery cell 2 in degrees Celsius and stores the value in the pointed to address
  * @param temp_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATT_2_TEMP(float* temp_ptr){
 8001b24:	b580      	push	{r7, lr}
 8001b26:	b084      	sub	sp, #16
 8001b28:	af00      	add	r7, sp, #0
 8001b2a:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001b2c:	2301      	movs	r3, #1
 8001b2e:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 20; //battery cell 2 temperature command
 8001b30:	2314      	movs	r3, #20
 8001b32:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001b34:	f107 0208 	add.w	r2, r7, #8
 8001b38:	7bbb      	ldrb	r3, [r7, #14]
 8001b3a:	4611      	mov	r1, r2
 8001b3c:	4618      	mov	r0, r3
 8001b3e:	f000 fae3 	bl	8002108 <EPS_READ>
 8001b42:	4603      	mov	r3, r0
 8001b44:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001b46:	7bfb      	ldrb	r3, [r7, #15]
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d001      	beq.n	8001b50 <READ_EPS_BATT_2_TEMP+0x2c>
        return status;
 8001b4c:	7bfb      	ldrb	r3, [r7, #15]
 8001b4e:	e014      	b.n	8001b7a <READ_EPS_BATT_2_TEMP+0x56>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001b50:	7a3b      	ldrb	r3, [r7, #8]
 8001b52:	b29b      	uxth	r3, r3
 8001b54:	021b      	lsls	r3, r3, #8
 8001b56:	b29a      	uxth	r2, r3
 8001b58:	7a7b      	ldrb	r3, [r7, #9]
 8001b5a:	b29b      	uxth	r3, r3
 8001b5c:	4413      	add	r3, r2
 8001b5e:	81bb      	strh	r3, [r7, #12]
    (*temp_ptr) = 0.00390625f * (float) raw_value;
 8001b60:	89bb      	ldrh	r3, [r7, #12]
 8001b62:	ee07 3a90 	vmov	s15, r3
 8001b66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001b6a:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001b84 <READ_EPS_BATT_2_TEMP+0x60>
 8001b6e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001b78:	7bfb      	ldrb	r3, [r7, #15]
}
 8001b7a:	4618      	mov	r0, r3
 8001b7c:	3710      	adds	r7, #16
 8001b7e:	46bd      	mov	sp, r7
 8001b80:	bd80      	pop	{r7, pc}
 8001b82:	bf00      	nop
 8001b84:	3b800000 	.word	0x3b800000

08001b88 <READ_EPS_BATT_3_TEMP>:
/**
  * @brief Reads the temperature of the EPS battery cell 3 in degrees Celsius and stores the value in the pointed to address
  * @param temp_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATT_3_TEMP(float* temp_ptr){
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001b90:	2301      	movs	r3, #1
 8001b92:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 21; //battery cell 3 temperature command
 8001b94:	2315      	movs	r3, #21
 8001b96:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001b98:	f107 0208 	add.w	r2, r7, #8
 8001b9c:	7bbb      	ldrb	r3, [r7, #14]
 8001b9e:	4611      	mov	r1, r2
 8001ba0:	4618      	mov	r0, r3
 8001ba2:	f000 fab1 	bl	8002108 <EPS_READ>
 8001ba6:	4603      	mov	r3, r0
 8001ba8:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001baa:	7bfb      	ldrb	r3, [r7, #15]
 8001bac:	2b00      	cmp	r3, #0
 8001bae:	d001      	beq.n	8001bb4 <READ_EPS_BATT_3_TEMP+0x2c>
        return status;
 8001bb0:	7bfb      	ldrb	r3, [r7, #15]
 8001bb2:	e014      	b.n	8001bde <READ_EPS_BATT_3_TEMP+0x56>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001bb4:	7a3b      	ldrb	r3, [r7, #8]
 8001bb6:	b29b      	uxth	r3, r3
 8001bb8:	021b      	lsls	r3, r3, #8
 8001bba:	b29a      	uxth	r2, r3
 8001bbc:	7a7b      	ldrb	r3, [r7, #9]
 8001bbe:	b29b      	uxth	r3, r3
 8001bc0:	4413      	add	r3, r2
 8001bc2:	81bb      	strh	r3, [r7, #12]
    (*temp_ptr) = 0.00390625f * (float) raw_value;
 8001bc4:	89bb      	ldrh	r3, [r7, #12]
 8001bc6:	ee07 3a90 	vmov	s15, r3
 8001bca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001bce:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001be8 <READ_EPS_BATT_3_TEMP+0x60>
 8001bd2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001bd6:	687b      	ldr	r3, [r7, #4]
 8001bd8:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001bdc:	7bfb      	ldrb	r3, [r7, #15]
}
 8001bde:	4618      	mov	r0, r3
 8001be0:	3710      	adds	r7, #16
 8001be2:	46bd      	mov	sp, r7
 8001be4:	bd80      	pop	{r7, pc}
 8001be6:	bf00      	nop
 8001be8:	3b800000 	.word	0x3b800000

08001bec <READ_EPS_BATT_4_TEMP>:
/**
  * @brief Reads the temperature of the EPS battery cell 4 in degrees Celsius and stores the value in the pointed to address
  * @param temp_ptr: The address to store the returned float value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_BATT_4_TEMP(float* temp_ptr){
 8001bec:	b580      	push	{r7, lr}
 8001bee:	b084      	sub	sp, #16
 8001bf0:	af00      	add	r7, sp, #0
 8001bf2:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001bf4:	2301      	movs	r3, #1
 8001bf6:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 22; //battery cell 4 temperature command
 8001bf8:	2316      	movs	r3, #22
 8001bfa:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001bfc:	f107 0208 	add.w	r2, r7, #8
 8001c00:	7bbb      	ldrb	r3, [r7, #14]
 8001c02:	4611      	mov	r1, r2
 8001c04:	4618      	mov	r0, r3
 8001c06:	f000 fa7f 	bl	8002108 <EPS_READ>
 8001c0a:	4603      	mov	r3, r0
 8001c0c:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001c0e:	7bfb      	ldrb	r3, [r7, #15]
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d001      	beq.n	8001c18 <READ_EPS_BATT_4_TEMP+0x2c>
        return status;
 8001c14:	7bfb      	ldrb	r3, [r7, #15]
 8001c16:	e014      	b.n	8001c42 <READ_EPS_BATT_4_TEMP+0x56>
    }
    uint16_t raw_value = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001c18:	7a3b      	ldrb	r3, [r7, #8]
 8001c1a:	b29b      	uxth	r3, r3
 8001c1c:	021b      	lsls	r3, r3, #8
 8001c1e:	b29a      	uxth	r2, r3
 8001c20:	7a7b      	ldrb	r3, [r7, #9]
 8001c22:	b29b      	uxth	r3, r3
 8001c24:	4413      	add	r3, r2
 8001c26:	81bb      	strh	r3, [r7, #12]
    (*temp_ptr) = 0.00390625f * (float) raw_value;
 8001c28:	89bb      	ldrh	r3, [r7, #12]
 8001c2a:	ee07 3a90 	vmov	s15, r3
 8001c2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001c32:	ed9f 7a06 	vldr	s14, [pc, #24]	; 8001c4c <READ_EPS_BATT_4_TEMP+0x60>
 8001c36:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	edc3 7a00 	vstr	s15, [r3]
    return status;
 8001c40:	7bfb      	ldrb	r3, [r7, #15]
}
 8001c42:	4618      	mov	r0, r3
 8001c44:	3710      	adds	r7, #16
 8001c46:	46bd      	mov	sp, r7
 8001c48:	bd80      	pop	{r7, pc}
 8001c4a:	bf00      	nop
 8001c4c:	3b800000 	.word	0x3b800000

08001c50 <READ_EPS_INPUT_CONDITION>:
/**
  * @brief Reads raw return value of the Input Condition command and stores the value in the pointed to address
  * @param cond_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_INPUT_CONDITION(uint16_t *cond_ptr){
 8001c50:	b580      	push	{r7, lr}
 8001c52:	b084      	sub	sp, #16
 8001c54:	af00      	add	r7, sp, #0
 8001c56:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001c58:	2301      	movs	r3, #1
 8001c5a:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 23; //input conditions command
 8001c5c:	2317      	movs	r3, #23
 8001c5e:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001c60:	f107 020c 	add.w	r2, r7, #12
 8001c64:	7bbb      	ldrb	r3, [r7, #14]
 8001c66:	4611      	mov	r1, r2
 8001c68:	4618      	mov	r0, r3
 8001c6a:	f000 fa4d 	bl	8002108 <EPS_READ>
 8001c6e:	4603      	mov	r3, r0
 8001c70:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001c72:	7bfb      	ldrb	r3, [r7, #15]
 8001c74:	2b00      	cmp	r3, #0
 8001c76:	d001      	beq.n	8001c7c <READ_EPS_INPUT_CONDITION+0x2c>
        return status;
 8001c78:	7bfb      	ldrb	r3, [r7, #15]
 8001c7a:	e00a      	b.n	8001c92 <READ_EPS_INPUT_CONDITION+0x42>
    }
    (*cond_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001c7c:	7b3b      	ldrb	r3, [r7, #12]
 8001c7e:	b29b      	uxth	r3, r3
 8001c80:	021b      	lsls	r3, r3, #8
 8001c82:	b29a      	uxth	r2, r3
 8001c84:	7b7b      	ldrb	r3, [r7, #13]
 8001c86:	b29b      	uxth	r3, r3
 8001c88:	4413      	add	r3, r2
 8001c8a:	b29a      	uxth	r2, r3
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	801a      	strh	r2, [r3, #0]
    return status;
 8001c90:	7bfb      	ldrb	r3, [r7, #15]
}
 8001c92:	4618      	mov	r0, r3
 8001c94:	3710      	adds	r7, #16
 8001c96:	46bd      	mov	sp, r7
 8001c98:	bd80      	pop	{r7, pc}

08001c9a <READ_EPS_OUTPUT_CONDITION1>:
/**
  * @brief Reads raw return value of the Output Condition 1 command and stores the value in the pointed to address
  * @param cond_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_OUTPUT_CONDITION1(uint16_t *cond_ptr){
 8001c9a:	b580      	push	{r7, lr}
 8001c9c:	b084      	sub	sp, #16
 8001c9e:	af00      	add	r7, sp, #0
 8001ca0:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001ca2:	2301      	movs	r3, #1
 8001ca4:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 24; //output conditions command
 8001ca6:	2318      	movs	r3, #24
 8001ca8:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001caa:	f107 020c 	add.w	r2, r7, #12
 8001cae:	7bbb      	ldrb	r3, [r7, #14]
 8001cb0:	4611      	mov	r1, r2
 8001cb2:	4618      	mov	r0, r3
 8001cb4:	f000 fa28 	bl	8002108 <EPS_READ>
 8001cb8:	4603      	mov	r3, r0
 8001cba:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001cbc:	7bfb      	ldrb	r3, [r7, #15]
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	d001      	beq.n	8001cc6 <READ_EPS_OUTPUT_CONDITION1+0x2c>
        return status;
 8001cc2:	7bfb      	ldrb	r3, [r7, #15]
 8001cc4:	e00a      	b.n	8001cdc <READ_EPS_OUTPUT_CONDITION1+0x42>
    }
    (*cond_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001cc6:	7b3b      	ldrb	r3, [r7, #12]
 8001cc8:	b29b      	uxth	r3, r3
 8001cca:	021b      	lsls	r3, r3, #8
 8001ccc:	b29a      	uxth	r2, r3
 8001cce:	7b7b      	ldrb	r3, [r7, #13]
 8001cd0:	b29b      	uxth	r3, r3
 8001cd2:	4413      	add	r3, r2
 8001cd4:	b29a      	uxth	r2, r3
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	801a      	strh	r2, [r3, #0]
    return status;
 8001cda:	7bfb      	ldrb	r3, [r7, #15]
}
 8001cdc:	4618      	mov	r0, r3
 8001cde:	3710      	adds	r7, #16
 8001ce0:	46bd      	mov	sp, r7
 8001ce2:	bd80      	pop	{r7, pc}

08001ce4 <READ_EPS_OUTPUT_CONDITION2>:
/**
  * @brief Reads raw return value of the Output Condition 2 command and stores the value in the pointed to address
  * @param cond_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_OUTPUT_CONDITION2(uint16_t *cond_ptr){
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b084      	sub	sp, #16
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001cec:	2301      	movs	r3, #1
 8001cee:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 24; //output conditions command
 8001cf0:	2318      	movs	r3, #24
 8001cf2:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001cf4:	f107 020c 	add.w	r2, r7, #12
 8001cf8:	7bbb      	ldrb	r3, [r7, #14]
 8001cfa:	4611      	mov	r1, r2
 8001cfc:	4618      	mov	r0, r3
 8001cfe:	f000 fa03 	bl	8002108 <EPS_READ>
 8001d02:	4603      	mov	r3, r0
 8001d04:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001d06:	7bfb      	ldrb	r3, [r7, #15]
 8001d08:	2b00      	cmp	r3, #0
 8001d0a:	d001      	beq.n	8001d10 <READ_EPS_OUTPUT_CONDITION2+0x2c>
        return status;
 8001d0c:	7bfb      	ldrb	r3, [r7, #15]
 8001d0e:	e00a      	b.n	8001d26 <READ_EPS_OUTPUT_CONDITION2+0x42>
    }
    (*cond_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001d10:	7b3b      	ldrb	r3, [r7, #12]
 8001d12:	b29b      	uxth	r3, r3
 8001d14:	021b      	lsls	r3, r3, #8
 8001d16:	b29a      	uxth	r2, r3
 8001d18:	7b7b      	ldrb	r3, [r7, #13]
 8001d1a:	b29b      	uxth	r3, r3
 8001d1c:	4413      	add	r3, r2
 8001d1e:	b29a      	uxth	r2, r3
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	801a      	strh	r2, [r3, #0]
    return status;
 8001d24:	7bfb      	ldrb	r3, [r7, #15]
}
 8001d26:	4618      	mov	r0, r3
 8001d28:	3710      	adds	r7, #16
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	bd80      	pop	{r7, pc}

08001d2e <READ_EPS_POWER_ON_CYCLES>:
/**
  * @brief Reads the current count of EPS power cycles and stores the value in the pointed to address
  * @param count_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_POWER_ON_CYCLES(uint16_t *count_ptr){
 8001d2e:	b580      	push	{r7, lr}
 8001d30:	b084      	sub	sp, #16
 8001d32:	af00      	add	r7, sp, #0
 8001d34:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001d36:	2301      	movs	r3, #1
 8001d38:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 26; //power on cycles count command
 8001d3a:	231a      	movs	r3, #26
 8001d3c:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001d3e:	f107 020c 	add.w	r2, r7, #12
 8001d42:	7bbb      	ldrb	r3, [r7, #14]
 8001d44:	4611      	mov	r1, r2
 8001d46:	4618      	mov	r0, r3
 8001d48:	f000 f9de 	bl	8002108 <EPS_READ>
 8001d4c:	4603      	mov	r3, r0
 8001d4e:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001d50:	7bfb      	ldrb	r3, [r7, #15]
 8001d52:	2b00      	cmp	r3, #0
 8001d54:	d001      	beq.n	8001d5a <READ_EPS_POWER_ON_CYCLES+0x2c>
        return status;
 8001d56:	7bfb      	ldrb	r3, [r7, #15]
 8001d58:	e00a      	b.n	8001d70 <READ_EPS_POWER_ON_CYCLES+0x42>
    }
    (*count_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001d5a:	7b3b      	ldrb	r3, [r7, #12]
 8001d5c:	b29b      	uxth	r3, r3
 8001d5e:	021b      	lsls	r3, r3, #8
 8001d60:	b29a      	uxth	r2, r3
 8001d62:	7b7b      	ldrb	r3, [r7, #13]
 8001d64:	b29b      	uxth	r3, r3
 8001d66:	4413      	add	r3, r2
 8001d68:	b29a      	uxth	r2, r3
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	801a      	strh	r2, [r3, #0]
    return status;
 8001d6e:	7bfb      	ldrb	r3, [r7, #15]
}
 8001d70:	4618      	mov	r0, r3
 8001d72:	3710      	adds	r7, #16
 8001d74:	46bd      	mov	sp, r7
 8001d76:	bd80      	pop	{r7, pc}

08001d78 <READ_EPS_UNDER_VOLT_COUNT>:
/**
  * @brief Reads the current count of EPS under-voltage occurrences and stores the value in the pointed to address
  * @param count_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_UNDER_VOLT_COUNT(uint16_t *count_ptr){
 8001d78:	b580      	push	{r7, lr}
 8001d7a:	b084      	sub	sp, #16
 8001d7c:	af00      	add	r7, sp, #0
 8001d7e:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001d80:	2301      	movs	r3, #1
 8001d82:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 27; //under voltage count command
 8001d84:	231b      	movs	r3, #27
 8001d86:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001d88:	f107 020c 	add.w	r2, r7, #12
 8001d8c:	7bbb      	ldrb	r3, [r7, #14]
 8001d8e:	4611      	mov	r1, r2
 8001d90:	4618      	mov	r0, r3
 8001d92:	f000 f9b9 	bl	8002108 <EPS_READ>
 8001d96:	4603      	mov	r3, r0
 8001d98:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001d9a:	7bfb      	ldrb	r3, [r7, #15]
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d001      	beq.n	8001da4 <READ_EPS_UNDER_VOLT_COUNT+0x2c>
        return status;
 8001da0:	7bfb      	ldrb	r3, [r7, #15]
 8001da2:	e00a      	b.n	8001dba <READ_EPS_UNDER_VOLT_COUNT+0x42>
    }
    (*count_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001da4:	7b3b      	ldrb	r3, [r7, #12]
 8001da6:	b29b      	uxth	r3, r3
 8001da8:	021b      	lsls	r3, r3, #8
 8001daa:	b29a      	uxth	r2, r3
 8001dac:	7b7b      	ldrb	r3, [r7, #13]
 8001dae:	b29b      	uxth	r3, r3
 8001db0:	4413      	add	r3, r2
 8001db2:	b29a      	uxth	r2, r3
 8001db4:	687b      	ldr	r3, [r7, #4]
 8001db6:	801a      	strh	r2, [r3, #0]
    return status;
 8001db8:	7bfb      	ldrb	r3, [r7, #15]
}
 8001dba:	4618      	mov	r0, r3
 8001dbc:	3710      	adds	r7, #16
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	bd80      	pop	{r7, pc}

08001dc2 <READ_EPS_SHORT_CIRCUIT_COUNT>:
/**
  * @brief Reads the current count of EPS short-circuit occurrences and stores the value in the pointed to address
  * @param count_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_SHORT_CIRCUIT_COUNT(uint16_t *count_ptr){
 8001dc2:	b580      	push	{r7, lr}
 8001dc4:	b084      	sub	sp, #16
 8001dc6:	af00      	add	r7, sp, #0
 8001dc8:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001dca:	2301      	movs	r3, #1
 8001dcc:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 28; //short circuit count command
 8001dce:	231c      	movs	r3, #28
 8001dd0:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001dd2:	f107 020c 	add.w	r2, r7, #12
 8001dd6:	7bbb      	ldrb	r3, [r7, #14]
 8001dd8:	4611      	mov	r1, r2
 8001dda:	4618      	mov	r0, r3
 8001ddc:	f000 f994 	bl	8002108 <EPS_READ>
 8001de0:	4603      	mov	r3, r0
 8001de2:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001de4:	7bfb      	ldrb	r3, [r7, #15]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d001      	beq.n	8001dee <READ_EPS_SHORT_CIRCUIT_COUNT+0x2c>
        return status;
 8001dea:	7bfb      	ldrb	r3, [r7, #15]
 8001dec:	e00a      	b.n	8001e04 <READ_EPS_SHORT_CIRCUIT_COUNT+0x42>
    }
    (*count_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001dee:	7b3b      	ldrb	r3, [r7, #12]
 8001df0:	b29b      	uxth	r3, r3
 8001df2:	021b      	lsls	r3, r3, #8
 8001df4:	b29a      	uxth	r2, r3
 8001df6:	7b7b      	ldrb	r3, [r7, #13]
 8001df8:	b29b      	uxth	r3, r3
 8001dfa:	4413      	add	r3, r2
 8001dfc:	b29a      	uxth	r2, r3
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	801a      	strh	r2, [r3, #0]
    return status;
 8001e02:	7bfb      	ldrb	r3, [r7, #15]
}
 8001e04:	4618      	mov	r0, r3
 8001e06:	3710      	adds	r7, #16
 8001e08:	46bd      	mov	sp, r7
 8001e0a:	bd80      	pop	{r7, pc}

08001e0c <READ_EPS_OVER_TEMP_COUNT>:
/**
  * @brief Reads the current count of EPS over-temp occurrences and stores the value in the pointed to address
  * @param count_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_OVER_TEMP_COUNT(uint16_t *count_ptr){
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b084      	sub	sp, #16
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001e14:	2301      	movs	r3, #1
 8001e16:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 29; //over temperature count command
 8001e18:	231d      	movs	r3, #29
 8001e1a:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001e1c:	f107 020c 	add.w	r2, r7, #12
 8001e20:	7bbb      	ldrb	r3, [r7, #14]
 8001e22:	4611      	mov	r1, r2
 8001e24:	4618      	mov	r0, r3
 8001e26:	f000 f96f 	bl	8002108 <EPS_READ>
 8001e2a:	4603      	mov	r3, r0
 8001e2c:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001e2e:	7bfb      	ldrb	r3, [r7, #15]
 8001e30:	2b00      	cmp	r3, #0
 8001e32:	d001      	beq.n	8001e38 <READ_EPS_OVER_TEMP_COUNT+0x2c>
        return status;
 8001e34:	7bfb      	ldrb	r3, [r7, #15]
 8001e36:	e00a      	b.n	8001e4e <READ_EPS_OVER_TEMP_COUNT+0x42>
    }
    (*count_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001e38:	7b3b      	ldrb	r3, [r7, #12]
 8001e3a:	b29b      	uxth	r3, r3
 8001e3c:	021b      	lsls	r3, r3, #8
 8001e3e:	b29a      	uxth	r2, r3
 8001e40:	7b7b      	ldrb	r3, [r7, #13]
 8001e42:	b29b      	uxth	r3, r3
 8001e44:	4413      	add	r3, r2
 8001e46:	b29a      	uxth	r2, r3
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	801a      	strh	r2, [r3, #0]
    return status;
 8001e4c:	7bfb      	ldrb	r3, [r7, #15]
}
 8001e4e:	4618      	mov	r0, r3
 8001e50:	3710      	adds	r7, #16
 8001e52:	46bd      	mov	sp, r7
 8001e54:	bd80      	pop	{r7, pc}

08001e56 <READ_EPS_CHARGE_CYCLES>:
/**
  * @brief Reads the current count of EPS battery charge cycles and stores the value in the pointed to address
  * @param count_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_CHARGE_CYCLES(uint16_t *count_ptr){
 8001e56:	b580      	push	{r7, lr}
 8001e58:	b084      	sub	sp, #16
 8001e5a:	af00      	add	r7, sp, #0
 8001e5c:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001e5e:	2301      	movs	r3, #1
 8001e60:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 48; //charging cycles count command
 8001e62:	2330      	movs	r3, #48	; 0x30
 8001e64:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001e66:	f107 020c 	add.w	r2, r7, #12
 8001e6a:	7bbb      	ldrb	r3, [r7, #14]
 8001e6c:	4611      	mov	r1, r2
 8001e6e:	4618      	mov	r0, r3
 8001e70:	f000 f94a 	bl	8002108 <EPS_READ>
 8001e74:	4603      	mov	r3, r0
 8001e76:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001e78:	7bfb      	ldrb	r3, [r7, #15]
 8001e7a:	2b00      	cmp	r3, #0
 8001e7c:	d001      	beq.n	8001e82 <READ_EPS_CHARGE_CYCLES+0x2c>
        return status;
 8001e7e:	7bfb      	ldrb	r3, [r7, #15]
 8001e80:	e00a      	b.n	8001e98 <READ_EPS_CHARGE_CYCLES+0x42>
    }
    (*count_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001e82:	7b3b      	ldrb	r3, [r7, #12]
 8001e84:	b29b      	uxth	r3, r3
 8001e86:	021b      	lsls	r3, r3, #8
 8001e88:	b29a      	uxth	r2, r3
 8001e8a:	7b7b      	ldrb	r3, [r7, #13]
 8001e8c:	b29b      	uxth	r3, r3
 8001e8e:	4413      	add	r3, r2
 8001e90:	b29a      	uxth	r2, r3
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	801a      	strh	r2, [r3, #0]
    return status;
 8001e96:	7bfb      	ldrb	r3, [r7, #15]
}
 8001e98:	4618      	mov	r0, r3
 8001e9a:	3710      	adds	r7, #16
 8001e9c:	46bd      	mov	sp, r7
 8001e9e:	bd80      	pop	{r7, pc}

08001ea0 <READ_EPS_DEFAULTS1>:
/**
  * @brief Reads the default values of LUPs and fast charge modes and stores the value in the pointed to address
  * @param default_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_DEFAULTS1(uint16_t *default_ptr){
 8001ea0:	b580      	push	{r7, lr}
 8001ea2:	b084      	sub	sp, #16
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001ea8:	2301      	movs	r3, #1
 8001eaa:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 43; //output 1 default value command
 8001eac:	232b      	movs	r3, #43	; 0x2b
 8001eae:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001eb0:	f107 020c 	add.w	r2, r7, #12
 8001eb4:	7bbb      	ldrb	r3, [r7, #14]
 8001eb6:	4611      	mov	r1, r2
 8001eb8:	4618      	mov	r0, r3
 8001eba:	f000 f925 	bl	8002108 <EPS_READ>
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001ec2:	7bfb      	ldrb	r3, [r7, #15]
 8001ec4:	2b00      	cmp	r3, #0
 8001ec6:	d001      	beq.n	8001ecc <READ_EPS_DEFAULTS1+0x2c>
        return status;
 8001ec8:	7bfb      	ldrb	r3, [r7, #15]
 8001eca:	e00a      	b.n	8001ee2 <READ_EPS_DEFAULTS1+0x42>
    }
    (*default_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001ecc:	7b3b      	ldrb	r3, [r7, #12]
 8001ece:	b29b      	uxth	r3, r3
 8001ed0:	021b      	lsls	r3, r3, #8
 8001ed2:	b29a      	uxth	r2, r3
 8001ed4:	7b7b      	ldrb	r3, [r7, #13]
 8001ed6:	b29b      	uxth	r3, r3
 8001ed8:	4413      	add	r3, r2
 8001eda:	b29a      	uxth	r2, r3
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	801a      	strh	r2, [r3, #0]
    return status;
 8001ee0:	7bfb      	ldrb	r3, [r7, #15]
}
 8001ee2:	4618      	mov	r0, r3
 8001ee4:	3710      	adds	r7, #16
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	bd80      	pop	{r7, pc}

08001eea <READ_EPS_DEFAULTS2>:
/**
  * @brief Reads the default values of OUT1-OUT6 and stores the value in the pointed to address
  * @param default_ptr: The address to store the returned uint16_t value at
  * @retval Returns if all of the hal function calls succeeded, or if any of them failed
  */
HAL_StatusTypeDef READ_EPS_DEFAULTS2(uint16_t *default_ptr){
 8001eea:	b580      	push	{r7, lr}
 8001eec:	b084      	sub	sp, #16
 8001eee:	af00      	add	r7, sp, #0
 8001ef0:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef status = HAL_ERROR; //status initial state is error
 8001ef2:	2301      	movs	r3, #1
 8001ef4:	73fb      	strb	r3, [r7, #15]
    uint8_t command = 44; //output 3 default value command
 8001ef6:	232c      	movs	r3, #44	; 0x2c
 8001ef8:	73bb      	strb	r3, [r7, #14]
    uint8_t data[2];
    status = EPS_READ(command, data);
 8001efa:	f107 020c 	add.w	r2, r7, #12
 8001efe:	7bbb      	ldrb	r3, [r7, #14]
 8001f00:	4611      	mov	r1, r2
 8001f02:	4618      	mov	r0, r3
 8001f04:	f000 f900 	bl	8002108 <EPS_READ>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 8001f0c:	7bfb      	ldrb	r3, [r7, #15]
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d001      	beq.n	8001f16 <READ_EPS_DEFAULTS2+0x2c>
        return status;
 8001f12:	7bfb      	ldrb	r3, [r7, #15]
 8001f14:	e00a      	b.n	8001f2c <READ_EPS_DEFAULTS2+0x42>
    }
    (*default_ptr) = ((uint16_t) data[0] << 8) + (uint16_t) data[1]; //convert 2 separate bytes to unsigned 16 bits
 8001f16:	7b3b      	ldrb	r3, [r7, #12]
 8001f18:	b29b      	uxth	r3, r3
 8001f1a:	021b      	lsls	r3, r3, #8
 8001f1c:	b29a      	uxth	r2, r3
 8001f1e:	7b7b      	ldrb	r3, [r7, #13]
 8001f20:	b29b      	uxth	r3, r3
 8001f22:	4413      	add	r3, r2
 8001f24:	b29a      	uxth	r2, r3
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	801a      	strh	r2, [r3, #0]
    return status;
 8001f2a:	7bfb      	ldrb	r3, [r7, #15]
}
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	3710      	adds	r7, #16
 8001f30:	46bd      	mov	sp, r7
 8001f32:	bd80      	pop	{r7, pc}

08001f34 <enable_EPS_Vbatt_Bus>:


/********************************************** WRITE FUNCTIONS **********************************************************************************/
HAL_StatusTypeDef enable_EPS_Vbatt_Bus(){
 8001f34:	b580      	push	{r7, lr}
 8001f36:	af00      	add	r7, sp, #0
    return EPS_WRITE(1, 1); //turn command 1 to the ON state
 8001f38:	2101      	movs	r1, #1
 8001f3a:	2001      	movs	r0, #1
 8001f3c:	f000 f948 	bl	80021d0 <EPS_WRITE>
 8001f40:	4603      	mov	r3, r0
}
 8001f42:	4618      	mov	r0, r3
 8001f44:	bd80      	pop	{r7, pc}

08001f46 <disable_EPS_Vbatt_Bus>:

HAL_StatusTypeDef disable_EPS_Vbatt_Bus(){
 8001f46:	b580      	push	{r7, lr}
 8001f48:	af00      	add	r7, sp, #0
    return EPS_WRITE(1, 2); //turn command 1 to the FORCE OFF state
 8001f4a:	2102      	movs	r1, #2
 8001f4c:	2001      	movs	r0, #1
 8001f4e:	f000 f93f 	bl	80021d0 <EPS_WRITE>
 8001f52:	4603      	mov	r3, r0
}
 8001f54:	4618      	mov	r0, r3
 8001f56:	bd80      	pop	{r7, pc}

08001f58 <enable_EPS_5v_Bus>:

HAL_StatusTypeDef disable_EPS_BCR_Bus(){
    return EPS_WRITE(2, 0); //turn command 2 to the OFF state
}

HAL_StatusTypeDef enable_EPS_5v_Bus(){
 8001f58:	b580      	push	{r7, lr}
 8001f5a:	af00      	add	r7, sp, #0
    return EPS_WRITE(4, 1); //turn command 4 to the ON state
 8001f5c:	2101      	movs	r1, #1
 8001f5e:	2004      	movs	r0, #4
 8001f60:	f000 f936 	bl	80021d0 <EPS_WRITE>
 8001f64:	4603      	mov	r3, r0
}
 8001f66:	4618      	mov	r0, r3
 8001f68:	bd80      	pop	{r7, pc}

08001f6a <disable_EPS_5v_Bus>:

HAL_StatusTypeDef disable_EPS_5v_Bus(){
 8001f6a:	b580      	push	{r7, lr}
 8001f6c:	af00      	add	r7, sp, #0
    return EPS_WRITE(4, 2); //turn command 4 to the FORCE OFF state
 8001f6e:	2102      	movs	r1, #2
 8001f70:	2004      	movs	r0, #4
 8001f72:	f000 f92d 	bl	80021d0 <EPS_WRITE>
 8001f76:	4603      	mov	r3, r0
}
 8001f78:	4618      	mov	r0, r3
 8001f7a:	bd80      	pop	{r7, pc}

08001f7c <enable_EPS_LUP_3v>:

HAL_StatusTypeDef enable_EPS_LUP_3v(){
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	af00      	add	r7, sp, #0
    return EPS_WRITE(5, 0); //turn command 5 to the ON state
 8001f80:	2100      	movs	r1, #0
 8001f82:	2005      	movs	r0, #5
 8001f84:	f000 f924 	bl	80021d0 <EPS_WRITE>
 8001f88:	4603      	mov	r3, r0
}
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	bd80      	pop	{r7, pc}

08001f8e <enable_EPS_LUP_5v>:

HAL_StatusTypeDef disable_EPS_LUP_3v(){
    return EPS_WRITE(5, 1); //turn command 5 to the OFF state
}

HAL_StatusTypeDef enable_EPS_LUP_5v(){
 8001f8e:	b580      	push	{r7, lr}
 8001f90:	af00      	add	r7, sp, #0
    return EPS_WRITE(6, 0); //turn command 6 to the ON state
 8001f92:	2100      	movs	r1, #0
 8001f94:	2006      	movs	r0, #6
 8001f96:	f000 f91b 	bl	80021d0 <EPS_WRITE>
 8001f9a:	4603      	mov	r3, r0
}
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	bd80      	pop	{r7, pc}

08001fa0 <enable_EPS_Fast_Charge1>:

HAL_StatusTypeDef disable_EPS_LUP_5v(){
    return EPS_WRITE(6, 1); //turn command 6 to the OFF state
}

HAL_StatusTypeDef enable_EPS_Fast_Charge1(){
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	af00      	add	r7, sp, #0
    return EPS_WRITE(8, 1); //turn command 8 to the ON state (HIGH = Fast?, LOW = Slow?)
 8001fa4:	2101      	movs	r1, #1
 8001fa6:	2008      	movs	r0, #8
 8001fa8:	f000 f912 	bl	80021d0 <EPS_WRITE>
 8001fac:	4603      	mov	r3, r0
}
 8001fae:	4618      	mov	r0, r3
 8001fb0:	bd80      	pop	{r7, pc}

08001fb2 <disable_EPS_Fast_Charge1>:

HAL_StatusTypeDef disable_EPS_Fast_Charge1(){
 8001fb2:	b580      	push	{r7, lr}
 8001fb4:	af00      	add	r7, sp, #0
    return EPS_WRITE(8, 0); //turn command 8 to the ON state (HIGH = Fast?, LOW = Slow?)
 8001fb6:	2100      	movs	r1, #0
 8001fb8:	2008      	movs	r0, #8
 8001fba:	f000 f909 	bl	80021d0 <EPS_WRITE>
 8001fbe:	4603      	mov	r3, r0
}
 8001fc0:	4618      	mov	r0, r3
 8001fc2:	bd80      	pop	{r7, pc}

08001fc4 <enable_EPS_Fast_Charge2>:

HAL_StatusTypeDef enable_EPS_Fast_Charge2(){
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	af00      	add	r7, sp, #0
    return EPS_WRITE(9, 1); //turn command 9 to the ON state (HIGH = Fast?, LOW = Slow?)
 8001fc8:	2101      	movs	r1, #1
 8001fca:	2009      	movs	r0, #9
 8001fcc:	f000 f900 	bl	80021d0 <EPS_WRITE>
 8001fd0:	4603      	mov	r3, r0
}
 8001fd2:	4618      	mov	r0, r3
 8001fd4:	bd80      	pop	{r7, pc}

08001fd6 <disable_EPS_Fast_Charge2>:

HAL_StatusTypeDef disable_EPS_Fast_Charge2(){
 8001fd6:	b580      	push	{r7, lr}
 8001fd8:	af00      	add	r7, sp, #0
    return EPS_WRITE(9, 0); //turn command 9 to the OFF state (HIGH = Fast?, LOW = Slow?)
 8001fda:	2100      	movs	r1, #0
 8001fdc:	2009      	movs	r0, #9
 8001fde:	f000 f8f7 	bl	80021d0 <EPS_WRITE>
 8001fe2:	4603      	mov	r3, r0
}
 8001fe4:	4618      	mov	r0, r3
 8001fe6:	bd80      	pop	{r7, pc}

08001fe8 <enable_Boost_Board>:

HAL_StatusTypeDef enable_Boost_Board(){
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	af00      	add	r7, sp, #0
    return EPS_WRITE(10, 1); //turn command 10 to the ON state
 8001fec:	2101      	movs	r1, #1
 8001fee:	200a      	movs	r0, #10
 8001ff0:	f000 f8ee 	bl	80021d0 <EPS_WRITE>
 8001ff4:	4603      	mov	r3, r0
}
 8001ff6:	4618      	mov	r0, r3
 8001ff8:	bd80      	pop	{r7, pc}

08001ffa <disable_Boost_Board>:

HAL_StatusTypeDef disable_Boost_Board(){
 8001ffa:	b580      	push	{r7, lr}
 8001ffc:	af00      	add	r7, sp, #0
    return EPS_WRITE(10, 0); //turn command 10 to the OFF state
 8001ffe:	2100      	movs	r1, #0
 8002000:	200a      	movs	r0, #10
 8002002:	f000 f8e5 	bl	80021d0 <EPS_WRITE>
 8002006:	4603      	mov	r3, r0
}
 8002008:	4618      	mov	r0, r3
 800200a:	bd80      	pop	{r7, pc}

0800200c <enable_Payload>:

HAL_StatusTypeDef enable_Payload(){
 800200c:	b580      	push	{r7, lr}
 800200e:	af00      	add	r7, sp, #0
    return EPS_WRITE(11, 1); //turn command 11 to the ON state
 8002010:	2101      	movs	r1, #1
 8002012:	200b      	movs	r0, #11
 8002014:	f000 f8dc 	bl	80021d0 <EPS_WRITE>
 8002018:	4603      	mov	r3, r0
}
 800201a:	4618      	mov	r0, r3
 800201c:	bd80      	pop	{r7, pc}

0800201e <disable_Payload>:

HAL_StatusTypeDef disable_Payload(){
 800201e:	b580      	push	{r7, lr}
 8002020:	af00      	add	r7, sp, #0
    return EPS_WRITE(11, 0); //turn command 11 to the OFF state
 8002022:	2100      	movs	r1, #0
 8002024:	200b      	movs	r0, #11
 8002026:	f000 f8d3 	bl	80021d0 <EPS_WRITE>
 800202a:	4603      	mov	r3, r0
}
 800202c:	4618      	mov	r0, r3
 800202e:	bd80      	pop	{r7, pc}

08002030 <enable_EPS_Output_3>:

HAL_StatusTypeDef enable_EPS_Output_3(){
 8002030:	b580      	push	{r7, lr}
 8002032:	af00      	add	r7, sp, #0
    return EPS_WRITE(12, 1); //turn command 12 to the ON state
 8002034:	2101      	movs	r1, #1
 8002036:	200c      	movs	r0, #12
 8002038:	f000 f8ca 	bl	80021d0 <EPS_WRITE>
 800203c:	4603      	mov	r3, r0
}
 800203e:	4618      	mov	r0, r3
 8002040:	bd80      	pop	{r7, pc}

08002042 <disable_EPS_Output_3>:

HAL_StatusTypeDef disable_EPS_Output_3(){
 8002042:	b580      	push	{r7, lr}
 8002044:	af00      	add	r7, sp, #0
    return EPS_WRITE(12, 0); //turn command 12 to the OFF state
 8002046:	2100      	movs	r1, #0
 8002048:	200c      	movs	r0, #12
 800204a:	f000 f8c1 	bl	80021d0 <EPS_WRITE>
 800204e:	4603      	mov	r3, r0
}
 8002050:	4618      	mov	r0, r3
 8002052:	bd80      	pop	{r7, pc}

08002054 <enable_UHF>:

HAL_StatusTypeDef enable_UHF(){
 8002054:	b580      	push	{r7, lr}
 8002056:	af00      	add	r7, sp, #0
    return EPS_WRITE(14, 1); //turn command 14 to the ON state
 8002058:	2101      	movs	r1, #1
 800205a:	200e      	movs	r0, #14
 800205c:	f000 f8b8 	bl	80021d0 <EPS_WRITE>
 8002060:	4603      	mov	r3, r0
}
 8002062:	4618      	mov	r0, r3
 8002064:	bd80      	pop	{r7, pc}

08002066 <disable_UHF>:

HAL_StatusTypeDef disable_UHF(){
 8002066:	b580      	push	{r7, lr}
 8002068:	af00      	add	r7, sp, #0
//    osThreadTerminate(myUHFTask);
//    osThreadDef(myUHFTask, UHF_Task, osPriorityNormal, 0, 512);
//    osThreadCreate(osThread(myUHFTask), NULL);
    return EPS_WRITE(14, 0); //turn command 14 to the OFF state
 800206a:	2100      	movs	r1, #0
 800206c:	200e      	movs	r0, #14
 800206e:	f000 f8af 	bl	80021d0 <EPS_WRITE>
 8002072:	4603      	mov	r3, r0
}
 8002074:	4618      	mov	r0, r3
 8002076:	bd80      	pop	{r7, pc}

08002078 <enable_EPS_Output_6>:

HAL_StatusTypeDef enable_EPS_Output_6(){
 8002078:	b580      	push	{r7, lr}
 800207a:	af00      	add	r7, sp, #0
    return EPS_WRITE(15, 1); //turn command 15 to the ON state
 800207c:	2101      	movs	r1, #1
 800207e:	200f      	movs	r0, #15
 8002080:	f000 f8a6 	bl	80021d0 <EPS_WRITE>
 8002084:	4603      	mov	r3, r0
}
 8002086:	4618      	mov	r0, r3
 8002088:	bd80      	pop	{r7, pc}

0800208a <disable_EPS_Output_6>:

HAL_StatusTypeDef disable_EPS_Output_6(){
 800208a:	b580      	push	{r7, lr}
 800208c:	af00      	add	r7, sp, #0
    return EPS_WRITE(15, 0); //turn command 15 to the OFF state
 800208e:	2100      	movs	r1, #0
 8002090:	200f      	movs	r0, #15
 8002092:	f000 f89d 	bl	80021d0 <EPS_WRITE>
 8002096:	4603      	mov	r3, r0
}
 8002098:	4618      	mov	r0, r3
 800209a:	bd80      	pop	{r7, pc}

0800209c <enable_EPS_Batt_Heater_1>:

HAL_StatusTypeDef enable_EPS_Batt_Heater_1(){
 800209c:	b580      	push	{r7, lr}
 800209e:	af00      	add	r7, sp, #0
    return EPS_WRITE(16, 1); //turn command 16 to the ON state
 80020a0:	2101      	movs	r1, #1
 80020a2:	2010      	movs	r0, #16
 80020a4:	f000 f894 	bl	80021d0 <EPS_WRITE>
 80020a8:	4603      	mov	r3, r0
}
 80020aa:	4618      	mov	r0, r3
 80020ac:	bd80      	pop	{r7, pc}

080020ae <disable_EPS_Batt_Heater_1>:

HAL_StatusTypeDef disable_EPS_Batt_Heater_1(){
 80020ae:	b580      	push	{r7, lr}
 80020b0:	af00      	add	r7, sp, #0
    return EPS_WRITE(16, 0); //turn command 16 to the OFF state
 80020b2:	2100      	movs	r1, #0
 80020b4:	2010      	movs	r0, #16
 80020b6:	f000 f88b 	bl	80021d0 <EPS_WRITE>
 80020ba:	4603      	mov	r3, r0
}
 80020bc:	4618      	mov	r0, r3
 80020be:	bd80      	pop	{r7, pc}

080020c0 <enable_EPS_Batt_Heater_2>:

HAL_StatusTypeDef enable_EPS_Batt_Heater_2(){
 80020c0:	b580      	push	{r7, lr}
 80020c2:	af00      	add	r7, sp, #0
    return EPS_WRITE(17, 1); //turn command 17 to the ON state
 80020c4:	2101      	movs	r1, #1
 80020c6:	2011      	movs	r0, #17
 80020c8:	f000 f882 	bl	80021d0 <EPS_WRITE>
 80020cc:	4603      	mov	r3, r0
}
 80020ce:	4618      	mov	r0, r3
 80020d0:	bd80      	pop	{r7, pc}

080020d2 <disable_EPS_Batt_Heater_2>:

HAL_StatusTypeDef disable_EPS_Batt_Heater_2(){
 80020d2:	b580      	push	{r7, lr}
 80020d4:	af00      	add	r7, sp, #0
    return EPS_WRITE(17, 0); //turn command 17 to the OFF state
 80020d6:	2100      	movs	r1, #0
 80020d8:	2011      	movs	r0, #17
 80020da:	f000 f879 	bl	80021d0 <EPS_WRITE>
 80020de:	4603      	mov	r3, r0
}
 80020e0:	4618      	mov	r0, r3
 80020e2:	bd80      	pop	{r7, pc}

080020e4 <enable_EPS_Batt_Heater_3>:

HAL_StatusTypeDef enable_EPS_Batt_Heater_3(){
 80020e4:	b580      	push	{r7, lr}
 80020e6:	af00      	add	r7, sp, #0
    return EPS_WRITE(18, 1); //turn command 18 to the ON state
 80020e8:	2101      	movs	r1, #1
 80020ea:	2012      	movs	r0, #18
 80020ec:	f000 f870 	bl	80021d0 <EPS_WRITE>
 80020f0:	4603      	mov	r3, r0
}
 80020f2:	4618      	mov	r0, r3
 80020f4:	bd80      	pop	{r7, pc}

080020f6 <disable_EPS_Batt_Heater_3>:

HAL_StatusTypeDef disable_EPS_Batt_Heater_3(){
 80020f6:	b580      	push	{r7, lr}
 80020f8:	af00      	add	r7, sp, #0
    return EPS_WRITE(18, 0); //turn command 18 to the OFF state
 80020fa:	2100      	movs	r1, #0
 80020fc:	2012      	movs	r0, #18
 80020fe:	f000 f867 	bl	80021d0 <EPS_WRITE>
 8002102:	4603      	mov	r3, r0
}
 8002104:	4618      	mov	r0, r3
 8002106:	bd80      	pop	{r7, pc}

08002108 <EPS_READ>:
  * @brief Sends a write command to the EPS module over a given I2C instance and reads back a response
  * @param command : the command to be used on the transceiver
  * @param data_ptr : A pointer to allow information from the health check to be viewed.
  * @retval Returns if the hal function call succeeded, or if it failed
  */
HAL_StatusTypeDef EPS_READ(uint8_t command, uint8_t* data_ptr){
 8002108:	b580      	push	{r7, lr}
 800210a:	b086      	sub	sp, #24
 800210c:	af02      	add	r7, sp, #8
 800210e:	4603      	mov	r3, r0
 8002110:	6039      	str	r1, [r7, #0]
 8002112:	71fb      	strb	r3, [r7, #7]
    osMutexWait(EPS_I2C_Mutex, 2500);
 8002114:	4b2a      	ldr	r3, [pc, #168]	; (80021c0 <EPS_READ+0xb8>)
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	f640 11c4 	movw	r1, #2500	; 0x9c4
 800211c:	4618      	mov	r0, r3
 800211e:	f008 fce5 	bl	800aaec <osMutexWait>

    HAL_StatusTypeDef status = HAL_ERROR;
 8002122:	2301      	movs	r3, #1
 8002124:	73fb      	strb	r3, [r7, #15]
    status = HAL_I2C_Master_Transmit(&hi2c1, (uint16_t) (EPS_I2C_ADDRESS << 0x1), &command, 1, EPS_I2C_TIMEOUT);
 8002126:	1dfa      	adds	r2, r7, #7
 8002128:	2364      	movs	r3, #100	; 0x64
 800212a:	9300      	str	r3, [sp, #0]
 800212c:	2301      	movs	r3, #1
 800212e:	2130      	movs	r1, #48	; 0x30
 8002130:	4824      	ldr	r0, [pc, #144]	; (80021c4 <EPS_READ+0xbc>)
 8002132:	f002 fd1d 	bl	8004b70 <HAL_I2C_Master_Transmit>
 8002136:	4603      	mov	r3, r0
 8002138:	73fb      	strb	r3, [r7, #15]
    if(status != HAL_OK){
 800213a:	7bfb      	ldrb	r3, [r7, #15]
 800213c:	2b00      	cmp	r3, #0
 800213e:	d017      	beq.n	8002170 <EPS_READ+0x68>
        osMutexWait(Num_I2C_Errors_Mutex, 500);
 8002140:	4b21      	ldr	r3, [pc, #132]	; (80021c8 <EPS_READ+0xc0>)
 8002142:	681b      	ldr	r3, [r3, #0]
 8002144:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8002148:	4618      	mov	r0, r3
 800214a:	f008 fccf 	bl	800aaec <osMutexWait>
        NUM_I2C_ERRORS++;
 800214e:	4b1f      	ldr	r3, [pc, #124]	; (80021cc <EPS_READ+0xc4>)
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	3301      	adds	r3, #1
 8002154:	4a1d      	ldr	r2, [pc, #116]	; (80021cc <EPS_READ+0xc4>)
 8002156:	6013      	str	r3, [r2, #0]
        osMutexRelease(Num_I2C_Errors_Mutex);
 8002158:	4b1b      	ldr	r3, [pc, #108]	; (80021c8 <EPS_READ+0xc0>)
 800215a:	681b      	ldr	r3, [r3, #0]
 800215c:	4618      	mov	r0, r3
 800215e:	f008 fd15 	bl	800ab8c <osMutexRelease>
        osMutexRelease(EPS_I2C_Mutex);
 8002162:	4b17      	ldr	r3, [pc, #92]	; (80021c0 <EPS_READ+0xb8>)
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	4618      	mov	r0, r3
 8002168:	f008 fd10 	bl	800ab8c <osMutexRelease>
        return status;
 800216c:	7bfb      	ldrb	r3, [r7, #15]
 800216e:	e023      	b.n	80021b8 <EPS_READ+0xb0>
    }
    status = HAL_I2C_Master_Receive(&hi2c1, (uint16_t) (EPS_I2C_ADDRESS << 0x1), data_ptr, 2, EPS_I2C_TIMEOUT);
 8002170:	2364      	movs	r3, #100	; 0x64
 8002172:	9300      	str	r3, [sp, #0]
 8002174:	2302      	movs	r3, #2
 8002176:	683a      	ldr	r2, [r7, #0]
 8002178:	2130      	movs	r1, #48	; 0x30
 800217a:	4812      	ldr	r0, [pc, #72]	; (80021c4 <EPS_READ+0xbc>)
 800217c:	f002 fe06 	bl	8004d8c <HAL_I2C_Master_Receive>
 8002180:	4603      	mov	r3, r0
 8002182:	73fb      	strb	r3, [r7, #15]

    if(status != HAL_OK){
 8002184:	7bfb      	ldrb	r3, [r7, #15]
 8002186:	2b00      	cmp	r3, #0
 8002188:	d010      	beq.n	80021ac <EPS_READ+0xa4>
        osMutexWait(Num_I2C_Errors_Mutex, 500);
 800218a:	4b0f      	ldr	r3, [pc, #60]	; (80021c8 <EPS_READ+0xc0>)
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 8002192:	4618      	mov	r0, r3
 8002194:	f008 fcaa 	bl	800aaec <osMutexWait>
        NUM_I2C_ERRORS++;
 8002198:	4b0c      	ldr	r3, [pc, #48]	; (80021cc <EPS_READ+0xc4>)
 800219a:	681b      	ldr	r3, [r3, #0]
 800219c:	3301      	adds	r3, #1
 800219e:	4a0b      	ldr	r2, [pc, #44]	; (80021cc <EPS_READ+0xc4>)
 80021a0:	6013      	str	r3, [r2, #0]
        osMutexRelease(Num_I2C_Errors_Mutex);
 80021a2:	4b09      	ldr	r3, [pc, #36]	; (80021c8 <EPS_READ+0xc0>)
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	4618      	mov	r0, r3
 80021a8:	f008 fcf0 	bl	800ab8c <osMutexRelease>
    }

    osMutexRelease(EPS_I2C_Mutex);
 80021ac:	4b04      	ldr	r3, [pc, #16]	; (80021c0 <EPS_READ+0xb8>)
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	4618      	mov	r0, r3
 80021b2:	f008 fceb 	bl	800ab8c <osMutexRelease>
    return status;
 80021b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80021b8:	4618      	mov	r0, r3
 80021ba:	3710      	adds	r7, #16
 80021bc:	46bd      	mov	sp, r7
 80021be:	bd80      	pop	{r7, pc}
 80021c0:	20000228 	.word	0x20000228
 80021c4:	200002a0 	.word	0x200002a0
 80021c8:	20000230 	.word	0x20000230
 80021cc:	20000208 	.word	0x20000208

080021d0 <EPS_WRITE>:
/**
  * @brief Sends a write command to the EPS module over a given I2C instance
  * @param state: the state to set the output specified by the command to (0 or 1)
  * @retval Returns if the hal function call succeeded, or if it failed
  */
HAL_StatusTypeDef EPS_WRITE(uint8_t command, uint8_t state){
 80021d0:	b580      	push	{r7, lr}
 80021d2:	b086      	sub	sp, #24
 80021d4:	af02      	add	r7, sp, #8
 80021d6:	4603      	mov	r3, r0
 80021d8:	460a      	mov	r2, r1
 80021da:	71fb      	strb	r3, [r7, #7]
 80021dc:	4613      	mov	r3, r2
 80021de:	71bb      	strb	r3, [r7, #6]
    osMutexWait(EPS_I2C_Mutex, 1500);
 80021e0:	4b1a      	ldr	r3, [pc, #104]	; (800224c <EPS_WRITE+0x7c>)
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	f240 51dc 	movw	r1, #1500	; 0x5dc
 80021e8:	4618      	mov	r0, r3
 80021ea:	f008 fc7f 	bl	800aaec <osMutexWait>

    HAL_StatusTypeDef status = HAL_OK;
 80021ee:	2300      	movs	r3, #0
 80021f0:	73fb      	strb	r3, [r7, #15]
    uint8_t data[2];
    data[0] = command;
 80021f2:	79fb      	ldrb	r3, [r7, #7]
 80021f4:	733b      	strb	r3, [r7, #12]
    data[1] = state;
 80021f6:	79bb      	ldrb	r3, [r7, #6]
 80021f8:	737b      	strb	r3, [r7, #13]
    status = HAL_I2C_Master_Transmit(&hi2c1, (EPS_I2C_ADDRESS << 0x1), data, 2, EPS_I2C_TIMEOUT); //Possibly size needs to be 3, and data should maybe be replaced with data buffer
 80021fa:	f107 020c 	add.w	r2, r7, #12
 80021fe:	2364      	movs	r3, #100	; 0x64
 8002200:	9300      	str	r3, [sp, #0]
 8002202:	2302      	movs	r3, #2
 8002204:	2130      	movs	r1, #48	; 0x30
 8002206:	4812      	ldr	r0, [pc, #72]	; (8002250 <EPS_WRITE+0x80>)
 8002208:	f002 fcb2 	bl	8004b70 <HAL_I2C_Master_Transmit>
 800220c:	4603      	mov	r3, r0
 800220e:	73fb      	strb	r3, [r7, #15]

    if(status != HAL_OK){
 8002210:	7bfb      	ldrb	r3, [r7, #15]
 8002212:	2b00      	cmp	r3, #0
 8002214:	d010      	beq.n	8002238 <EPS_WRITE+0x68>
        osMutexWait(Num_I2C_Errors_Mutex, 500);
 8002216:	4b0f      	ldr	r3, [pc, #60]	; (8002254 <EPS_WRITE+0x84>)
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800221e:	4618      	mov	r0, r3
 8002220:	f008 fc64 	bl	800aaec <osMutexWait>
        NUM_I2C_ERRORS++;
 8002224:	4b0c      	ldr	r3, [pc, #48]	; (8002258 <EPS_WRITE+0x88>)
 8002226:	681b      	ldr	r3, [r3, #0]
 8002228:	3301      	adds	r3, #1
 800222a:	4a0b      	ldr	r2, [pc, #44]	; (8002258 <EPS_WRITE+0x88>)
 800222c:	6013      	str	r3, [r2, #0]
        osMutexRelease(Num_I2C_Errors_Mutex);
 800222e:	4b09      	ldr	r3, [pc, #36]	; (8002254 <EPS_WRITE+0x84>)
 8002230:	681b      	ldr	r3, [r3, #0]
 8002232:	4618      	mov	r0, r3
 8002234:	f008 fcaa 	bl	800ab8c <osMutexRelease>
        }


    }

    osMutexRelease(EPS_I2C_Mutex);
 8002238:	4b04      	ldr	r3, [pc, #16]	; (800224c <EPS_WRITE+0x7c>)
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	4618      	mov	r0, r3
 800223e:	f008 fca5 	bl	800ab8c <osMutexRelease>
    return status;
 8002242:	7bfb      	ldrb	r3, [r7, #15]
}
 8002244:	4618      	mov	r0, r3
 8002246:	3710      	adds	r7, #16
 8002248:	46bd      	mov	sp, r7
 800224a:	bd80      	pop	{r7, pc}
 800224c:	20000228 	.word	0x20000228
 8002250:	200002a0 	.word	0x200002a0
 8002254:	20000230 	.word	0x20000230
 8002258:	20000208 	.word	0x20000208

0800225c <sendErrorPacket>:
 800225c:	b580      	push	{r7, lr}
 800225e:	b084      	sub	sp, #16
 8002260:	af00      	add	r7, sp, #0
 8002262:	230a      	movs	r3, #10
 8002264:	713b      	strb	r3, [r7, #4]
 8002266:	23ff      	movs	r3, #255	; 0xff
 8002268:	717b      	strb	r3, [r7, #5]
 800226a:	2302      	movs	r3, #2
 800226c:	71bb      	strb	r3, [r7, #6]
 800226e:	2002      	movs	r0, #2
 8002270:	f00b fa10 	bl	800d694 <malloc>
 8002274:	4603      	mov	r3, r0
 8002276:	60bb      	str	r3, [r7, #8]
 8002278:	68bb      	ldr	r3, [r7, #8]
 800227a:	22ff      	movs	r2, #255	; 0xff
 800227c:	701a      	strb	r2, [r3, #0]
 800227e:	68bb      	ldr	r3, [r7, #8]
 8002280:	3301      	adds	r3, #1
 8002282:	22ff      	movs	r2, #255	; 0xff
 8002284:	701a      	strb	r2, [r3, #0]
 8002286:	1d3b      	adds	r3, r7, #4
 8002288:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800228c:	f7ff f8de 	bl	800144c <generateCySatChecksum>
 8002290:	4603      	mov	r3, r0
 8002292:	733b      	strb	r3, [r7, #12]
 8002294:	1d3b      	adds	r3, r7, #4
 8002296:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800229a:	f7ff f857 	bl	800134c <sendCySatPacket>
 800229e:	4603      	mov	r3, r0
 80022a0:	4618      	mov	r0, r3
 80022a2:	3710      	adds	r7, #16
 80022a4:	46bd      	mov	sp, r7
 80022a6:	bd80      	pop	{r7, pc}

080022a8 <handleCySatPacket>:
 80022a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80022aa:	b0b9      	sub	sp, #228	; 0xe4
 80022ac:	af00      	add	r7, sp, #0
 80022ae:	1d3b      	adds	r3, r7, #4
 80022b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80022b4:	793b      	ldrb	r3, [r7, #4]
 80022b6:	2b28      	cmp	r3, #40	; 0x28
 80022b8:	dc48      	bgt.n	800234c <handleCySatPacket+0xa4>
 80022ba:	2b0a      	cmp	r3, #10
 80022bc:	f2c1 805c 	blt.w	8003378 <handleCySatPacket+0x10d0>
 80022c0:	3b0a      	subs	r3, #10
 80022c2:	2b1e      	cmp	r3, #30
 80022c4:	f201 8058 	bhi.w	8003378 <handleCySatPacket+0x10d0>
 80022c8:	a201      	add	r2, pc, #4	; (adr r2, 80022d0 <handleCySatPacket+0x28>)
 80022ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022ce:	bf00      	nop
 80022d0:	08002357 	.word	0x08002357
 80022d4:	08003379 	.word	0x08003379
 80022d8:	08003379 	.word	0x08003379
 80022dc:	08003379 	.word	0x08003379
 80022e0:	08003379 	.word	0x08003379
 80022e4:	08003379 	.word	0x08003379
 80022e8:	08003379 	.word	0x08003379
 80022ec:	08003379 	.word	0x08003379
 80022f0:	08003379 	.word	0x08003379
 80022f4:	08003379 	.word	0x08003379
 80022f8:	0800337f 	.word	0x0800337f
 80022fc:	08003379 	.word	0x08003379
 8002300:	08003379 	.word	0x08003379
 8002304:	08003379 	.word	0x08003379
 8002308:	08003379 	.word	0x08003379
 800230c:	08003379 	.word	0x08003379
 8002310:	08003379 	.word	0x08003379
 8002314:	08003379 	.word	0x08003379
 8002318:	08003379 	.word	0x08003379
 800231c:	08003379 	.word	0x08003379
 8002320:	08002553 	.word	0x08002553
 8002324:	08003379 	.word	0x08003379
 8002328:	08003379 	.word	0x08003379
 800232c:	08003379 	.word	0x08003379
 8002330:	08003379 	.word	0x08003379
 8002334:	08003379 	.word	0x08003379
 8002338:	08003379 	.word	0x08003379
 800233c:	08003379 	.word	0x08003379
 8002340:	08003379 	.word	0x08003379
 8002344:	08003379 	.word	0x08003379
 8002348:	0800337f 	.word	0x0800337f
 800234c:	2b5a      	cmp	r3, #90	; 0x5a
 800234e:	f001 8018 	beq.w	8003382 <handleCySatPacket+0x10da>
 8002352:	f001 b811 	b.w	8003378 <handleCySatPacket+0x10d0>
 8002356:	797b      	ldrb	r3, [r7, #5]
 8002358:	3b01      	subs	r3, #1
 800235a:	2b0b      	cmp	r3, #11
 800235c:	f201 8013 	bhi.w	8003386 <handleCySatPacket+0x10de>
 8002360:	a201      	add	r2, pc, #4	; (adr r2, 8002368 <handleCySatPacket+0xc0>)
 8002362:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002366:	bf00      	nop
 8002368:	08002399 	.word	0x08002399
 800236c:	08003387 	.word	0x08003387
 8002370:	0800242b 	.word	0x0800242b
 8002374:	08003387 	.word	0x08003387
 8002378:	080024bf 	.word	0x080024bf
 800237c:	08003387 	.word	0x08003387
 8002380:	080024bf 	.word	0x080024bf
 8002384:	08003387 	.word	0x08003387
 8002388:	080024bf 	.word	0x080024bf
 800238c:	080024bf 	.word	0x080024bf
 8002390:	08003387 	.word	0x08003387
 8002394:	080024bf 	.word	0x080024bf
 8002398:	4bd4      	ldr	r3, [pc, #848]	; (80026ec <handleCySatPacket+0x444>)
 800239a:	f107 0410 	add.w	r4, r7, #16
 800239e:	461d      	mov	r5, r3
 80023a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80023a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80023a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80023a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80023a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80023aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80023ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80023b0:	c403      	stmia	r4!, {r0, r1}
 80023b2:	8022      	strh	r2, [r4, #0]
 80023b4:	230a      	movs	r3, #10
 80023b6:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 80023ba:	2300      	movs	r3, #0
 80023bc:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 80023c0:	233a      	movs	r3, #58	; 0x3a
 80023c2:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 80023c6:	203a      	movs	r0, #58	; 0x3a
 80023c8:	f00b f964 	bl	800d694 <malloc>
 80023cc:	4603      	mov	r3, r0
 80023ce:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80023d2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80023d6:	f107 0410 	add.w	r4, r7, #16
 80023da:	469c      	mov	ip, r3
 80023dc:	f104 0e30 	add.w	lr, r4, #48	; 0x30
 80023e0:	4665      	mov	r5, ip
 80023e2:	4626      	mov	r6, r4
 80023e4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80023e6:	6028      	str	r0, [r5, #0]
 80023e8:	6069      	str	r1, [r5, #4]
 80023ea:	60aa      	str	r2, [r5, #8]
 80023ec:	60eb      	str	r3, [r5, #12]
 80023ee:	3410      	adds	r4, #16
 80023f0:	f10c 0c10 	add.w	ip, ip, #16
 80023f4:	4574      	cmp	r4, lr
 80023f6:	d1f3      	bne.n	80023e0 <handleCySatPacket+0x138>
 80023f8:	4662      	mov	r2, ip
 80023fa:	4623      	mov	r3, r4
 80023fc:	cb03      	ldmia	r3!, {r0, r1}
 80023fe:	6010      	str	r0, [r2, #0]
 8002400:	6051      	str	r1, [r2, #4]
 8002402:	881b      	ldrh	r3, [r3, #0]
 8002404:	8113      	strh	r3, [r2, #8]
 8002406:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800240a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800240e:	f7ff f81d 	bl	800144c <generateCySatChecksum>
 8002412:	4603      	mov	r3, r0
 8002414:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002418:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800241c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002420:	f7fe ff94 	bl	800134c <sendCySatPacket>
 8002424:	4603      	mov	r3, r0
 8002426:	f000 bfb2 	b.w	800338e <handleCySatPacket+0x10e6>
 800242a:	f001 f80f 	bl	800344c <END_BEACON>
 800242e:	4603      	mov	r3, r0
 8002430:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002434:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002438:	2b00      	cmp	r3, #0
 800243a:	d003      	beq.n	8002444 <handleCySatPacket+0x19c>
 800243c:	f04f 33ff 	mov.w	r3, #4294967295
 8002440:	f000 bfa5 	b.w	800338e <handleCySatPacket+0x10e6>
 8002444:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002448:	ee07 3a90 	vmov	s15, r3
 800244c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002450:	eeb0 0a67 	vmov.f32	s0, s15
 8002454:	f001 fc5e 	bl	8003d14 <FloatToUnsigned16bits>
 8002458:	4603      	mov	r3, r0
 800245a:	f8a7 30b6 	strh.w	r3, [r7, #182]	; 0xb6
 800245e:	230a      	movs	r3, #10
 8002460:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002464:	2302      	movs	r3, #2
 8002466:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 800246a:	2302      	movs	r3, #2
 800246c:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002470:	2002      	movs	r0, #2
 8002472:	f00b f90f 	bl	800d694 <malloc>
 8002476:	4603      	mov	r3, r0
 8002478:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800247c:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	; 0xb6
 8002480:	0a1b      	lsrs	r3, r3, #8
 8002482:	b29a      	uxth	r2, r3
 8002484:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002488:	b2d2      	uxtb	r2, r2
 800248a:	701a      	strb	r2, [r3, #0]
 800248c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002490:	3301      	adds	r3, #1
 8002492:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	; 0xb6
 8002496:	b2d2      	uxtb	r2, r2
 8002498:	701a      	strb	r2, [r3, #0]
 800249a:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800249e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80024a2:	f7fe ffd3 	bl	800144c <generateCySatChecksum>
 80024a6:	4603      	mov	r3, r0
 80024a8:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 80024ac:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 80024b0:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80024b4:	f7fe ff4a 	bl	800134c <sendCySatPacket>
 80024b8:	4603      	mov	r3, r0
 80024ba:	f000 bf68 	b.w	800338e <handleCySatPacket+0x10e6>
 80024be:	f000 ff6b 	bl	8003398 <START_BEACON>
 80024c2:	4603      	mov	r3, r0
 80024c4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80024c8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d003      	beq.n	80024d8 <handleCySatPacket+0x230>
 80024d0:	f04f 33ff 	mov.w	r3, #4294967295
 80024d4:	f000 bf5b 	b.w	800338e <handleCySatPacket+0x10e6>
 80024d8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80024dc:	ee07 3a90 	vmov	s15, r3
 80024e0:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80024e4:	eeb0 0a67 	vmov.f32	s0, s15
 80024e8:	f001 fc14 	bl	8003d14 <FloatToUnsigned16bits>
 80024ec:	4603      	mov	r3, r0
 80024ee:	f8a7 30b8 	strh.w	r3, [r7, #184]	; 0xb8
 80024f2:	230a      	movs	r3, #10
 80024f4:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 80024f8:	230b      	movs	r3, #11
 80024fa:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 80024fe:	2302      	movs	r3, #2
 8002500:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002504:	2002      	movs	r0, #2
 8002506:	f00b f8c5 	bl	800d694 <malloc>
 800250a:	4603      	mov	r3, r0
 800250c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002510:	f8b7 30b8 	ldrh.w	r3, [r7, #184]	; 0xb8
 8002514:	0a1b      	lsrs	r3, r3, #8
 8002516:	b29a      	uxth	r2, r3
 8002518:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800251c:	b2d2      	uxtb	r2, r2
 800251e:	701a      	strb	r2, [r3, #0]
 8002520:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002524:	3301      	adds	r3, #1
 8002526:	f8b7 20b8 	ldrh.w	r2, [r7, #184]	; 0xb8
 800252a:	b2d2      	uxtb	r2, r2
 800252c:	701a      	strb	r2, [r3, #0]
 800252e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002532:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002536:	f7fe ff89 	bl	800144c <generateCySatChecksum>
 800253a:	4603      	mov	r3, r0
 800253c:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002540:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002544:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002548:	f7fe ff00 	bl	800134c <sendCySatPacket>
 800254c:	4603      	mov	r3, r0
 800254e:	f000 bf1e 	b.w	800338e <handleCySatPacket+0x10e6>
 8002552:	797b      	ldrb	r3, [r7, #5]
 8002554:	3b01      	subs	r3, #1
 8002556:	2b10      	cmp	r3, #16
 8002558:	f200 8717 	bhi.w	800338a <handleCySatPacket+0x10e2>
 800255c:	a201      	add	r2, pc, #4	; (adr r2, 8002564 <handleCySatPacket+0x2bc>)
 800255e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002562:	bf00      	nop
 8002564:	080025a9 	.word	0x080025a9
 8002568:	0800338b 	.word	0x0800338b
 800256c:	0800268d 	.word	0x0800268d
 8002570:	0800338b 	.word	0x0800338b
 8002574:	080027d9 	.word	0x080027d9
 8002578:	0800338b 	.word	0x0800338b
 800257c:	08002921 	.word	0x08002921
 8002580:	0800338b 	.word	0x0800338b
 8002584:	08002a69 	.word	0x08002a69
 8002588:	0800338b 	.word	0x0800338b
 800258c:	08002b5f 	.word	0x08002b5f
 8002590:	0800338b 	.word	0x0800338b
 8002594:	08002d41 	.word	0x08002d41
 8002598:	0800338b 	.word	0x0800338b
 800259c:	08002e7f 	.word	0x08002e7f
 80025a0:	0800338b 	.word	0x0800338b
 80025a4:	08003005 	.word	0x08003005
 80025a8:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80025ac:	4618      	mov	r0, r3
 80025ae:	f7fe ffbf 	bl	8001530 <READ_EPS_BATTERY_VOLTAGE>
 80025b2:	4603      	mov	r3, r0
 80025b4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80025b8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d003      	beq.n	80025c8 <handleCySatPacket+0x320>
 80025c0:	f04f 33ff 	mov.w	r3, #4294967295
 80025c4:	f000 bee3 	b.w	800338e <handleCySatPacket+0x10e6>
 80025c8:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 80025cc:	4618      	mov	r0, r3
 80025ce:	f7fe ffe1 	bl	8001594 <READ_EPS_BATTERY_CURRENT>
 80025d2:	4603      	mov	r3, r0
 80025d4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80025d8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d003      	beq.n	80025e8 <handleCySatPacket+0x340>
 80025e0:	f04f 33ff 	mov.w	r3, #4294967295
 80025e4:	f000 bed3 	b.w	800338e <handleCySatPacket+0x10e6>
 80025e8:	edd7 7a29 	vldr	s15, [r7, #164]	; 0xa4
 80025ec:	eeb0 0a67 	vmov.f32	s0, s15
 80025f0:	f001 fb90 	bl	8003d14 <FloatToUnsigned16bits>
 80025f4:	4603      	mov	r3, r0
 80025f6:	f8a7 30bc 	strh.w	r3, [r7, #188]	; 0xbc
 80025fa:	edd7 7a28 	vldr	s15, [r7, #160]	; 0xa0
 80025fe:	eeb0 0a67 	vmov.f32	s0, s15
 8002602:	f001 fb87 	bl	8003d14 <FloatToUnsigned16bits>
 8002606:	4603      	mov	r3, r0
 8002608:	f8a7 30ba 	strh.w	r3, [r7, #186]	; 0xba
 800260c:	231e      	movs	r3, #30
 800260e:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002612:	2300      	movs	r3, #0
 8002614:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002618:	2304      	movs	r3, #4
 800261a:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 800261e:	2004      	movs	r0, #4
 8002620:	f00b f838 	bl	800d694 <malloc>
 8002624:	4603      	mov	r3, r0
 8002626:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800262a:	f8b7 30bc 	ldrh.w	r3, [r7, #188]	; 0xbc
 800262e:	0a1b      	lsrs	r3, r3, #8
 8002630:	b29a      	uxth	r2, r3
 8002632:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002636:	b2d2      	uxtb	r2, r2
 8002638:	701a      	strb	r2, [r3, #0]
 800263a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800263e:	3301      	adds	r3, #1
 8002640:	f8b7 20bc 	ldrh.w	r2, [r7, #188]	; 0xbc
 8002644:	b2d2      	uxtb	r2, r2
 8002646:	701a      	strb	r2, [r3, #0]
 8002648:	f8b7 30ba 	ldrh.w	r3, [r7, #186]	; 0xba
 800264c:	0a1b      	lsrs	r3, r3, #8
 800264e:	b29a      	uxth	r2, r3
 8002650:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002654:	3302      	adds	r3, #2
 8002656:	b2d2      	uxtb	r2, r2
 8002658:	701a      	strb	r2, [r3, #0]
 800265a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800265e:	3303      	adds	r3, #3
 8002660:	f8b7 20ba 	ldrh.w	r2, [r7, #186]	; 0xba
 8002664:	b2d2      	uxtb	r2, r2
 8002666:	701a      	strb	r2, [r3, #0]
 8002668:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800266c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002670:	f7fe feec 	bl	800144c <generateCySatChecksum>
 8002674:	4603      	mov	r3, r0
 8002676:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 800267a:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800267e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002682:	f7fe fe63 	bl	800134c <sendCySatPacket>
 8002686:	4603      	mov	r3, r0
 8002688:	f000 be81 	b.w	800338e <handleCySatPacket+0x10e6>
 800268c:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8002690:	4618      	mov	r0, r3
 8002692:	f7fe ffb1 	bl	80015f8 <READ_EPS_SOLAR_X_VOLTAGE>
 8002696:	4603      	mov	r3, r0
 8002698:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800269c:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	d003      	beq.n	80026ac <handleCySatPacket+0x404>
 80026a4:	f04f 33ff 	mov.w	r3, #4294967295
 80026a8:	f000 be71 	b.w	800338e <handleCySatPacket+0x10e6>
 80026ac:	f107 0398 	add.w	r3, r7, #152	; 0x98
 80026b0:	4618      	mov	r0, r3
 80026b2:	f7fe ffd3 	bl	800165c <READ_EPS_SOLAR_X_NEG_CURRENT>
 80026b6:	4603      	mov	r3, r0
 80026b8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80026bc:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d003      	beq.n	80026cc <handleCySatPacket+0x424>
 80026c4:	f04f 33ff 	mov.w	r3, #4294967295
 80026c8:	f000 be61 	b.w	800338e <handleCySatPacket+0x10e6>
 80026cc:	f107 0394 	add.w	r3, r7, #148	; 0x94
 80026d0:	4618      	mov	r0, r3
 80026d2:	f7fe fff5 	bl	80016c0 <READ_EPS_SOLAR_X_POS_CURRENT>
 80026d6:	4603      	mov	r3, r0
 80026d8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80026dc:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80026e0:	2b00      	cmp	r3, #0
 80026e2:	d005      	beq.n	80026f0 <handleCySatPacket+0x448>
 80026e4:	f04f 33ff 	mov.w	r3, #4294967295
 80026e8:	f000 be51 	b.w	800338e <handleCySatPacket+0x10e6>
 80026ec:	080109e4 	.word	0x080109e4
 80026f0:	edd7 7a27 	vldr	s15, [r7, #156]	; 0x9c
 80026f4:	eeb0 0a67 	vmov.f32	s0, s15
 80026f8:	f001 fb0c 	bl	8003d14 <FloatToUnsigned16bits>
 80026fc:	4603      	mov	r3, r0
 80026fe:	f8a7 30c2 	strh.w	r3, [r7, #194]	; 0xc2
 8002702:	edd7 7a26 	vldr	s15, [r7, #152]	; 0x98
 8002706:	eeb0 0a67 	vmov.f32	s0, s15
 800270a:	f001 fb03 	bl	8003d14 <FloatToUnsigned16bits>
 800270e:	4603      	mov	r3, r0
 8002710:	f8a7 30c0 	strh.w	r3, [r7, #192]	; 0xc0
 8002714:	edd7 7a25 	vldr	s15, [r7, #148]	; 0x94
 8002718:	eeb0 0a67 	vmov.f32	s0, s15
 800271c:	f001 fafa 	bl	8003d14 <FloatToUnsigned16bits>
 8002720:	4603      	mov	r3, r0
 8002722:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8002726:	231e      	movs	r3, #30
 8002728:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 800272c:	2302      	movs	r3, #2
 800272e:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002732:	2306      	movs	r3, #6
 8002734:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002738:	2006      	movs	r0, #6
 800273a:	f00a ffab 	bl	800d694 <malloc>
 800273e:	4603      	mov	r3, r0
 8002740:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002744:	f8b7 30c2 	ldrh.w	r3, [r7, #194]	; 0xc2
 8002748:	0a1b      	lsrs	r3, r3, #8
 800274a:	b29a      	uxth	r2, r3
 800274c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002750:	b2d2      	uxtb	r2, r2
 8002752:	701a      	strb	r2, [r3, #0]
 8002754:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002758:	3301      	adds	r3, #1
 800275a:	f8b7 20c2 	ldrh.w	r2, [r7, #194]	; 0xc2
 800275e:	b2d2      	uxtb	r2, r2
 8002760:	701a      	strb	r2, [r3, #0]
 8002762:	f8b7 30c0 	ldrh.w	r3, [r7, #192]	; 0xc0
 8002766:	0a1b      	lsrs	r3, r3, #8
 8002768:	b29a      	uxth	r2, r3
 800276a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800276e:	3302      	adds	r3, #2
 8002770:	b2d2      	uxtb	r2, r2
 8002772:	701a      	strb	r2, [r3, #0]
 8002774:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002778:	3303      	adds	r3, #3
 800277a:	f8b7 20c0 	ldrh.w	r2, [r7, #192]	; 0xc0
 800277e:	b2d2      	uxtb	r2, r2
 8002780:	701a      	strb	r2, [r3, #0]
 8002782:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8002786:	0a1b      	lsrs	r3, r3, #8
 8002788:	b29a      	uxth	r2, r3
 800278a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800278e:	3304      	adds	r3, #4
 8002790:	b2d2      	uxtb	r2, r2
 8002792:	701a      	strb	r2, [r3, #0]
 8002794:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002798:	3305      	adds	r3, #5
 800279a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800279e:	b2d2      	uxtb	r2, r2
 80027a0:	701a      	strb	r2, [r3, #0]
 80027a2:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 80027a6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80027aa:	f7fe fe4f 	bl	800144c <generateCySatChecksum>
 80027ae:	4603      	mov	r3, r0
 80027b0:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 80027b4:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 80027b8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80027bc:	f7fe fdc6 	bl	800134c <sendCySatPacket>
 80027c0:	4603      	mov	r3, r0
 80027c2:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80027c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80027ca:	4618      	mov	r0, r3
 80027cc:	f00a ff6a 	bl	800d6a4 <free>
 80027d0:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80027d4:	f000 bddb 	b.w	800338e <handleCySatPacket+0x10e6>
 80027d8:	f107 0390 	add.w	r3, r7, #144	; 0x90
 80027dc:	4618      	mov	r0, r3
 80027de:	f7fe ffa1 	bl	8001724 <READ_EPS_SOLAR_Y_VOLTAGE>
 80027e2:	4603      	mov	r3, r0
 80027e4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 80027e8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 80027ec:	2b00      	cmp	r3, #0
 80027ee:	d003      	beq.n	80027f8 <handleCySatPacket+0x550>
 80027f0:	f04f 33ff 	mov.w	r3, #4294967295
 80027f4:	f000 bdcb 	b.w	800338e <handleCySatPacket+0x10e6>
 80027f8:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 80027fc:	4618      	mov	r0, r3
 80027fe:	f7fe ffc3 	bl	8001788 <READ_EPS_SOLAR_Y_NEG_CURRENT>
 8002802:	4603      	mov	r3, r0
 8002804:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002808:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800280c:	2b00      	cmp	r3, #0
 800280e:	d003      	beq.n	8002818 <handleCySatPacket+0x570>
 8002810:	f04f 33ff 	mov.w	r3, #4294967295
 8002814:	f000 bdbb 	b.w	800338e <handleCySatPacket+0x10e6>
 8002818:	f107 0388 	add.w	r3, r7, #136	; 0x88
 800281c:	4618      	mov	r0, r3
 800281e:	f7fe ffe5 	bl	80017ec <READ_EPS_SOLAR_Y_POS_CURRENT>
 8002822:	4603      	mov	r3, r0
 8002824:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002828:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800282c:	2b00      	cmp	r3, #0
 800282e:	d003      	beq.n	8002838 <handleCySatPacket+0x590>
 8002830:	f04f 33ff 	mov.w	r3, #4294967295
 8002834:	f000 bdab 	b.w	800338e <handleCySatPacket+0x10e6>
 8002838:	edd7 7a24 	vldr	s15, [r7, #144]	; 0x90
 800283c:	eeb0 0a67 	vmov.f32	s0, s15
 8002840:	f001 fa68 	bl	8003d14 <FloatToUnsigned16bits>
 8002844:	4603      	mov	r3, r0
 8002846:	f8a7 30c8 	strh.w	r3, [r7, #200]	; 0xc8
 800284a:	edd7 7a23 	vldr	s15, [r7, #140]	; 0x8c
 800284e:	eeb0 0a67 	vmov.f32	s0, s15
 8002852:	f001 fa5f 	bl	8003d14 <FloatToUnsigned16bits>
 8002856:	4603      	mov	r3, r0
 8002858:	f8a7 30c6 	strh.w	r3, [r7, #198]	; 0xc6
 800285c:	edd7 7a22 	vldr	s15, [r7, #136]	; 0x88
 8002860:	eeb0 0a67 	vmov.f32	s0, s15
 8002864:	f001 fa56 	bl	8003d14 <FloatToUnsigned16bits>
 8002868:	4603      	mov	r3, r0
 800286a:	f8a7 30c4 	strh.w	r3, [r7, #196]	; 0xc4
 800286e:	231e      	movs	r3, #30
 8002870:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002874:	2304      	movs	r3, #4
 8002876:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 800287a:	2306      	movs	r3, #6
 800287c:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002880:	2006      	movs	r0, #6
 8002882:	f00a ff07 	bl	800d694 <malloc>
 8002886:	4603      	mov	r3, r0
 8002888:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800288c:	f8b7 30c8 	ldrh.w	r3, [r7, #200]	; 0xc8
 8002890:	0a1b      	lsrs	r3, r3, #8
 8002892:	b29a      	uxth	r2, r3
 8002894:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002898:	b2d2      	uxtb	r2, r2
 800289a:	701a      	strb	r2, [r3, #0]
 800289c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80028a0:	3301      	adds	r3, #1
 80028a2:	f8b7 20c8 	ldrh.w	r2, [r7, #200]	; 0xc8
 80028a6:	b2d2      	uxtb	r2, r2
 80028a8:	701a      	strb	r2, [r3, #0]
 80028aa:	f8b7 30c6 	ldrh.w	r3, [r7, #198]	; 0xc6
 80028ae:	0a1b      	lsrs	r3, r3, #8
 80028b0:	b29a      	uxth	r2, r3
 80028b2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80028b6:	3302      	adds	r3, #2
 80028b8:	b2d2      	uxtb	r2, r2
 80028ba:	701a      	strb	r2, [r3, #0]
 80028bc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80028c0:	3303      	adds	r3, #3
 80028c2:	f8b7 20c6 	ldrh.w	r2, [r7, #198]	; 0xc6
 80028c6:	b2d2      	uxtb	r2, r2
 80028c8:	701a      	strb	r2, [r3, #0]
 80028ca:	f8b7 30c4 	ldrh.w	r3, [r7, #196]	; 0xc4
 80028ce:	0a1b      	lsrs	r3, r3, #8
 80028d0:	b29a      	uxth	r2, r3
 80028d2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80028d6:	3304      	adds	r3, #4
 80028d8:	b2d2      	uxtb	r2, r2
 80028da:	701a      	strb	r2, [r3, #0]
 80028dc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80028e0:	3305      	adds	r3, #5
 80028e2:	f8b7 20c4 	ldrh.w	r2, [r7, #196]	; 0xc4
 80028e6:	b2d2      	uxtb	r2, r2
 80028e8:	701a      	strb	r2, [r3, #0]
 80028ea:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 80028ee:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80028f2:	f7fe fdab 	bl	800144c <generateCySatChecksum>
 80028f6:	4603      	mov	r3, r0
 80028f8:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 80028fc:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002900:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002904:	f7fe fd22 	bl	800134c <sendCySatPacket>
 8002908:	4603      	mov	r3, r0
 800290a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 800290e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002912:	4618      	mov	r0, r3
 8002914:	f00a fec6 	bl	800d6a4 <free>
 8002918:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 800291c:	f000 bd37 	b.w	800338e <handleCySatPacket+0x10e6>
 8002920:	f107 0384 	add.w	r3, r7, #132	; 0x84
 8002924:	4618      	mov	r0, r3
 8002926:	f7fe ff93 	bl	8001850 <READ_EPS_SOLAR_Z_VOLTAGE>
 800292a:	4603      	mov	r3, r0
 800292c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002930:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002934:	2b00      	cmp	r3, #0
 8002936:	d003      	beq.n	8002940 <handleCySatPacket+0x698>
 8002938:	f04f 33ff 	mov.w	r3, #4294967295
 800293c:	f000 bd27 	b.w	800338e <handleCySatPacket+0x10e6>
 8002940:	f107 0380 	add.w	r3, r7, #128	; 0x80
 8002944:	4618      	mov	r0, r3
 8002946:	f7fe ffb5 	bl	80018b4 <READ_EPS_SOLAR_Z_NEG_CURRENT>
 800294a:	4603      	mov	r3, r0
 800294c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002950:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002954:	2b00      	cmp	r3, #0
 8002956:	d003      	beq.n	8002960 <handleCySatPacket+0x6b8>
 8002958:	f04f 33ff 	mov.w	r3, #4294967295
 800295c:	f000 bd17 	b.w	800338e <handleCySatPacket+0x10e6>
 8002960:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 8002964:	4618      	mov	r0, r3
 8002966:	f7fe ffd7 	bl	8001918 <READ_EPS_SOLAR_Z_POS_CURRENT>
 800296a:	4603      	mov	r3, r0
 800296c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002970:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002974:	2b00      	cmp	r3, #0
 8002976:	d003      	beq.n	8002980 <handleCySatPacket+0x6d8>
 8002978:	f04f 33ff 	mov.w	r3, #4294967295
 800297c:	f000 bd07 	b.w	800338e <handleCySatPacket+0x10e6>
 8002980:	edd7 7a21 	vldr	s15, [r7, #132]	; 0x84
 8002984:	eeb0 0a67 	vmov.f32	s0, s15
 8002988:	f001 f9c4 	bl	8003d14 <FloatToUnsigned16bits>
 800298c:	4603      	mov	r3, r0
 800298e:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8002992:	edd7 7a20 	vldr	s15, [r7, #128]	; 0x80
 8002996:	eeb0 0a67 	vmov.f32	s0, s15
 800299a:	f001 f9bb 	bl	8003d14 <FloatToUnsigned16bits>
 800299e:	4603      	mov	r3, r0
 80029a0:	f8a7 30cc 	strh.w	r3, [r7, #204]	; 0xcc
 80029a4:	edd7 7a1f 	vldr	s15, [r7, #124]	; 0x7c
 80029a8:	eeb0 0a67 	vmov.f32	s0, s15
 80029ac:	f001 f9b2 	bl	8003d14 <FloatToUnsigned16bits>
 80029b0:	4603      	mov	r3, r0
 80029b2:	f8a7 30ca 	strh.w	r3, [r7, #202]	; 0xca
 80029b6:	231e      	movs	r3, #30
 80029b8:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 80029bc:	2306      	movs	r3, #6
 80029be:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 80029c2:	2306      	movs	r3, #6
 80029c4:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 80029c8:	2006      	movs	r0, #6
 80029ca:	f00a fe63 	bl	800d694 <malloc>
 80029ce:	4603      	mov	r3, r0
 80029d0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80029d4:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80029d8:	0a1b      	lsrs	r3, r3, #8
 80029da:	b29a      	uxth	r2, r3
 80029dc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80029e0:	b2d2      	uxtb	r2, r2
 80029e2:	701a      	strb	r2, [r3, #0]
 80029e4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80029e8:	3301      	adds	r3, #1
 80029ea:	f8b7 20ce 	ldrh.w	r2, [r7, #206]	; 0xce
 80029ee:	b2d2      	uxtb	r2, r2
 80029f0:	701a      	strb	r2, [r3, #0]
 80029f2:	f8b7 30cc 	ldrh.w	r3, [r7, #204]	; 0xcc
 80029f6:	0a1b      	lsrs	r3, r3, #8
 80029f8:	b29a      	uxth	r2, r3
 80029fa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80029fe:	3302      	adds	r3, #2
 8002a00:	b2d2      	uxtb	r2, r2
 8002a02:	701a      	strb	r2, [r3, #0]
 8002a04:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002a08:	3303      	adds	r3, #3
 8002a0a:	f8b7 20cc 	ldrh.w	r2, [r7, #204]	; 0xcc
 8002a0e:	b2d2      	uxtb	r2, r2
 8002a10:	701a      	strb	r2, [r3, #0]
 8002a12:	f8b7 30ca 	ldrh.w	r3, [r7, #202]	; 0xca
 8002a16:	0a1b      	lsrs	r3, r3, #8
 8002a18:	b29a      	uxth	r2, r3
 8002a1a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002a1e:	3304      	adds	r3, #4
 8002a20:	b2d2      	uxtb	r2, r2
 8002a22:	701a      	strb	r2, [r3, #0]
 8002a24:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002a28:	3305      	adds	r3, #5
 8002a2a:	f8b7 20ca 	ldrh.w	r2, [r7, #202]	; 0xca
 8002a2e:	b2d2      	uxtb	r2, r2
 8002a30:	701a      	strb	r2, [r3, #0]
 8002a32:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002a36:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002a3a:	f7fe fd07 	bl	800144c <generateCySatChecksum>
 8002a3e:	4603      	mov	r3, r0
 8002a40:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002a44:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002a48:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002a4c:	f7fe fc7e 	bl	800134c <sendCySatPacket>
 8002a50:	4603      	mov	r3, r0
 8002a52:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002a56:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002a5a:	4618      	mov	r0, r3
 8002a5c:	f00a fe22 	bl	800d6a4 <free>
 8002a60:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002a64:	f000 bc93 	b.w	800338e <handleCySatPacket+0x10e6>
 8002a68:	f107 0378 	add.w	r3, r7, #120	; 0x78
 8002a6c:	4618      	mov	r0, r3
 8002a6e:	f7fe ff85 	bl	800197c <READ_EPS_3V_CURRENT>
 8002a72:	4603      	mov	r3, r0
 8002a74:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002a78:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	d003      	beq.n	8002a88 <handleCySatPacket+0x7e0>
 8002a80:	f04f 33ff 	mov.w	r3, #4294967295
 8002a84:	f000 bc83 	b.w	800338e <handleCySatPacket+0x10e6>
 8002a88:	f107 0374 	add.w	r3, r7, #116	; 0x74
 8002a8c:	4618      	mov	r0, r3
 8002a8e:	f7fe ffa7 	bl	80019e0 <READ_EPS_5V_CURRENT>
 8002a92:	4603      	mov	r3, r0
 8002a94:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002a98:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002a9c:	2b00      	cmp	r3, #0
 8002a9e:	d003      	beq.n	8002aa8 <handleCySatPacket+0x800>
 8002aa0:	f04f 33ff 	mov.w	r3, #4294967295
 8002aa4:	f000 bc73 	b.w	800338e <handleCySatPacket+0x10e6>
 8002aa8:	edd7 7a1e 	vldr	s15, [r7, #120]	; 0x78
 8002aac:	eeb0 0a67 	vmov.f32	s0, s15
 8002ab0:	f001 f930 	bl	8003d14 <FloatToUnsigned16bits>
 8002ab4:	4603      	mov	r3, r0
 8002ab6:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
 8002aba:	edd7 7a1d 	vldr	s15, [r7, #116]	; 0x74
 8002abe:	eeb0 0a67 	vmov.f32	s0, s15
 8002ac2:	f001 f927 	bl	8003d14 <FloatToUnsigned16bits>
 8002ac6:	4603      	mov	r3, r0
 8002ac8:	f8a7 30d0 	strh.w	r3, [r7, #208]	; 0xd0
 8002acc:	231e      	movs	r3, #30
 8002ace:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002ad2:	2308      	movs	r3, #8
 8002ad4:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002ad8:	2304      	movs	r3, #4
 8002ada:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002ade:	2004      	movs	r0, #4
 8002ae0:	f00a fdd8 	bl	800d694 <malloc>
 8002ae4:	4603      	mov	r3, r0
 8002ae6:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002aea:	f8b7 30d2 	ldrh.w	r3, [r7, #210]	; 0xd2
 8002aee:	0a1b      	lsrs	r3, r3, #8
 8002af0:	b29a      	uxth	r2, r3
 8002af2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002af6:	b2d2      	uxtb	r2, r2
 8002af8:	701a      	strb	r2, [r3, #0]
 8002afa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002afe:	3301      	adds	r3, #1
 8002b00:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 8002b04:	b2d2      	uxtb	r2, r2
 8002b06:	701a      	strb	r2, [r3, #0]
 8002b08:	f8b7 30d0 	ldrh.w	r3, [r7, #208]	; 0xd0
 8002b0c:	0a1b      	lsrs	r3, r3, #8
 8002b0e:	b29a      	uxth	r2, r3
 8002b10:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002b14:	3302      	adds	r3, #2
 8002b16:	b2d2      	uxtb	r2, r2
 8002b18:	701a      	strb	r2, [r3, #0]
 8002b1a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002b1e:	3303      	adds	r3, #3
 8002b20:	f8b7 20d0 	ldrh.w	r2, [r7, #208]	; 0xd0
 8002b24:	b2d2      	uxtb	r2, r2
 8002b26:	701a      	strb	r2, [r3, #0]
 8002b28:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002b2c:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002b30:	f7fe fc8c 	bl	800144c <generateCySatChecksum>
 8002b34:	4603      	mov	r3, r0
 8002b36:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002b3a:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002b3e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002b42:	f7fe fc03 	bl	800134c <sendCySatPacket>
 8002b46:	4603      	mov	r3, r0
 8002b48:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002b4c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002b50:	4618      	mov	r0, r3
 8002b52:	f00a fda7 	bl	800d6a4 <free>
 8002b56:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002b5a:	f000 bc18 	b.w	800338e <handleCySatPacket+0x10e6>
 8002b5e:	f107 0370 	add.w	r3, r7, #112	; 0x70
 8002b62:	4618      	mov	r0, r3
 8002b64:	f7fe ff6e 	bl	8001a44 <READ_EPS_MCU_TEMP>
 8002b68:	4603      	mov	r3, r0
 8002b6a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002b6e:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d003      	beq.n	8002b7e <handleCySatPacket+0x8d6>
 8002b76:	f04f 33ff 	mov.w	r3, #4294967295
 8002b7a:	f000 bc08 	b.w	800338e <handleCySatPacket+0x10e6>
 8002b7e:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 8002b82:	4618      	mov	r0, r3
 8002b84:	f7fe ff9c 	bl	8001ac0 <READ_EPS_BATT_1_TEMP>
 8002b88:	4603      	mov	r3, r0
 8002b8a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002b8e:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d002      	beq.n	8002b9c <handleCySatPacket+0x8f4>
 8002b96:	f04f 33ff 	mov.w	r3, #4294967295
 8002b9a:	e3f8      	b.n	800338e <handleCySatPacket+0x10e6>
 8002b9c:	f107 0368 	add.w	r3, r7, #104	; 0x68
 8002ba0:	4618      	mov	r0, r3
 8002ba2:	f7fe ffbf 	bl	8001b24 <READ_EPS_BATT_2_TEMP>
 8002ba6:	4603      	mov	r3, r0
 8002ba8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002bac:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d002      	beq.n	8002bba <handleCySatPacket+0x912>
 8002bb4:	f04f 33ff 	mov.w	r3, #4294967295
 8002bb8:	e3e9      	b.n	800338e <handleCySatPacket+0x10e6>
 8002bba:	f107 0364 	add.w	r3, r7, #100	; 0x64
 8002bbe:	4618      	mov	r0, r3
 8002bc0:	f7fe ffe2 	bl	8001b88 <READ_EPS_BATT_3_TEMP>
 8002bc4:	4603      	mov	r3, r0
 8002bc6:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002bca:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d002      	beq.n	8002bd8 <handleCySatPacket+0x930>
 8002bd2:	f04f 33ff 	mov.w	r3, #4294967295
 8002bd6:	e3da      	b.n	800338e <handleCySatPacket+0x10e6>
 8002bd8:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002bdc:	4618      	mov	r0, r3
 8002bde:	f7ff f805 	bl	8001bec <READ_EPS_BATT_4_TEMP>
 8002be2:	4603      	mov	r3, r0
 8002be4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002be8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002bec:	2b00      	cmp	r3, #0
 8002bee:	d002      	beq.n	8002bf6 <handleCySatPacket+0x94e>
 8002bf0:	f04f 33ff 	mov.w	r3, #4294967295
 8002bf4:	e3cb      	b.n	800338e <handleCySatPacket+0x10e6>
 8002bf6:	edd7 7a1c 	vldr	s15, [r7, #112]	; 0x70
 8002bfa:	eeb0 0a67 	vmov.f32	s0, s15
 8002bfe:	f001 f889 	bl	8003d14 <FloatToUnsigned16bits>
 8002c02:	4603      	mov	r3, r0
 8002c04:	f8a7 30dc 	strh.w	r3, [r7, #220]	; 0xdc
 8002c08:	edd7 7a1b 	vldr	s15, [r7, #108]	; 0x6c
 8002c0c:	eeb0 0a67 	vmov.f32	s0, s15
 8002c10:	f001 f880 	bl	8003d14 <FloatToUnsigned16bits>
 8002c14:	4603      	mov	r3, r0
 8002c16:	f8a7 30da 	strh.w	r3, [r7, #218]	; 0xda
 8002c1a:	edd7 7a1a 	vldr	s15, [r7, #104]	; 0x68
 8002c1e:	eeb0 0a67 	vmov.f32	s0, s15
 8002c22:	f001 f877 	bl	8003d14 <FloatToUnsigned16bits>
 8002c26:	4603      	mov	r3, r0
 8002c28:	f8a7 30d8 	strh.w	r3, [r7, #216]	; 0xd8
 8002c2c:	edd7 7a19 	vldr	s15, [r7, #100]	; 0x64
 8002c30:	eeb0 0a67 	vmov.f32	s0, s15
 8002c34:	f001 f86e 	bl	8003d14 <FloatToUnsigned16bits>
 8002c38:	4603      	mov	r3, r0
 8002c3a:	f8a7 30d6 	strh.w	r3, [r7, #214]	; 0xd6
 8002c3e:	edd7 7a18 	vldr	s15, [r7, #96]	; 0x60
 8002c42:	eeb0 0a67 	vmov.f32	s0, s15
 8002c46:	f001 f865 	bl	8003d14 <FloatToUnsigned16bits>
 8002c4a:	4603      	mov	r3, r0
 8002c4c:	f8a7 30d4 	strh.w	r3, [r7, #212]	; 0xd4
 8002c50:	231e      	movs	r3, #30
 8002c52:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002c56:	230a      	movs	r3, #10
 8002c58:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002c5c:	230a      	movs	r3, #10
 8002c5e:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002c62:	200a      	movs	r0, #10
 8002c64:	f00a fd16 	bl	800d694 <malloc>
 8002c68:	4603      	mov	r3, r0
 8002c6a:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002c6e:	f8b7 30dc 	ldrh.w	r3, [r7, #220]	; 0xdc
 8002c72:	0a1b      	lsrs	r3, r3, #8
 8002c74:	b29a      	uxth	r2, r3
 8002c76:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002c7a:	b2d2      	uxtb	r2, r2
 8002c7c:	701a      	strb	r2, [r3, #0]
 8002c7e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002c82:	3301      	adds	r3, #1
 8002c84:	f8b7 20dc 	ldrh.w	r2, [r7, #220]	; 0xdc
 8002c88:	b2d2      	uxtb	r2, r2
 8002c8a:	701a      	strb	r2, [r3, #0]
 8002c8c:	f8b7 30da 	ldrh.w	r3, [r7, #218]	; 0xda
 8002c90:	0a1b      	lsrs	r3, r3, #8
 8002c92:	b29a      	uxth	r2, r3
 8002c94:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002c98:	3302      	adds	r3, #2
 8002c9a:	b2d2      	uxtb	r2, r2
 8002c9c:	701a      	strb	r2, [r3, #0]
 8002c9e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002ca2:	3303      	adds	r3, #3
 8002ca4:	f8b7 20da 	ldrh.w	r2, [r7, #218]	; 0xda
 8002ca8:	b2d2      	uxtb	r2, r2
 8002caa:	701a      	strb	r2, [r3, #0]
 8002cac:	f8b7 30d8 	ldrh.w	r3, [r7, #216]	; 0xd8
 8002cb0:	0a1b      	lsrs	r3, r3, #8
 8002cb2:	b29a      	uxth	r2, r3
 8002cb4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002cb8:	3304      	adds	r3, #4
 8002cba:	b2d2      	uxtb	r2, r2
 8002cbc:	701a      	strb	r2, [r3, #0]
 8002cbe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002cc2:	3305      	adds	r3, #5
 8002cc4:	f8b7 20d8 	ldrh.w	r2, [r7, #216]	; 0xd8
 8002cc8:	b2d2      	uxtb	r2, r2
 8002cca:	701a      	strb	r2, [r3, #0]
 8002ccc:	f8b7 30d6 	ldrh.w	r3, [r7, #214]	; 0xd6
 8002cd0:	0a1b      	lsrs	r3, r3, #8
 8002cd2:	b29a      	uxth	r2, r3
 8002cd4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002cd8:	3306      	adds	r3, #6
 8002cda:	b2d2      	uxtb	r2, r2
 8002cdc:	701a      	strb	r2, [r3, #0]
 8002cde:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002ce2:	3307      	adds	r3, #7
 8002ce4:	f8b7 20d6 	ldrh.w	r2, [r7, #214]	; 0xd6
 8002ce8:	b2d2      	uxtb	r2, r2
 8002cea:	701a      	strb	r2, [r3, #0]
 8002cec:	f8b7 30d4 	ldrh.w	r3, [r7, #212]	; 0xd4
 8002cf0:	0a1b      	lsrs	r3, r3, #8
 8002cf2:	b29a      	uxth	r2, r3
 8002cf4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002cf8:	3308      	adds	r3, #8
 8002cfa:	b2d2      	uxtb	r2, r2
 8002cfc:	701a      	strb	r2, [r3, #0]
 8002cfe:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002d02:	3309      	adds	r3, #9
 8002d04:	f8b7 20d4 	ldrh.w	r2, [r7, #212]	; 0xd4
 8002d08:	b2d2      	uxtb	r2, r2
 8002d0a:	701a      	strb	r2, [r3, #0]
 8002d0c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002d10:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002d14:	f7fe fb9a 	bl	800144c <generateCySatChecksum>
 8002d18:	4603      	mov	r3, r0
 8002d1a:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002d1e:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002d22:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002d26:	f7fe fb11 	bl	800134c <sendCySatPacket>
 8002d2a:	4603      	mov	r3, r0
 8002d2c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d30:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002d34:	4618      	mov	r0, r3
 8002d36:	f00a fcb5 	bl	800d6a4 <free>
 8002d3a:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002d3e:	e326      	b.n	800338e <handleCySatPacket+0x10e6>
 8002d40:	f107 035e 	add.w	r3, r7, #94	; 0x5e
 8002d44:	4618      	mov	r0, r3
 8002d46:	f7fe ff83 	bl	8001c50 <READ_EPS_INPUT_CONDITION>
 8002d4a:	4603      	mov	r3, r0
 8002d4c:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d50:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002d54:	2b00      	cmp	r3, #0
 8002d56:	d002      	beq.n	8002d5e <handleCySatPacket+0xab6>
 8002d58:	f04f 33ff 	mov.w	r3, #4294967295
 8002d5c:	e317      	b.n	800338e <handleCySatPacket+0x10e6>
 8002d5e:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8002d62:	4618      	mov	r0, r3
 8002d64:	f7fe ff99 	bl	8001c9a <READ_EPS_OUTPUT_CONDITION1>
 8002d68:	4603      	mov	r3, r0
 8002d6a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d6e:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002d72:	2b00      	cmp	r3, #0
 8002d74:	d002      	beq.n	8002d7c <handleCySatPacket+0xad4>
 8002d76:	f04f 33ff 	mov.w	r3, #4294967295
 8002d7a:	e308      	b.n	800338e <handleCySatPacket+0x10e6>
 8002d7c:	f107 035a 	add.w	r3, r7, #90	; 0x5a
 8002d80:	4618      	mov	r0, r3
 8002d82:	f7fe ffaf 	bl	8001ce4 <READ_EPS_OUTPUT_CONDITION2>
 8002d86:	4603      	mov	r3, r0
 8002d88:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002d8c:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002d90:	2b00      	cmp	r3, #0
 8002d92:	d002      	beq.n	8002d9a <handleCySatPacket+0xaf2>
 8002d94:	f04f 33ff 	mov.w	r3, #4294967295
 8002d98:	e2f9      	b.n	800338e <handleCySatPacket+0x10e6>
 8002d9a:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8002d9e:	4618      	mov	r0, r3
 8002da0:	f7ff f87e 	bl	8001ea0 <READ_EPS_DEFAULTS1>
 8002da4:	4603      	mov	r3, r0
 8002da6:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002daa:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002dae:	2b00      	cmp	r3, #0
 8002db0:	d002      	beq.n	8002db8 <handleCySatPacket+0xb10>
 8002db2:	f04f 33ff 	mov.w	r3, #4294967295
 8002db6:	e2ea      	b.n	800338e <handleCySatPacket+0x10e6>
 8002db8:	f107 0356 	add.w	r3, r7, #86	; 0x56
 8002dbc:	4618      	mov	r0, r3
 8002dbe:	f7ff f894 	bl	8001eea <READ_EPS_DEFAULTS2>
 8002dc2:	4603      	mov	r3, r0
 8002dc4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002dc8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002dcc:	2b00      	cmp	r3, #0
 8002dce:	d002      	beq.n	8002dd6 <handleCySatPacket+0xb2e>
 8002dd0:	f04f 33ff 	mov.w	r3, #4294967295
 8002dd4:	e2db      	b.n	800338e <handleCySatPacket+0x10e6>
 8002dd6:	231e      	movs	r3, #30
 8002dd8:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002ddc:	230c      	movs	r3, #12
 8002dde:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002de2:	2306      	movs	r3, #6
 8002de4:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002de8:	2006      	movs	r0, #6
 8002dea:	f00a fc53 	bl	800d694 <malloc>
 8002dee:	4603      	mov	r3, r0
 8002df0:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002df4:	f8b7 205e 	ldrh.w	r2, [r7, #94]	; 0x5e
 8002df8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002dfc:	b2d2      	uxtb	r2, r2
 8002dfe:	701a      	strb	r2, [r3, #0]
 8002e00:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 8002e04:	0a1b      	lsrs	r3, r3, #8
 8002e06:	b29a      	uxth	r2, r3
 8002e08:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e0c:	3301      	adds	r3, #1
 8002e0e:	b2d2      	uxtb	r2, r2
 8002e10:	701a      	strb	r2, [r3, #0]
 8002e12:	f8b7 205c 	ldrh.w	r2, [r7, #92]	; 0x5c
 8002e16:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e1a:	3302      	adds	r3, #2
 8002e1c:	b2d2      	uxtb	r2, r2
 8002e1e:	701a      	strb	r2, [r3, #0]
 8002e20:	f8b7 205a 	ldrh.w	r2, [r7, #90]	; 0x5a
 8002e24:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e28:	3303      	adds	r3, #3
 8002e2a:	b2d2      	uxtb	r2, r2
 8002e2c:	701a      	strb	r2, [r3, #0]
 8002e2e:	f8b7 2058 	ldrh.w	r2, [r7, #88]	; 0x58
 8002e32:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e36:	3304      	adds	r3, #4
 8002e38:	b2d2      	uxtb	r2, r2
 8002e3a:	701a      	strb	r2, [r3, #0]
 8002e3c:	f8b7 2056 	ldrh.w	r2, [r7, #86]	; 0x56
 8002e40:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e44:	3305      	adds	r3, #5
 8002e46:	b2d2      	uxtb	r2, r2
 8002e48:	701a      	strb	r2, [r3, #0]
 8002e4a:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002e4e:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002e52:	f7fe fafb 	bl	800144c <generateCySatChecksum>
 8002e56:	4603      	mov	r3, r0
 8002e58:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002e5c:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002e60:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002e64:	f7fe fa72 	bl	800134c <sendCySatPacket>
 8002e68:	4603      	mov	r3, r0
 8002e6a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002e6e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002e72:	4618      	mov	r0, r3
 8002e74:	f00a fc16 	bl	800d6a4 <free>
 8002e78:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002e7c:	e287      	b.n	800338e <handleCySatPacket+0x10e6>
 8002e7e:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8002e82:	4618      	mov	r0, r3
 8002e84:	f7fe ff53 	bl	8001d2e <READ_EPS_POWER_ON_CYCLES>
 8002e88:	4603      	mov	r3, r0
 8002e8a:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002e8e:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d002      	beq.n	8002e9c <handleCySatPacket+0xbf4>
 8002e96:	f04f 33ff 	mov.w	r3, #4294967295
 8002e9a:	e278      	b.n	800338e <handleCySatPacket+0x10e6>
 8002e9c:	f107 0352 	add.w	r3, r7, #82	; 0x52
 8002ea0:	4618      	mov	r0, r3
 8002ea2:	f7fe ff69 	bl	8001d78 <READ_EPS_UNDER_VOLT_COUNT>
 8002ea6:	4603      	mov	r3, r0
 8002ea8:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002eac:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	d002      	beq.n	8002eba <handleCySatPacket+0xc12>
 8002eb4:	f04f 33ff 	mov.w	r3, #4294967295
 8002eb8:	e269      	b.n	800338e <handleCySatPacket+0x10e6>
 8002eba:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8002ebe:	4618      	mov	r0, r3
 8002ec0:	f7fe ff7f 	bl	8001dc2 <READ_EPS_SHORT_CIRCUIT_COUNT>
 8002ec4:	4603      	mov	r3, r0
 8002ec6:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002eca:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d002      	beq.n	8002ed8 <handleCySatPacket+0xc30>
 8002ed2:	f04f 33ff 	mov.w	r3, #4294967295
 8002ed6:	e25a      	b.n	800338e <handleCySatPacket+0x10e6>
 8002ed8:	f107 034e 	add.w	r3, r7, #78	; 0x4e
 8002edc:	4618      	mov	r0, r3
 8002ede:	f7fe ff95 	bl	8001e0c <READ_EPS_OVER_TEMP_COUNT>
 8002ee2:	4603      	mov	r3, r0
 8002ee4:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002ee8:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002eec:	2b00      	cmp	r3, #0
 8002eee:	d002      	beq.n	8002ef6 <handleCySatPacket+0xc4e>
 8002ef0:	f04f 33ff 	mov.w	r3, #4294967295
 8002ef4:	e24b      	b.n	800338e <handleCySatPacket+0x10e6>
 8002ef6:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8002efa:	4618      	mov	r0, r3
 8002efc:	f7fe ffab 	bl	8001e56 <READ_EPS_CHARGE_CYCLES>
 8002f00:	4603      	mov	r3, r0
 8002f02:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002f06:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d002      	beq.n	8002f14 <handleCySatPacket+0xc6c>
 8002f0e:	f04f 33ff 	mov.w	r3, #4294967295
 8002f12:	e23c      	b.n	800338e <handleCySatPacket+0x10e6>
 8002f14:	231e      	movs	r3, #30
 8002f16:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 8002f1a:	230e      	movs	r3, #14
 8002f1c:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8002f20:	230a      	movs	r3, #10
 8002f22:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8002f26:	200a      	movs	r0, #10
 8002f28:	f00a fbb4 	bl	800d694 <malloc>
 8002f2c:	4603      	mov	r3, r0
 8002f2e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002f32:	f8b7 3054 	ldrh.w	r3, [r7, #84]	; 0x54
 8002f36:	0a1b      	lsrs	r3, r3, #8
 8002f38:	b29a      	uxth	r2, r3
 8002f3a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f3e:	b2d2      	uxtb	r2, r2
 8002f40:	701a      	strb	r2, [r3, #0]
 8002f42:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 8002f46:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f4a:	3301      	adds	r3, #1
 8002f4c:	b2d2      	uxtb	r2, r2
 8002f4e:	701a      	strb	r2, [r3, #0]
 8002f50:	f8b7 3052 	ldrh.w	r3, [r7, #82]	; 0x52
 8002f54:	0a1b      	lsrs	r3, r3, #8
 8002f56:	b29a      	uxth	r2, r3
 8002f58:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f5c:	3302      	adds	r3, #2
 8002f5e:	b2d2      	uxtb	r2, r2
 8002f60:	701a      	strb	r2, [r3, #0]
 8002f62:	f8b7 2052 	ldrh.w	r2, [r7, #82]	; 0x52
 8002f66:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f6a:	3303      	adds	r3, #3
 8002f6c:	b2d2      	uxtb	r2, r2
 8002f6e:	701a      	strb	r2, [r3, #0]
 8002f70:	f8b7 3050 	ldrh.w	r3, [r7, #80]	; 0x50
 8002f74:	0a1b      	lsrs	r3, r3, #8
 8002f76:	b29a      	uxth	r2, r3
 8002f78:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f7c:	3304      	adds	r3, #4
 8002f7e:	b2d2      	uxtb	r2, r2
 8002f80:	701a      	strb	r2, [r3, #0]
 8002f82:	f8b7 2050 	ldrh.w	r2, [r7, #80]	; 0x50
 8002f86:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f8a:	3305      	adds	r3, #5
 8002f8c:	b2d2      	uxtb	r2, r2
 8002f8e:	701a      	strb	r2, [r3, #0]
 8002f90:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8002f94:	0a1b      	lsrs	r3, r3, #8
 8002f96:	b29a      	uxth	r2, r3
 8002f98:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002f9c:	3306      	adds	r3, #6
 8002f9e:	b2d2      	uxtb	r2, r2
 8002fa0:	701a      	strb	r2, [r3, #0]
 8002fa2:	f8b7 204e 	ldrh.w	r2, [r7, #78]	; 0x4e
 8002fa6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002faa:	3307      	adds	r3, #7
 8002fac:	b2d2      	uxtb	r2, r2
 8002fae:	701a      	strb	r2, [r3, #0]
 8002fb0:	f8b7 304c 	ldrh.w	r3, [r7, #76]	; 0x4c
 8002fb4:	0a1b      	lsrs	r3, r3, #8
 8002fb6:	b29a      	uxth	r2, r3
 8002fb8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002fbc:	3308      	adds	r3, #8
 8002fbe:	b2d2      	uxtb	r2, r2
 8002fc0:	701a      	strb	r2, [r3, #0]
 8002fc2:	f8b7 204c 	ldrh.w	r2, [r7, #76]	; 0x4c
 8002fc6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002fca:	3309      	adds	r3, #9
 8002fcc:	b2d2      	uxtb	r2, r2
 8002fce:	701a      	strb	r2, [r3, #0]
 8002fd0:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002fd4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002fd8:	f7fe fa38 	bl	800144c <generateCySatChecksum>
 8002fdc:	4603      	mov	r3, r0
 8002fde:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8002fe2:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8002fe6:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002fea:	f7fe f9af 	bl	800134c <sendCySatPacket>
 8002fee:	4603      	mov	r3, r0
 8002ff0:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8002ff4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8002ff8:	4618      	mov	r0, r3
 8002ffa:	f00a fb53 	bl	800d6a4 <free>
 8002ffe:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8003002:	e1c4      	b.n	800338e <handleCySatPacket+0x10e6>
 8003004:	231e      	movs	r3, #30
 8003006:	f887 30a8 	strb.w	r3, [r7, #168]	; 0xa8
 800300a:	2310      	movs	r3, #16
 800300c:	f887 30a9 	strb.w	r3, [r7, #169]	; 0xa9
 8003010:	2301      	movs	r3, #1
 8003012:	f887 30aa 	strb.w	r3, [r7, #170]	; 0xaa
 8003016:	2001      	movs	r0, #1
 8003018:	f00a fb3c 	bl	800d694 <malloc>
 800301c:	4603      	mov	r3, r0
 800301e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8003022:	1d3b      	adds	r3, r7, #4
 8003024:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003028:	f7fe fa45 	bl	80014b6 <validateCySatChecksum>
 800302c:	4603      	mov	r3, r0
 800302e:	2b00      	cmp	r3, #0
 8003030:	d104      	bne.n	800303c <handleCySatPacket+0xd94>
 8003032:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003036:	2200      	movs	r2, #0
 8003038:	701a      	strb	r2, [r3, #0]
 800303a:	e183      	b.n	8003344 <handleCySatPacket+0x109c>
 800303c:	68bb      	ldr	r3, [r7, #8]
 800303e:	781b      	ldrb	r3, [r3, #0]
 8003040:	3b01      	subs	r3, #1
 8003042:	2b0e      	cmp	r3, #14
 8003044:	f200 817e 	bhi.w	8003344 <handleCySatPacket+0x109c>
 8003048:	a201      	add	r2, pc, #4	; (adr r2, 8003050 <handleCySatPacket+0xda8>)
 800304a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800304e:	bf00      	nop
 8003050:	0800308d 	.word	0x0800308d
 8003054:	08003345 	.word	0x08003345
 8003058:	08003345 	.word	0x08003345
 800305c:	080030c7 	.word	0x080030c7
 8003060:	08003345 	.word	0x08003345
 8003064:	08003101 	.word	0x08003101
 8003068:	0800313b 	.word	0x0800313b
 800306c:	08003175 	.word	0x08003175
 8003070:	080031af 	.word	0x080031af
 8003074:	080031e9 	.word	0x080031e9
 8003078:	08003223 	.word	0x08003223
 800307c:	0800325d 	.word	0x0800325d
 8003080:	08003297 	.word	0x08003297
 8003084:	080032d1 	.word	0x080032d1
 8003088:	0800330b 	.word	0x0800330b
 800308c:	68bb      	ldr	r3, [r7, #8]
 800308e:	3301      	adds	r3, #1
 8003090:	781b      	ldrb	r3, [r3, #0]
 8003092:	2b00      	cmp	r3, #0
 8003094:	d106      	bne.n	80030a4 <handleCySatPacket+0xdfc>
 8003096:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 800309a:	f7fe ff54 	bl	8001f46 <disable_EPS_Vbatt_Bus>
 800309e:	4603      	mov	r3, r0
 80030a0:	7023      	strb	r3, [r4, #0]
 80030a2:	e14f      	b.n	8003344 <handleCySatPacket+0x109c>
 80030a4:	68bb      	ldr	r3, [r7, #8]
 80030a6:	3301      	adds	r3, #1
 80030a8:	781b      	ldrb	r3, [r3, #0]
 80030aa:	2b01      	cmp	r3, #1
 80030ac:	d106      	bne.n	80030bc <handleCySatPacket+0xe14>
 80030ae:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80030b2:	f7fe ff3f 	bl	8001f34 <enable_EPS_Vbatt_Bus>
 80030b6:	4603      	mov	r3, r0
 80030b8:	7023      	strb	r3, [r4, #0]
 80030ba:	e143      	b.n	8003344 <handleCySatPacket+0x109c>
 80030bc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80030c0:	2200      	movs	r2, #0
 80030c2:	701a      	strb	r2, [r3, #0]
 80030c4:	e13e      	b.n	8003344 <handleCySatPacket+0x109c>
 80030c6:	68bb      	ldr	r3, [r7, #8]
 80030c8:	3301      	adds	r3, #1
 80030ca:	781b      	ldrb	r3, [r3, #0]
 80030cc:	2b00      	cmp	r3, #0
 80030ce:	d106      	bne.n	80030de <handleCySatPacket+0xe36>
 80030d0:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80030d4:	f7fe ff49 	bl	8001f6a <disable_EPS_5v_Bus>
 80030d8:	4603      	mov	r3, r0
 80030da:	7023      	strb	r3, [r4, #0]
 80030dc:	e132      	b.n	8003344 <handleCySatPacket+0x109c>
 80030de:	68bb      	ldr	r3, [r7, #8]
 80030e0:	3301      	adds	r3, #1
 80030e2:	781b      	ldrb	r3, [r3, #0]
 80030e4:	2b01      	cmp	r3, #1
 80030e6:	d106      	bne.n	80030f6 <handleCySatPacket+0xe4e>
 80030e8:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80030ec:	f7fe ff34 	bl	8001f58 <enable_EPS_5v_Bus>
 80030f0:	4603      	mov	r3, r0
 80030f2:	7023      	strb	r3, [r4, #0]
 80030f4:	e126      	b.n	8003344 <handleCySatPacket+0x109c>
 80030f6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80030fa:	2200      	movs	r2, #0
 80030fc:	701a      	strb	r2, [r3, #0]
 80030fe:	e121      	b.n	8003344 <handleCySatPacket+0x109c>
 8003100:	68bb      	ldr	r3, [r7, #8]
 8003102:	3301      	adds	r3, #1
 8003104:	781b      	ldrb	r3, [r3, #0]
 8003106:	2b00      	cmp	r3, #0
 8003108:	d106      	bne.n	8003118 <handleCySatPacket+0xe70>
 800310a:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 800310e:	f7fe ff50 	bl	8001fb2 <disable_EPS_Fast_Charge1>
 8003112:	4603      	mov	r3, r0
 8003114:	7023      	strb	r3, [r4, #0]
 8003116:	e115      	b.n	8003344 <handleCySatPacket+0x109c>
 8003118:	68bb      	ldr	r3, [r7, #8]
 800311a:	3301      	adds	r3, #1
 800311c:	781b      	ldrb	r3, [r3, #0]
 800311e:	2b01      	cmp	r3, #1
 8003120:	d106      	bne.n	8003130 <handleCySatPacket+0xe88>
 8003122:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003126:	f7fe ff3b 	bl	8001fa0 <enable_EPS_Fast_Charge1>
 800312a:	4603      	mov	r3, r0
 800312c:	7023      	strb	r3, [r4, #0]
 800312e:	e109      	b.n	8003344 <handleCySatPacket+0x109c>
 8003130:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003134:	2200      	movs	r2, #0
 8003136:	701a      	strb	r2, [r3, #0]
 8003138:	e104      	b.n	8003344 <handleCySatPacket+0x109c>
 800313a:	68bb      	ldr	r3, [r7, #8]
 800313c:	3301      	adds	r3, #1
 800313e:	781b      	ldrb	r3, [r3, #0]
 8003140:	2b00      	cmp	r3, #0
 8003142:	d106      	bne.n	8003152 <handleCySatPacket+0xeaa>
 8003144:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003148:	f7fe ff45 	bl	8001fd6 <disable_EPS_Fast_Charge2>
 800314c:	4603      	mov	r3, r0
 800314e:	7023      	strb	r3, [r4, #0]
 8003150:	e0f8      	b.n	8003344 <handleCySatPacket+0x109c>
 8003152:	68bb      	ldr	r3, [r7, #8]
 8003154:	3301      	adds	r3, #1
 8003156:	781b      	ldrb	r3, [r3, #0]
 8003158:	2b01      	cmp	r3, #1
 800315a:	d106      	bne.n	800316a <handleCySatPacket+0xec2>
 800315c:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003160:	f7fe ff30 	bl	8001fc4 <enable_EPS_Fast_Charge2>
 8003164:	4603      	mov	r3, r0
 8003166:	7023      	strb	r3, [r4, #0]
 8003168:	e0ec      	b.n	8003344 <handleCySatPacket+0x109c>
 800316a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800316e:	2200      	movs	r2, #0
 8003170:	701a      	strb	r2, [r3, #0]
 8003172:	e0e7      	b.n	8003344 <handleCySatPacket+0x109c>
 8003174:	68bb      	ldr	r3, [r7, #8]
 8003176:	3301      	adds	r3, #1
 8003178:	781b      	ldrb	r3, [r3, #0]
 800317a:	2b00      	cmp	r3, #0
 800317c:	d106      	bne.n	800318c <handleCySatPacket+0xee4>
 800317e:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003182:	f7fe ff3a 	bl	8001ffa <disable_Boost_Board>
 8003186:	4603      	mov	r3, r0
 8003188:	7023      	strb	r3, [r4, #0]
 800318a:	e0db      	b.n	8003344 <handleCySatPacket+0x109c>
 800318c:	68bb      	ldr	r3, [r7, #8]
 800318e:	3301      	adds	r3, #1
 8003190:	781b      	ldrb	r3, [r3, #0]
 8003192:	2b01      	cmp	r3, #1
 8003194:	d106      	bne.n	80031a4 <handleCySatPacket+0xefc>
 8003196:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 800319a:	f7fe ff25 	bl	8001fe8 <enable_Boost_Board>
 800319e:	4603      	mov	r3, r0
 80031a0:	7023      	strb	r3, [r4, #0]
 80031a2:	e0cf      	b.n	8003344 <handleCySatPacket+0x109c>
 80031a4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80031a8:	2200      	movs	r2, #0
 80031aa:	701a      	strb	r2, [r3, #0]
 80031ac:	e0ca      	b.n	8003344 <handleCySatPacket+0x109c>
 80031ae:	68bb      	ldr	r3, [r7, #8]
 80031b0:	3301      	adds	r3, #1
 80031b2:	781b      	ldrb	r3, [r3, #0]
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d106      	bne.n	80031c6 <handleCySatPacket+0xf1e>
 80031b8:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80031bc:	f7fe ff2f 	bl	800201e <disable_Payload>
 80031c0:	4603      	mov	r3, r0
 80031c2:	7023      	strb	r3, [r4, #0]
 80031c4:	e0be      	b.n	8003344 <handleCySatPacket+0x109c>
 80031c6:	68bb      	ldr	r3, [r7, #8]
 80031c8:	3301      	adds	r3, #1
 80031ca:	781b      	ldrb	r3, [r3, #0]
 80031cc:	2b01      	cmp	r3, #1
 80031ce:	d106      	bne.n	80031de <handleCySatPacket+0xf36>
 80031d0:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80031d4:	f7fe ff1a 	bl	800200c <enable_Payload>
 80031d8:	4603      	mov	r3, r0
 80031da:	7023      	strb	r3, [r4, #0]
 80031dc:	e0b2      	b.n	8003344 <handleCySatPacket+0x109c>
 80031de:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80031e2:	2200      	movs	r2, #0
 80031e4:	701a      	strb	r2, [r3, #0]
 80031e6:	e0ad      	b.n	8003344 <handleCySatPacket+0x109c>
 80031e8:	68bb      	ldr	r3, [r7, #8]
 80031ea:	3301      	adds	r3, #1
 80031ec:	781b      	ldrb	r3, [r3, #0]
 80031ee:	2b00      	cmp	r3, #0
 80031f0:	d106      	bne.n	8003200 <handleCySatPacket+0xf58>
 80031f2:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80031f6:	f7fe ff24 	bl	8002042 <disable_EPS_Output_3>
 80031fa:	4603      	mov	r3, r0
 80031fc:	7023      	strb	r3, [r4, #0]
 80031fe:	e0a1      	b.n	8003344 <handleCySatPacket+0x109c>
 8003200:	68bb      	ldr	r3, [r7, #8]
 8003202:	3301      	adds	r3, #1
 8003204:	781b      	ldrb	r3, [r3, #0]
 8003206:	2b01      	cmp	r3, #1
 8003208:	d106      	bne.n	8003218 <handleCySatPacket+0xf70>
 800320a:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 800320e:	f7fe ff0f 	bl	8002030 <enable_EPS_Output_3>
 8003212:	4603      	mov	r3, r0
 8003214:	7023      	strb	r3, [r4, #0]
 8003216:	e095      	b.n	8003344 <handleCySatPacket+0x109c>
 8003218:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800321c:	2200      	movs	r2, #0
 800321e:	701a      	strb	r2, [r3, #0]
 8003220:	e090      	b.n	8003344 <handleCySatPacket+0x109c>
 8003222:	68bb      	ldr	r3, [r7, #8]
 8003224:	3301      	adds	r3, #1
 8003226:	781b      	ldrb	r3, [r3, #0]
 8003228:	2b00      	cmp	r3, #0
 800322a:	d106      	bne.n	800323a <handleCySatPacket+0xf92>
 800322c:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003230:	f7fe ff19 	bl	8002066 <disable_UHF>
 8003234:	4603      	mov	r3, r0
 8003236:	7023      	strb	r3, [r4, #0]
 8003238:	e084      	b.n	8003344 <handleCySatPacket+0x109c>
 800323a:	68bb      	ldr	r3, [r7, #8]
 800323c:	3301      	adds	r3, #1
 800323e:	781b      	ldrb	r3, [r3, #0]
 8003240:	2b01      	cmp	r3, #1
 8003242:	d106      	bne.n	8003252 <handleCySatPacket+0xfaa>
 8003244:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003248:	f7fe ff04 	bl	8002054 <enable_UHF>
 800324c:	4603      	mov	r3, r0
 800324e:	7023      	strb	r3, [r4, #0]
 8003250:	e078      	b.n	8003344 <handleCySatPacket+0x109c>
 8003252:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003256:	2200      	movs	r2, #0
 8003258:	701a      	strb	r2, [r3, #0]
 800325a:	e073      	b.n	8003344 <handleCySatPacket+0x109c>
 800325c:	68bb      	ldr	r3, [r7, #8]
 800325e:	3301      	adds	r3, #1
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d106      	bne.n	8003274 <handleCySatPacket+0xfcc>
 8003266:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 800326a:	f7fe ff0e 	bl	800208a <disable_EPS_Output_6>
 800326e:	4603      	mov	r3, r0
 8003270:	7023      	strb	r3, [r4, #0]
 8003272:	e067      	b.n	8003344 <handleCySatPacket+0x109c>
 8003274:	68bb      	ldr	r3, [r7, #8]
 8003276:	3301      	adds	r3, #1
 8003278:	781b      	ldrb	r3, [r3, #0]
 800327a:	2b01      	cmp	r3, #1
 800327c:	d106      	bne.n	800328c <handleCySatPacket+0xfe4>
 800327e:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003282:	f7fe fef9 	bl	8002078 <enable_EPS_Output_6>
 8003286:	4603      	mov	r3, r0
 8003288:	7023      	strb	r3, [r4, #0]
 800328a:	e05b      	b.n	8003344 <handleCySatPacket+0x109c>
 800328c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003290:	2200      	movs	r2, #0
 8003292:	701a      	strb	r2, [r3, #0]
 8003294:	e056      	b.n	8003344 <handleCySatPacket+0x109c>
 8003296:	68bb      	ldr	r3, [r7, #8]
 8003298:	3301      	adds	r3, #1
 800329a:	781b      	ldrb	r3, [r3, #0]
 800329c:	2b00      	cmp	r3, #0
 800329e:	d106      	bne.n	80032ae <handleCySatPacket+0x1006>
 80032a0:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80032a4:	f7fe ff03 	bl	80020ae <disable_EPS_Batt_Heater_1>
 80032a8:	4603      	mov	r3, r0
 80032aa:	7023      	strb	r3, [r4, #0]
 80032ac:	e04a      	b.n	8003344 <handleCySatPacket+0x109c>
 80032ae:	68bb      	ldr	r3, [r7, #8]
 80032b0:	3301      	adds	r3, #1
 80032b2:	781b      	ldrb	r3, [r3, #0]
 80032b4:	2b01      	cmp	r3, #1
 80032b6:	d106      	bne.n	80032c6 <handleCySatPacket+0x101e>
 80032b8:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80032bc:	f7fe feee 	bl	800209c <enable_EPS_Batt_Heater_1>
 80032c0:	4603      	mov	r3, r0
 80032c2:	7023      	strb	r3, [r4, #0]
 80032c4:	e03e      	b.n	8003344 <handleCySatPacket+0x109c>
 80032c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80032ca:	2200      	movs	r2, #0
 80032cc:	701a      	strb	r2, [r3, #0]
 80032ce:	e039      	b.n	8003344 <handleCySatPacket+0x109c>
 80032d0:	68bb      	ldr	r3, [r7, #8]
 80032d2:	3301      	adds	r3, #1
 80032d4:	781b      	ldrb	r3, [r3, #0]
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	d106      	bne.n	80032e8 <handleCySatPacket+0x1040>
 80032da:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80032de:	f7fe fef8 	bl	80020d2 <disable_EPS_Batt_Heater_2>
 80032e2:	4603      	mov	r3, r0
 80032e4:	7023      	strb	r3, [r4, #0]
 80032e6:	e02d      	b.n	8003344 <handleCySatPacket+0x109c>
 80032e8:	68bb      	ldr	r3, [r7, #8]
 80032ea:	3301      	adds	r3, #1
 80032ec:	781b      	ldrb	r3, [r3, #0]
 80032ee:	2b01      	cmp	r3, #1
 80032f0:	d106      	bne.n	8003300 <handleCySatPacket+0x1058>
 80032f2:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 80032f6:	f7fe fee3 	bl	80020c0 <enable_EPS_Batt_Heater_2>
 80032fa:	4603      	mov	r3, r0
 80032fc:	7023      	strb	r3, [r4, #0]
 80032fe:	e021      	b.n	8003344 <handleCySatPacket+0x109c>
 8003300:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8003304:	2200      	movs	r2, #0
 8003306:	701a      	strb	r2, [r3, #0]
 8003308:	e01c      	b.n	8003344 <handleCySatPacket+0x109c>
 800330a:	68bb      	ldr	r3, [r7, #8]
 800330c:	3301      	adds	r3, #1
 800330e:	781b      	ldrb	r3, [r3, #0]
 8003310:	2b00      	cmp	r3, #0
 8003312:	d106      	bne.n	8003322 <handleCySatPacket+0x107a>
 8003314:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003318:	f7fe feed 	bl	80020f6 <disable_EPS_Batt_Heater_3>
 800331c:	4603      	mov	r3, r0
 800331e:	7023      	strb	r3, [r4, #0]
 8003320:	e00f      	b.n	8003342 <handleCySatPacket+0x109a>
 8003322:	68bb      	ldr	r3, [r7, #8]
 8003324:	3301      	adds	r3, #1
 8003326:	781b      	ldrb	r3, [r3, #0]
 8003328:	2b01      	cmp	r3, #1
 800332a:	d106      	bne.n	800333a <handleCySatPacket+0x1092>
 800332c:	f8d7 40ac 	ldr.w	r4, [r7, #172]	; 0xac
 8003330:	f7fe fed8 	bl	80020e4 <enable_EPS_Batt_Heater_3>
 8003334:	4603      	mov	r3, r0
 8003336:	7023      	strb	r3, [r4, #0]
 8003338:	e003      	b.n	8003342 <handleCySatPacket+0x109a>
 800333a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800333e:	2200      	movs	r2, #0
 8003340:	701a      	strb	r2, [r3, #0]
 8003342:	bf00      	nop
 8003344:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 8003348:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800334c:	f7fe f87e 	bl	800144c <generateCySatChecksum>
 8003350:	4603      	mov	r3, r0
 8003352:	f887 30b0 	strb.w	r3, [r7, #176]	; 0xb0
 8003356:	f107 03a8 	add.w	r3, r7, #168	; 0xa8
 800335a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800335e:	f7fd fff5 	bl	800134c <sendCySatPacket>
 8003362:	4603      	mov	r3, r0
 8003364:	f887 30df 	strb.w	r3, [r7, #223]	; 0xdf
 8003368:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800336c:	4618      	mov	r0, r3
 800336e:	f00a f999 	bl	800d6a4 <free>
 8003372:	f897 30df 	ldrb.w	r3, [r7, #223]	; 0xdf
 8003376:	e00a      	b.n	800338e <handleCySatPacket+0x10e6>
 8003378:	f04f 33ff 	mov.w	r3, #4294967295
 800337c:	e007      	b.n	800338e <handleCySatPacket+0x10e6>
 800337e:	bf00      	nop
 8003380:	e004      	b.n	800338c <handleCySatPacket+0x10e4>
 8003382:	bf00      	nop
 8003384:	e002      	b.n	800338c <handleCySatPacket+0x10e4>
 8003386:	bf00      	nop
 8003388:	e000      	b.n	800338c <handleCySatPacket+0x10e4>
 800338a:	bf00      	nop
 800338c:	2300      	movs	r3, #0
 800338e:	4618      	mov	r0, r3
 8003390:	37e4      	adds	r7, #228	; 0xe4
 8003392:	46bd      	mov	sp, r7
 8003394:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003396:	bf00      	nop

08003398 <START_BEACON>:
/***************************************** BEACON COMMANDS **********************************************************************/

/**
 * @brief Turns on the beacon.
 */
HAL_StatusTypeDef START_BEACON() {
 8003398:	b580      	push	{r7, lr}
 800339a:	b08e      	sub	sp, #56	; 0x38
 800339c:	af00      	add	r7, sp, #0
    uint8_t data[23];
    uint8_t bits[4];
    HAL_StatusTypeDef status = GET_UHF_STATUS(data);
 800339e:	f107 0320 	add.w	r3, r7, #32
 80033a2:	4618      	mov	r0, r3
 80033a4:	f000 fa50 	bl	8003848 <GET_UHF_STATUS>
 80033a8:	4603      	mov	r3, r0
 80033aa:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    if (status != HAL_OK) {
 80033ae:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80033b2:	2b00      	cmp	r3, #0
 80033b4:	d005      	beq.n	80033c2 <START_BEACON+0x2a>
        debug_printf("Beacon Start Fail. Init Status is not ok");
 80033b6:	4824      	ldr	r0, [pc, #144]	; (8003448 <START_BEACON+0xb0>)
 80033b8:	f000 fbf2 	bl	8003ba0 <debug_printf>
        return status;
 80033bc:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 80033c0:	e03e      	b.n	8003440 <START_BEACON+0xa8>
    }

    // Perserve other settings and only enable beacon
    bits[0] = data[9];
 80033c2:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80033c6:	773b      	strb	r3, [r7, #28]
    bits[1] = data[10];
 80033c8:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 80033cc:	777b      	strb	r3, [r7, #29]
    bits[2] = ((data[11] - 0x30) | 0x04) + 0x30; //set bit 6(BCN) to 1
 80033ce:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80033d2:	3b30      	subs	r3, #48	; 0x30
 80033d4:	b2db      	uxtb	r3, r3
 80033d6:	b25b      	sxtb	r3, r3
 80033d8:	f043 0304 	orr.w	r3, r3, #4
 80033dc:	b25b      	sxtb	r3, r3
 80033de:	b2db      	uxtb	r3, r3
 80033e0:	3330      	adds	r3, #48	; 0x30
 80033e2:	b2db      	uxtb	r3, r3
 80033e4:	77bb      	strb	r3, [r7, #30]
    bits[3] = data[13];
 80033e6:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 80033ea:	77fb      	strb	r3, [r7, #31]

    uint8_t command[22];
    command[0] = 'E';
 80033ec:	2345      	movs	r3, #69	; 0x45
 80033ee:	713b      	strb	r3, [r7, #4]
    command[1] = 'S';
 80033f0:	2353      	movs	r3, #83	; 0x53
 80033f2:	717b      	strb	r3, [r7, #5]
    command[2] = '+';
 80033f4:	232b      	movs	r3, #43	; 0x2b
 80033f6:	71bb      	strb	r3, [r7, #6]
    command[3] = 'W';
 80033f8:	2357      	movs	r3, #87	; 0x57
 80033fa:	71fb      	strb	r3, [r7, #7]
    command[4] = '2';
 80033fc:	2332      	movs	r3, #50	; 0x32
 80033fe:	723b      	strb	r3, [r7, #8]
    command[5] = '2';
 8003400:	2332      	movs	r3, #50	; 0x32
 8003402:	727b      	strb	r3, [r7, #9]
    command[6] = '0';
 8003404:	2330      	movs	r3, #48	; 0x30
 8003406:	72bb      	strb	r3, [r7, #10]
    command[7] = '0';
 8003408:	2330      	movs	r3, #48	; 0x30
 800340a:	72fb      	strb	r3, [r7, #11]
    command[8] = bits[0];
 800340c:	7f3b      	ldrb	r3, [r7, #28]
 800340e:	733b      	strb	r3, [r7, #12]
    command[9] = bits[1];
 8003410:	7f7b      	ldrb	r3, [r7, #29]
 8003412:	737b      	strb	r3, [r7, #13]
    command[10] = bits[2];
 8003414:	7fbb      	ldrb	r3, [r7, #30]
 8003416:	73bb      	strb	r3, [r7, #14]
    command[11] = bits[3];
 8003418:	7ffb      	ldrb	r3, [r7, #31]
 800341a:	73fb      	strb	r3, [r7, #15]
    command[12] = ' ';
 800341c:	2320      	movs	r3, #32
 800341e:	743b      	strb	r3, [r7, #16]
    crc32(command, 12, &command[13]);
 8003420:	1d3b      	adds	r3, r7, #4
 8003422:	f103 020d 	add.w	r2, r3, #13
 8003426:	1d3b      	adds	r3, r7, #4
 8003428:	210c      	movs	r1, #12
 800342a:	4618      	mov	r0, r3
 800342c:	f000 fc9c 	bl	8003d68 <crc32>
    command[21] = 0x0D;
 8003430:	230d      	movs	r3, #13
 8003432:	767b      	strb	r3, [r7, #25]

    return UHF_WRITE(command, 22);
 8003434:	1d3b      	adds	r3, r7, #4
 8003436:	2116      	movs	r1, #22
 8003438:	4618      	mov	r0, r3
 800343a:	f000 fb4d 	bl	8003ad8 <UHF_WRITE>
 800343e:	4603      	mov	r3, r0
}
 8003440:	4618      	mov	r0, r3
 8003442:	3738      	adds	r7, #56	; 0x38
 8003444:	46bd      	mov	sp, r7
 8003446:	bd80      	pop	{r7, pc}
 8003448:	08010a20 	.word	0x08010a20

0800344c <END_BEACON>:

/**
 * @brief Turns off the beacon.
 */
HAL_StatusTypeDef END_BEACON() {
 800344c:	b580      	push	{r7, lr}
 800344e:	b08e      	sub	sp, #56	; 0x38
 8003450:	af00      	add	r7, sp, #0
    uint8_t data[23];
    uint8_t bits[4];
    HAL_StatusTypeDef status = GET_UHF_STATUS(data);
 8003452:	f107 0320 	add.w	r3, r7, #32
 8003456:	4618      	mov	r0, r3
 8003458:	f000 f9f6 	bl	8003848 <GET_UHF_STATUS>
 800345c:	4603      	mov	r3, r0
 800345e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
    if (status != HAL_OK) {
 8003462:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003466:	2b00      	cmp	r3, #0
 8003468:	d002      	beq.n	8003470 <END_BEACON+0x24>
        return status;
 800346a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800346e:	e03c      	b.n	80034ea <END_BEACON+0x9e>
    }

    // Perserve other settings and only enable beacon
    bits[0] = data[9];
 8003470:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 8003474:	773b      	strb	r3, [r7, #28]
    bits[1] = data[10];
 8003476:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 800347a:	777b      	strb	r3, [r7, #29]
    bits[2] = ((data[11] - 0x30) & 0xFB) + 0x30; //set bit 6(BCN) to 0
 800347c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8003480:	3b30      	subs	r3, #48	; 0x30
 8003482:	b2db      	uxtb	r3, r3
 8003484:	f023 0304 	bic.w	r3, r3, #4
 8003488:	b2db      	uxtb	r3, r3
 800348a:	3330      	adds	r3, #48	; 0x30
 800348c:	b2db      	uxtb	r3, r3
 800348e:	77bb      	strb	r3, [r7, #30]
    bits[3] = data[13];
 8003490:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8003494:	77fb      	strb	r3, [r7, #31]

    uint8_t command[22];
    command[0] = 'E';
 8003496:	2345      	movs	r3, #69	; 0x45
 8003498:	713b      	strb	r3, [r7, #4]
    command[1] = 'S';
 800349a:	2353      	movs	r3, #83	; 0x53
 800349c:	717b      	strb	r3, [r7, #5]
    command[2] = '+';
 800349e:	232b      	movs	r3, #43	; 0x2b
 80034a0:	71bb      	strb	r3, [r7, #6]
    command[3] = 'W';
 80034a2:	2357      	movs	r3, #87	; 0x57
 80034a4:	71fb      	strb	r3, [r7, #7]
    command[4] = '2';
 80034a6:	2332      	movs	r3, #50	; 0x32
 80034a8:	723b      	strb	r3, [r7, #8]
    command[5] = '2';
 80034aa:	2332      	movs	r3, #50	; 0x32
 80034ac:	727b      	strb	r3, [r7, #9]
    command[6] = '0';
 80034ae:	2330      	movs	r3, #48	; 0x30
 80034b0:	72bb      	strb	r3, [r7, #10]
    command[7] = '0';
 80034b2:	2330      	movs	r3, #48	; 0x30
 80034b4:	72fb      	strb	r3, [r7, #11]
    command[8] = bits[0];
 80034b6:	7f3b      	ldrb	r3, [r7, #28]
 80034b8:	733b      	strb	r3, [r7, #12]
    command[9] = bits[1];
 80034ba:	7f7b      	ldrb	r3, [r7, #29]
 80034bc:	737b      	strb	r3, [r7, #13]
    command[10] = bits[2];
 80034be:	7fbb      	ldrb	r3, [r7, #30]
 80034c0:	73bb      	strb	r3, [r7, #14]
    command[11] = bits[3];
 80034c2:	7ffb      	ldrb	r3, [r7, #31]
 80034c4:	73fb      	strb	r3, [r7, #15]
    command[12] = ' ';
 80034c6:	2320      	movs	r3, #32
 80034c8:	743b      	strb	r3, [r7, #16]
    crc32(command, 12, &command[13]);
 80034ca:	1d3b      	adds	r3, r7, #4
 80034cc:	f103 020d 	add.w	r2, r3, #13
 80034d0:	1d3b      	adds	r3, r7, #4
 80034d2:	210c      	movs	r1, #12
 80034d4:	4618      	mov	r0, r3
 80034d6:	f000 fc47 	bl	8003d68 <crc32>
    command[21] = 0x0D;
 80034da:	230d      	movs	r3, #13
 80034dc:	767b      	strb	r3, [r7, #25]

    return UHF_WRITE(command, 22);
 80034de:	1d3b      	adds	r3, r7, #4
 80034e0:	2116      	movs	r1, #22
 80034e2:	4618      	mov	r0, r3
 80034e4:	f000 faf8 	bl	8003ad8 <UHF_WRITE>
 80034e8:	4603      	mov	r3, r0
}
 80034ea:	4618      	mov	r0, r3
 80034ec:	3738      	adds	r7, #56	; 0x38
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}
	...

080034f4 <SET_BEACON_PERIOD>:
 * minimum is: 1 second
 * Maximum is: 65535 seconds
 *
 * @param period : The period in seconds for the beacon to be set to.
 */
HAL_StatusTypeDef SET_BEACON_PERIOD(uint16_t period) {
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b08c      	sub	sp, #48	; 0x30
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	4603      	mov	r3, r0
 80034fc:	80fb      	strh	r3, [r7, #6]
    uint8_t command[26];
    command[0] = 'E';
 80034fe:	2345      	movs	r3, #69	; 0x45
 8003500:	753b      	strb	r3, [r7, #20]
    command[1] = 'S';
 8003502:	2353      	movs	r3, #83	; 0x53
 8003504:	757b      	strb	r3, [r7, #21]
    command[2] = '+';
 8003506:	232b      	movs	r3, #43	; 0x2b
 8003508:	75bb      	strb	r3, [r7, #22]
    command[3] = 'W';
 800350a:	2357      	movs	r3, #87	; 0x57
 800350c:	75fb      	strb	r3, [r7, #23]
    command[4] = '2';
 800350e:	2332      	movs	r3, #50	; 0x32
 8003510:	763b      	strb	r3, [r7, #24]
    command[5] = '2';
 8003512:	2332      	movs	r3, #50	; 0x32
 8003514:	767b      	strb	r3, [r7, #25]
    command[6] = '0';
 8003516:	2330      	movs	r3, #48	; 0x30
 8003518:	76bb      	strb	r3, [r7, #26]
    command[7] = '7';
 800351a:	2337      	movs	r3, #55	; 0x37
 800351c:	76fb      	strb	r3, [r7, #27]
    command[8] = '0';
 800351e:	2330      	movs	r3, #48	; 0x30
 8003520:	773b      	strb	r3, [r7, #28]
    command[9] = '0';
 8003522:	2330      	movs	r3, #48	; 0x30
 8003524:	777b      	strb	r3, [r7, #29]
    command[10] = '0';
 8003526:	2330      	movs	r3, #48	; 0x30
 8003528:	77bb      	strb	r3, [r7, #30]
    command[11] = '0';
 800352a:	2330      	movs	r3, #48	; 0x30
 800352c:	77fb      	strb	r3, [r7, #31]

    char temp[5];
    sprintf(temp, "%04X", period);
 800352e:	88fa      	ldrh	r2, [r7, #6]
 8003530:	f107 030c 	add.w	r3, r7, #12
 8003534:	4910      	ldr	r1, [pc, #64]	; (8003578 <SET_BEACON_PERIOD+0x84>)
 8003536:	4618      	mov	r0, r3
 8003538:	f00a fe2c 	bl	800e194 <siprintf>
 800353c:	68fb      	ldr	r3, [r7, #12]
    memcpy(&command[12], temp, 4);
 800353e:	623b      	str	r3, [r7, #32]

    command[16] = ' ';
 8003540:	2320      	movs	r3, #32
 8003542:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
    crc32(command, 16, &command[17]);
 8003546:	f107 0314 	add.w	r3, r7, #20
 800354a:	f103 0211 	add.w	r2, r3, #17
 800354e:	f107 0314 	add.w	r3, r7, #20
 8003552:	2110      	movs	r1, #16
 8003554:	4618      	mov	r0, r3
 8003556:	f000 fc07 	bl	8003d68 <crc32>
    command[25] = '\r';
 800355a:	230d      	movs	r3, #13
 800355c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d

    return UHF_WRITE(command, 26);
 8003560:	f107 0314 	add.w	r3, r7, #20
 8003564:	211a      	movs	r1, #26
 8003566:	4618      	mov	r0, r3
 8003568:	f000 fab6 	bl	8003ad8 <UHF_WRITE>
 800356c:	4603      	mov	r3, r0
}
 800356e:	4618      	mov	r0, r3
 8003570:	3730      	adds	r7, #48	; 0x30
 8003572:	46bd      	mov	sp, r7
 8003574:	bd80      	pop	{r7, pc}
 8003576:	bf00      	nop
 8003578:	08010a4c 	.word	0x08010a4c

0800357c <SET_BEACON_TEXT>:
 * @brief This will set the beacon message to any text. Assuming it is within the range of allowed size.
 *
 * @param text : The message to be placed in the beacon.
 * @param size : The size needs to be under 0x62 to fit in the size of endurosat beacon format.
 */
HAL_StatusTypeDef SET_BEACON_TEXT(uint8_t *text, uint8_t size) {
 800357c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003580:	b089      	sub	sp, #36	; 0x24
 8003582:	af00      	add	r7, sp, #0
 8003584:	6078      	str	r0, [r7, #4]
 8003586:	460b      	mov	r3, r1
 8003588:	70fb      	strb	r3, [r7, #3]
 800358a:	466b      	mov	r3, sp
 800358c:	461e      	mov	r6, r3
    if (size >= 0x62) { // To avoid the size limit of 0x62
 800358e:	78fb      	ldrb	r3, [r7, #3]
 8003590:	2b61      	cmp	r3, #97	; 0x61
 8003592:	d904      	bls.n	800359e <SET_BEACON_TEXT+0x22>
        debug_printf("Beacon Text is too long");
 8003594:	4846      	ldr	r0, [pc, #280]	; (80036b0 <SET_BEACON_TEXT+0x134>)
 8003596:	f000 fb03 	bl	8003ba0 <debug_printf>
        return HAL_ERROR;
 800359a:	2301      	movs	r3, #1
 800359c:	e082      	b.n	80036a4 <SET_BEACON_TEXT+0x128>
    }

    int cmdSize = 8 + 2 + size + 1 + 8 +
 800359e:	78fb      	ldrb	r3, [r7, #3]
 80035a0:	3314      	adds	r3, #20
 80035a2:	61bb      	str	r3, [r7, #24]
                  1; // 8 char write cmd, 2 char size, message chars, 1 space, 8 char checksum (crc32), 0x0D

    /* Write command ES+W22FB */
    uint8_t command[cmdSize];
 80035a4:	69b9      	ldr	r1, [r7, #24]
 80035a6:	1e4b      	subs	r3, r1, #1
 80035a8:	617b      	str	r3, [r7, #20]
 80035aa:	460a      	mov	r2, r1
 80035ac:	2300      	movs	r3, #0
 80035ae:	4690      	mov	r8, r2
 80035b0:	4699      	mov	r9, r3
 80035b2:	f04f 0200 	mov.w	r2, #0
 80035b6:	f04f 0300 	mov.w	r3, #0
 80035ba:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80035be:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80035c2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80035c6:	460a      	mov	r2, r1
 80035c8:	2300      	movs	r3, #0
 80035ca:	4614      	mov	r4, r2
 80035cc:	461d      	mov	r5, r3
 80035ce:	f04f 0200 	mov.w	r2, #0
 80035d2:	f04f 0300 	mov.w	r3, #0
 80035d6:	00eb      	lsls	r3, r5, #3
 80035d8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80035dc:	00e2      	lsls	r2, r4, #3
 80035de:	460b      	mov	r3, r1
 80035e0:	3307      	adds	r3, #7
 80035e2:	08db      	lsrs	r3, r3, #3
 80035e4:	00db      	lsls	r3, r3, #3
 80035e6:	ebad 0d03 	sub.w	sp, sp, r3
 80035ea:	466b      	mov	r3, sp
 80035ec:	3300      	adds	r3, #0
 80035ee:	613b      	str	r3, [r7, #16]
    command[0] = 'E';
 80035f0:	693b      	ldr	r3, [r7, #16]
 80035f2:	2245      	movs	r2, #69	; 0x45
 80035f4:	701a      	strb	r2, [r3, #0]
    command[1] = 'S';
 80035f6:	693b      	ldr	r3, [r7, #16]
 80035f8:	2253      	movs	r2, #83	; 0x53
 80035fa:	705a      	strb	r2, [r3, #1]
    command[2] = '+';
 80035fc:	693b      	ldr	r3, [r7, #16]
 80035fe:	222b      	movs	r2, #43	; 0x2b
 8003600:	709a      	strb	r2, [r3, #2]
    command[3] = 'W';
 8003602:	693b      	ldr	r3, [r7, #16]
 8003604:	2257      	movs	r2, #87	; 0x57
 8003606:	70da      	strb	r2, [r3, #3]
    command[4] = '2';
 8003608:	693b      	ldr	r3, [r7, #16]
 800360a:	2232      	movs	r2, #50	; 0x32
 800360c:	711a      	strb	r2, [r3, #4]
    command[5] = '2';
 800360e:	693b      	ldr	r3, [r7, #16]
 8003610:	2232      	movs	r2, #50	; 0x32
 8003612:	715a      	strb	r2, [r3, #5]
    command[6] = 'F';
 8003614:	693b      	ldr	r3, [r7, #16]
 8003616:	2246      	movs	r2, #70	; 0x46
 8003618:	719a      	strb	r2, [r3, #6]
    command[7] = 'B';
 800361a:	693b      	ldr	r3, [r7, #16]
 800361c:	2242      	movs	r2, #66	; 0x42
 800361e:	71da      	strb	r2, [r3, #7]

    /* Append size to command XX */
    char temp[3]; // 8, 9
    sprintf(temp, "%02X", size); // Make size a string
 8003620:	78fa      	ldrb	r2, [r7, #3]
 8003622:	f107 030c 	add.w	r3, r7, #12
 8003626:	4923      	ldr	r1, [pc, #140]	; (80036b4 <SET_BEACON_TEXT+0x138>)
 8003628:	4618      	mov	r0, r3
 800362a:	f00a fdb3 	bl	800e194 <siprintf>
    memcpy(&command[8], temp, 2); // Append size to command
 800362e:	693b      	ldr	r3, [r7, #16]
 8003630:	3308      	adds	r3, #8
 8003632:	89ba      	ldrh	r2, [r7, #12]
 8003634:	801a      	strh	r2, [r3, #0]

    /* Append text */
    int i = 0;
 8003636:	2300      	movs	r3, #0
 8003638:	61fb      	str	r3, [r7, #28]
    while (text[i] != '\0') {
 800363a:	e00a      	b.n	8003652 <SET_BEACON_TEXT+0xd6>
        command[i + 10] = text[i]; // Start at pos 10
 800363c:	69fb      	ldr	r3, [r7, #28]
 800363e:	687a      	ldr	r2, [r7, #4]
 8003640:	441a      	add	r2, r3
 8003642:	69fb      	ldr	r3, [r7, #28]
 8003644:	330a      	adds	r3, #10
 8003646:	7811      	ldrb	r1, [r2, #0]
 8003648:	693a      	ldr	r2, [r7, #16]
 800364a:	54d1      	strb	r1, [r2, r3]
        i++;
 800364c:	69fb      	ldr	r3, [r7, #28]
 800364e:	3301      	adds	r3, #1
 8003650:	61fb      	str	r3, [r7, #28]
    while (text[i] != '\0') {
 8003652:	69fb      	ldr	r3, [r7, #28]
 8003654:	687a      	ldr	r2, [r7, #4]
 8003656:	4413      	add	r3, r2
 8003658:	781b      	ldrb	r3, [r3, #0]
 800365a:	2b00      	cmp	r3, #0
 800365c:	d1ee      	bne.n	800363c <SET_BEACON_TEXT+0xc0>
    }

    /* Add space + checksum to command, 24-31 */
    command[i + 10] = ' '; // 13 + 10 = 23
 800365e:	69fb      	ldr	r3, [r7, #28]
 8003660:	330a      	adds	r3, #10
 8003662:	693a      	ldr	r2, [r7, #16]
 8003664:	2120      	movs	r1, #32
 8003666:	54d1      	strb	r1, [r2, r3]
    crc32(command, i + 10, &command[i + 11]);
 8003668:	69fb      	ldr	r3, [r7, #28]
 800366a:	f103 010a 	add.w	r1, r3, #10
 800366e:	69fb      	ldr	r3, [r7, #28]
 8003670:	330b      	adds	r3, #11
 8003672:	693a      	ldr	r2, [r7, #16]
 8003674:	4413      	add	r3, r2
 8003676:	461a      	mov	r2, r3
 8003678:	6938      	ldr	r0, [r7, #16]
 800367a:	f000 fb75 	bl	8003d68 <crc32>

    /* Append <CR> */
    command[i + 19] = '\r'; // 32
 800367e:	69fb      	ldr	r3, [r7, #28]
 8003680:	3313      	adds	r3, #19
 8003682:	693a      	ldr	r2, [r7, #16]
 8003684:	210d      	movs	r1, #13
 8003686:	54d1      	strb	r1, [r2, r3]

    /* Send to UHF */
    debug_printf("UHF_Write-ing command:");
 8003688:	480b      	ldr	r0, [pc, #44]	; (80036b8 <SET_BEACON_TEXT+0x13c>)
 800368a:	f000 fa89 	bl	8003ba0 <debug_printf>
    debug_printf("%s", command);
 800368e:	6939      	ldr	r1, [r7, #16]
 8003690:	480a      	ldr	r0, [pc, #40]	; (80036bc <SET_BEACON_TEXT+0x140>)
 8003692:	f000 fa85 	bl	8003ba0 <debug_printf>
    return UHF_WRITE(command, cmdSize);
 8003696:	69bb      	ldr	r3, [r7, #24]
 8003698:	b2db      	uxtb	r3, r3
 800369a:	4619      	mov	r1, r3
 800369c:	6938      	ldr	r0, [r7, #16]
 800369e:	f000 fa1b 	bl	8003ad8 <UHF_WRITE>
 80036a2:	4603      	mov	r3, r0
 80036a4:	46b5      	mov	sp, r6
}
 80036a6:	4618      	mov	r0, r3
 80036a8:	3724      	adds	r7, #36	; 0x24
 80036aa:	46bd      	mov	sp, r7
 80036ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036b0:	08010a54 	.word	0x08010a54
 80036b4:	08010a6c 	.word	0x08010a6c
 80036b8:	08010a74 	.word	0x08010a74
 80036bc:	08010a8c 	.word	0x08010a8c

080036c0 <SET_DESTINATION_CALLSIGN>:
/**
 * @brief This will set the destination call sign used in the Ax.25 protocol.
 *
 * @param call_sign : The 6 byte call sign
 */
HAL_StatusTypeDef SET_DESTINATION_CALLSIGN(uint8_t *call_sign) {
 80036c0:	b580      	push	{r7, lr}
 80036c2:	b088      	sub	sp, #32
 80036c4:	af00      	add	r7, sp, #0
 80036c6:	6078      	str	r0, [r7, #4]
    uint8_t command[24];
    command[0] = 'E';
 80036c8:	2345      	movs	r3, #69	; 0x45
 80036ca:	723b      	strb	r3, [r7, #8]
    command[1] = 'S';
 80036cc:	2353      	movs	r3, #83	; 0x53
 80036ce:	727b      	strb	r3, [r7, #9]
    command[2] = '+';
 80036d0:	232b      	movs	r3, #43	; 0x2b
 80036d2:	72bb      	strb	r3, [r7, #10]
    command[3] = 'W';
 80036d4:	2357      	movs	r3, #87	; 0x57
 80036d6:	72fb      	strb	r3, [r7, #11]
    command[4] = '2';
 80036d8:	2332      	movs	r3, #50	; 0x32
 80036da:	733b      	strb	r3, [r7, #12]
    command[5] = '2';
 80036dc:	2332      	movs	r3, #50	; 0x32
 80036de:	737b      	strb	r3, [r7, #13]
    command[6] = 'F';
 80036e0:	2346      	movs	r3, #70	; 0x46
 80036e2:	73bb      	strb	r3, [r7, #14]
    command[7] = '5';
 80036e4:	2335      	movs	r3, #53	; 0x35
 80036e6:	73fb      	strb	r3, [r7, #15]
    command[8] = call_sign[0];
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	781b      	ldrb	r3, [r3, #0]
 80036ec:	743b      	strb	r3, [r7, #16]
    command[9] = call_sign[1];
 80036ee:	687b      	ldr	r3, [r7, #4]
 80036f0:	785b      	ldrb	r3, [r3, #1]
 80036f2:	747b      	strb	r3, [r7, #17]
    command[10] = call_sign[2];
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	789b      	ldrb	r3, [r3, #2]
 80036f8:	74bb      	strb	r3, [r7, #18]
    command[11] = call_sign[3];
 80036fa:	687b      	ldr	r3, [r7, #4]
 80036fc:	78db      	ldrb	r3, [r3, #3]
 80036fe:	74fb      	strb	r3, [r7, #19]
    command[12] = call_sign[4];
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	791b      	ldrb	r3, [r3, #4]
 8003704:	753b      	strb	r3, [r7, #20]
    command[13] = call_sign[5];
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	795b      	ldrb	r3, [r3, #5]
 800370a:	757b      	strb	r3, [r7, #21]
    command[14] = ' ';
 800370c:	2320      	movs	r3, #32
 800370e:	75bb      	strb	r3, [r7, #22]
    crc32(command, 14, &command[15]);
 8003710:	f107 0308 	add.w	r3, r7, #8
 8003714:	f103 020f 	add.w	r2, r3, #15
 8003718:	f107 0308 	add.w	r3, r7, #8
 800371c:	210e      	movs	r1, #14
 800371e:	4618      	mov	r0, r3
 8003720:	f000 fb22 	bl	8003d68 <crc32>
    command[23] = 0x0D;
 8003724:	230d      	movs	r3, #13
 8003726:	77fb      	strb	r3, [r7, #31]
    return UHF_WRITE(command, 24);
 8003728:	f107 0308 	add.w	r3, r7, #8
 800372c:	2118      	movs	r1, #24
 800372e:	4618      	mov	r0, r3
 8003730:	f000 f9d2 	bl	8003ad8 <UHF_WRITE>
 8003734:	4603      	mov	r3, r0
}
 8003736:	4618      	mov	r0, r3
 8003738:	3720      	adds	r7, #32
 800373a:	46bd      	mov	sp, r7
 800373c:	bd80      	pop	{r7, pc}

0800373e <SET_SOURCE_CALLSIGN>:
/**
 * @brief This will set the source call sign used in the Ax.25 protocol.
 *
 * @param call_sign : The 6 byte call sign
 */
HAL_StatusTypeDef SET_SOURCE_CALLSIGN(uint8_t *call_sign) {
 800373e:	b580      	push	{r7, lr}
 8003740:	b088      	sub	sp, #32
 8003742:	af00      	add	r7, sp, #0
 8003744:	6078      	str	r0, [r7, #4]
    uint8_t command[24];
    command[0] = 'E';
 8003746:	2345      	movs	r3, #69	; 0x45
 8003748:	723b      	strb	r3, [r7, #8]
    command[1] = 'S';
 800374a:	2353      	movs	r3, #83	; 0x53
 800374c:	727b      	strb	r3, [r7, #9]
    command[2] = '+';
 800374e:	232b      	movs	r3, #43	; 0x2b
 8003750:	72bb      	strb	r3, [r7, #10]
    command[3] = 'W';
 8003752:	2357      	movs	r3, #87	; 0x57
 8003754:	72fb      	strb	r3, [r7, #11]
    command[4] = '2';
 8003756:	2332      	movs	r3, #50	; 0x32
 8003758:	733b      	strb	r3, [r7, #12]
    command[5] = '2';
 800375a:	2332      	movs	r3, #50	; 0x32
 800375c:	737b      	strb	r3, [r7, #13]
    command[6] = 'F';
 800375e:	2346      	movs	r3, #70	; 0x46
 8003760:	73bb      	strb	r3, [r7, #14]
    command[7] = '6';
 8003762:	2336      	movs	r3, #54	; 0x36
 8003764:	73fb      	strb	r3, [r7, #15]
    command[8] = call_sign[0];
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	781b      	ldrb	r3, [r3, #0]
 800376a:	743b      	strb	r3, [r7, #16]
    command[9] = call_sign[1];
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	785b      	ldrb	r3, [r3, #1]
 8003770:	747b      	strb	r3, [r7, #17]
    command[10] = call_sign[2];
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	789b      	ldrb	r3, [r3, #2]
 8003776:	74bb      	strb	r3, [r7, #18]
    command[11] = call_sign[3];
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	78db      	ldrb	r3, [r3, #3]
 800377c:	74fb      	strb	r3, [r7, #19]
    command[12] = call_sign[4];
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	791b      	ldrb	r3, [r3, #4]
 8003782:	753b      	strb	r3, [r7, #20]
    command[13] = call_sign[5];
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	795b      	ldrb	r3, [r3, #5]
 8003788:	757b      	strb	r3, [r7, #21]
    command[14] = ' ';
 800378a:	2320      	movs	r3, #32
 800378c:	75bb      	strb	r3, [r7, #22]
    crc32(command, 14, &command[15]);
 800378e:	f107 0308 	add.w	r3, r7, #8
 8003792:	f103 020f 	add.w	r2, r3, #15
 8003796:	f107 0308 	add.w	r3, r7, #8
 800379a:	210e      	movs	r1, #14
 800379c:	4618      	mov	r0, r3
 800379e:	f000 fae3 	bl	8003d68 <crc32>
    command[23] = 0x0D;
 80037a2:	230d      	movs	r3, #13
 80037a4:	77fb      	strb	r3, [r7, #31]
    return UHF_WRITE(command, 24);
 80037a6:	f107 0308 	add.w	r3, r7, #8
 80037aa:	2118      	movs	r1, #24
 80037ac:	4618      	mov	r0, r3
 80037ae:	f000 f993 	bl	8003ad8 <UHF_WRITE>
 80037b2:	4603      	mov	r3, r0
}
 80037b4:	4618      	mov	r0, r3
 80037b6:	3720      	adds	r7, #32
 80037b8:	46bd      	mov	sp, r7
 80037ba:	bd80      	pop	{r7, pc}

080037bc <SET_PIPE_TIMEOUT>:
 * minimum is: 1 second
 * Maximum is: 255 seconds
 *
 * @param timeout : The timeout in seconds.
 */
HAL_StatusTypeDef SET_PIPE_TIMEOUT(uint8_t timeout) {
 80037bc:	b580      	push	{r7, lr}
 80037be:	b08a      	sub	sp, #40	; 0x28
 80037c0:	af00      	add	r7, sp, #0
 80037c2:	4603      	mov	r3, r0
 80037c4:	71fb      	strb	r3, [r7, #7]
    uint8_t command[26];
    command[0] = 'E';
 80037c6:	2345      	movs	r3, #69	; 0x45
 80037c8:	733b      	strb	r3, [r7, #12]
    command[1] = 'S';
 80037ca:	2353      	movs	r3, #83	; 0x53
 80037cc:	737b      	strb	r3, [r7, #13]
    command[2] = '+';
 80037ce:	232b      	movs	r3, #43	; 0x2b
 80037d0:	73bb      	strb	r3, [r7, #14]
    command[3] = 'W';
 80037d2:	2357      	movs	r3, #87	; 0x57
 80037d4:	73fb      	strb	r3, [r7, #15]
    command[4] = '2';
 80037d6:	2332      	movs	r3, #50	; 0x32
 80037d8:	743b      	strb	r3, [r7, #16]
    command[5] = '2';
 80037da:	2332      	movs	r3, #50	; 0x32
 80037dc:	747b      	strb	r3, [r7, #17]
    command[6] = '0';
 80037de:	2330      	movs	r3, #48	; 0x30
 80037e0:	74bb      	strb	r3, [r7, #18]
    command[7] = '6';
 80037e2:	2336      	movs	r3, #54	; 0x36
 80037e4:	74fb      	strb	r3, [r7, #19]
    command[8] = '0';
 80037e6:	2330      	movs	r3, #48	; 0x30
 80037e8:	753b      	strb	r3, [r7, #20]
    command[9] = '0';
 80037ea:	2330      	movs	r3, #48	; 0x30
 80037ec:	757b      	strb	r3, [r7, #21]
    command[10] = '0';
 80037ee:	2330      	movs	r3, #48	; 0x30
 80037f0:	75bb      	strb	r3, [r7, #22]
    command[11] = '0';
 80037f2:	2330      	movs	r3, #48	; 0x30
 80037f4:	75fb      	strb	r3, [r7, #23]
    command[12] = '0';
 80037f6:	2330      	movs	r3, #48	; 0x30
 80037f8:	763b      	strb	r3, [r7, #24]
    command[13] = '0';
 80037fa:	2330      	movs	r3, #48	; 0x30
 80037fc:	767b      	strb	r3, [r7, #25]
    char temp[3];
    sprintf(temp, "%02X", timeout);
 80037fe:	79fa      	ldrb	r2, [r7, #7]
 8003800:	f107 0308 	add.w	r3, r7, #8
 8003804:	490f      	ldr	r1, [pc, #60]	; (8003844 <SET_PIPE_TIMEOUT+0x88>)
 8003806:	4618      	mov	r0, r3
 8003808:	f00a fcc4 	bl	800e194 <siprintf>
 800380c:	893b      	ldrh	r3, [r7, #8]
    memcpy(&command[14], temp, 2);
 800380e:	837b      	strh	r3, [r7, #26]
    command[16] = ' ';
 8003810:	2320      	movs	r3, #32
 8003812:	773b      	strb	r3, [r7, #28]
    crc32(command, 16, &command[17]);
 8003814:	f107 030c 	add.w	r3, r7, #12
 8003818:	f103 0211 	add.w	r2, r3, #17
 800381c:	f107 030c 	add.w	r3, r7, #12
 8003820:	2110      	movs	r1, #16
 8003822:	4618      	mov	r0, r3
 8003824:	f000 faa0 	bl	8003d68 <crc32>
    command[25] = 0x0D;
 8003828:	230d      	movs	r3, #13
 800382a:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
    return UHF_WRITE(command, 26);
 800382e:	f107 030c 	add.w	r3, r7, #12
 8003832:	211a      	movs	r1, #26
 8003834:	4618      	mov	r0, r3
 8003836:	f000 f94f 	bl	8003ad8 <UHF_WRITE>
 800383a:	4603      	mov	r3, r0
}
 800383c:	4618      	mov	r0, r3
 800383e:	3728      	adds	r7, #40	; 0x28
 8003840:	46bd      	mov	sp, r7
 8003842:	bd80      	pop	{r7, pc}
 8003844:	08010a6c 	.word	0x08010a6c

08003848 <GET_UHF_STATUS>:
/**
 * @brief Gets the status control word of the uhf and is placed in the data pointer.
 * @param data : A pointer to allow the ESTCC response to be read
 *
 */
HAL_StatusTypeDef GET_UHF_STATUS(uint8_t *data) {
 8003848:	b5b0      	push	{r4, r5, r7, lr}
 800384a:	b088      	sub	sp, #32
 800384c:	af00      	add	r7, sp, #0
 800384e:	6078      	str	r0, [r7, #4]
    uint8_t read_command[] = "ES+R2200 BD888E1F\r";
 8003850:	4b12      	ldr	r3, [pc, #72]	; (800389c <GET_UHF_STATUS+0x54>)
 8003852:	f107 040c 	add.w	r4, r7, #12
 8003856:	461d      	mov	r5, r3
 8003858:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800385a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800385c:	682b      	ldr	r3, [r5, #0]
 800385e:	461a      	mov	r2, r3
 8003860:	8022      	strh	r2, [r4, #0]
 8003862:	3402      	adds	r4, #2
 8003864:	0c1b      	lsrs	r3, r3, #16
 8003866:	7023      	strb	r3, [r4, #0]
    HAL_StatusTypeDef status = UHF_READ(read_command, data, 18, 23);
 8003868:	f107 000c 	add.w	r0, r7, #12
 800386c:	2317      	movs	r3, #23
 800386e:	2212      	movs	r2, #18
 8003870:	6879      	ldr	r1, [r7, #4]
 8003872:	f000 f8f3 	bl	8003a5c <UHF_READ>
 8003876:	4603      	mov	r3, r0
 8003878:	77fb      	strb	r3, [r7, #31]
    if (data[0] != 'O' || data[1] != 'K') {
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	781b      	ldrb	r3, [r3, #0]
 800387e:	2b4f      	cmp	r3, #79	; 0x4f
 8003880:	d104      	bne.n	800388c <GET_UHF_STATUS+0x44>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	3301      	adds	r3, #1
 8003886:	781b      	ldrb	r3, [r3, #0]
 8003888:	2b4b      	cmp	r3, #75	; 0x4b
 800388a:	d001      	beq.n	8003890 <GET_UHF_STATUS+0x48>
        return HAL_ERROR;
 800388c:	2301      	movs	r3, #1
 800388e:	e000      	b.n	8003892 <GET_UHF_STATUS+0x4a>
    }
    return status;
 8003890:	7ffb      	ldrb	r3, [r7, #31]
}
 8003892:	4618      	mov	r0, r3
 8003894:	3720      	adds	r7, #32
 8003896:	46bd      	mov	sp, r7
 8003898:	bdb0      	pop	{r4, r5, r7, pc}
 800389a:	bf00      	nop
 800389c:	08010a90 	.word	0x08010a90

080038a0 <GET_UHF_TEMP>:

/**
 * Reads internal temperature of the UHF in Celsius
 * @param temp: the temperature in Celsius
 */
HAL_StatusTypeDef GET_UHF_TEMP(float *temp) {
 80038a0:	b5b0      	push	{r4, r5, r7, lr}
 80038a2:	b08c      	sub	sp, #48	; 0x30
 80038a4:	af00      	add	r7, sp, #0
 80038a6:	6078      	str	r0, [r7, #4]
    uint8_t command[] = "ES+R220A 9A8ACFB5\r";
 80038a8:	4b6b      	ldr	r3, [pc, #428]	; (8003a58 <GET_UHF_TEMP+0x1b8>)
 80038aa:	f107 041c 	add.w	r4, r7, #28
 80038ae:	461d      	mov	r5, r3
 80038b0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80038b2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80038b4:	682b      	ldr	r3, [r5, #0]
 80038b6:	461a      	mov	r2, r3
 80038b8:	8022      	strh	r2, [r4, #0]
 80038ba:	3402      	adds	r4, #2
 80038bc:	0c1b      	lsrs	r3, r3, #16
 80038be:	7023      	strb	r3, [r4, #0]
    uint8_t response[18];

    HAL_StatusTypeDef status = UHF_READ(command, response, 18, 18);
 80038c0:	f107 0108 	add.w	r1, r7, #8
 80038c4:	f107 001c 	add.w	r0, r7, #28
 80038c8:	2312      	movs	r3, #18
 80038ca:	2212      	movs	r2, #18
 80038cc:	f000 f8c6 	bl	8003a5c <UHF_READ>
 80038d0:	4603      	mov	r3, r0
 80038d2:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    *temp = 0;
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	f04f 0200 	mov.w	r2, #0
 80038dc:	601a      	str	r2, [r3, #0]
    if (status != HAL_OK) {
 80038de:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80038e2:	2b00      	cmp	r3, #0
 80038e4:	d002      	beq.n	80038ec <GET_UHF_TEMP+0x4c>
        return status;
 80038e6:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 80038ea:	e0aa      	b.n	8003a42 <GET_UHF_TEMP+0x1a2>
    }
    if (response[0] != 'O' || response[1] != 'K') {
 80038ec:	7a3b      	ldrb	r3, [r7, #8]
 80038ee:	2b4f      	cmp	r3, #79	; 0x4f
 80038f0:	d102      	bne.n	80038f8 <GET_UHF_TEMP+0x58>
 80038f2:	7a7b      	ldrb	r3, [r7, #9]
 80038f4:	2b4b      	cmp	r3, #75	; 0x4b
 80038f6:	d001      	beq.n	80038fc <GET_UHF_TEMP+0x5c>
        return HAL_ERROR;
 80038f8:	2301      	movs	r3, #1
 80038fa:	e0a2      	b.n	8003a42 <GET_UHF_TEMP+0x1a2>
    }
    (response[4] - 0x30) <= 9 ? (*temp += (response[4] - 0x30) * 10) : (*temp += (response[4] - 0x37) * 10);
 80038fc:	7b3b      	ldrb	r3, [r7, #12]
 80038fe:	2b39      	cmp	r3, #57	; 0x39
 8003900:	d813      	bhi.n	800392a <GET_UHF_TEMP+0x8a>
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	ed93 7a00 	vldr	s14, [r3]
 8003908:	7b3b      	ldrb	r3, [r7, #12]
 800390a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 800390e:	4613      	mov	r3, r2
 8003910:	009b      	lsls	r3, r3, #2
 8003912:	4413      	add	r3, r2
 8003914:	005b      	lsls	r3, r3, #1
 8003916:	ee07 3a90 	vmov	s15, r3
 800391a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800391e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	edc3 7a00 	vstr	s15, [r3]
 8003928:	e012      	b.n	8003950 <GET_UHF_TEMP+0xb0>
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	ed93 7a00 	vldr	s14, [r3]
 8003930:	7b3b      	ldrb	r3, [r7, #12]
 8003932:	f1a3 0237 	sub.w	r2, r3, #55	; 0x37
 8003936:	4613      	mov	r3, r2
 8003938:	009b      	lsls	r3, r3, #2
 800393a:	4413      	add	r3, r2
 800393c:	005b      	lsls	r3, r3, #1
 800393e:	ee07 3a90 	vmov	s15, r3
 8003942:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003946:	ee77 7a27 	vadd.f32	s15, s14, s15
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	edc3 7a00 	vstr	s15, [r3]
    (response[5] - 0x30) <= 9 ? (*temp += (response[5] - 0x30) * 1) : (*temp += (response[5] - 0x37) * 1);
 8003950:	7b7b      	ldrb	r3, [r7, #13]
 8003952:	2b39      	cmp	r3, #57	; 0x39
 8003954:	d80e      	bhi.n	8003974 <GET_UHF_TEMP+0xd4>
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	ed93 7a00 	vldr	s14, [r3]
 800395c:	7b7b      	ldrb	r3, [r7, #13]
 800395e:	3b30      	subs	r3, #48	; 0x30
 8003960:	ee07 3a90 	vmov	s15, r3
 8003964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003968:	ee77 7a27 	vadd.f32	s15, s14, s15
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	edc3 7a00 	vstr	s15, [r3]
 8003972:	e00d      	b.n	8003990 <GET_UHF_TEMP+0xf0>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	ed93 7a00 	vldr	s14, [r3]
 800397a:	7b7b      	ldrb	r3, [r7, #13]
 800397c:	3b37      	subs	r3, #55	; 0x37
 800397e:	ee07 3a90 	vmov	s15, r3
 8003982:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003986:	ee77 7a27 	vadd.f32	s15, s14, s15
 800398a:	687b      	ldr	r3, [r7, #4]
 800398c:	edc3 7a00 	vstr	s15, [r3]
    (response[7] - 0x30) <= 9 ? (*temp += (response[7] - 0x30) * .1) : (*temp += (response[7] - 0x37) * .1);
 8003990:	7bfb      	ldrb	r3, [r7, #15]
 8003992:	2b39      	cmp	r3, #57	; 0x39
 8003994:	d820      	bhi.n	80039d8 <GET_UHF_TEMP+0x138>
 8003996:	687b      	ldr	r3, [r7, #4]
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	4618      	mov	r0, r3
 800399c:	f7fc fde4 	bl	8000568 <__aeabi_f2d>
 80039a0:	4604      	mov	r4, r0
 80039a2:	460d      	mov	r5, r1
 80039a4:	7bfb      	ldrb	r3, [r7, #15]
 80039a6:	3b30      	subs	r3, #48	; 0x30
 80039a8:	4618      	mov	r0, r3
 80039aa:	f7fc fdcb 	bl	8000544 <__aeabi_i2d>
 80039ae:	a328      	add	r3, pc, #160	; (adr r3, 8003a50 <GET_UHF_TEMP+0x1b0>)
 80039b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039b4:	f7fc fe30 	bl	8000618 <__aeabi_dmul>
 80039b8:	4602      	mov	r2, r0
 80039ba:	460b      	mov	r3, r1
 80039bc:	4620      	mov	r0, r4
 80039be:	4629      	mov	r1, r5
 80039c0:	f7fc fc74 	bl	80002ac <__adddf3>
 80039c4:	4602      	mov	r2, r0
 80039c6:	460b      	mov	r3, r1
 80039c8:	4610      	mov	r0, r2
 80039ca:	4619      	mov	r1, r3
 80039cc:	f7fd f8fc 	bl	8000bc8 <__aeabi_d2f>
 80039d0:	4602      	mov	r2, r0
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	601a      	str	r2, [r3, #0]
 80039d6:	e01f      	b.n	8003a18 <GET_UHF_TEMP+0x178>
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	4618      	mov	r0, r3
 80039de:	f7fc fdc3 	bl	8000568 <__aeabi_f2d>
 80039e2:	4604      	mov	r4, r0
 80039e4:	460d      	mov	r5, r1
 80039e6:	7bfb      	ldrb	r3, [r7, #15]
 80039e8:	3b37      	subs	r3, #55	; 0x37
 80039ea:	4618      	mov	r0, r3
 80039ec:	f7fc fdaa 	bl	8000544 <__aeabi_i2d>
 80039f0:	a317      	add	r3, pc, #92	; (adr r3, 8003a50 <GET_UHF_TEMP+0x1b0>)
 80039f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039f6:	f7fc fe0f 	bl	8000618 <__aeabi_dmul>
 80039fa:	4602      	mov	r2, r0
 80039fc:	460b      	mov	r3, r1
 80039fe:	4620      	mov	r0, r4
 8003a00:	4629      	mov	r1, r5
 8003a02:	f7fc fc53 	bl	80002ac <__adddf3>
 8003a06:	4602      	mov	r2, r0
 8003a08:	460b      	mov	r3, r1
 8003a0a:	4610      	mov	r0, r2
 8003a0c:	4619      	mov	r1, r3
 8003a0e:	f7fd f8db 	bl	8000bc8 <__aeabi_d2f>
 8003a12:	4602      	mov	r2, r0
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	601a      	str	r2, [r3, #0]

    if (response[3] == '+')
 8003a18:	7afb      	ldrb	r3, [r7, #11]
 8003a1a:	2b2b      	cmp	r3, #43	; 0x2b
 8003a1c:	d104      	bne.n	8003a28 <GET_UHF_TEMP+0x188>
        *temp = *temp * 1;
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	681a      	ldr	r2, [r3, #0]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	601a      	str	r2, [r3, #0]
 8003a26:	e00a      	b.n	8003a3e <GET_UHF_TEMP+0x19e>
    else if (response[3] == '-')
 8003a28:	7afb      	ldrb	r3, [r7, #11]
 8003a2a:	2b2d      	cmp	r3, #45	; 0x2d
 8003a2c:	d107      	bne.n	8003a3e <GET_UHF_TEMP+0x19e>
        *temp = *temp * -1;
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	edd3 7a00 	vldr	s15, [r3]
 8003a34:	eef1 7a67 	vneg.f32	s15, s15
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	edc3 7a00 	vstr	s15, [r3]

    return status;
 8003a3e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 8003a42:	4618      	mov	r0, r3
 8003a44:	3730      	adds	r7, #48	; 0x30
 8003a46:	46bd      	mov	sp, r7
 8003a48:	bdb0      	pop	{r4, r5, r7, pc}
 8003a4a:	bf00      	nop
 8003a4c:	f3af 8000 	nop.w
 8003a50:	9999999a 	.word	0x9999999a
 8003a54:	3fb99999 	.word	0x3fb99999
 8003a58:	08010b08 	.word	0x08010b08

08003a5c <UHF_READ>:
 * @param command  :the command to be used on the transceiver
 * @param data_ptr :A pointer to allow information from the health check to be viewed.
 * @param in_byte  :The size of the command that is being sent
 * @param out_byte : The size of the expected return./How long to listen for.
 */
HAL_StatusTypeDef UHF_READ(uint8_t command[], uint8_t *data_ptr, uint8_t in_byte, uint8_t out_byte) {
 8003a5c:	b580      	push	{r7, lr}
 8003a5e:	b086      	sub	sp, #24
 8003a60:	af00      	add	r7, sp, #0
 8003a62:	60f8      	str	r0, [r7, #12]
 8003a64:	60b9      	str	r1, [r7, #8]
 8003a66:	4611      	mov	r1, r2
 8003a68:	461a      	mov	r2, r3
 8003a6a:	460b      	mov	r3, r1
 8003a6c:	71fb      	strb	r3, [r7, #7]
 8003a6e:	4613      	mov	r3, r2
 8003a70:	71bb      	strb	r3, [r7, #6]
    osMutexWait(UART_Mutex, 2500);
 8003a72:	4b17      	ldr	r3, [pc, #92]	; (8003ad0 <UHF_READ+0x74>)
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	f640 11c4 	movw	r1, #2500	; 0x9c4
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	f007 f836 	bl	800aaec <osMutexWait>
    HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, command, in_byte, UHF_UART_TIMEOUT);
 8003a80:	79fb      	ldrb	r3, [r7, #7]
 8003a82:	b29a      	uxth	r2, r3
 8003a84:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003a88:	68f9      	ldr	r1, [r7, #12]
 8003a8a:	4812      	ldr	r0, [pc, #72]	; (8003ad4 <UHF_READ+0x78>)
 8003a8c:	f004 fb9f 	bl	80081ce <HAL_UART_Transmit>
 8003a90:	4603      	mov	r3, r0
 8003a92:	75fb      	strb	r3, [r7, #23]
    if (status != HAL_OK) {
 8003a94:	7dfb      	ldrb	r3, [r7, #23]
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d006      	beq.n	8003aa8 <UHF_READ+0x4c>
        osMutexRelease(UART_Mutex);
 8003a9a:	4b0d      	ldr	r3, [pc, #52]	; (8003ad0 <UHF_READ+0x74>)
 8003a9c:	681b      	ldr	r3, [r3, #0]
 8003a9e:	4618      	mov	r0, r3
 8003aa0:	f007 f874 	bl	800ab8c <osMutexRelease>
        return status;
 8003aa4:	7dfb      	ldrb	r3, [r7, #23]
 8003aa6:	e00f      	b.n	8003ac8 <UHF_READ+0x6c>
    }
    status = HAL_UART_Receive(&huart1, data_ptr, out_byte, UHF_UART_TIMEOUT);
 8003aa8:	79bb      	ldrb	r3, [r7, #6]
 8003aaa:	b29a      	uxth	r2, r3
 8003aac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003ab0:	68b9      	ldr	r1, [r7, #8]
 8003ab2:	4808      	ldr	r0, [pc, #32]	; (8003ad4 <UHF_READ+0x78>)
 8003ab4:	f004 fc24 	bl	8008300 <HAL_UART_Receive>
 8003ab8:	4603      	mov	r3, r0
 8003aba:	75fb      	strb	r3, [r7, #23]
    osMutexRelease(UART_Mutex);
 8003abc:	4b04      	ldr	r3, [pc, #16]	; (8003ad0 <UHF_READ+0x74>)
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	4618      	mov	r0, r3
 8003ac2:	f007 f863 	bl	800ab8c <osMutexRelease>
    return status;
 8003ac6:	7dfb      	ldrb	r3, [r7, #23]
}
 8003ac8:	4618      	mov	r0, r3
 8003aca:	3718      	adds	r7, #24
 8003acc:	46bd      	mov	sp, r7
 8003ace:	bd80      	pop	{r7, pc}
 8003ad0:	2000022c 	.word	0x2000022c
 8003ad4:	200006bc 	.word	0x200006bc

08003ad8 <UHF_WRITE>:
/**
 * @brief Sends a write command to the UHF over UART
 * @param command  :the command to be used on the transceiver
 * @param in_byte  :The size of the command that is being sent
 */
HAL_StatusTypeDef UHF_WRITE(uint8_t command[], uint8_t in_byte) {
 8003ad8:	b580      	push	{r7, lr}
 8003ada:	b08a      	sub	sp, #40	; 0x28
 8003adc:	af00      	add	r7, sp, #0
 8003ade:	6078      	str	r0, [r7, #4]
 8003ae0:	460b      	mov	r3, r1
 8003ae2:	70fb      	strb	r3, [r7, #3]
    osMutexWait(UART_Mutex, 2500);
 8003ae4:	4b28      	ldr	r3, [pc, #160]	; (8003b88 <UHF_WRITE+0xb0>)
 8003ae6:	681b      	ldr	r3, [r3, #0]
 8003ae8:	f640 11c4 	movw	r1, #2500	; 0x9c4
 8003aec:	4618      	mov	r0, r3
 8003aee:	f006 fffd 	bl	800aaec <osMutexWait>
    HAL_StatusTypeDef status = HAL_UART_Transmit(&huart1, command, in_byte, UHF_UART_TIMEOUT);
 8003af2:	78fb      	ldrb	r3, [r7, #3]
 8003af4:	b29a      	uxth	r2, r3
 8003af6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003afa:	6879      	ldr	r1, [r7, #4]
 8003afc:	4823      	ldr	r0, [pc, #140]	; (8003b8c <UHF_WRITE+0xb4>)
 8003afe:	f004 fb66 	bl	80081ce <HAL_UART_Transmit>
 8003b02:	4603      	mov	r3, r0
 8003b04:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    if (status != HAL_OK) {
 8003b08:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003b0c:	2b00      	cmp	r3, #0
 8003b0e:	d00a      	beq.n	8003b26 <UHF_WRITE+0x4e>
        debug_printf("UHF_WRITE: UART Tx Fail");
 8003b10:	481f      	ldr	r0, [pc, #124]	; (8003b90 <UHF_WRITE+0xb8>)
 8003b12:	f000 f845 	bl	8003ba0 <debug_printf>
        osMutexRelease(UART_Mutex);
 8003b16:	4b1c      	ldr	r3, [pc, #112]	; (8003b88 <UHF_WRITE+0xb0>)
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	f007 f836 	bl	800ab8c <osMutexRelease>
        return status;
 8003b20:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8003b24:	e02b      	b.n	8003b7e <UHF_WRITE+0xa6>
    }

    uint8_t data[25];
    status = HAL_UART_Receive(&huart1, data, 25, UHF_UART_TIMEOUT);
 8003b26:	f107 010c 	add.w	r1, r7, #12
 8003b2a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003b2e:	2219      	movs	r2, #25
 8003b30:	4816      	ldr	r0, [pc, #88]	; (8003b8c <UHF_WRITE+0xb4>)
 8003b32:	f004 fbe5 	bl	8008300 <HAL_UART_Receive>
 8003b36:	4603      	mov	r3, r0
 8003b38:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
    osMutexRelease(UART_Mutex);
 8003b3c:	4b12      	ldr	r3, [pc, #72]	; (8003b88 <UHF_WRITE+0xb0>)
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	4618      	mov	r0, r3
 8003b42:	f007 f823 	bl	800ab8c <osMutexRelease>
    if (data[0] != 'O' || data[1] != 'K') {
 8003b46:	7b3b      	ldrb	r3, [r7, #12]
 8003b48:	2b4f      	cmp	r3, #79	; 0x4f
 8003b4a:	d102      	bne.n	8003b52 <UHF_WRITE+0x7a>
 8003b4c:	7b7b      	ldrb	r3, [r7, #13]
 8003b4e:	2b4b      	cmp	r3, #75	; 0x4b
 8003b50:	d00a      	beq.n	8003b68 <UHF_WRITE+0x90>
        debug_printf("UHF_WRITE: UART Rx FAIL");
 8003b52:	4810      	ldr	r0, [pc, #64]	; (8003b94 <UHF_WRITE+0xbc>)
 8003b54:	f000 f824 	bl	8003ba0 <debug_printf>
        debug_printf("%s", data); // Error code
 8003b58:	f107 030c 	add.w	r3, r7, #12
 8003b5c:	4619      	mov	r1, r3
 8003b5e:	480e      	ldr	r0, [pc, #56]	; (8003b98 <UHF_WRITE+0xc0>)
 8003b60:	f000 f81e 	bl	8003ba0 <debug_printf>
        return HAL_ERROR;
 8003b64:	2301      	movs	r3, #1
 8003b66:	e00a      	b.n	8003b7e <UHF_WRITE+0xa6>
    }

    debug_printf("%s", data); // Should be "OK"
 8003b68:	f107 030c 	add.w	r3, r7, #12
 8003b6c:	4619      	mov	r1, r3
 8003b6e:	480a      	ldr	r0, [pc, #40]	; (8003b98 <UHF_WRITE+0xc0>)
 8003b70:	f000 f816 	bl	8003ba0 <debug_printf>
    debug_printf("UHF_WRITE: Success");
 8003b74:	4809      	ldr	r0, [pc, #36]	; (8003b9c <UHF_WRITE+0xc4>)
 8003b76:	f000 f813 	bl	8003ba0 <debug_printf>
    return status;
 8003b7a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8003b7e:	4618      	mov	r0, r3
 8003b80:	3728      	adds	r7, #40	; 0x28
 8003b82:	46bd      	mov	sp, r7
 8003b84:	bd80      	pop	{r7, pc}
 8003b86:	bf00      	nop
 8003b88:	2000022c 	.word	0x2000022c
 8003b8c:	200006bc 	.word	0x200006bc
 8003b90:	08010b5c 	.word	0x08010b5c
 8003b94:	08010b74 	.word	0x08010b74
 8003b98:	08010a8c 	.word	0x08010a8c
 8003b9c:	08010b8c 	.word	0x08010b8c

08003ba0 <debug_printf>:
 8003ba0:	b40f      	push	{r0, r1, r2, r3}
 8003ba2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ba6:	b088      	sub	sp, #32
 8003ba8:	af00      	add	r7, sp, #0
 8003baa:	466b      	mov	r3, sp
 8003bac:	4698      	mov	r8, r3
 8003bae:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003bb2:	61bb      	str	r3, [r7, #24]
 8003bb4:	69be      	ldr	r6, [r7, #24]
 8003bb6:	4633      	mov	r3, r6
 8003bb8:	3b01      	subs	r3, #1
 8003bba:	617b      	str	r3, [r7, #20]
 8003bbc:	2300      	movs	r3, #0
 8003bbe:	4634      	mov	r4, r6
 8003bc0:	461d      	mov	r5, r3
 8003bc2:	f04f 0200 	mov.w	r2, #0
 8003bc6:	f04f 0300 	mov.w	r3, #0
 8003bca:	00eb      	lsls	r3, r5, #3
 8003bcc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003bd0:	00e2      	lsls	r2, r4, #3
 8003bd2:	2300      	movs	r3, #0
 8003bd4:	4630      	mov	r0, r6
 8003bd6:	4619      	mov	r1, r3
 8003bd8:	f04f 0200 	mov.w	r2, #0
 8003bdc:	f04f 0300 	mov.w	r3, #0
 8003be0:	00cb      	lsls	r3, r1, #3
 8003be2:	ea43 7350 	orr.w	r3, r3, r0, lsr #29
 8003be6:	00c2      	lsls	r2, r0, #3
 8003be8:	1df3      	adds	r3, r6, #7
 8003bea:	08db      	lsrs	r3, r3, #3
 8003bec:	00db      	lsls	r3, r3, #3
 8003bee:	ebad 0d03 	sub.w	sp, sp, r3
 8003bf2:	466b      	mov	r3, sp
 8003bf4:	3300      	adds	r3, #0
 8003bf6:	613b      	str	r3, [r7, #16]
 8003bf8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8003bfc:	60bb      	str	r3, [r7, #8]
 8003bfe:	68bb      	ldr	r3, [r7, #8]
 8003c00:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003c02:	69b9      	ldr	r1, [r7, #24]
 8003c04:	6938      	ldr	r0, [r7, #16]
 8003c06:	f00a fb11 	bl	800e22c <vsniprintf>
 8003c0a:	60f8      	str	r0, [r7, #12]
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	77fb      	strb	r3, [r7, #31]
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	2b00      	cmp	r3, #0
 8003c14:	dd1b      	ble.n	8003c4e <debug_printf+0xae>
 8003c16:	68fb      	ldr	r3, [r7, #12]
 8003c18:	b29a      	uxth	r2, r3
 8003c1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c1e:	6939      	ldr	r1, [r7, #16]
 8003c20:	4810      	ldr	r0, [pc, #64]	; (8003c64 <debug_printf+0xc4>)
 8003c22:	f004 fad4 	bl	80081ce <HAL_UART_Transmit>
 8003c26:	4603      	mov	r3, r0
 8003c28:	77fb      	strb	r3, [r7, #31]
 8003c2a:	4a0f      	ldr	r2, [pc, #60]	; (8003c68 <debug_printf+0xc8>)
 8003c2c:	1d3b      	adds	r3, r7, #4
 8003c2e:	6812      	ldr	r2, [r2, #0]
 8003c30:	4611      	mov	r1, r2
 8003c32:	8019      	strh	r1, [r3, #0]
 8003c34:	3302      	adds	r3, #2
 8003c36:	0c12      	lsrs	r2, r2, #16
 8003c38:	701a      	strb	r2, [r3, #0]
 8003c3a:	1d39      	adds	r1, r7, #4
 8003c3c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003c40:	2202      	movs	r2, #2
 8003c42:	4808      	ldr	r0, [pc, #32]	; (8003c64 <debug_printf+0xc4>)
 8003c44:	f004 fac3 	bl	80081ce <HAL_UART_Transmit>
 8003c48:	4603      	mov	r3, r0
 8003c4a:	77fb      	strb	r3, [r7, #31]
 8003c4c:	e001      	b.n	8003c52 <debug_printf+0xb2>
 8003c4e:	2301      	movs	r3, #1
 8003c50:	77fb      	strb	r3, [r7, #31]
 8003c52:	7ffb      	ldrb	r3, [r7, #31]
 8003c54:	46c5      	mov	sp, r8
 8003c56:	4618      	mov	r0, r3
 8003c58:	3720      	adds	r7, #32
 8003c5a:	46bd      	mov	sp, r7
 8003c5c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003c60:	b004      	add	sp, #16
 8003c62:	4770      	bx	lr
 8003c64:	200006fc 	.word	0x200006fc
 8003c68:	08010ba0 	.word	0x08010ba0

08003c6c <debug_led_green>:
 8003c6c:	b580      	push	{r7, lr}
 8003c6e:	b084      	sub	sp, #16
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	6078      	str	r0, [r7, #4]
 8003c74:	6039      	str	r1, [r7, #0]
 8003c76:	2300      	movs	r3, #0
 8003c78:	60fb      	str	r3, [r7, #12]
 8003c7a:	e016      	b.n	8003caa <debug_led_green+0x3e>
 8003c7c:	4b0f      	ldr	r3, [pc, #60]	; (8003cbc <debug_led_green+0x50>)
 8003c7e:	695b      	ldr	r3, [r3, #20]
 8003c80:	4a0e      	ldr	r2, [pc, #56]	; (8003cbc <debug_led_green+0x50>)
 8003c82:	f043 0310 	orr.w	r3, r3, #16
 8003c86:	6153      	str	r3, [r2, #20]
 8003c88:	683b      	ldr	r3, [r7, #0]
 8003c8a:	4618      	mov	r0, r3
 8003c8c:	f000 f9d0 	bl	8004030 <HAL_Delay>
 8003c90:	4b0a      	ldr	r3, [pc, #40]	; (8003cbc <debug_led_green+0x50>)
 8003c92:	695b      	ldr	r3, [r3, #20]
 8003c94:	4a09      	ldr	r2, [pc, #36]	; (8003cbc <debug_led_green+0x50>)
 8003c96:	f023 0310 	bic.w	r3, r3, #16
 8003c9a:	6153      	str	r3, [r2, #20]
 8003c9c:	683b      	ldr	r3, [r7, #0]
 8003c9e:	4618      	mov	r0, r3
 8003ca0:	f000 f9c6 	bl	8004030 <HAL_Delay>
 8003ca4:	68fb      	ldr	r3, [r7, #12]
 8003ca6:	3301      	adds	r3, #1
 8003ca8:	60fb      	str	r3, [r7, #12]
 8003caa:	68fa      	ldr	r2, [r7, #12]
 8003cac:	687b      	ldr	r3, [r7, #4]
 8003cae:	429a      	cmp	r2, r3
 8003cb0:	dbe4      	blt.n	8003c7c <debug_led_green+0x10>
 8003cb2:	bf00      	nop
 8003cb4:	bf00      	nop
 8003cb6:	3710      	adds	r7, #16
 8003cb8:	46bd      	mov	sp, r7
 8003cba:	bd80      	pop	{r7, pc}
 8003cbc:	40020800 	.word	0x40020800

08003cc0 <debug_led_amber>:
 8003cc0:	b580      	push	{r7, lr}
 8003cc2:	b084      	sub	sp, #16
 8003cc4:	af00      	add	r7, sp, #0
 8003cc6:	6078      	str	r0, [r7, #4]
 8003cc8:	6039      	str	r1, [r7, #0]
 8003cca:	2300      	movs	r3, #0
 8003ccc:	60fb      	str	r3, [r7, #12]
 8003cce:	e016      	b.n	8003cfe <debug_led_amber+0x3e>
 8003cd0:	4b0f      	ldr	r3, [pc, #60]	; (8003d10 <debug_led_amber+0x50>)
 8003cd2:	695b      	ldr	r3, [r3, #20]
 8003cd4:	4a0e      	ldr	r2, [pc, #56]	; (8003d10 <debug_led_amber+0x50>)
 8003cd6:	f043 0320 	orr.w	r3, r3, #32
 8003cda:	6153      	str	r3, [r2, #20]
 8003cdc:	683b      	ldr	r3, [r7, #0]
 8003cde:	4618      	mov	r0, r3
 8003ce0:	f000 f9a6 	bl	8004030 <HAL_Delay>
 8003ce4:	4b0a      	ldr	r3, [pc, #40]	; (8003d10 <debug_led_amber+0x50>)
 8003ce6:	695b      	ldr	r3, [r3, #20]
 8003ce8:	4a09      	ldr	r2, [pc, #36]	; (8003d10 <debug_led_amber+0x50>)
 8003cea:	f023 0320 	bic.w	r3, r3, #32
 8003cee:	6153      	str	r3, [r2, #20]
 8003cf0:	683b      	ldr	r3, [r7, #0]
 8003cf2:	4618      	mov	r0, r3
 8003cf4:	f000 f99c 	bl	8004030 <HAL_Delay>
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	3301      	adds	r3, #1
 8003cfc:	60fb      	str	r3, [r7, #12]
 8003cfe:	68fa      	ldr	r2, [r7, #12]
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	429a      	cmp	r2, r3
 8003d04:	dbe4      	blt.n	8003cd0 <debug_led_amber+0x10>
 8003d06:	bf00      	nop
 8003d08:	bf00      	nop
 8003d0a:	3710      	adds	r7, #16
 8003d0c:	46bd      	mov	sp, r7
 8003d0e:	bd80      	pop	{r7, pc}
 8003d10:	40020800 	.word	0x40020800

08003d14 <FloatToUnsigned16bits>:
 8003d14:	b480      	push	{r7}
 8003d16:	b085      	sub	sp, #20
 8003d18:	af00      	add	r7, sp, #0
 8003d1a:	ed87 0a01 	vstr	s0, [r7, #4]
 8003d1e:	1d3b      	adds	r3, r7, #4
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	60fb      	str	r3, [r7, #12]
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	0c1b      	lsrs	r3, r3, #16
 8003d28:	b29b      	uxth	r3, r3
 8003d2a:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8003d2e:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8003d32:	b29a      	uxth	r2, r3
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	f003 43ff 	and.w	r3, r3, #2139095040	; 0x7f800000
 8003d3a:	f103 4348 	add.w	r3, r3, #3355443200	; 0xc8000000
 8003d3e:	0b5b      	lsrs	r3, r3, #13
 8003d40:	b29b      	uxth	r3, r3
 8003d42:	f403 43f8 	and.w	r3, r3, #31744	; 0x7c00
 8003d46:	b29b      	uxth	r3, r3
 8003d48:	4313      	orrs	r3, r2
 8003d4a:	b29a      	uxth	r2, r3
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	0b5b      	lsrs	r3, r3, #13
 8003d50:	b29b      	uxth	r3, r3
 8003d52:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8003d56:	b29b      	uxth	r3, r3
 8003d58:	4313      	orrs	r3, r2
 8003d5a:	b29b      	uxth	r3, r3
 8003d5c:	4618      	mov	r0, r3
 8003d5e:	3714      	adds	r7, #20
 8003d60:	46bd      	mov	sp, r7
 8003d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d66:	4770      	bx	lr

08003d68 <crc32>:
 8003d68:	b580      	push	{r7, lr}
 8003d6a:	b08a      	sub	sp, #40	; 0x28
 8003d6c:	af00      	add	r7, sp, #0
 8003d6e:	60f8      	str	r0, [r7, #12]
 8003d70:	60b9      	str	r1, [r7, #8]
 8003d72:	607a      	str	r2, [r7, #4]
 8003d74:	2300      	movs	r3, #0
 8003d76:	627b      	str	r3, [r7, #36]	; 0x24
 8003d78:	f04f 33ff 	mov.w	r3, #4294967295
 8003d7c:	61fb      	str	r3, [r7, #28]
 8003d7e:	e020      	b.n	8003dc2 <crc32+0x5a>
 8003d80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003d82:	68fa      	ldr	r2, [r7, #12]
 8003d84:	4413      	add	r3, r2
 8003d86:	781b      	ldrb	r3, [r3, #0]
 8003d88:	61bb      	str	r3, [r7, #24]
 8003d8a:	69fa      	ldr	r2, [r7, #28]
 8003d8c:	69bb      	ldr	r3, [r7, #24]
 8003d8e:	4053      	eors	r3, r2
 8003d90:	61fb      	str	r3, [r7, #28]
 8003d92:	2307      	movs	r3, #7
 8003d94:	623b      	str	r3, [r7, #32]
 8003d96:	e00e      	b.n	8003db6 <crc32+0x4e>
 8003d98:	69fb      	ldr	r3, [r7, #28]
 8003d9a:	f003 0301 	and.w	r3, r3, #1
 8003d9e:	425b      	negs	r3, r3
 8003da0:	617b      	str	r3, [r7, #20]
 8003da2:	69fb      	ldr	r3, [r7, #28]
 8003da4:	085a      	lsrs	r2, r3, #1
 8003da6:	6979      	ldr	r1, [r7, #20]
 8003da8:	4b0e      	ldr	r3, [pc, #56]	; (8003de4 <crc32+0x7c>)
 8003daa:	400b      	ands	r3, r1
 8003dac:	4053      	eors	r3, r2
 8003dae:	61fb      	str	r3, [r7, #28]
 8003db0:	6a3b      	ldr	r3, [r7, #32]
 8003db2:	3b01      	subs	r3, #1
 8003db4:	623b      	str	r3, [r7, #32]
 8003db6:	6a3b      	ldr	r3, [r7, #32]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	daed      	bge.n	8003d98 <crc32+0x30>
 8003dbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003dbe:	3301      	adds	r3, #1
 8003dc0:	627b      	str	r3, [r7, #36]	; 0x24
 8003dc2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003dc4:	68bb      	ldr	r3, [r7, #8]
 8003dc6:	429a      	cmp	r2, r3
 8003dc8:	dbda      	blt.n	8003d80 <crc32+0x18>
 8003dca:	69fb      	ldr	r3, [r7, #28]
 8003dcc:	43db      	mvns	r3, r3
 8003dce:	61fb      	str	r3, [r7, #28]
 8003dd0:	69fa      	ldr	r2, [r7, #28]
 8003dd2:	4905      	ldr	r1, [pc, #20]	; (8003de8 <crc32+0x80>)
 8003dd4:	6878      	ldr	r0, [r7, #4]
 8003dd6:	f00a f9dd 	bl	800e194 <siprintf>
 8003dda:	69fb      	ldr	r3, [r7, #28]
 8003ddc:	4618      	mov	r0, r3
 8003dde:	3728      	adds	r7, #40	; 0x28
 8003de0:	46bd      	mov	sp, r7
 8003de2:	bd80      	pop	{r7, pc}
 8003de4:	edb88320 	.word	0xedb88320
 8003de8:	08010bf8 	.word	0x08010bf8

08003dec <main>:

/**
 * CySat 1 Mission Execution
 */
int main(void)
{
 8003dec:	b5b0      	push	{r4, r5, r7, lr}
 8003dee:	b09a      	sub	sp, #104	; 0x68
 8003df0:	af00      	add	r7, sp, #0
    debug_printf("ITS RUNNING!");
 8003df2:	4835      	ldr	r0, [pc, #212]	; (8003ec8 <main+0xdc>)
 8003df4:	f7ff fed4 	bl	8003ba0 <debug_printf>
    //SCB->VTOR = APPL_ADDRESS;
    //debug_led_amber(5,500);

    /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
    HAL_Init();
 8003df8:	f000 f8de 	bl	8003fb8 <HAL_Init>

    /* Configure the system clock */
    SystemClock_Config();
 8003dfc:	f005 fdd6 	bl	80099ac <SystemClock_Config>

    //HAL_Delay(INITIAL_WAIT); // Delay for the specified 30 minutes

    /* Initialize all configured peripherals */
    MX_GPIO_Init();
 8003e00:	f005 fe56 	bl	8009ab0 <MX_GPIO_Init>
    MX_I2C1_Init();
 8003e04:	f005 fff0 	bl	8009de8 <MX_I2C1_Init>
    MX_USART1_UART_Init();
 8003e08:	f006 f866 	bl	8009ed8 <MX_USART1_UART_Init>
    MX_UART4_Init();
 8003e0c:	f006 f83a 	bl	8009e84 <MX_UART4_Init>
    MX_USART6_UART_Init();
 8003e10:	f006 f88c 	bl	8009f2c <MX_USART6_UART_Init>
    MX_SDIO_SD_Init();
 8003e14:	f006 f816 	bl	8009e44 <MX_SDIO_SD_Init>
    MX_FATFS_Init();
 8003e18:	f006 f98e 	bl	800a138 <MX_FATFS_Init>
    // Commands the start of data reception because I can't define it in AppTasks.c without having to mess around with #including stuff
    //HAL_UART_Receive_IT(&huart6,GroundStationRxBuffer, 4);
    //HAL_UART_Receive_IT(&huart1,GroundStationRxBuffer, 4);

    /* Initialize task threads */
    osThreadDef(myMainTask, Main_Task, osPriorityRealtime, 0, 512);
 8003e1c:	4b2b      	ldr	r3, [pc, #172]	; (8003ecc <main+0xe0>)
 8003e1e:	f107 0454 	add.w	r4, r7, #84	; 0x54
 8003e22:	461d      	mov	r5, r3
 8003e24:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003e28:	682b      	ldr	r3, [r5, #0]
 8003e2a:	6023      	str	r3, [r4, #0]
    osThreadCreate(osThread(myMainTask), NULL);
 8003e2c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8003e30:	2100      	movs	r1, #0
 8003e32:	4618      	mov	r0, r3
 8003e34:	f006 fe12 	bl	800aa5c <osThreadCreate>

    osThreadDef(myUHFRxTask, UHF_Rx_Task, osPriorityNormal, 0, 512);
 8003e38:	4b25      	ldr	r3, [pc, #148]	; (8003ed0 <main+0xe4>)
 8003e3a:	f107 0440 	add.w	r4, r7, #64	; 0x40
 8003e3e:	461d      	mov	r5, r3
 8003e40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003e44:	682b      	ldr	r3, [r5, #0]
 8003e46:	6023      	str	r3, [r4, #0]
    osThreadCreate(osThread(myUHFRxTask), NULL);
 8003e48:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003e4c:	2100      	movs	r1, #0
 8003e4e:	4618      	mov	r0, r3
 8003e50:	f006 fe04 	bl	800aa5c <osThreadCreate>

    osThreadDef(myUHFTxTask, UHF_Tx_Task, osPriorityNormal, 0, 512);
 8003e54:	4b1f      	ldr	r3, [pc, #124]	; (8003ed4 <main+0xe8>)
 8003e56:	f107 042c 	add.w	r4, r7, #44	; 0x2c
 8003e5a:	461d      	mov	r5, r3
 8003e5c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e5e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003e60:	682b      	ldr	r3, [r5, #0]
 8003e62:	6023      	str	r3, [r4, #0]
    osThreadCreate(osThread(myUHFTxTask), NULL);
 8003e64:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003e68:	2100      	movs	r1, #0
 8003e6a:	4618      	mov	r0, r3
 8003e6c:	f006 fdf6 	bl	800aa5c <osThreadCreate>

    osThreadDef(myADCSTask, ADCS_Task, osPriorityNormal, 0, 1024);
 8003e70:	4b19      	ldr	r3, [pc, #100]	; (8003ed8 <main+0xec>)
 8003e72:	f107 0418 	add.w	r4, r7, #24
 8003e76:	461d      	mov	r5, r3
 8003e78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003e7c:	682b      	ldr	r3, [r5, #0]
 8003e7e:	6023      	str	r3, [r4, #0]
    osThreadCreate(osThread(myADCSTask), NULL);
 8003e80:	f107 0318 	add.w	r3, r7, #24
 8003e84:	2100      	movs	r1, #0
 8003e86:	4618      	mov	r0, r3
 8003e88:	f006 fde8 	bl	800aa5c <osThreadCreate>

    osThreadDef(myBatteryCapacityTask, BatteryCapacity_Task, osPriorityNormal, 0, 256);
 8003e8c:	4b13      	ldr	r3, [pc, #76]	; (8003edc <main+0xf0>)
 8003e8e:	1d3c      	adds	r4, r7, #4
 8003e90:	461d      	mov	r5, r3
 8003e92:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e94:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8003e96:	682b      	ldr	r3, [r5, #0]
 8003e98:	6023      	str	r3, [r4, #0]
    osThreadCreate(osThread(myBatteryCapacityTask), NULL);
 8003e9a:	1d3b      	adds	r3, r7, #4
 8003e9c:	2100      	movs	r1, #0
 8003e9e:	4618      	mov	r0, r3
 8003ea0:	f006 fddc 	bl	800aa5c <osThreadCreate>

    /* Start scheduler */
    osKernelStart();
 8003ea4:	f006 fdc3 	bl	800aa2e <osKernelStart>
    // Enable Transparent Mode
    // TODO: Send command to UHF transceiver to enable transparent mode

    // Detumbling Sequence
    // TODO: Detumbling functions (ADCS) go here
    debug_printf("Beginning detumbling sequence (unfinished)");
 8003ea8:	480d      	ldr	r0, [pc, #52]	; (8003ee0 <main+0xf4>)
 8003eaa:	f7ff fe79 	bl	8003ba0 <debug_printf>
    */

   // HAL_Delay(15000); // Delay for 15 seconds to allow ADCS to boot-up in application mode

    /* Receive via STM UART */
    GroundStationRxDataLength = 4;
 8003eae:	4b0d      	ldr	r3, [pc, #52]	; (8003ee4 <main+0xf8>)
 8003eb0:	2204      	movs	r2, #4
 8003eb2:	601a      	str	r2, [r3, #0]
    HAL_UART_Receive_IT(&huart6, (uint8_t*) &GroundStationRxBuffer, 4);
 8003eb4:	2204      	movs	r2, #4
 8003eb6:	490c      	ldr	r1, [pc, #48]	; (8003ee8 <main+0xfc>)
 8003eb8:	480c      	ldr	r0, [pc, #48]	; (8003eec <main+0x100>)
 8003eba:	f004 facd 	bl	8008458 <HAL_UART_Receive_IT>
 8003ebe:	2300      	movs	r3, #0
}
 8003ec0:	4618      	mov	r0, r3
 8003ec2:	3768      	adds	r7, #104	; 0x68
 8003ec4:	46bd      	mov	sp, r7
 8003ec6:	bdb0      	pop	{r4, r5, r7, pc}
 8003ec8:	08010c44 	.word	0x08010c44
 8003ecc:	08010c80 	.word	0x08010c80
 8003ed0:	08010c94 	.word	0x08010c94
 8003ed4:	08010ca8 	.word	0x08010ca8
 8003ed8:	08010cbc 	.word	0x08010cbc
 8003edc:	08010cd0 	.word	0x08010cd0
 8003ee0:	08010c54 	.word	0x08010c54
 8003ee4:	2000021c 	.word	0x2000021c
 8003ee8:	20000214 	.word	0x20000214
 8003eec:	200006fc 	.word	0x200006fc

08003ef0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003ef0:	b580      	push	{r7, lr}
 8003ef2:	b082      	sub	sp, #8
 8003ef4:	af00      	add	r7, sp, #0
 8003ef6:	6078      	str	r0, [r7, #4]
/* USER CODE BEGIN Callback 0 */

/* USER CODE END Callback 0 */
  if (htim->Instance == TIM1) {
 8003ef8:	687b      	ldr	r3, [r7, #4]
 8003efa:	681b      	ldr	r3, [r3, #0]
 8003efc:	4a04      	ldr	r2, [pc, #16]	; (8003f10 <HAL_TIM_PeriodElapsedCallback+0x20>)
 8003efe:	4293      	cmp	r3, r2
 8003f00:	d101      	bne.n	8003f06 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 8003f02:	f000 f87b 	bl	8003ffc <HAL_IncTick>
  }
/* USER CODE BEGIN Callback 1 */

/* USER CODE END Callback 1 */
}
 8003f06:	bf00      	nop
 8003f08:	3708      	adds	r7, #8
 8003f0a:	46bd      	mov	sp, r7
 8003f0c:	bd80      	pop	{r7, pc}
 8003f0e:	bf00      	nop
 8003f10:	40010000 	.word	0x40010000

08003f14 <Error_Handler>:
  * @brief  This function is executed in case of error occurrence.
  * @param  None
  * @retval None
  */
void Error_Handler(void)
{
 8003f14:	b580      	push	{r7, lr}
 8003f16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler */
  /* User can add his own implementation to report the HAL error return state */
#ifdef DEBUG_ENABLE
  while(1)
  {
      debug_led_green(5, 2000);
 8003f18:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003f1c:	2005      	movs	r0, #5
 8003f1e:	f7ff fea5 	bl	8003c6c <debug_led_green>
      debug_led_amber(5, 2000);
 8003f22:	f44f 61fa 	mov.w	r1, #2000	; 0x7d0
 8003f26:	2005      	movs	r0, #5
 8003f28:	f7ff feca 	bl	8003cc0 <debug_led_amber>
      debug_led_green(5, 2000);
 8003f2c:	e7f4      	b.n	8003f18 <Error_Handler+0x4>
	...

08003f30 <HAL_UART_RxCpltCallback>:
{
    Error_Handler();
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8003f30:	b580      	push	{r7, lr}
 8003f32:	b088      	sub	sp, #32
 8003f34:	af00      	add	r7, sp, #0
 8003f36:	6078      	str	r0, [r7, #4]
    if(huart == &huart6){ //OBC connected to Payload/USB
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	4a1c      	ldr	r2, [pc, #112]	; (8003fac <HAL_UART_RxCpltCallback+0x7c>)
 8003f3c:	4293      	cmp	r3, r2
 8003f3e:	d116      	bne.n	8003f6e <HAL_UART_RxCpltCallback+0x3e>
        if(handleCySatPacket(parseCySatPacket(GroundStationRxBuffer)) == -1){ //error occurred
 8003f40:	f107 0308 	add.w	r3, r7, #8
 8003f44:	491a      	ldr	r1, [pc, #104]	; (8003fb0 <HAL_UART_RxCpltCallback+0x80>)
 8003f46:	4618      	mov	r0, r3
 8003f48:	f7fd f9d2 	bl	80012f0 <parseCySatPacket>
 8003f4c:	f107 0308 	add.w	r3, r7, #8
 8003f50:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003f54:	f7fe f9a8 	bl	80022a8 <handleCySatPacket>
 8003f58:	4603      	mov	r3, r0
 8003f5a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f5e:	d101      	bne.n	8003f64 <HAL_UART_RxCpltCallback+0x34>
            sendErrorPacket();
 8003f60:	f7fe f97c 	bl	800225c <sendErrorPacket>
        }
        HAL_UART_Receive_IT(&huart6,GroundStationRxBuffer, 4);
 8003f64:	2204      	movs	r2, #4
 8003f66:	4912      	ldr	r1, [pc, #72]	; (8003fb0 <HAL_UART_RxCpltCallback+0x80>)
 8003f68:	4810      	ldr	r0, [pc, #64]	; (8003fac <HAL_UART_RxCpltCallback+0x7c>)
 8003f6a:	f004 fa75 	bl	8008458 <HAL_UART_Receive_IT>
    }
    if(huart == &huart1){ //I think this is for the UHF transceiver but I'm not sure -Steven
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	4a10      	ldr	r2, [pc, #64]	; (8003fb4 <HAL_UART_RxCpltCallback+0x84>)
 8003f72:	4293      	cmp	r3, r2
 8003f74:	d116      	bne.n	8003fa4 <HAL_UART_RxCpltCallback+0x74>
        if(handleCySatPacket(parseCySatPacket(GroundStationRxBuffer)) == -1){ //error occurred
 8003f76:	f107 0314 	add.w	r3, r7, #20
 8003f7a:	490d      	ldr	r1, [pc, #52]	; (8003fb0 <HAL_UART_RxCpltCallback+0x80>)
 8003f7c:	4618      	mov	r0, r3
 8003f7e:	f7fd f9b7 	bl	80012f0 <parseCySatPacket>
 8003f82:	f107 0314 	add.w	r3, r7, #20
 8003f86:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003f8a:	f7fe f98d 	bl	80022a8 <handleCySatPacket>
 8003f8e:	4603      	mov	r3, r0
 8003f90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003f94:	d101      	bne.n	8003f9a <HAL_UART_RxCpltCallback+0x6a>
            sendErrorPacket();
 8003f96:	f7fe f961 	bl	800225c <sendErrorPacket>
        }
        HAL_UART_Receive_IT(&huart1,GroundStationRxBuffer, 4);
 8003f9a:	2204      	movs	r2, #4
 8003f9c:	4904      	ldr	r1, [pc, #16]	; (8003fb0 <HAL_UART_RxCpltCallback+0x80>)
 8003f9e:	4805      	ldr	r0, [pc, #20]	; (8003fb4 <HAL_UART_RxCpltCallback+0x84>)
 8003fa0:	f004 fa5a 	bl	8008458 <HAL_UART_Receive_IT>
    }
}
 8003fa4:	bf00      	nop
 8003fa6:	3720      	adds	r7, #32
 8003fa8:	46bd      	mov	sp, r7
 8003faa:	bd80      	pop	{r7, pc}
 8003fac:	200006fc 	.word	0x200006fc
 8003fb0:	20000214 	.word	0x20000214
 8003fb4:	200006bc 	.word	0x200006bc

08003fb8 <HAL_Init>:
 8003fb8:	b580      	push	{r7, lr}
 8003fba:	af00      	add	r7, sp, #0
 8003fbc:	4b0e      	ldr	r3, [pc, #56]	; (8003ff8 <HAL_Init+0x40>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	4a0d      	ldr	r2, [pc, #52]	; (8003ff8 <HAL_Init+0x40>)
 8003fc2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8003fc6:	6013      	str	r3, [r2, #0]
 8003fc8:	4b0b      	ldr	r3, [pc, #44]	; (8003ff8 <HAL_Init+0x40>)
 8003fca:	681b      	ldr	r3, [r3, #0]
 8003fcc:	4a0a      	ldr	r2, [pc, #40]	; (8003ff8 <HAL_Init+0x40>)
 8003fce:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8003fd2:	6013      	str	r3, [r2, #0]
 8003fd4:	4b08      	ldr	r3, [pc, #32]	; (8003ff8 <HAL_Init+0x40>)
 8003fd6:	681b      	ldr	r3, [r3, #0]
 8003fd8:	4a07      	ldr	r2, [pc, #28]	; (8003ff8 <HAL_Init+0x40>)
 8003fda:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003fde:	6013      	str	r3, [r2, #0]
 8003fe0:	2003      	movs	r0, #3
 8003fe2:	f000 f90f 	bl	8004204 <HAL_NVIC_SetPriorityGrouping>
 8003fe6:	200f      	movs	r0, #15
 8003fe8:	f006 fb9a 	bl	800a720 <HAL_InitTick>
 8003fec:	f006 f9bc 	bl	800a368 <HAL_MspInit>
 8003ff0:	2300      	movs	r3, #0
 8003ff2:	4618      	mov	r0, r3
 8003ff4:	bd80      	pop	{r7, pc}
 8003ff6:	bf00      	nop
 8003ff8:	40023c00 	.word	0x40023c00

08003ffc <HAL_IncTick>:
 8003ffc:	b480      	push	{r7}
 8003ffe:	af00      	add	r7, sp, #0
 8004000:	4b04      	ldr	r3, [pc, #16]	; (8004014 <HAL_IncTick+0x18>)
 8004002:	681b      	ldr	r3, [r3, #0]
 8004004:	3301      	adds	r3, #1
 8004006:	4a03      	ldr	r2, [pc, #12]	; (8004014 <HAL_IncTick+0x18>)
 8004008:	6013      	str	r3, [r2, #0]
 800400a:	bf00      	nop
 800400c:	46bd      	mov	sp, r7
 800400e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004012:	4770      	bx	lr
 8004014:	20000254 	.word	0x20000254

08004018 <HAL_GetTick>:
 8004018:	b480      	push	{r7}
 800401a:	af00      	add	r7, sp, #0
 800401c:	4b03      	ldr	r3, [pc, #12]	; (800402c <HAL_GetTick+0x14>)
 800401e:	681b      	ldr	r3, [r3, #0]
 8004020:	4618      	mov	r0, r3
 8004022:	46bd      	mov	sp, r7
 8004024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004028:	4770      	bx	lr
 800402a:	bf00      	nop
 800402c:	20000254 	.word	0x20000254

08004030 <HAL_Delay>:
 8004030:	b580      	push	{r7, lr}
 8004032:	b084      	sub	sp, #16
 8004034:	af00      	add	r7, sp, #0
 8004036:	6078      	str	r0, [r7, #4]
 8004038:	f7ff ffee 	bl	8004018 <HAL_GetTick>
 800403c:	60b8      	str	r0, [r7, #8]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	60fb      	str	r3, [r7, #12]
 8004042:	68fb      	ldr	r3, [r7, #12]
 8004044:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004048:	d002      	beq.n	8004050 <HAL_Delay+0x20>
 800404a:	68fb      	ldr	r3, [r7, #12]
 800404c:	3301      	adds	r3, #1
 800404e:	60fb      	str	r3, [r7, #12]
 8004050:	bf00      	nop
 8004052:	f7ff ffe1 	bl	8004018 <HAL_GetTick>
 8004056:	4602      	mov	r2, r0
 8004058:	68bb      	ldr	r3, [r7, #8]
 800405a:	1ad3      	subs	r3, r2, r3
 800405c:	68fa      	ldr	r2, [r7, #12]
 800405e:	429a      	cmp	r2, r3
 8004060:	d8f7      	bhi.n	8004052 <HAL_Delay+0x22>
 8004062:	bf00      	nop
 8004064:	bf00      	nop
 8004066:	3710      	adds	r7, #16
 8004068:	46bd      	mov	sp, r7
 800406a:	bd80      	pop	{r7, pc}

0800406c <NVIC_SetPriorityGrouping>:
 800406c:	b480      	push	{r7}
 800406e:	b085      	sub	sp, #20
 8004070:	af00      	add	r7, sp, #0
 8004072:	6078      	str	r0, [r7, #4]
 8004074:	687b      	ldr	r3, [r7, #4]
 8004076:	f003 0307 	and.w	r3, r3, #7
 800407a:	60fb      	str	r3, [r7, #12]
 800407c:	4b0c      	ldr	r3, [pc, #48]	; (80040b0 <NVIC_SetPriorityGrouping+0x44>)
 800407e:	68db      	ldr	r3, [r3, #12]
 8004080:	60bb      	str	r3, [r7, #8]
 8004082:	68ba      	ldr	r2, [r7, #8]
 8004084:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004088:	4013      	ands	r3, r2
 800408a:	60bb      	str	r3, [r7, #8]
 800408c:	68fb      	ldr	r3, [r7, #12]
 800408e:	021a      	lsls	r2, r3, #8
 8004090:	68bb      	ldr	r3, [r7, #8]
 8004092:	4313      	orrs	r3, r2
 8004094:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004098:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800409c:	60bb      	str	r3, [r7, #8]
 800409e:	4a04      	ldr	r2, [pc, #16]	; (80040b0 <NVIC_SetPriorityGrouping+0x44>)
 80040a0:	68bb      	ldr	r3, [r7, #8]
 80040a2:	60d3      	str	r3, [r2, #12]
 80040a4:	bf00      	nop
 80040a6:	3714      	adds	r7, #20
 80040a8:	46bd      	mov	sp, r7
 80040aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ae:	4770      	bx	lr
 80040b0:	e000ed00 	.word	0xe000ed00

080040b4 <NVIC_GetPriorityGrouping>:
 80040b4:	b480      	push	{r7}
 80040b6:	af00      	add	r7, sp, #0
 80040b8:	4b04      	ldr	r3, [pc, #16]	; (80040cc <NVIC_GetPriorityGrouping+0x18>)
 80040ba:	68db      	ldr	r3, [r3, #12]
 80040bc:	0a1b      	lsrs	r3, r3, #8
 80040be:	f003 0307 	and.w	r3, r3, #7
 80040c2:	4618      	mov	r0, r3
 80040c4:	46bd      	mov	sp, r7
 80040c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ca:	4770      	bx	lr
 80040cc:	e000ed00 	.word	0xe000ed00

080040d0 <NVIC_EnableIRQ>:
 80040d0:	b480      	push	{r7}
 80040d2:	b083      	sub	sp, #12
 80040d4:	af00      	add	r7, sp, #0
 80040d6:	4603      	mov	r3, r0
 80040d8:	71fb      	strb	r3, [r7, #7]
 80040da:	79fb      	ldrb	r3, [r7, #7]
 80040dc:	f003 021f 	and.w	r2, r3, #31
 80040e0:	4907      	ldr	r1, [pc, #28]	; (8004100 <NVIC_EnableIRQ+0x30>)
 80040e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80040e6:	095b      	lsrs	r3, r3, #5
 80040e8:	2001      	movs	r0, #1
 80040ea:	fa00 f202 	lsl.w	r2, r0, r2
 80040ee:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80040f2:	bf00      	nop
 80040f4:	370c      	adds	r7, #12
 80040f6:	46bd      	mov	sp, r7
 80040f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040fc:	4770      	bx	lr
 80040fe:	bf00      	nop
 8004100:	e000e100 	.word	0xe000e100

08004104 <NVIC_SetPriority>:
 8004104:	b480      	push	{r7}
 8004106:	b083      	sub	sp, #12
 8004108:	af00      	add	r7, sp, #0
 800410a:	4603      	mov	r3, r0
 800410c:	6039      	str	r1, [r7, #0]
 800410e:	71fb      	strb	r3, [r7, #7]
 8004110:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004114:	2b00      	cmp	r3, #0
 8004116:	da0b      	bge.n	8004130 <NVIC_SetPriority+0x2c>
 8004118:	683b      	ldr	r3, [r7, #0]
 800411a:	b2da      	uxtb	r2, r3
 800411c:	490c      	ldr	r1, [pc, #48]	; (8004150 <NVIC_SetPriority+0x4c>)
 800411e:	79fb      	ldrb	r3, [r7, #7]
 8004120:	f003 030f 	and.w	r3, r3, #15
 8004124:	3b04      	subs	r3, #4
 8004126:	0112      	lsls	r2, r2, #4
 8004128:	b2d2      	uxtb	r2, r2
 800412a:	440b      	add	r3, r1
 800412c:	761a      	strb	r2, [r3, #24]
 800412e:	e009      	b.n	8004144 <NVIC_SetPriority+0x40>
 8004130:	683b      	ldr	r3, [r7, #0]
 8004132:	b2da      	uxtb	r2, r3
 8004134:	4907      	ldr	r1, [pc, #28]	; (8004154 <NVIC_SetPriority+0x50>)
 8004136:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800413a:	0112      	lsls	r2, r2, #4
 800413c:	b2d2      	uxtb	r2, r2
 800413e:	440b      	add	r3, r1
 8004140:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004144:	bf00      	nop
 8004146:	370c      	adds	r7, #12
 8004148:	46bd      	mov	sp, r7
 800414a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800414e:	4770      	bx	lr
 8004150:	e000ed00 	.word	0xe000ed00
 8004154:	e000e100 	.word	0xe000e100

08004158 <NVIC_EncodePriority>:
 8004158:	b480      	push	{r7}
 800415a:	b089      	sub	sp, #36	; 0x24
 800415c:	af00      	add	r7, sp, #0
 800415e:	60f8      	str	r0, [r7, #12]
 8004160:	60b9      	str	r1, [r7, #8]
 8004162:	607a      	str	r2, [r7, #4]
 8004164:	68fb      	ldr	r3, [r7, #12]
 8004166:	f003 0307 	and.w	r3, r3, #7
 800416a:	61fb      	str	r3, [r7, #28]
 800416c:	69fb      	ldr	r3, [r7, #28]
 800416e:	f1c3 0307 	rsb	r3, r3, #7
 8004172:	2b04      	cmp	r3, #4
 8004174:	bf28      	it	cs
 8004176:	2304      	movcs	r3, #4
 8004178:	61bb      	str	r3, [r7, #24]
 800417a:	69fb      	ldr	r3, [r7, #28]
 800417c:	3304      	adds	r3, #4
 800417e:	2b06      	cmp	r3, #6
 8004180:	d902      	bls.n	8004188 <NVIC_EncodePriority+0x30>
 8004182:	69fb      	ldr	r3, [r7, #28]
 8004184:	3b03      	subs	r3, #3
 8004186:	e000      	b.n	800418a <NVIC_EncodePriority+0x32>
 8004188:	2300      	movs	r3, #0
 800418a:	617b      	str	r3, [r7, #20]
 800418c:	f04f 32ff 	mov.w	r2, #4294967295
 8004190:	69bb      	ldr	r3, [r7, #24]
 8004192:	fa02 f303 	lsl.w	r3, r2, r3
 8004196:	43da      	mvns	r2, r3
 8004198:	68bb      	ldr	r3, [r7, #8]
 800419a:	401a      	ands	r2, r3
 800419c:	697b      	ldr	r3, [r7, #20]
 800419e:	409a      	lsls	r2, r3
 80041a0:	f04f 31ff 	mov.w	r1, #4294967295
 80041a4:	697b      	ldr	r3, [r7, #20]
 80041a6:	fa01 f303 	lsl.w	r3, r1, r3
 80041aa:	43d9      	mvns	r1, r3
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	400b      	ands	r3, r1
 80041b0:	4313      	orrs	r3, r2
 80041b2:	4618      	mov	r0, r3
 80041b4:	3724      	adds	r7, #36	; 0x24
 80041b6:	46bd      	mov	sp, r7
 80041b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041bc:	4770      	bx	lr
	...

080041c0 <SysTick_Config>:
 80041c0:	b580      	push	{r7, lr}
 80041c2:	b082      	sub	sp, #8
 80041c4:	af00      	add	r7, sp, #0
 80041c6:	6078      	str	r0, [r7, #4]
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	3b01      	subs	r3, #1
 80041cc:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80041d0:	d301      	bcc.n	80041d6 <SysTick_Config+0x16>
 80041d2:	2301      	movs	r3, #1
 80041d4:	e00f      	b.n	80041f6 <SysTick_Config+0x36>
 80041d6:	4a0a      	ldr	r2, [pc, #40]	; (8004200 <SysTick_Config+0x40>)
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	3b01      	subs	r3, #1
 80041dc:	6053      	str	r3, [r2, #4]
 80041de:	210f      	movs	r1, #15
 80041e0:	f04f 30ff 	mov.w	r0, #4294967295
 80041e4:	f7ff ff8e 	bl	8004104 <NVIC_SetPriority>
 80041e8:	4b05      	ldr	r3, [pc, #20]	; (8004200 <SysTick_Config+0x40>)
 80041ea:	2200      	movs	r2, #0
 80041ec:	609a      	str	r2, [r3, #8]
 80041ee:	4b04      	ldr	r3, [pc, #16]	; (8004200 <SysTick_Config+0x40>)
 80041f0:	2207      	movs	r2, #7
 80041f2:	601a      	str	r2, [r3, #0]
 80041f4:	2300      	movs	r3, #0
 80041f6:	4618      	mov	r0, r3
 80041f8:	3708      	adds	r7, #8
 80041fa:	46bd      	mov	sp, r7
 80041fc:	bd80      	pop	{r7, pc}
 80041fe:	bf00      	nop
 8004200:	e000e010 	.word	0xe000e010

08004204 <HAL_NVIC_SetPriorityGrouping>:
 8004204:	b580      	push	{r7, lr}
 8004206:	b082      	sub	sp, #8
 8004208:	af00      	add	r7, sp, #0
 800420a:	6078      	str	r0, [r7, #4]
 800420c:	6878      	ldr	r0, [r7, #4]
 800420e:	f7ff ff2d 	bl	800406c <NVIC_SetPriorityGrouping>
 8004212:	bf00      	nop
 8004214:	3708      	adds	r7, #8
 8004216:	46bd      	mov	sp, r7
 8004218:	bd80      	pop	{r7, pc}

0800421a <HAL_NVIC_SetPriority>:
 800421a:	b580      	push	{r7, lr}
 800421c:	b086      	sub	sp, #24
 800421e:	af00      	add	r7, sp, #0
 8004220:	4603      	mov	r3, r0
 8004222:	60b9      	str	r1, [r7, #8]
 8004224:	607a      	str	r2, [r7, #4]
 8004226:	73fb      	strb	r3, [r7, #15]
 8004228:	2300      	movs	r3, #0
 800422a:	617b      	str	r3, [r7, #20]
 800422c:	f7ff ff42 	bl	80040b4 <NVIC_GetPriorityGrouping>
 8004230:	6178      	str	r0, [r7, #20]
 8004232:	687a      	ldr	r2, [r7, #4]
 8004234:	68b9      	ldr	r1, [r7, #8]
 8004236:	6978      	ldr	r0, [r7, #20]
 8004238:	f7ff ff8e 	bl	8004158 <NVIC_EncodePriority>
 800423c:	4602      	mov	r2, r0
 800423e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004242:	4611      	mov	r1, r2
 8004244:	4618      	mov	r0, r3
 8004246:	f7ff ff5d 	bl	8004104 <NVIC_SetPriority>
 800424a:	bf00      	nop
 800424c:	3718      	adds	r7, #24
 800424e:	46bd      	mov	sp, r7
 8004250:	bd80      	pop	{r7, pc}

08004252 <HAL_NVIC_EnableIRQ>:
 8004252:	b580      	push	{r7, lr}
 8004254:	b082      	sub	sp, #8
 8004256:	af00      	add	r7, sp, #0
 8004258:	4603      	mov	r3, r0
 800425a:	71fb      	strb	r3, [r7, #7]
 800425c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004260:	4618      	mov	r0, r3
 8004262:	f7ff ff35 	bl	80040d0 <NVIC_EnableIRQ>
 8004266:	bf00      	nop
 8004268:	3708      	adds	r7, #8
 800426a:	46bd      	mov	sp, r7
 800426c:	bd80      	pop	{r7, pc}

0800426e <HAL_SYSTICK_Config>:
 800426e:	b580      	push	{r7, lr}
 8004270:	b082      	sub	sp, #8
 8004272:	af00      	add	r7, sp, #0
 8004274:	6078      	str	r0, [r7, #4]
 8004276:	6878      	ldr	r0, [r7, #4]
 8004278:	f7ff ffa2 	bl	80041c0 <SysTick_Config>
 800427c:	4603      	mov	r3, r0
 800427e:	4618      	mov	r0, r3
 8004280:	3708      	adds	r7, #8
 8004282:	46bd      	mov	sp, r7
 8004284:	bd80      	pop	{r7, pc}
	...

08004288 <HAL_SYSTICK_CLKSourceConfig>:
 8004288:	b480      	push	{r7}
 800428a:	b083      	sub	sp, #12
 800428c:	af00      	add	r7, sp, #0
 800428e:	6078      	str	r0, [r7, #4]
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	2b04      	cmp	r3, #4
 8004294:	d106      	bne.n	80042a4 <HAL_SYSTICK_CLKSourceConfig+0x1c>
 8004296:	4b09      	ldr	r3, [pc, #36]	; (80042bc <HAL_SYSTICK_CLKSourceConfig+0x34>)
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	4a08      	ldr	r2, [pc, #32]	; (80042bc <HAL_SYSTICK_CLKSourceConfig+0x34>)
 800429c:	f043 0304 	orr.w	r3, r3, #4
 80042a0:	6013      	str	r3, [r2, #0]
 80042a2:	e005      	b.n	80042b0 <HAL_SYSTICK_CLKSourceConfig+0x28>
 80042a4:	4b05      	ldr	r3, [pc, #20]	; (80042bc <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	4a04      	ldr	r2, [pc, #16]	; (80042bc <HAL_SYSTICK_CLKSourceConfig+0x34>)
 80042aa:	f023 0304 	bic.w	r3, r3, #4
 80042ae:	6013      	str	r3, [r2, #0]
 80042b0:	bf00      	nop
 80042b2:	370c      	adds	r7, #12
 80042b4:	46bd      	mov	sp, r7
 80042b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042ba:	4770      	bx	lr
 80042bc:	e000e010 	.word	0xe000e010

080042c0 <HAL_DMA_Abort_IT>:
 80042c0:	b480      	push	{r7}
 80042c2:	b083      	sub	sp, #12
 80042c4:	af00      	add	r7, sp, #0
 80042c6:	6078      	str	r0, [r7, #4]
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80042ce:	b2db      	uxtb	r3, r3
 80042d0:	2b02      	cmp	r3, #2
 80042d2:	d004      	beq.n	80042de <HAL_DMA_Abort_IT+0x1e>
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2280      	movs	r2, #128	; 0x80
 80042d8:	655a      	str	r2, [r3, #84]	; 0x54
 80042da:	2301      	movs	r3, #1
 80042dc:	e00c      	b.n	80042f8 <HAL_DMA_Abort_IT+0x38>
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	2205      	movs	r2, #5
 80042e2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	681a      	ldr	r2, [r3, #0]
 80042ec:	687b      	ldr	r3, [r7, #4]
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	f022 0201 	bic.w	r2, r2, #1
 80042f4:	601a      	str	r2, [r3, #0]
 80042f6:	2300      	movs	r3, #0
 80042f8:	4618      	mov	r0, r3
 80042fa:	370c      	adds	r7, #12
 80042fc:	46bd      	mov	sp, r7
 80042fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004302:	4770      	bx	lr

08004304 <HAL_DMA_IRQHandler>:
 8004304:	b580      	push	{r7, lr}
 8004306:	b086      	sub	sp, #24
 8004308:	af00      	add	r7, sp, #0
 800430a:	6078      	str	r0, [r7, #4]
 800430c:	2300      	movs	r3, #0
 800430e:	60bb      	str	r3, [r7, #8]
 8004310:	4b8e      	ldr	r3, [pc, #568]	; (800454c <HAL_DMA_IRQHandler+0x248>)
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	4a8e      	ldr	r2, [pc, #568]	; (8004550 <HAL_DMA_IRQHandler+0x24c>)
 8004316:	fba2 2303 	umull	r2, r3, r2, r3
 800431a:	0a9b      	lsrs	r3, r3, #10
 800431c:	617b      	str	r3, [r7, #20]
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004322:	613b      	str	r3, [r7, #16]
 8004324:	693b      	ldr	r3, [r7, #16]
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	60fb      	str	r3, [r7, #12]
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800432e:	2208      	movs	r2, #8
 8004330:	409a      	lsls	r2, r3
 8004332:	68fb      	ldr	r3, [r7, #12]
 8004334:	4013      	ands	r3, r2
 8004336:	2b00      	cmp	r3, #0
 8004338:	d01a      	beq.n	8004370 <HAL_DMA_IRQHandler+0x6c>
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	681b      	ldr	r3, [r3, #0]
 8004340:	f003 0304 	and.w	r3, r3, #4
 8004344:	2b00      	cmp	r3, #0
 8004346:	d013      	beq.n	8004370 <HAL_DMA_IRQHandler+0x6c>
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	681a      	ldr	r2, [r3, #0]
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	681b      	ldr	r3, [r3, #0]
 8004352:	f022 0204 	bic.w	r2, r2, #4
 8004356:	601a      	str	r2, [r3, #0]
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800435c:	2208      	movs	r2, #8
 800435e:	409a      	lsls	r2, r3
 8004360:	693b      	ldr	r3, [r7, #16]
 8004362:	609a      	str	r2, [r3, #8]
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004368:	f043 0201 	orr.w	r2, r3, #1
 800436c:	687b      	ldr	r3, [r7, #4]
 800436e:	655a      	str	r2, [r3, #84]	; 0x54
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004374:	4a77      	ldr	r2, [pc, #476]	; (8004554 <HAL_DMA_IRQHandler+0x250>)
 8004376:	409a      	lsls	r2, r3
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	4013      	ands	r3, r2
 800437c:	2b00      	cmp	r3, #0
 800437e:	d012      	beq.n	80043a6 <HAL_DMA_IRQHandler+0xa2>
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	681b      	ldr	r3, [r3, #0]
 8004384:	695b      	ldr	r3, [r3, #20]
 8004386:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800438a:	2b00      	cmp	r3, #0
 800438c:	d00b      	beq.n	80043a6 <HAL_DMA_IRQHandler+0xa2>
 800438e:	687b      	ldr	r3, [r7, #4]
 8004390:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004392:	4a70      	ldr	r2, [pc, #448]	; (8004554 <HAL_DMA_IRQHandler+0x250>)
 8004394:	409a      	lsls	r2, r3
 8004396:	693b      	ldr	r3, [r7, #16]
 8004398:	609a      	str	r2, [r3, #8]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800439e:	f043 0202 	orr.w	r2, r3, #2
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	655a      	str	r2, [r3, #84]	; 0x54
 80043a6:	687b      	ldr	r3, [r7, #4]
 80043a8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043aa:	4a6b      	ldr	r2, [pc, #428]	; (8004558 <HAL_DMA_IRQHandler+0x254>)
 80043ac:	409a      	lsls	r2, r3
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	4013      	ands	r3, r2
 80043b2:	2b00      	cmp	r3, #0
 80043b4:	d012      	beq.n	80043dc <HAL_DMA_IRQHandler+0xd8>
 80043b6:	687b      	ldr	r3, [r7, #4]
 80043b8:	681b      	ldr	r3, [r3, #0]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	f003 0302 	and.w	r3, r3, #2
 80043c0:	2b00      	cmp	r3, #0
 80043c2:	d00b      	beq.n	80043dc <HAL_DMA_IRQHandler+0xd8>
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043c8:	4a63      	ldr	r2, [pc, #396]	; (8004558 <HAL_DMA_IRQHandler+0x254>)
 80043ca:	409a      	lsls	r2, r3
 80043cc:	693b      	ldr	r3, [r7, #16]
 80043ce:	609a      	str	r2, [r3, #8]
 80043d0:	687b      	ldr	r3, [r7, #4]
 80043d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80043d4:	f043 0204 	orr.w	r2, r3, #4
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	655a      	str	r2, [r3, #84]	; 0x54
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043e0:	2210      	movs	r2, #16
 80043e2:	409a      	lsls	r2, r3
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	4013      	ands	r3, r2
 80043e8:	2b00      	cmp	r3, #0
 80043ea:	d043      	beq.n	8004474 <HAL_DMA_IRQHandler+0x170>
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	f003 0308 	and.w	r3, r3, #8
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d03c      	beq.n	8004474 <HAL_DMA_IRQHandler+0x170>
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80043fe:	2210      	movs	r2, #16
 8004400:	409a      	lsls	r2, r3
 8004402:	693b      	ldr	r3, [r7, #16]
 8004404:	609a      	str	r2, [r3, #8]
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004410:	2b00      	cmp	r3, #0
 8004412:	d018      	beq.n	8004446 <HAL_DMA_IRQHandler+0x142>
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800441e:	2b00      	cmp	r3, #0
 8004420:	d108      	bne.n	8004434 <HAL_DMA_IRQHandler+0x130>
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004426:	2b00      	cmp	r3, #0
 8004428:	d024      	beq.n	8004474 <HAL_DMA_IRQHandler+0x170>
 800442a:	687b      	ldr	r3, [r7, #4]
 800442c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800442e:	6878      	ldr	r0, [r7, #4]
 8004430:	4798      	blx	r3
 8004432:	e01f      	b.n	8004474 <HAL_DMA_IRQHandler+0x170>
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004438:	2b00      	cmp	r3, #0
 800443a:	d01b      	beq.n	8004474 <HAL_DMA_IRQHandler+0x170>
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004440:	6878      	ldr	r0, [r7, #4]
 8004442:	4798      	blx	r3
 8004444:	e016      	b.n	8004474 <HAL_DMA_IRQHandler+0x170>
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004450:	2b00      	cmp	r3, #0
 8004452:	d107      	bne.n	8004464 <HAL_DMA_IRQHandler+0x160>
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	681a      	ldr	r2, [r3, #0]
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	f022 0208 	bic.w	r2, r2, #8
 8004462:	601a      	str	r2, [r3, #0]
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004468:	2b00      	cmp	r3, #0
 800446a:	d003      	beq.n	8004474 <HAL_DMA_IRQHandler+0x170>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004470:	6878      	ldr	r0, [r7, #4]
 8004472:	4798      	blx	r3
 8004474:	687b      	ldr	r3, [r7, #4]
 8004476:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004478:	2220      	movs	r2, #32
 800447a:	409a      	lsls	r2, r3
 800447c:	68fb      	ldr	r3, [r7, #12]
 800447e:	4013      	ands	r3, r2
 8004480:	2b00      	cmp	r3, #0
 8004482:	f000 8093 	beq.w	80045ac <HAL_DMA_IRQHandler+0x2a8>
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	681b      	ldr	r3, [r3, #0]
 800448a:	681b      	ldr	r3, [r3, #0]
 800448c:	f003 0310 	and.w	r3, r3, #16
 8004490:	2b00      	cmp	r3, #0
 8004492:	f000 808b 	beq.w	80045ac <HAL_DMA_IRQHandler+0x2a8>
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800449a:	2220      	movs	r2, #32
 800449c:	409a      	lsls	r2, r3
 800449e:	693b      	ldr	r3, [r7, #16]
 80044a0:	609a      	str	r2, [r3, #8]
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80044a8:	b2db      	uxtb	r3, r3
 80044aa:	2b05      	cmp	r3, #5
 80044ac:	d137      	bne.n	800451e <HAL_DMA_IRQHandler+0x21a>
 80044ae:	687b      	ldr	r3, [r7, #4]
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	681a      	ldr	r2, [r3, #0]
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	f022 0216 	bic.w	r2, r2, #22
 80044bc:	601a      	str	r2, [r3, #0]
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	681b      	ldr	r3, [r3, #0]
 80044c2:	695a      	ldr	r2, [r3, #20]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80044cc:	615a      	str	r2, [r3, #20]
 80044ce:	687b      	ldr	r3, [r7, #4]
 80044d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044d2:	2b00      	cmp	r3, #0
 80044d4:	d103      	bne.n	80044de <HAL_DMA_IRQHandler+0x1da>
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80044da:	2b00      	cmp	r3, #0
 80044dc:	d007      	beq.n	80044ee <HAL_DMA_IRQHandler+0x1ea>
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	681b      	ldr	r3, [r3, #0]
 80044e2:	681a      	ldr	r2, [r3, #0]
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	681b      	ldr	r3, [r3, #0]
 80044e8:	f022 0208 	bic.w	r2, r2, #8
 80044ec:	601a      	str	r2, [r3, #0]
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80044f2:	223f      	movs	r2, #63	; 0x3f
 80044f4:	409a      	lsls	r2, r3
 80044f6:	693b      	ldr	r3, [r7, #16]
 80044f8:	609a      	str	r2, [r3, #8]
 80044fa:	687b      	ldr	r3, [r7, #4]
 80044fc:	2200      	movs	r2, #0
 80044fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	2201      	movs	r2, #1
 8004506:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800450e:	2b00      	cmp	r3, #0
 8004510:	f000 8082 	beq.w	8004618 <HAL_DMA_IRQHandler+0x314>
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004518:	6878      	ldr	r0, [r7, #4]
 800451a:	4798      	blx	r3
 800451c:	e07c      	b.n	8004618 <HAL_DMA_IRQHandler+0x314>
 800451e:	687b      	ldr	r3, [r7, #4]
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004528:	2b00      	cmp	r3, #0
 800452a:	d020      	beq.n	800456e <HAL_DMA_IRQHandler+0x26a>
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	681b      	ldr	r3, [r3, #0]
 8004532:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8004536:	2b00      	cmp	r3, #0
 8004538:	d110      	bne.n	800455c <HAL_DMA_IRQHandler+0x258>
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800453e:	2b00      	cmp	r3, #0
 8004540:	d034      	beq.n	80045ac <HAL_DMA_IRQHandler+0x2a8>
 8004542:	687b      	ldr	r3, [r7, #4]
 8004544:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004546:	6878      	ldr	r0, [r7, #4]
 8004548:	4798      	blx	r3
 800454a:	e02f      	b.n	80045ac <HAL_DMA_IRQHandler+0x2a8>
 800454c:	20000014 	.word	0x20000014
 8004550:	1b4e81b5 	.word	0x1b4e81b5
 8004554:	00800001 	.word	0x00800001
 8004558:	00800004 	.word	0x00800004
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004560:	2b00      	cmp	r3, #0
 8004562:	d023      	beq.n	80045ac <HAL_DMA_IRQHandler+0x2a8>
 8004564:	687b      	ldr	r3, [r7, #4]
 8004566:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004568:	6878      	ldr	r0, [r7, #4]
 800456a:	4798      	blx	r3
 800456c:	e01e      	b.n	80045ac <HAL_DMA_IRQHandler+0x2a8>
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004578:	2b00      	cmp	r3, #0
 800457a:	d10f      	bne.n	800459c <HAL_DMA_IRQHandler+0x298>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	681a      	ldr	r2, [r3, #0]
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	f022 0210 	bic.w	r2, r2, #16
 800458a:	601a      	str	r2, [r3, #0]
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	2200      	movs	r2, #0
 8004590:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2201      	movs	r2, #1
 8004598:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045a0:	2b00      	cmp	r3, #0
 80045a2:	d003      	beq.n	80045ac <HAL_DMA_IRQHandler+0x2a8>
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80045a8:	6878      	ldr	r0, [r7, #4]
 80045aa:	4798      	blx	r3
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045b0:	2b00      	cmp	r3, #0
 80045b2:	d032      	beq.n	800461a <HAL_DMA_IRQHandler+0x316>
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80045b8:	f003 0301 	and.w	r3, r3, #1
 80045bc:	2b00      	cmp	r3, #0
 80045be:	d022      	beq.n	8004606 <HAL_DMA_IRQHandler+0x302>
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2205      	movs	r2, #5
 80045c4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	681a      	ldr	r2, [r3, #0]
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	f022 0201 	bic.w	r2, r2, #1
 80045d6:	601a      	str	r2, [r3, #0]
 80045d8:	68bb      	ldr	r3, [r7, #8]
 80045da:	3301      	adds	r3, #1
 80045dc:	60bb      	str	r3, [r7, #8]
 80045de:	697a      	ldr	r2, [r7, #20]
 80045e0:	429a      	cmp	r2, r3
 80045e2:	d307      	bcc.n	80045f4 <HAL_DMA_IRQHandler+0x2f0>
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	681b      	ldr	r3, [r3, #0]
 80045e8:	681b      	ldr	r3, [r3, #0]
 80045ea:	f003 0301 	and.w	r3, r3, #1
 80045ee:	2b00      	cmp	r3, #0
 80045f0:	d1f2      	bne.n	80045d8 <HAL_DMA_IRQHandler+0x2d4>
 80045f2:	e000      	b.n	80045f6 <HAL_DMA_IRQHandler+0x2f2>
 80045f4:	bf00      	nop
 80045f6:	687b      	ldr	r3, [r7, #4]
 80045f8:	2200      	movs	r2, #0
 80045fa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	2201      	movs	r2, #1
 8004602:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800460a:	2b00      	cmp	r3, #0
 800460c:	d005      	beq.n	800461a <HAL_DMA_IRQHandler+0x316>
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004612:	6878      	ldr	r0, [r7, #4]
 8004614:	4798      	blx	r3
 8004616:	e000      	b.n	800461a <HAL_DMA_IRQHandler+0x316>
 8004618:	bf00      	nop
 800461a:	3718      	adds	r7, #24
 800461c:	46bd      	mov	sp, r7
 800461e:	bd80      	pop	{r7, pc}

08004620 <HAL_GPIO_Init>:
 8004620:	b480      	push	{r7}
 8004622:	b089      	sub	sp, #36	; 0x24
 8004624:	af00      	add	r7, sp, #0
 8004626:	6078      	str	r0, [r7, #4]
 8004628:	6039      	str	r1, [r7, #0]
 800462a:	2300      	movs	r3, #0
 800462c:	617b      	str	r3, [r7, #20]
 800462e:	2300      	movs	r3, #0
 8004630:	613b      	str	r3, [r7, #16]
 8004632:	2300      	movs	r3, #0
 8004634:	61bb      	str	r3, [r7, #24]
 8004636:	2300      	movs	r3, #0
 8004638:	61fb      	str	r3, [r7, #28]
 800463a:	e177      	b.n	800492c <HAL_GPIO_Init+0x30c>
 800463c:	2201      	movs	r2, #1
 800463e:	69fb      	ldr	r3, [r7, #28]
 8004640:	fa02 f303 	lsl.w	r3, r2, r3
 8004644:	617b      	str	r3, [r7, #20]
 8004646:	683b      	ldr	r3, [r7, #0]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	697a      	ldr	r2, [r7, #20]
 800464c:	4013      	ands	r3, r2
 800464e:	613b      	str	r3, [r7, #16]
 8004650:	693a      	ldr	r2, [r7, #16]
 8004652:	697b      	ldr	r3, [r7, #20]
 8004654:	429a      	cmp	r2, r3
 8004656:	f040 8166 	bne.w	8004926 <HAL_GPIO_Init+0x306>
 800465a:	683b      	ldr	r3, [r7, #0]
 800465c:	685b      	ldr	r3, [r3, #4]
 800465e:	2b02      	cmp	r3, #2
 8004660:	d003      	beq.n	800466a <HAL_GPIO_Init+0x4a>
 8004662:	683b      	ldr	r3, [r7, #0]
 8004664:	685b      	ldr	r3, [r3, #4]
 8004666:	2b12      	cmp	r3, #18
 8004668:	d123      	bne.n	80046b2 <HAL_GPIO_Init+0x92>
 800466a:	69fb      	ldr	r3, [r7, #28]
 800466c:	08da      	lsrs	r2, r3, #3
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	3208      	adds	r2, #8
 8004672:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004676:	61bb      	str	r3, [r7, #24]
 8004678:	69fb      	ldr	r3, [r7, #28]
 800467a:	f003 0307 	and.w	r3, r3, #7
 800467e:	009b      	lsls	r3, r3, #2
 8004680:	220f      	movs	r2, #15
 8004682:	fa02 f303 	lsl.w	r3, r2, r3
 8004686:	43db      	mvns	r3, r3
 8004688:	69ba      	ldr	r2, [r7, #24]
 800468a:	4013      	ands	r3, r2
 800468c:	61bb      	str	r3, [r7, #24]
 800468e:	683b      	ldr	r3, [r7, #0]
 8004690:	691a      	ldr	r2, [r3, #16]
 8004692:	69fb      	ldr	r3, [r7, #28]
 8004694:	f003 0307 	and.w	r3, r3, #7
 8004698:	009b      	lsls	r3, r3, #2
 800469a:	fa02 f303 	lsl.w	r3, r2, r3
 800469e:	69ba      	ldr	r2, [r7, #24]
 80046a0:	4313      	orrs	r3, r2
 80046a2:	61bb      	str	r3, [r7, #24]
 80046a4:	69fb      	ldr	r3, [r7, #28]
 80046a6:	08da      	lsrs	r2, r3, #3
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	3208      	adds	r2, #8
 80046ac:	69b9      	ldr	r1, [r7, #24]
 80046ae:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80046b2:	687b      	ldr	r3, [r7, #4]
 80046b4:	681b      	ldr	r3, [r3, #0]
 80046b6:	61bb      	str	r3, [r7, #24]
 80046b8:	69fb      	ldr	r3, [r7, #28]
 80046ba:	005b      	lsls	r3, r3, #1
 80046bc:	2203      	movs	r2, #3
 80046be:	fa02 f303 	lsl.w	r3, r2, r3
 80046c2:	43db      	mvns	r3, r3
 80046c4:	69ba      	ldr	r2, [r7, #24]
 80046c6:	4013      	ands	r3, r2
 80046c8:	61bb      	str	r3, [r7, #24]
 80046ca:	683b      	ldr	r3, [r7, #0]
 80046cc:	685b      	ldr	r3, [r3, #4]
 80046ce:	f003 0203 	and.w	r2, r3, #3
 80046d2:	69fb      	ldr	r3, [r7, #28]
 80046d4:	005b      	lsls	r3, r3, #1
 80046d6:	fa02 f303 	lsl.w	r3, r2, r3
 80046da:	69ba      	ldr	r2, [r7, #24]
 80046dc:	4313      	orrs	r3, r2
 80046de:	61bb      	str	r3, [r7, #24]
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	69ba      	ldr	r2, [r7, #24]
 80046e4:	601a      	str	r2, [r3, #0]
 80046e6:	683b      	ldr	r3, [r7, #0]
 80046e8:	685b      	ldr	r3, [r3, #4]
 80046ea:	2b01      	cmp	r3, #1
 80046ec:	d00b      	beq.n	8004706 <HAL_GPIO_Init+0xe6>
 80046ee:	683b      	ldr	r3, [r7, #0]
 80046f0:	685b      	ldr	r3, [r3, #4]
 80046f2:	2b02      	cmp	r3, #2
 80046f4:	d007      	beq.n	8004706 <HAL_GPIO_Init+0xe6>
 80046f6:	683b      	ldr	r3, [r7, #0]
 80046f8:	685b      	ldr	r3, [r3, #4]
 80046fa:	2b11      	cmp	r3, #17
 80046fc:	d003      	beq.n	8004706 <HAL_GPIO_Init+0xe6>
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	2b12      	cmp	r3, #18
 8004704:	d130      	bne.n	8004768 <HAL_GPIO_Init+0x148>
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	689b      	ldr	r3, [r3, #8]
 800470a:	61bb      	str	r3, [r7, #24]
 800470c:	69fb      	ldr	r3, [r7, #28]
 800470e:	005b      	lsls	r3, r3, #1
 8004710:	2203      	movs	r2, #3
 8004712:	fa02 f303 	lsl.w	r3, r2, r3
 8004716:	43db      	mvns	r3, r3
 8004718:	69ba      	ldr	r2, [r7, #24]
 800471a:	4013      	ands	r3, r2
 800471c:	61bb      	str	r3, [r7, #24]
 800471e:	683b      	ldr	r3, [r7, #0]
 8004720:	68da      	ldr	r2, [r3, #12]
 8004722:	69fb      	ldr	r3, [r7, #28]
 8004724:	005b      	lsls	r3, r3, #1
 8004726:	fa02 f303 	lsl.w	r3, r2, r3
 800472a:	69ba      	ldr	r2, [r7, #24]
 800472c:	4313      	orrs	r3, r2
 800472e:	61bb      	str	r3, [r7, #24]
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	69ba      	ldr	r2, [r7, #24]
 8004734:	609a      	str	r2, [r3, #8]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	685b      	ldr	r3, [r3, #4]
 800473a:	61bb      	str	r3, [r7, #24]
 800473c:	2201      	movs	r2, #1
 800473e:	69fb      	ldr	r3, [r7, #28]
 8004740:	fa02 f303 	lsl.w	r3, r2, r3
 8004744:	43db      	mvns	r3, r3
 8004746:	69ba      	ldr	r2, [r7, #24]
 8004748:	4013      	ands	r3, r2
 800474a:	61bb      	str	r3, [r7, #24]
 800474c:	683b      	ldr	r3, [r7, #0]
 800474e:	685b      	ldr	r3, [r3, #4]
 8004750:	091b      	lsrs	r3, r3, #4
 8004752:	f003 0201 	and.w	r2, r3, #1
 8004756:	69fb      	ldr	r3, [r7, #28]
 8004758:	fa02 f303 	lsl.w	r3, r2, r3
 800475c:	69ba      	ldr	r2, [r7, #24]
 800475e:	4313      	orrs	r3, r2
 8004760:	61bb      	str	r3, [r7, #24]
 8004762:	687b      	ldr	r3, [r7, #4]
 8004764:	69ba      	ldr	r2, [r7, #24]
 8004766:	605a      	str	r2, [r3, #4]
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	68db      	ldr	r3, [r3, #12]
 800476c:	61bb      	str	r3, [r7, #24]
 800476e:	69fb      	ldr	r3, [r7, #28]
 8004770:	005b      	lsls	r3, r3, #1
 8004772:	2203      	movs	r2, #3
 8004774:	fa02 f303 	lsl.w	r3, r2, r3
 8004778:	43db      	mvns	r3, r3
 800477a:	69ba      	ldr	r2, [r7, #24]
 800477c:	4013      	ands	r3, r2
 800477e:	61bb      	str	r3, [r7, #24]
 8004780:	683b      	ldr	r3, [r7, #0]
 8004782:	689a      	ldr	r2, [r3, #8]
 8004784:	69fb      	ldr	r3, [r7, #28]
 8004786:	005b      	lsls	r3, r3, #1
 8004788:	fa02 f303 	lsl.w	r3, r2, r3
 800478c:	69ba      	ldr	r2, [r7, #24]
 800478e:	4313      	orrs	r3, r2
 8004790:	61bb      	str	r3, [r7, #24]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	69ba      	ldr	r2, [r7, #24]
 8004796:	60da      	str	r2, [r3, #12]
 8004798:	683b      	ldr	r3, [r7, #0]
 800479a:	685b      	ldr	r3, [r3, #4]
 800479c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	f000 80c0 	beq.w	8004926 <HAL_GPIO_Init+0x306>
 80047a6:	2300      	movs	r3, #0
 80047a8:	60fb      	str	r3, [r7, #12]
 80047aa:	4b66      	ldr	r3, [pc, #408]	; (8004944 <HAL_GPIO_Init+0x324>)
 80047ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047ae:	4a65      	ldr	r2, [pc, #404]	; (8004944 <HAL_GPIO_Init+0x324>)
 80047b0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80047b4:	6453      	str	r3, [r2, #68]	; 0x44
 80047b6:	4b63      	ldr	r3, [pc, #396]	; (8004944 <HAL_GPIO_Init+0x324>)
 80047b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047ba:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80047be:	60fb      	str	r3, [r7, #12]
 80047c0:	68fb      	ldr	r3, [r7, #12]
 80047c2:	4a61      	ldr	r2, [pc, #388]	; (8004948 <HAL_GPIO_Init+0x328>)
 80047c4:	69fb      	ldr	r3, [r7, #28]
 80047c6:	089b      	lsrs	r3, r3, #2
 80047c8:	3302      	adds	r3, #2
 80047ca:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80047ce:	61bb      	str	r3, [r7, #24]
 80047d0:	69fb      	ldr	r3, [r7, #28]
 80047d2:	f003 0303 	and.w	r3, r3, #3
 80047d6:	009b      	lsls	r3, r3, #2
 80047d8:	220f      	movs	r2, #15
 80047da:	fa02 f303 	lsl.w	r3, r2, r3
 80047de:	43db      	mvns	r3, r3
 80047e0:	69ba      	ldr	r2, [r7, #24]
 80047e2:	4013      	ands	r3, r2
 80047e4:	61bb      	str	r3, [r7, #24]
 80047e6:	687b      	ldr	r3, [r7, #4]
 80047e8:	4a58      	ldr	r2, [pc, #352]	; (800494c <HAL_GPIO_Init+0x32c>)
 80047ea:	4293      	cmp	r3, r2
 80047ec:	d037      	beq.n	800485e <HAL_GPIO_Init+0x23e>
 80047ee:	687b      	ldr	r3, [r7, #4]
 80047f0:	4a57      	ldr	r2, [pc, #348]	; (8004950 <HAL_GPIO_Init+0x330>)
 80047f2:	4293      	cmp	r3, r2
 80047f4:	d031      	beq.n	800485a <HAL_GPIO_Init+0x23a>
 80047f6:	687b      	ldr	r3, [r7, #4]
 80047f8:	4a56      	ldr	r2, [pc, #344]	; (8004954 <HAL_GPIO_Init+0x334>)
 80047fa:	4293      	cmp	r3, r2
 80047fc:	d02b      	beq.n	8004856 <HAL_GPIO_Init+0x236>
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	4a55      	ldr	r2, [pc, #340]	; (8004958 <HAL_GPIO_Init+0x338>)
 8004802:	4293      	cmp	r3, r2
 8004804:	d025      	beq.n	8004852 <HAL_GPIO_Init+0x232>
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	4a54      	ldr	r2, [pc, #336]	; (800495c <HAL_GPIO_Init+0x33c>)
 800480a:	4293      	cmp	r3, r2
 800480c:	d01f      	beq.n	800484e <HAL_GPIO_Init+0x22e>
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	4a53      	ldr	r2, [pc, #332]	; (8004960 <HAL_GPIO_Init+0x340>)
 8004812:	4293      	cmp	r3, r2
 8004814:	d019      	beq.n	800484a <HAL_GPIO_Init+0x22a>
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	4a52      	ldr	r2, [pc, #328]	; (8004964 <HAL_GPIO_Init+0x344>)
 800481a:	4293      	cmp	r3, r2
 800481c:	d013      	beq.n	8004846 <HAL_GPIO_Init+0x226>
 800481e:	687b      	ldr	r3, [r7, #4]
 8004820:	4a51      	ldr	r2, [pc, #324]	; (8004968 <HAL_GPIO_Init+0x348>)
 8004822:	4293      	cmp	r3, r2
 8004824:	d00d      	beq.n	8004842 <HAL_GPIO_Init+0x222>
 8004826:	687b      	ldr	r3, [r7, #4]
 8004828:	4a50      	ldr	r2, [pc, #320]	; (800496c <HAL_GPIO_Init+0x34c>)
 800482a:	4293      	cmp	r3, r2
 800482c:	d007      	beq.n	800483e <HAL_GPIO_Init+0x21e>
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	4a4f      	ldr	r2, [pc, #316]	; (8004970 <HAL_GPIO_Init+0x350>)
 8004832:	4293      	cmp	r3, r2
 8004834:	d101      	bne.n	800483a <HAL_GPIO_Init+0x21a>
 8004836:	2309      	movs	r3, #9
 8004838:	e012      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800483a:	230a      	movs	r3, #10
 800483c:	e010      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800483e:	2308      	movs	r3, #8
 8004840:	e00e      	b.n	8004860 <HAL_GPIO_Init+0x240>
 8004842:	2307      	movs	r3, #7
 8004844:	e00c      	b.n	8004860 <HAL_GPIO_Init+0x240>
 8004846:	2306      	movs	r3, #6
 8004848:	e00a      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800484a:	2305      	movs	r3, #5
 800484c:	e008      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800484e:	2304      	movs	r3, #4
 8004850:	e006      	b.n	8004860 <HAL_GPIO_Init+0x240>
 8004852:	2303      	movs	r3, #3
 8004854:	e004      	b.n	8004860 <HAL_GPIO_Init+0x240>
 8004856:	2302      	movs	r3, #2
 8004858:	e002      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800485a:	2301      	movs	r3, #1
 800485c:	e000      	b.n	8004860 <HAL_GPIO_Init+0x240>
 800485e:	2300      	movs	r3, #0
 8004860:	69fa      	ldr	r2, [r7, #28]
 8004862:	f002 0203 	and.w	r2, r2, #3
 8004866:	0092      	lsls	r2, r2, #2
 8004868:	4093      	lsls	r3, r2
 800486a:	69ba      	ldr	r2, [r7, #24]
 800486c:	4313      	orrs	r3, r2
 800486e:	61bb      	str	r3, [r7, #24]
 8004870:	4935      	ldr	r1, [pc, #212]	; (8004948 <HAL_GPIO_Init+0x328>)
 8004872:	69fb      	ldr	r3, [r7, #28]
 8004874:	089b      	lsrs	r3, r3, #2
 8004876:	3302      	adds	r3, #2
 8004878:	69ba      	ldr	r2, [r7, #24]
 800487a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800487e:	4b3d      	ldr	r3, [pc, #244]	; (8004974 <HAL_GPIO_Init+0x354>)
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	61bb      	str	r3, [r7, #24]
 8004884:	693b      	ldr	r3, [r7, #16]
 8004886:	43db      	mvns	r3, r3
 8004888:	69ba      	ldr	r2, [r7, #24]
 800488a:	4013      	ands	r3, r2
 800488c:	61bb      	str	r3, [r7, #24]
 800488e:	683b      	ldr	r3, [r7, #0]
 8004890:	685b      	ldr	r3, [r3, #4]
 8004892:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004896:	2b00      	cmp	r3, #0
 8004898:	d003      	beq.n	80048a2 <HAL_GPIO_Init+0x282>
 800489a:	69ba      	ldr	r2, [r7, #24]
 800489c:	693b      	ldr	r3, [r7, #16]
 800489e:	4313      	orrs	r3, r2
 80048a0:	61bb      	str	r3, [r7, #24]
 80048a2:	4a34      	ldr	r2, [pc, #208]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048a4:	69bb      	ldr	r3, [r7, #24]
 80048a6:	6013      	str	r3, [r2, #0]
 80048a8:	4b32      	ldr	r3, [pc, #200]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048aa:	685b      	ldr	r3, [r3, #4]
 80048ac:	61bb      	str	r3, [r7, #24]
 80048ae:	693b      	ldr	r3, [r7, #16]
 80048b0:	43db      	mvns	r3, r3
 80048b2:	69ba      	ldr	r2, [r7, #24]
 80048b4:	4013      	ands	r3, r2
 80048b6:	61bb      	str	r3, [r7, #24]
 80048b8:	683b      	ldr	r3, [r7, #0]
 80048ba:	685b      	ldr	r3, [r3, #4]
 80048bc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80048c0:	2b00      	cmp	r3, #0
 80048c2:	d003      	beq.n	80048cc <HAL_GPIO_Init+0x2ac>
 80048c4:	69ba      	ldr	r2, [r7, #24]
 80048c6:	693b      	ldr	r3, [r7, #16]
 80048c8:	4313      	orrs	r3, r2
 80048ca:	61bb      	str	r3, [r7, #24]
 80048cc:	4a29      	ldr	r2, [pc, #164]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048ce:	69bb      	ldr	r3, [r7, #24]
 80048d0:	6053      	str	r3, [r2, #4]
 80048d2:	4b28      	ldr	r3, [pc, #160]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048d4:	689b      	ldr	r3, [r3, #8]
 80048d6:	61bb      	str	r3, [r7, #24]
 80048d8:	693b      	ldr	r3, [r7, #16]
 80048da:	43db      	mvns	r3, r3
 80048dc:	69ba      	ldr	r2, [r7, #24]
 80048de:	4013      	ands	r3, r2
 80048e0:	61bb      	str	r3, [r7, #24]
 80048e2:	683b      	ldr	r3, [r7, #0]
 80048e4:	685b      	ldr	r3, [r3, #4]
 80048e6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d003      	beq.n	80048f6 <HAL_GPIO_Init+0x2d6>
 80048ee:	69ba      	ldr	r2, [r7, #24]
 80048f0:	693b      	ldr	r3, [r7, #16]
 80048f2:	4313      	orrs	r3, r2
 80048f4:	61bb      	str	r3, [r7, #24]
 80048f6:	4a1f      	ldr	r2, [pc, #124]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048f8:	69bb      	ldr	r3, [r7, #24]
 80048fa:	6093      	str	r3, [r2, #8]
 80048fc:	4b1d      	ldr	r3, [pc, #116]	; (8004974 <HAL_GPIO_Init+0x354>)
 80048fe:	68db      	ldr	r3, [r3, #12]
 8004900:	61bb      	str	r3, [r7, #24]
 8004902:	693b      	ldr	r3, [r7, #16]
 8004904:	43db      	mvns	r3, r3
 8004906:	69ba      	ldr	r2, [r7, #24]
 8004908:	4013      	ands	r3, r2
 800490a:	61bb      	str	r3, [r7, #24]
 800490c:	683b      	ldr	r3, [r7, #0]
 800490e:	685b      	ldr	r3, [r3, #4]
 8004910:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004914:	2b00      	cmp	r3, #0
 8004916:	d003      	beq.n	8004920 <HAL_GPIO_Init+0x300>
 8004918:	69ba      	ldr	r2, [r7, #24]
 800491a:	693b      	ldr	r3, [r7, #16]
 800491c:	4313      	orrs	r3, r2
 800491e:	61bb      	str	r3, [r7, #24]
 8004920:	4a14      	ldr	r2, [pc, #80]	; (8004974 <HAL_GPIO_Init+0x354>)
 8004922:	69bb      	ldr	r3, [r7, #24]
 8004924:	60d3      	str	r3, [r2, #12]
 8004926:	69fb      	ldr	r3, [r7, #28]
 8004928:	3301      	adds	r3, #1
 800492a:	61fb      	str	r3, [r7, #28]
 800492c:	69fb      	ldr	r3, [r7, #28]
 800492e:	2b0f      	cmp	r3, #15
 8004930:	f67f ae84 	bls.w	800463c <HAL_GPIO_Init+0x1c>
 8004934:	bf00      	nop
 8004936:	bf00      	nop
 8004938:	3724      	adds	r7, #36	; 0x24
 800493a:	46bd      	mov	sp, r7
 800493c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004940:	4770      	bx	lr
 8004942:	bf00      	nop
 8004944:	40023800 	.word	0x40023800
 8004948:	40013800 	.word	0x40013800
 800494c:	40020000 	.word	0x40020000
 8004950:	40020400 	.word	0x40020400
 8004954:	40020800 	.word	0x40020800
 8004958:	40020c00 	.word	0x40020c00
 800495c:	40021000 	.word	0x40021000
 8004960:	40021400 	.word	0x40021400
 8004964:	40021800 	.word	0x40021800
 8004968:	40021c00 	.word	0x40021c00
 800496c:	40022000 	.word	0x40022000
 8004970:	40022400 	.word	0x40022400
 8004974:	40013c00 	.word	0x40013c00

08004978 <HAL_GPIO_WritePin>:
 8004978:	b480      	push	{r7}
 800497a:	b083      	sub	sp, #12
 800497c:	af00      	add	r7, sp, #0
 800497e:	6078      	str	r0, [r7, #4]
 8004980:	460b      	mov	r3, r1
 8004982:	807b      	strh	r3, [r7, #2]
 8004984:	4613      	mov	r3, r2
 8004986:	707b      	strb	r3, [r7, #1]
 8004988:	787b      	ldrb	r3, [r7, #1]
 800498a:	2b00      	cmp	r3, #0
 800498c:	d003      	beq.n	8004996 <HAL_GPIO_WritePin+0x1e>
 800498e:	887a      	ldrh	r2, [r7, #2]
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	619a      	str	r2, [r3, #24]
 8004994:	e003      	b.n	800499e <HAL_GPIO_WritePin+0x26>
 8004996:	887b      	ldrh	r3, [r7, #2]
 8004998:	041a      	lsls	r2, r3, #16
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	619a      	str	r2, [r3, #24]
 800499e:	bf00      	nop
 80049a0:	370c      	adds	r7, #12
 80049a2:	46bd      	mov	sp, r7
 80049a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049a8:	4770      	bx	lr
	...

080049ac <HAL_I2C_Init>:
 80049ac:	b580      	push	{r7, lr}
 80049ae:	b084      	sub	sp, #16
 80049b0:	af00      	add	r7, sp, #0
 80049b2:	6078      	str	r0, [r7, #4]
 80049b4:	2300      	movs	r3, #0
 80049b6:	60fb      	str	r3, [r7, #12]
 80049b8:	2300      	movs	r3, #0
 80049ba:	60bb      	str	r3, [r7, #8]
 80049bc:	687b      	ldr	r3, [r7, #4]
 80049be:	2b00      	cmp	r3, #0
 80049c0:	d101      	bne.n	80049c6 <HAL_I2C_Init+0x1a>
 80049c2:	2301      	movs	r3, #1
 80049c4:	e0c9      	b.n	8004b5a <HAL_I2C_Init+0x1ae>
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80049cc:	b2db      	uxtb	r3, r3
 80049ce:	2b00      	cmp	r3, #0
 80049d0:	d106      	bne.n	80049e0 <HAL_I2C_Init+0x34>
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	2200      	movs	r2, #0
 80049d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80049da:	6878      	ldr	r0, [r7, #4]
 80049dc:	f005 fcf6 	bl	800a3cc <HAL_I2C_MspInit>
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	2224      	movs	r2, #36	; 0x24
 80049e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	681a      	ldr	r2, [r3, #0]
 80049ee:	687b      	ldr	r3, [r7, #4]
 80049f0:	681b      	ldr	r3, [r3, #0]
 80049f2:	f022 0201 	bic.w	r2, r2, #1
 80049f6:	601a      	str	r2, [r3, #0]
 80049f8:	f001 fae6 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 80049fc:	60b8      	str	r0, [r7, #8]
 80049fe:	68bb      	ldr	r3, [r7, #8]
 8004a00:	4a58      	ldr	r2, [pc, #352]	; (8004b64 <HAL_I2C_Init+0x1b8>)
 8004a02:	fba2 2303 	umull	r2, r3, r2, r3
 8004a06:	0c9b      	lsrs	r3, r3, #18
 8004a08:	60fb      	str	r3, [r7, #12]
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	68fa      	ldr	r2, [r7, #12]
 8004a10:	605a      	str	r2, [r3, #4]
 8004a12:	687b      	ldr	r3, [r7, #4]
 8004a14:	685b      	ldr	r3, [r3, #4]
 8004a16:	4a54      	ldr	r2, [pc, #336]	; (8004b68 <HAL_I2C_Init+0x1bc>)
 8004a18:	4293      	cmp	r3, r2
 8004a1a:	d802      	bhi.n	8004a22 <HAL_I2C_Init+0x76>
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	3301      	adds	r3, #1
 8004a20:	e009      	b.n	8004a36 <HAL_I2C_Init+0x8a>
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8004a28:	fb02 f303 	mul.w	r3, r2, r3
 8004a2c:	4a4f      	ldr	r2, [pc, #316]	; (8004b6c <HAL_I2C_Init+0x1c0>)
 8004a2e:	fba2 2303 	umull	r2, r3, r2, r3
 8004a32:	099b      	lsrs	r3, r3, #6
 8004a34:	3301      	adds	r3, #1
 8004a36:	687a      	ldr	r2, [r7, #4]
 8004a38:	6812      	ldr	r2, [r2, #0]
 8004a3a:	6213      	str	r3, [r2, #32]
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	685b      	ldr	r3, [r3, #4]
 8004a40:	4a49      	ldr	r2, [pc, #292]	; (8004b68 <HAL_I2C_Init+0x1bc>)
 8004a42:	4293      	cmp	r3, r2
 8004a44:	d813      	bhi.n	8004a6e <HAL_I2C_Init+0xc2>
 8004a46:	687b      	ldr	r3, [r7, #4]
 8004a48:	685b      	ldr	r3, [r3, #4]
 8004a4a:	005b      	lsls	r3, r3, #1
 8004a4c:	68ba      	ldr	r2, [r7, #8]
 8004a4e:	fbb2 f2f3 	udiv	r2, r2, r3
 8004a52:	f640 73fc 	movw	r3, #4092	; 0xffc
 8004a56:	4013      	ands	r3, r2
 8004a58:	2b00      	cmp	r3, #0
 8004a5a:	d006      	beq.n	8004a6a <HAL_I2C_Init+0xbe>
 8004a5c:	687b      	ldr	r3, [r7, #4]
 8004a5e:	685b      	ldr	r3, [r3, #4]
 8004a60:	005b      	lsls	r3, r3, #1
 8004a62:	68ba      	ldr	r2, [r7, #8]
 8004a64:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a68:	e045      	b.n	8004af6 <HAL_I2C_Init+0x14a>
 8004a6a:	2304      	movs	r3, #4
 8004a6c:	e043      	b.n	8004af6 <HAL_I2C_Init+0x14a>
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	689b      	ldr	r3, [r3, #8]
 8004a72:	2b00      	cmp	r3, #0
 8004a74:	d10f      	bne.n	8004a96 <HAL_I2C_Init+0xea>
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	685a      	ldr	r2, [r3, #4]
 8004a7a:	4613      	mov	r3, r2
 8004a7c:	005b      	lsls	r3, r3, #1
 8004a7e:	4413      	add	r3, r2
 8004a80:	68ba      	ldr	r2, [r7, #8]
 8004a82:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a86:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	bf0c      	ite	eq
 8004a8e:	2301      	moveq	r3, #1
 8004a90:	2300      	movne	r3, #0
 8004a92:	b2db      	uxtb	r3, r3
 8004a94:	e010      	b.n	8004ab8 <HAL_I2C_Init+0x10c>
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	685a      	ldr	r2, [r3, #4]
 8004a9a:	4613      	mov	r3, r2
 8004a9c:	009b      	lsls	r3, r3, #2
 8004a9e:	4413      	add	r3, r2
 8004aa0:	009a      	lsls	r2, r3, #2
 8004aa2:	4413      	add	r3, r2
 8004aa4:	68ba      	ldr	r2, [r7, #8]
 8004aa6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004aaa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004aae:	2b00      	cmp	r3, #0
 8004ab0:	bf0c      	ite	eq
 8004ab2:	2301      	moveq	r3, #1
 8004ab4:	2300      	movne	r3, #0
 8004ab6:	b2db      	uxtb	r3, r3
 8004ab8:	2b00      	cmp	r3, #0
 8004aba:	d001      	beq.n	8004ac0 <HAL_I2C_Init+0x114>
 8004abc:	2301      	movs	r3, #1
 8004abe:	e01a      	b.n	8004af6 <HAL_I2C_Init+0x14a>
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	689b      	ldr	r3, [r3, #8]
 8004ac4:	2b00      	cmp	r3, #0
 8004ac6:	d10a      	bne.n	8004ade <HAL_I2C_Init+0x132>
 8004ac8:	687b      	ldr	r3, [r7, #4]
 8004aca:	685a      	ldr	r2, [r3, #4]
 8004acc:	4613      	mov	r3, r2
 8004ace:	005b      	lsls	r3, r3, #1
 8004ad0:	4413      	add	r3, r2
 8004ad2:	68ba      	ldr	r2, [r7, #8]
 8004ad4:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ad8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004adc:	e00b      	b.n	8004af6 <HAL_I2C_Init+0x14a>
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	685a      	ldr	r2, [r3, #4]
 8004ae2:	4613      	mov	r3, r2
 8004ae4:	009b      	lsls	r3, r3, #2
 8004ae6:	4413      	add	r3, r2
 8004ae8:	009a      	lsls	r2, r3, #2
 8004aea:	4413      	add	r3, r2
 8004aec:	68ba      	ldr	r2, [r7, #8]
 8004aee:	fbb2 f3f3 	udiv	r3, r2, r3
 8004af2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004af6:	687a      	ldr	r2, [r7, #4]
 8004af8:	6812      	ldr	r2, [r2, #0]
 8004afa:	61d3      	str	r3, [r2, #28]
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	69d9      	ldr	r1, [r3, #28]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	6a1a      	ldr	r2, [r3, #32]
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	430a      	orrs	r2, r1
 8004b0a:	601a      	str	r2, [r3, #0]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	6919      	ldr	r1, [r3, #16]
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	68da      	ldr	r2, [r3, #12]
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	430a      	orrs	r2, r1
 8004b1a:	609a      	str	r2, [r3, #8]
 8004b1c:	687b      	ldr	r3, [r7, #4]
 8004b1e:	6959      	ldr	r1, [r3, #20]
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	699a      	ldr	r2, [r3, #24]
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	681b      	ldr	r3, [r3, #0]
 8004b28:	430a      	orrs	r2, r1
 8004b2a:	60da      	str	r2, [r3, #12]
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	681b      	ldr	r3, [r3, #0]
 8004b30:	681a      	ldr	r2, [r3, #0]
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	681b      	ldr	r3, [r3, #0]
 8004b36:	f042 0201 	orr.w	r2, r2, #1
 8004b3a:	601a      	str	r2, [r3, #0]
 8004b3c:	687b      	ldr	r3, [r7, #4]
 8004b3e:	2200      	movs	r2, #0
 8004b40:	641a      	str	r2, [r3, #64]	; 0x40
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	2220      	movs	r2, #32
 8004b46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	2200      	movs	r2, #0
 8004b4e:	631a      	str	r2, [r3, #48]	; 0x30
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	2200      	movs	r2, #0
 8004b54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004b58:	2300      	movs	r3, #0
 8004b5a:	4618      	mov	r0, r3
 8004b5c:	3710      	adds	r7, #16
 8004b5e:	46bd      	mov	sp, r7
 8004b60:	bd80      	pop	{r7, pc}
 8004b62:	bf00      	nop
 8004b64:	431bde83 	.word	0x431bde83
 8004b68:	000186a0 	.word	0x000186a0
 8004b6c:	10624dd3 	.word	0x10624dd3

08004b70 <HAL_I2C_Master_Transmit>:
 8004b70:	b580      	push	{r7, lr}
 8004b72:	b088      	sub	sp, #32
 8004b74:	af02      	add	r7, sp, #8
 8004b76:	60f8      	str	r0, [r7, #12]
 8004b78:	607a      	str	r2, [r7, #4]
 8004b7a:	461a      	mov	r2, r3
 8004b7c:	460b      	mov	r3, r1
 8004b7e:	817b      	strh	r3, [r7, #10]
 8004b80:	4613      	mov	r3, r2
 8004b82:	813b      	strh	r3, [r7, #8]
 8004b84:	2300      	movs	r3, #0
 8004b86:	617b      	str	r3, [r7, #20]
 8004b88:	f7ff fa46 	bl	8004018 <HAL_GetTick>
 8004b8c:	6178      	str	r0, [r7, #20]
 8004b8e:	68fb      	ldr	r3, [r7, #12]
 8004b90:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004b94:	b2db      	uxtb	r3, r3
 8004b96:	2b20      	cmp	r3, #32
 8004b98:	f040 80ee 	bne.w	8004d78 <HAL_I2C_Master_Transmit+0x208>
 8004b9c:	697b      	ldr	r3, [r7, #20]
 8004b9e:	9300      	str	r3, [sp, #0]
 8004ba0:	2319      	movs	r3, #25
 8004ba2:	2201      	movs	r2, #1
 8004ba4:	4977      	ldr	r1, [pc, #476]	; (8004d84 <HAL_I2C_Master_Transmit+0x214>)
 8004ba6:	68f8      	ldr	r0, [r7, #12]
 8004ba8:	f000 fc6c 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 8004bac:	4603      	mov	r3, r0
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d001      	beq.n	8004bb6 <HAL_I2C_Master_Transmit+0x46>
 8004bb2:	2302      	movs	r3, #2
 8004bb4:	e0e1      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004bb6:	68fb      	ldr	r3, [r7, #12]
 8004bb8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004bbc:	2b01      	cmp	r3, #1
 8004bbe:	d101      	bne.n	8004bc4 <HAL_I2C_Master_Transmit+0x54>
 8004bc0:	2302      	movs	r3, #2
 8004bc2:	e0da      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004bc4:	68fb      	ldr	r3, [r7, #12]
 8004bc6:	2201      	movs	r2, #1
 8004bc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004bcc:	68fb      	ldr	r3, [r7, #12]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	681b      	ldr	r3, [r3, #0]
 8004bd2:	f003 0301 	and.w	r3, r3, #1
 8004bd6:	2b01      	cmp	r3, #1
 8004bd8:	d007      	beq.n	8004bea <HAL_I2C_Master_Transmit+0x7a>
 8004bda:	68fb      	ldr	r3, [r7, #12]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	681a      	ldr	r2, [r3, #0]
 8004be0:	68fb      	ldr	r3, [r7, #12]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	f042 0201 	orr.w	r2, r2, #1
 8004be8:	601a      	str	r2, [r3, #0]
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	681a      	ldr	r2, [r3, #0]
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004bf8:	601a      	str	r2, [r3, #0]
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	2221      	movs	r2, #33	; 0x21
 8004bfe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	2210      	movs	r2, #16
 8004c06:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004c0a:	68fb      	ldr	r3, [r7, #12]
 8004c0c:	2200      	movs	r2, #0
 8004c0e:	641a      	str	r2, [r3, #64]	; 0x40
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	687a      	ldr	r2, [r7, #4]
 8004c14:	625a      	str	r2, [r3, #36]	; 0x24
 8004c16:	68fb      	ldr	r3, [r7, #12]
 8004c18:	893a      	ldrh	r2, [r7, #8]
 8004c1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004c1c:	68fb      	ldr	r3, [r7, #12]
 8004c1e:	4a5a      	ldr	r2, [pc, #360]	; (8004d88 <HAL_I2C_Master_Transmit+0x218>)
 8004c20:	62da      	str	r2, [r3, #44]	; 0x2c
 8004c22:	68fb      	ldr	r3, [r7, #12]
 8004c24:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004c26:	b29a      	uxth	r2, r3
 8004c28:	68fb      	ldr	r3, [r7, #12]
 8004c2a:	851a      	strh	r2, [r3, #40]	; 0x28
 8004c2c:	8979      	ldrh	r1, [r7, #10]
 8004c2e:	697b      	ldr	r3, [r7, #20]
 8004c30:	6a3a      	ldr	r2, [r7, #32]
 8004c32:	68f8      	ldr	r0, [r7, #12]
 8004c34:	f000 fadc 	bl	80051f0 <I2C_MasterRequestWrite>
 8004c38:	4603      	mov	r3, r0
 8004c3a:	2b00      	cmp	r3, #0
 8004c3c:	d00f      	beq.n	8004c5e <HAL_I2C_Master_Transmit+0xee>
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c42:	2b04      	cmp	r3, #4
 8004c44:	d105      	bne.n	8004c52 <HAL_I2C_Master_Transmit+0xe2>
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	2200      	movs	r2, #0
 8004c4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c4e:	2301      	movs	r3, #1
 8004c50:	e093      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004c52:	68fb      	ldr	r3, [r7, #12]
 8004c54:	2200      	movs	r2, #0
 8004c56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004c5a:	2303      	movs	r3, #3
 8004c5c:	e08d      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004c5e:	2300      	movs	r3, #0
 8004c60:	613b      	str	r3, [r7, #16]
 8004c62:	68fb      	ldr	r3, [r7, #12]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	695b      	ldr	r3, [r3, #20]
 8004c68:	613b      	str	r3, [r7, #16]
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	699b      	ldr	r3, [r3, #24]
 8004c70:	613b      	str	r3, [r7, #16]
 8004c72:	693b      	ldr	r3, [r7, #16]
 8004c74:	e066      	b.n	8004d44 <HAL_I2C_Master_Transmit+0x1d4>
 8004c76:	697a      	ldr	r2, [r7, #20]
 8004c78:	6a39      	ldr	r1, [r7, #32]
 8004c7a:	68f8      	ldr	r0, [r7, #12]
 8004c7c:	f000 fcc1 	bl	8005602 <I2C_WaitOnTXEFlagUntilTimeout>
 8004c80:	4603      	mov	r3, r0
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	d00f      	beq.n	8004ca6 <HAL_I2C_Master_Transmit+0x136>
 8004c86:	68fb      	ldr	r3, [r7, #12]
 8004c88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c8a:	2b04      	cmp	r3, #4
 8004c8c:	d109      	bne.n	8004ca2 <HAL_I2C_Master_Transmit+0x132>
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	681a      	ldr	r2, [r3, #0]
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004c9c:	601a      	str	r2, [r3, #0]
 8004c9e:	2301      	movs	r3, #1
 8004ca0:	e06b      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004ca2:	2303      	movs	r3, #3
 8004ca4:	e069      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004ca6:	68fb      	ldr	r3, [r7, #12]
 8004ca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004caa:	1c59      	adds	r1, r3, #1
 8004cac:	68fa      	ldr	r2, [r7, #12]
 8004cae:	6251      	str	r1, [r2, #36]	; 0x24
 8004cb0:	781a      	ldrb	r2, [r3, #0]
 8004cb2:	68fb      	ldr	r3, [r7, #12]
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	611a      	str	r2, [r3, #16]
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004cbc:	b29b      	uxth	r3, r3
 8004cbe:	3b01      	subs	r3, #1
 8004cc0:	b29a      	uxth	r2, r3
 8004cc2:	68fb      	ldr	r3, [r7, #12]
 8004cc4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004cca:	3b01      	subs	r3, #1
 8004ccc:	b29a      	uxth	r2, r3
 8004cce:	68fb      	ldr	r3, [r7, #12]
 8004cd0:	851a      	strh	r2, [r3, #40]	; 0x28
 8004cd2:	68fb      	ldr	r3, [r7, #12]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	695b      	ldr	r3, [r3, #20]
 8004cd8:	f003 0304 	and.w	r3, r3, #4
 8004cdc:	2b04      	cmp	r3, #4
 8004cde:	d119      	bne.n	8004d14 <HAL_I2C_Master_Transmit+0x1a4>
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004ce4:	2b00      	cmp	r3, #0
 8004ce6:	d015      	beq.n	8004d14 <HAL_I2C_Master_Transmit+0x1a4>
 8004ce8:	68fb      	ldr	r3, [r7, #12]
 8004cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cec:	1c59      	adds	r1, r3, #1
 8004cee:	68fa      	ldr	r2, [r7, #12]
 8004cf0:	6251      	str	r1, [r2, #36]	; 0x24
 8004cf2:	781a      	ldrb	r2, [r3, #0]
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	611a      	str	r2, [r3, #16]
 8004cfa:	68fb      	ldr	r3, [r7, #12]
 8004cfc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004cfe:	b29b      	uxth	r3, r3
 8004d00:	3b01      	subs	r3, #1
 8004d02:	b29a      	uxth	r2, r3
 8004d04:	68fb      	ldr	r3, [r7, #12]
 8004d06:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004d08:	68fb      	ldr	r3, [r7, #12]
 8004d0a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004d0c:	3b01      	subs	r3, #1
 8004d0e:	b29a      	uxth	r2, r3
 8004d10:	68fb      	ldr	r3, [r7, #12]
 8004d12:	851a      	strh	r2, [r3, #40]	; 0x28
 8004d14:	697a      	ldr	r2, [r7, #20]
 8004d16:	6a39      	ldr	r1, [r7, #32]
 8004d18:	68f8      	ldr	r0, [r7, #12]
 8004d1a:	f000 fcaf 	bl	800567c <I2C_WaitOnBTFFlagUntilTimeout>
 8004d1e:	4603      	mov	r3, r0
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	d00f      	beq.n	8004d44 <HAL_I2C_Master_Transmit+0x1d4>
 8004d24:	68fb      	ldr	r3, [r7, #12]
 8004d26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d28:	2b04      	cmp	r3, #4
 8004d2a:	d109      	bne.n	8004d40 <HAL_I2C_Master_Transmit+0x1d0>
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	681a      	ldr	r2, [r3, #0]
 8004d32:	68fb      	ldr	r3, [r7, #12]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004d3a:	601a      	str	r2, [r3, #0]
 8004d3c:	2301      	movs	r3, #1
 8004d3e:	e01c      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004d40:	2303      	movs	r3, #3
 8004d42:	e01a      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004d44:	68fb      	ldr	r3, [r7, #12]
 8004d46:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d194      	bne.n	8004c76 <HAL_I2C_Master_Transmit+0x106>
 8004d4c:	68fb      	ldr	r3, [r7, #12]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	681a      	ldr	r2, [r3, #0]
 8004d52:	68fb      	ldr	r3, [r7, #12]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004d5a:	601a      	str	r2, [r3, #0]
 8004d5c:	68fb      	ldr	r3, [r7, #12]
 8004d5e:	2220      	movs	r2, #32
 8004d60:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004d64:	68fb      	ldr	r3, [r7, #12]
 8004d66:	2200      	movs	r2, #0
 8004d68:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	2200      	movs	r2, #0
 8004d70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004d74:	2300      	movs	r3, #0
 8004d76:	e000      	b.n	8004d7a <HAL_I2C_Master_Transmit+0x20a>
 8004d78:	2302      	movs	r3, #2
 8004d7a:	4618      	mov	r0, r3
 8004d7c:	3718      	adds	r7, #24
 8004d7e:	46bd      	mov	sp, r7
 8004d80:	bd80      	pop	{r7, pc}
 8004d82:	bf00      	nop
 8004d84:	00100002 	.word	0x00100002
 8004d88:	ffff0000 	.word	0xffff0000

08004d8c <HAL_I2C_Master_Receive>:
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b08c      	sub	sp, #48	; 0x30
 8004d90:	af02      	add	r7, sp, #8
 8004d92:	60f8      	str	r0, [r7, #12]
 8004d94:	607a      	str	r2, [r7, #4]
 8004d96:	461a      	mov	r2, r3
 8004d98:	460b      	mov	r3, r1
 8004d9a:	817b      	strh	r3, [r7, #10]
 8004d9c:	4613      	mov	r3, r2
 8004d9e:	813b      	strh	r3, [r7, #8]
 8004da0:	2300      	movs	r3, #0
 8004da2:	627b      	str	r3, [r7, #36]	; 0x24
 8004da4:	f7ff f938 	bl	8004018 <HAL_GetTick>
 8004da8:	6278      	str	r0, [r7, #36]	; 0x24
 8004daa:	68fb      	ldr	r3, [r7, #12]
 8004dac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004db0:	b2db      	uxtb	r3, r3
 8004db2:	2b20      	cmp	r3, #32
 8004db4:	f040 8215 	bne.w	80051e2 <HAL_I2C_Master_Receive+0x456>
 8004db8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dba:	9300      	str	r3, [sp, #0]
 8004dbc:	2319      	movs	r3, #25
 8004dbe:	2201      	movs	r2, #1
 8004dc0:	4985      	ldr	r1, [pc, #532]	; (8004fd8 <HAL_I2C_Master_Receive+0x24c>)
 8004dc2:	68f8      	ldr	r0, [r7, #12]
 8004dc4:	f000 fb5e 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 8004dc8:	4603      	mov	r3, r0
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d001      	beq.n	8004dd2 <HAL_I2C_Master_Receive+0x46>
 8004dce:	2302      	movs	r3, #2
 8004dd0:	e208      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004dd2:	68fb      	ldr	r3, [r7, #12]
 8004dd4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004dd8:	2b01      	cmp	r3, #1
 8004dda:	d101      	bne.n	8004de0 <HAL_I2C_Master_Receive+0x54>
 8004ddc:	2302      	movs	r3, #2
 8004dde:	e201      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	2201      	movs	r2, #1
 8004de4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004de8:	68fb      	ldr	r3, [r7, #12]
 8004dea:	681b      	ldr	r3, [r3, #0]
 8004dec:	681b      	ldr	r3, [r3, #0]
 8004dee:	f003 0301 	and.w	r3, r3, #1
 8004df2:	2b01      	cmp	r3, #1
 8004df4:	d007      	beq.n	8004e06 <HAL_I2C_Master_Receive+0x7a>
 8004df6:	68fb      	ldr	r3, [r7, #12]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	681a      	ldr	r2, [r3, #0]
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	f042 0201 	orr.w	r2, r2, #1
 8004e04:	601a      	str	r2, [r3, #0]
 8004e06:	68fb      	ldr	r3, [r7, #12]
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	681a      	ldr	r2, [r3, #0]
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	681b      	ldr	r3, [r3, #0]
 8004e10:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004e14:	601a      	str	r2, [r3, #0]
 8004e16:	68fb      	ldr	r3, [r7, #12]
 8004e18:	2222      	movs	r2, #34	; 0x22
 8004e1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004e1e:	68fb      	ldr	r3, [r7, #12]
 8004e20:	2210      	movs	r2, #16
 8004e22:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	2200      	movs	r2, #0
 8004e2a:	641a      	str	r2, [r3, #64]	; 0x40
 8004e2c:	68fb      	ldr	r3, [r7, #12]
 8004e2e:	687a      	ldr	r2, [r7, #4]
 8004e30:	625a      	str	r2, [r3, #36]	; 0x24
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	893a      	ldrh	r2, [r7, #8]
 8004e36:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004e38:	68fb      	ldr	r3, [r7, #12]
 8004e3a:	4a68      	ldr	r2, [pc, #416]	; (8004fdc <HAL_I2C_Master_Receive+0x250>)
 8004e3c:	62da      	str	r2, [r3, #44]	; 0x2c
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004e42:	b29a      	uxth	r2, r3
 8004e44:	68fb      	ldr	r3, [r7, #12]
 8004e46:	851a      	strh	r2, [r3, #40]	; 0x28
 8004e48:	8979      	ldrh	r1, [r7, #10]
 8004e4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004e4c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8004e4e:	68f8      	ldr	r0, [r7, #12]
 8004e50:	f000 fa50 	bl	80052f4 <I2C_MasterRequestRead>
 8004e54:	4603      	mov	r3, r0
 8004e56:	2b00      	cmp	r3, #0
 8004e58:	d00f      	beq.n	8004e7a <HAL_I2C_Master_Receive+0xee>
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e5e:	2b04      	cmp	r3, #4
 8004e60:	d105      	bne.n	8004e6e <HAL_I2C_Master_Receive+0xe2>
 8004e62:	68fb      	ldr	r3, [r7, #12]
 8004e64:	2200      	movs	r2, #0
 8004e66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004e6a:	2301      	movs	r3, #1
 8004e6c:	e1ba      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004e6e:	68fb      	ldr	r3, [r7, #12]
 8004e70:	2200      	movs	r2, #0
 8004e72:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004e76:	2303      	movs	r3, #3
 8004e78:	e1b4      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004e7e:	2b00      	cmp	r3, #0
 8004e80:	d113      	bne.n	8004eaa <HAL_I2C_Master_Receive+0x11e>
 8004e82:	2300      	movs	r3, #0
 8004e84:	623b      	str	r3, [r7, #32]
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	695b      	ldr	r3, [r3, #20]
 8004e8c:	623b      	str	r3, [r7, #32]
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	699b      	ldr	r3, [r3, #24]
 8004e94:	623b      	str	r3, [r7, #32]
 8004e96:	6a3b      	ldr	r3, [r7, #32]
 8004e98:	68fb      	ldr	r3, [r7, #12]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	681a      	ldr	r2, [r3, #0]
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ea6:	601a      	str	r2, [r3, #0]
 8004ea8:	e188      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004eae:	2b01      	cmp	r3, #1
 8004eb0:	d11b      	bne.n	8004eea <HAL_I2C_Master_Receive+0x15e>
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	681a      	ldr	r2, [r3, #0]
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004ec0:	601a      	str	r2, [r3, #0]
 8004ec2:	2300      	movs	r3, #0
 8004ec4:	61fb      	str	r3, [r7, #28]
 8004ec6:	68fb      	ldr	r3, [r7, #12]
 8004ec8:	681b      	ldr	r3, [r3, #0]
 8004eca:	695b      	ldr	r3, [r3, #20]
 8004ecc:	61fb      	str	r3, [r7, #28]
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	699b      	ldr	r3, [r3, #24]
 8004ed4:	61fb      	str	r3, [r7, #28]
 8004ed6:	69fb      	ldr	r3, [r7, #28]
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	681b      	ldr	r3, [r3, #0]
 8004edc:	681a      	ldr	r2, [r3, #0]
 8004ede:	68fb      	ldr	r3, [r7, #12]
 8004ee0:	681b      	ldr	r3, [r3, #0]
 8004ee2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ee6:	601a      	str	r2, [r3, #0]
 8004ee8:	e168      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8004eea:	68fb      	ldr	r3, [r7, #12]
 8004eec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004eee:	2b02      	cmp	r3, #2
 8004ef0:	d11b      	bne.n	8004f2a <HAL_I2C_Master_Receive+0x19e>
 8004ef2:	68fb      	ldr	r3, [r7, #12]
 8004ef4:	681b      	ldr	r3, [r3, #0]
 8004ef6:	681a      	ldr	r2, [r3, #0]
 8004ef8:	68fb      	ldr	r3, [r7, #12]
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004f00:	601a      	str	r2, [r3, #0]
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	681a      	ldr	r2, [r3, #0]
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004f10:	601a      	str	r2, [r3, #0]
 8004f12:	2300      	movs	r3, #0
 8004f14:	61bb      	str	r3, [r7, #24]
 8004f16:	68fb      	ldr	r3, [r7, #12]
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	695b      	ldr	r3, [r3, #20]
 8004f1c:	61bb      	str	r3, [r7, #24]
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	699b      	ldr	r3, [r3, #24]
 8004f24:	61bb      	str	r3, [r7, #24]
 8004f26:	69bb      	ldr	r3, [r7, #24]
 8004f28:	e148      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8004f2a:	68fb      	ldr	r3, [r7, #12]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	68fb      	ldr	r3, [r7, #12]
 8004f32:	681b      	ldr	r3, [r3, #0]
 8004f34:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004f38:	601a      	str	r2, [r3, #0]
 8004f3a:	2300      	movs	r3, #0
 8004f3c:	617b      	str	r3, [r7, #20]
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	695b      	ldr	r3, [r3, #20]
 8004f44:	617b      	str	r3, [r7, #20]
 8004f46:	68fb      	ldr	r3, [r7, #12]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	699b      	ldr	r3, [r3, #24]
 8004f4c:	617b      	str	r3, [r7, #20]
 8004f4e:	697b      	ldr	r3, [r7, #20]
 8004f50:	e134      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004f56:	2b03      	cmp	r3, #3
 8004f58:	f200 80eb 	bhi.w	8005132 <HAL_I2C_Master_Receive+0x3a6>
 8004f5c:	68fb      	ldr	r3, [r7, #12]
 8004f5e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004f60:	2b01      	cmp	r3, #1
 8004f62:	d127      	bne.n	8004fb4 <HAL_I2C_Master_Receive+0x228>
 8004f64:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004f66:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8004f68:	68f8      	ldr	r0, [r7, #12]
 8004f6a:	f000 fbc4 	bl	80056f6 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004f6e:	4603      	mov	r3, r0
 8004f70:	2b00      	cmp	r3, #0
 8004f72:	d007      	beq.n	8004f84 <HAL_I2C_Master_Receive+0x1f8>
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f78:	2b20      	cmp	r3, #32
 8004f7a:	d101      	bne.n	8004f80 <HAL_I2C_Master_Receive+0x1f4>
 8004f7c:	2303      	movs	r3, #3
 8004f7e:	e131      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004f80:	2301      	movs	r3, #1
 8004f82:	e12f      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	6918      	ldr	r0, [r3, #16]
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f8e:	1c59      	adds	r1, r3, #1
 8004f90:	68fa      	ldr	r2, [r7, #12]
 8004f92:	6251      	str	r1, [r2, #36]	; 0x24
 8004f94:	b2c2      	uxtb	r2, r0
 8004f96:	701a      	strb	r2, [r3, #0]
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004f9c:	3b01      	subs	r3, #1
 8004f9e:	b29a      	uxth	r2, r3
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	851a      	strh	r2, [r3, #40]	; 0x28
 8004fa4:	68fb      	ldr	r3, [r7, #12]
 8004fa6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8004fa8:	b29b      	uxth	r3, r3
 8004faa:	3b01      	subs	r3, #1
 8004fac:	b29a      	uxth	r2, r3
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8004fb2:	e103      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8004fb8:	2b02      	cmp	r3, #2
 8004fba:	d14a      	bne.n	8005052 <HAL_I2C_Master_Receive+0x2c6>
 8004fbc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fbe:	9300      	str	r3, [sp, #0]
 8004fc0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8004fc2:	2200      	movs	r2, #0
 8004fc4:	4906      	ldr	r1, [pc, #24]	; (8004fe0 <HAL_I2C_Master_Receive+0x254>)
 8004fc6:	68f8      	ldr	r0, [r7, #12]
 8004fc8:	f000 fa5c 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 8004fcc:	4603      	mov	r3, r0
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	d008      	beq.n	8004fe4 <HAL_I2C_Master_Receive+0x258>
 8004fd2:	2303      	movs	r3, #3
 8004fd4:	e106      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8004fd6:	bf00      	nop
 8004fd8:	00100002 	.word	0x00100002
 8004fdc:	ffff0000 	.word	0xffff0000
 8004fe0:	00010004 	.word	0x00010004
 8004fe4:	68fb      	ldr	r3, [r7, #12]
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	681a      	ldr	r2, [r3, #0]
 8004fea:	68fb      	ldr	r3, [r7, #12]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004ff2:	601a      	str	r2, [r3, #0]
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	6918      	ldr	r0, [r3, #16]
 8004ffa:	68fb      	ldr	r3, [r7, #12]
 8004ffc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ffe:	1c59      	adds	r1, r3, #1
 8005000:	68fa      	ldr	r2, [r7, #12]
 8005002:	6251      	str	r1, [r2, #36]	; 0x24
 8005004:	b2c2      	uxtb	r2, r0
 8005006:	701a      	strb	r2, [r3, #0]
 8005008:	68fb      	ldr	r3, [r7, #12]
 800500a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800500c:	3b01      	subs	r3, #1
 800500e:	b29a      	uxth	r2, r3
 8005010:	68fb      	ldr	r3, [r7, #12]
 8005012:	851a      	strh	r2, [r3, #40]	; 0x28
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005018:	b29b      	uxth	r3, r3
 800501a:	3b01      	subs	r3, #1
 800501c:	b29a      	uxth	r2, r3
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005022:	68fb      	ldr	r3, [r7, #12]
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	6918      	ldr	r0, [r3, #16]
 8005028:	68fb      	ldr	r3, [r7, #12]
 800502a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800502c:	1c59      	adds	r1, r3, #1
 800502e:	68fa      	ldr	r2, [r7, #12]
 8005030:	6251      	str	r1, [r2, #36]	; 0x24
 8005032:	b2c2      	uxtb	r2, r0
 8005034:	701a      	strb	r2, [r3, #0]
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800503a:	3b01      	subs	r3, #1
 800503c:	b29a      	uxth	r2, r3
 800503e:	68fb      	ldr	r3, [r7, #12]
 8005040:	851a      	strh	r2, [r3, #40]	; 0x28
 8005042:	68fb      	ldr	r3, [r7, #12]
 8005044:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005046:	b29b      	uxth	r3, r3
 8005048:	3b01      	subs	r3, #1
 800504a:	b29a      	uxth	r2, r3
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005050:	e0b4      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8005052:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005054:	9300      	str	r3, [sp, #0]
 8005056:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005058:	2200      	movs	r2, #0
 800505a:	4964      	ldr	r1, [pc, #400]	; (80051ec <HAL_I2C_Master_Receive+0x460>)
 800505c:	68f8      	ldr	r0, [r7, #12]
 800505e:	f000 fa11 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 8005062:	4603      	mov	r3, r0
 8005064:	2b00      	cmp	r3, #0
 8005066:	d001      	beq.n	800506c <HAL_I2C_Master_Receive+0x2e0>
 8005068:	2303      	movs	r3, #3
 800506a:	e0bb      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	681a      	ldr	r2, [r3, #0]
 8005072:	68fb      	ldr	r3, [r7, #12]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800507a:	601a      	str	r2, [r3, #0]
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	6918      	ldr	r0, [r3, #16]
 8005082:	68fb      	ldr	r3, [r7, #12]
 8005084:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005086:	1c59      	adds	r1, r3, #1
 8005088:	68fa      	ldr	r2, [r7, #12]
 800508a:	6251      	str	r1, [r2, #36]	; 0x24
 800508c:	b2c2      	uxtb	r2, r0
 800508e:	701a      	strb	r2, [r3, #0]
 8005090:	68fb      	ldr	r3, [r7, #12]
 8005092:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005094:	3b01      	subs	r3, #1
 8005096:	b29a      	uxth	r2, r3
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	851a      	strh	r2, [r3, #40]	; 0x28
 800509c:	68fb      	ldr	r3, [r7, #12]
 800509e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80050a0:	b29b      	uxth	r3, r3
 80050a2:	3b01      	subs	r3, #1
 80050a4:	b29a      	uxth	r2, r3
 80050a6:	68fb      	ldr	r3, [r7, #12]
 80050a8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80050aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80050ac:	9300      	str	r3, [sp, #0]
 80050ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80050b0:	2200      	movs	r2, #0
 80050b2:	494e      	ldr	r1, [pc, #312]	; (80051ec <HAL_I2C_Master_Receive+0x460>)
 80050b4:	68f8      	ldr	r0, [r7, #12]
 80050b6:	f000 f9e5 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 80050ba:	4603      	mov	r3, r0
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d001      	beq.n	80050c4 <HAL_I2C_Master_Receive+0x338>
 80050c0:	2303      	movs	r3, #3
 80050c2:	e08f      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	681a      	ldr	r2, [r3, #0]
 80050ca:	68fb      	ldr	r3, [r7, #12]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80050d2:	601a      	str	r2, [r3, #0]
 80050d4:	68fb      	ldr	r3, [r7, #12]
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	6918      	ldr	r0, [r3, #16]
 80050da:	68fb      	ldr	r3, [r7, #12]
 80050dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050de:	1c59      	adds	r1, r3, #1
 80050e0:	68fa      	ldr	r2, [r7, #12]
 80050e2:	6251      	str	r1, [r2, #36]	; 0x24
 80050e4:	b2c2      	uxtb	r2, r0
 80050e6:	701a      	strb	r2, [r3, #0]
 80050e8:	68fb      	ldr	r3, [r7, #12]
 80050ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80050ec:	3b01      	subs	r3, #1
 80050ee:	b29a      	uxth	r2, r3
 80050f0:	68fb      	ldr	r3, [r7, #12]
 80050f2:	851a      	strh	r2, [r3, #40]	; 0x28
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80050f8:	b29b      	uxth	r3, r3
 80050fa:	3b01      	subs	r3, #1
 80050fc:	b29a      	uxth	r2, r3
 80050fe:	68fb      	ldr	r3, [r7, #12]
 8005100:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	6918      	ldr	r0, [r3, #16]
 8005108:	68fb      	ldr	r3, [r7, #12]
 800510a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800510c:	1c59      	adds	r1, r3, #1
 800510e:	68fa      	ldr	r2, [r7, #12]
 8005110:	6251      	str	r1, [r2, #36]	; 0x24
 8005112:	b2c2      	uxtb	r2, r0
 8005114:	701a      	strb	r2, [r3, #0]
 8005116:	68fb      	ldr	r3, [r7, #12]
 8005118:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800511a:	3b01      	subs	r3, #1
 800511c:	b29a      	uxth	r2, r3
 800511e:	68fb      	ldr	r3, [r7, #12]
 8005120:	851a      	strh	r2, [r3, #40]	; 0x28
 8005122:	68fb      	ldr	r3, [r7, #12]
 8005124:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005126:	b29b      	uxth	r3, r3
 8005128:	3b01      	subs	r3, #1
 800512a:	b29a      	uxth	r2, r3
 800512c:	68fb      	ldr	r3, [r7, #12]
 800512e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005130:	e044      	b.n	80051bc <HAL_I2C_Master_Receive+0x430>
 8005132:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005134:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005136:	68f8      	ldr	r0, [r7, #12]
 8005138:	f000 fadd 	bl	80056f6 <I2C_WaitOnRXNEFlagUntilTimeout>
 800513c:	4603      	mov	r3, r0
 800513e:	2b00      	cmp	r3, #0
 8005140:	d007      	beq.n	8005152 <HAL_I2C_Master_Receive+0x3c6>
 8005142:	68fb      	ldr	r3, [r7, #12]
 8005144:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005146:	2b20      	cmp	r3, #32
 8005148:	d101      	bne.n	800514e <HAL_I2C_Master_Receive+0x3c2>
 800514a:	2303      	movs	r3, #3
 800514c:	e04a      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 800514e:	2301      	movs	r3, #1
 8005150:	e048      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	681b      	ldr	r3, [r3, #0]
 8005156:	6918      	ldr	r0, [r3, #16]
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800515c:	1c59      	adds	r1, r3, #1
 800515e:	68fa      	ldr	r2, [r7, #12]
 8005160:	6251      	str	r1, [r2, #36]	; 0x24
 8005162:	b2c2      	uxtb	r2, r0
 8005164:	701a      	strb	r2, [r3, #0]
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800516a:	3b01      	subs	r3, #1
 800516c:	b29a      	uxth	r2, r3
 800516e:	68fb      	ldr	r3, [r7, #12]
 8005170:	851a      	strh	r2, [r3, #40]	; 0x28
 8005172:	68fb      	ldr	r3, [r7, #12]
 8005174:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005176:	b29b      	uxth	r3, r3
 8005178:	3b01      	subs	r3, #1
 800517a:	b29a      	uxth	r2, r3
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	695b      	ldr	r3, [r3, #20]
 8005186:	f003 0304 	and.w	r3, r3, #4
 800518a:	2b04      	cmp	r3, #4
 800518c:	d116      	bne.n	80051bc <HAL_I2C_Master_Receive+0x430>
 800518e:	68fb      	ldr	r3, [r7, #12]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	6918      	ldr	r0, [r3, #16]
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005198:	1c59      	adds	r1, r3, #1
 800519a:	68fa      	ldr	r2, [r7, #12]
 800519c:	6251      	str	r1, [r2, #36]	; 0x24
 800519e:	b2c2      	uxtb	r2, r0
 80051a0:	701a      	strb	r2, [r3, #0]
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051a6:	3b01      	subs	r3, #1
 80051a8:	b29a      	uxth	r2, r3
 80051aa:	68fb      	ldr	r3, [r7, #12]
 80051ac:	851a      	strh	r2, [r3, #40]	; 0x28
 80051ae:	68fb      	ldr	r3, [r7, #12]
 80051b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80051b2:	b29b      	uxth	r3, r3
 80051b4:	3b01      	subs	r3, #1
 80051b6:	b29a      	uxth	r2, r3
 80051b8:	68fb      	ldr	r3, [r7, #12]
 80051ba:	855a      	strh	r2, [r3, #42]	; 0x2a
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80051c0:	2b00      	cmp	r3, #0
 80051c2:	f47f aec6 	bne.w	8004f52 <HAL_I2C_Master_Receive+0x1c6>
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	2220      	movs	r2, #32
 80051ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80051ce:	68fb      	ldr	r3, [r7, #12]
 80051d0:	2200      	movs	r2, #0
 80051d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80051d6:	68fb      	ldr	r3, [r7, #12]
 80051d8:	2200      	movs	r2, #0
 80051da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80051de:	2300      	movs	r3, #0
 80051e0:	e000      	b.n	80051e4 <HAL_I2C_Master_Receive+0x458>
 80051e2:	2302      	movs	r3, #2
 80051e4:	4618      	mov	r0, r3
 80051e6:	3728      	adds	r7, #40	; 0x28
 80051e8:	46bd      	mov	sp, r7
 80051ea:	bd80      	pop	{r7, pc}
 80051ec:	00010004 	.word	0x00010004

080051f0 <I2C_MasterRequestWrite>:
 80051f0:	b580      	push	{r7, lr}
 80051f2:	b088      	sub	sp, #32
 80051f4:	af02      	add	r7, sp, #8
 80051f6:	60f8      	str	r0, [r7, #12]
 80051f8:	607a      	str	r2, [r7, #4]
 80051fa:	603b      	str	r3, [r7, #0]
 80051fc:	460b      	mov	r3, r1
 80051fe:	817b      	strh	r3, [r7, #10]
 8005200:	68fb      	ldr	r3, [r7, #12]
 8005202:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005204:	617b      	str	r3, [r7, #20]
 8005206:	697b      	ldr	r3, [r7, #20]
 8005208:	2b04      	cmp	r3, #4
 800520a:	d006      	beq.n	800521a <I2C_MasterRequestWrite+0x2a>
 800520c:	697b      	ldr	r3, [r7, #20]
 800520e:	2b01      	cmp	r3, #1
 8005210:	d003      	beq.n	800521a <I2C_MasterRequestWrite+0x2a>
 8005212:	697b      	ldr	r3, [r7, #20]
 8005214:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8005218:	d108      	bne.n	800522c <I2C_MasterRequestWrite+0x3c>
 800521a:	68fb      	ldr	r3, [r7, #12]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	681a      	ldr	r2, [r3, #0]
 8005220:	68fb      	ldr	r3, [r7, #12]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005228:	601a      	str	r2, [r3, #0]
 800522a:	e00b      	b.n	8005244 <I2C_MasterRequestWrite+0x54>
 800522c:	68fb      	ldr	r3, [r7, #12]
 800522e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005230:	2b12      	cmp	r3, #18
 8005232:	d107      	bne.n	8005244 <I2C_MasterRequestWrite+0x54>
 8005234:	68fb      	ldr	r3, [r7, #12]
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	681a      	ldr	r2, [r3, #0]
 800523a:	68fb      	ldr	r3, [r7, #12]
 800523c:	681b      	ldr	r3, [r3, #0]
 800523e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005242:	601a      	str	r2, [r3, #0]
 8005244:	683b      	ldr	r3, [r7, #0]
 8005246:	9300      	str	r3, [sp, #0]
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	2200      	movs	r2, #0
 800524c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005250:	68f8      	ldr	r0, [r7, #12]
 8005252:	f000 f917 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 8005256:	4603      	mov	r3, r0
 8005258:	2b00      	cmp	r3, #0
 800525a:	d001      	beq.n	8005260 <I2C_MasterRequestWrite+0x70>
 800525c:	2303      	movs	r3, #3
 800525e:	e041      	b.n	80052e4 <I2C_MasterRequestWrite+0xf4>
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	691b      	ldr	r3, [r3, #16]
 8005264:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8005268:	d108      	bne.n	800527c <I2C_MasterRequestWrite+0x8c>
 800526a:	897b      	ldrh	r3, [r7, #10]
 800526c:	b2db      	uxtb	r3, r3
 800526e:	461a      	mov	r2, r3
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8005278:	611a      	str	r2, [r3, #16]
 800527a:	e021      	b.n	80052c0 <I2C_MasterRequestWrite+0xd0>
 800527c:	897b      	ldrh	r3, [r7, #10]
 800527e:	11db      	asrs	r3, r3, #7
 8005280:	b2db      	uxtb	r3, r3
 8005282:	f003 0306 	and.w	r3, r3, #6
 8005286:	b2db      	uxtb	r3, r3
 8005288:	f063 030f 	orn	r3, r3, #15
 800528c:	b2da      	uxtb	r2, r3
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	611a      	str	r2, [r3, #16]
 8005294:	683b      	ldr	r3, [r7, #0]
 8005296:	687a      	ldr	r2, [r7, #4]
 8005298:	4914      	ldr	r1, [pc, #80]	; (80052ec <I2C_MasterRequestWrite+0xfc>)
 800529a:	68f8      	ldr	r0, [r7, #12]
 800529c:	f000 f943 	bl	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052a0:	4603      	mov	r3, r0
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d007      	beq.n	80052b6 <I2C_MasterRequestWrite+0xc6>
 80052a6:	68fb      	ldr	r3, [r7, #12]
 80052a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052aa:	2b04      	cmp	r3, #4
 80052ac:	d101      	bne.n	80052b2 <I2C_MasterRequestWrite+0xc2>
 80052ae:	2301      	movs	r3, #1
 80052b0:	e018      	b.n	80052e4 <I2C_MasterRequestWrite+0xf4>
 80052b2:	2303      	movs	r3, #3
 80052b4:	e016      	b.n	80052e4 <I2C_MasterRequestWrite+0xf4>
 80052b6:	897b      	ldrh	r3, [r7, #10]
 80052b8:	b2da      	uxtb	r2, r3
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	611a      	str	r2, [r3, #16]
 80052c0:	683b      	ldr	r3, [r7, #0]
 80052c2:	687a      	ldr	r2, [r7, #4]
 80052c4:	490a      	ldr	r1, [pc, #40]	; (80052f0 <I2C_MasterRequestWrite+0x100>)
 80052c6:	68f8      	ldr	r0, [r7, #12]
 80052c8:	f000 f92d 	bl	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80052cc:	4603      	mov	r3, r0
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d007      	beq.n	80052e2 <I2C_MasterRequestWrite+0xf2>
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052d6:	2b04      	cmp	r3, #4
 80052d8:	d101      	bne.n	80052de <I2C_MasterRequestWrite+0xee>
 80052da:	2301      	movs	r3, #1
 80052dc:	e002      	b.n	80052e4 <I2C_MasterRequestWrite+0xf4>
 80052de:	2303      	movs	r3, #3
 80052e0:	e000      	b.n	80052e4 <I2C_MasterRequestWrite+0xf4>
 80052e2:	2300      	movs	r3, #0
 80052e4:	4618      	mov	r0, r3
 80052e6:	3718      	adds	r7, #24
 80052e8:	46bd      	mov	sp, r7
 80052ea:	bd80      	pop	{r7, pc}
 80052ec:	00010008 	.word	0x00010008
 80052f0:	00010002 	.word	0x00010002

080052f4 <I2C_MasterRequestRead>:
 80052f4:	b580      	push	{r7, lr}
 80052f6:	b088      	sub	sp, #32
 80052f8:	af02      	add	r7, sp, #8
 80052fa:	60f8      	str	r0, [r7, #12]
 80052fc:	607a      	str	r2, [r7, #4]
 80052fe:	603b      	str	r3, [r7, #0]
 8005300:	460b      	mov	r3, r1
 8005302:	817b      	strh	r3, [r7, #10]
 8005304:	68fb      	ldr	r3, [r7, #12]
 8005306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005308:	617b      	str	r3, [r7, #20]
 800530a:	68fb      	ldr	r3, [r7, #12]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	681a      	ldr	r2, [r3, #0]
 8005310:	68fb      	ldr	r3, [r7, #12]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005318:	601a      	str	r2, [r3, #0]
 800531a:	697b      	ldr	r3, [r7, #20]
 800531c:	2b04      	cmp	r3, #4
 800531e:	d006      	beq.n	800532e <I2C_MasterRequestRead+0x3a>
 8005320:	697b      	ldr	r3, [r7, #20]
 8005322:	2b01      	cmp	r3, #1
 8005324:	d003      	beq.n	800532e <I2C_MasterRequestRead+0x3a>
 8005326:	697b      	ldr	r3, [r7, #20]
 8005328:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800532c:	d108      	bne.n	8005340 <I2C_MasterRequestRead+0x4c>
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	681a      	ldr	r2, [r3, #0]
 8005334:	68fb      	ldr	r3, [r7, #12]
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800533c:	601a      	str	r2, [r3, #0]
 800533e:	e00b      	b.n	8005358 <I2C_MasterRequestRead+0x64>
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005344:	2b11      	cmp	r3, #17
 8005346:	d107      	bne.n	8005358 <I2C_MasterRequestRead+0x64>
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	681a      	ldr	r2, [r3, #0]
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	681b      	ldr	r3, [r3, #0]
 8005352:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005356:	601a      	str	r2, [r3, #0]
 8005358:	683b      	ldr	r3, [r7, #0]
 800535a:	9300      	str	r3, [sp, #0]
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	2200      	movs	r2, #0
 8005360:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005364:	68f8      	ldr	r0, [r7, #12]
 8005366:	f000 f88d 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 800536a:	4603      	mov	r3, r0
 800536c:	2b00      	cmp	r3, #0
 800536e:	d001      	beq.n	8005374 <I2C_MasterRequestRead+0x80>
 8005370:	2303      	movs	r3, #3
 8005372:	e07f      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	691b      	ldr	r3, [r3, #16]
 8005378:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800537c:	d108      	bne.n	8005390 <I2C_MasterRequestRead+0x9c>
 800537e:	897b      	ldrh	r3, [r7, #10]
 8005380:	b2db      	uxtb	r3, r3
 8005382:	f043 0301 	orr.w	r3, r3, #1
 8005386:	b2da      	uxtb	r2, r3
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	611a      	str	r2, [r3, #16]
 800538e:	e05f      	b.n	8005450 <I2C_MasterRequestRead+0x15c>
 8005390:	897b      	ldrh	r3, [r7, #10]
 8005392:	11db      	asrs	r3, r3, #7
 8005394:	b2db      	uxtb	r3, r3
 8005396:	f003 0306 	and.w	r3, r3, #6
 800539a:	b2db      	uxtb	r3, r3
 800539c:	f063 030f 	orn	r3, r3, #15
 80053a0:	b2da      	uxtb	r2, r3
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	611a      	str	r2, [r3, #16]
 80053a8:	683b      	ldr	r3, [r7, #0]
 80053aa:	687a      	ldr	r2, [r7, #4]
 80053ac:	4933      	ldr	r1, [pc, #204]	; (800547c <I2C_MasterRequestRead+0x188>)
 80053ae:	68f8      	ldr	r0, [r7, #12]
 80053b0:	f000 f8b9 	bl	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80053b4:	4603      	mov	r3, r0
 80053b6:	2b00      	cmp	r3, #0
 80053b8:	d007      	beq.n	80053ca <I2C_MasterRequestRead+0xd6>
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053be:	2b04      	cmp	r3, #4
 80053c0:	d101      	bne.n	80053c6 <I2C_MasterRequestRead+0xd2>
 80053c2:	2301      	movs	r3, #1
 80053c4:	e056      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 80053c6:	2303      	movs	r3, #3
 80053c8:	e054      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 80053ca:	897b      	ldrh	r3, [r7, #10]
 80053cc:	b2da      	uxtb	r2, r3
 80053ce:	68fb      	ldr	r3, [r7, #12]
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	611a      	str	r2, [r3, #16]
 80053d4:	683b      	ldr	r3, [r7, #0]
 80053d6:	687a      	ldr	r2, [r7, #4]
 80053d8:	4929      	ldr	r1, [pc, #164]	; (8005480 <I2C_MasterRequestRead+0x18c>)
 80053da:	68f8      	ldr	r0, [r7, #12]
 80053dc:	f000 f8a3 	bl	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80053e0:	4603      	mov	r3, r0
 80053e2:	2b00      	cmp	r3, #0
 80053e4:	d007      	beq.n	80053f6 <I2C_MasterRequestRead+0x102>
 80053e6:	68fb      	ldr	r3, [r7, #12]
 80053e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053ea:	2b04      	cmp	r3, #4
 80053ec:	d101      	bne.n	80053f2 <I2C_MasterRequestRead+0xfe>
 80053ee:	2301      	movs	r3, #1
 80053f0:	e040      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 80053f2:	2303      	movs	r3, #3
 80053f4:	e03e      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 80053f6:	2300      	movs	r3, #0
 80053f8:	613b      	str	r3, [r7, #16]
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	695b      	ldr	r3, [r3, #20]
 8005400:	613b      	str	r3, [r7, #16]
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	681b      	ldr	r3, [r3, #0]
 8005406:	699b      	ldr	r3, [r3, #24]
 8005408:	613b      	str	r3, [r7, #16]
 800540a:	693b      	ldr	r3, [r7, #16]
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	681a      	ldr	r2, [r3, #0]
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	681b      	ldr	r3, [r3, #0]
 8005416:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800541a:	601a      	str	r2, [r3, #0]
 800541c:	683b      	ldr	r3, [r7, #0]
 800541e:	9300      	str	r3, [sp, #0]
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	2200      	movs	r2, #0
 8005424:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8005428:	68f8      	ldr	r0, [r7, #12]
 800542a:	f000 f82b 	bl	8005484 <I2C_WaitOnFlagUntilTimeout>
 800542e:	4603      	mov	r3, r0
 8005430:	2b00      	cmp	r3, #0
 8005432:	d001      	beq.n	8005438 <I2C_MasterRequestRead+0x144>
 8005434:	2303      	movs	r3, #3
 8005436:	e01d      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 8005438:	897b      	ldrh	r3, [r7, #10]
 800543a:	11db      	asrs	r3, r3, #7
 800543c:	b2db      	uxtb	r3, r3
 800543e:	f003 0306 	and.w	r3, r3, #6
 8005442:	b2db      	uxtb	r3, r3
 8005444:	f063 030e 	orn	r3, r3, #14
 8005448:	b2da      	uxtb	r2, r3
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	611a      	str	r2, [r3, #16]
 8005450:	683b      	ldr	r3, [r7, #0]
 8005452:	687a      	ldr	r2, [r7, #4]
 8005454:	490a      	ldr	r1, [pc, #40]	; (8005480 <I2C_MasterRequestRead+0x18c>)
 8005456:	68f8      	ldr	r0, [r7, #12]
 8005458:	f000 f865 	bl	8005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800545c:	4603      	mov	r3, r0
 800545e:	2b00      	cmp	r3, #0
 8005460:	d007      	beq.n	8005472 <I2C_MasterRequestRead+0x17e>
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005466:	2b04      	cmp	r3, #4
 8005468:	d101      	bne.n	800546e <I2C_MasterRequestRead+0x17a>
 800546a:	2301      	movs	r3, #1
 800546c:	e002      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 800546e:	2303      	movs	r3, #3
 8005470:	e000      	b.n	8005474 <I2C_MasterRequestRead+0x180>
 8005472:	2300      	movs	r3, #0
 8005474:	4618      	mov	r0, r3
 8005476:	3718      	adds	r7, #24
 8005478:	46bd      	mov	sp, r7
 800547a:	bd80      	pop	{r7, pc}
 800547c:	00010008 	.word	0x00010008
 8005480:	00010002 	.word	0x00010002

08005484 <I2C_WaitOnFlagUntilTimeout>:
 8005484:	b580      	push	{r7, lr}
 8005486:	b084      	sub	sp, #16
 8005488:	af00      	add	r7, sp, #0
 800548a:	60f8      	str	r0, [r7, #12]
 800548c:	60b9      	str	r1, [r7, #8]
 800548e:	603b      	str	r3, [r7, #0]
 8005490:	4613      	mov	r3, r2
 8005492:	71fb      	strb	r3, [r7, #7]
 8005494:	e01f      	b.n	80054d6 <I2C_WaitOnFlagUntilTimeout+0x52>
 8005496:	683b      	ldr	r3, [r7, #0]
 8005498:	f1b3 3fff 	cmp.w	r3, #4294967295
 800549c:	d01b      	beq.n	80054d6 <I2C_WaitOnFlagUntilTimeout+0x52>
 800549e:	683b      	ldr	r3, [r7, #0]
 80054a0:	2b00      	cmp	r3, #0
 80054a2:	d007      	beq.n	80054b4 <I2C_WaitOnFlagUntilTimeout+0x30>
 80054a4:	f7fe fdb8 	bl	8004018 <HAL_GetTick>
 80054a8:	4602      	mov	r2, r0
 80054aa:	69bb      	ldr	r3, [r7, #24]
 80054ac:	1ad3      	subs	r3, r2, r3
 80054ae:	683a      	ldr	r2, [r7, #0]
 80054b0:	429a      	cmp	r2, r3
 80054b2:	d210      	bcs.n	80054d6 <I2C_WaitOnFlagUntilTimeout+0x52>
 80054b4:	68fb      	ldr	r3, [r7, #12]
 80054b6:	2200      	movs	r2, #0
 80054b8:	631a      	str	r2, [r3, #48]	; 0x30
 80054ba:	68fb      	ldr	r3, [r7, #12]
 80054bc:	2220      	movs	r2, #32
 80054be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80054c2:	68fb      	ldr	r3, [r7, #12]
 80054c4:	2200      	movs	r2, #0
 80054c6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80054ca:	68fb      	ldr	r3, [r7, #12]
 80054cc:	2200      	movs	r2, #0
 80054ce:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80054d2:	2303      	movs	r3, #3
 80054d4:	e023      	b.n	800551e <I2C_WaitOnFlagUntilTimeout+0x9a>
 80054d6:	68bb      	ldr	r3, [r7, #8]
 80054d8:	0c1b      	lsrs	r3, r3, #16
 80054da:	b2db      	uxtb	r3, r3
 80054dc:	2b01      	cmp	r3, #1
 80054de:	d10d      	bne.n	80054fc <I2C_WaitOnFlagUntilTimeout+0x78>
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	695b      	ldr	r3, [r3, #20]
 80054e6:	43da      	mvns	r2, r3
 80054e8:	68bb      	ldr	r3, [r7, #8]
 80054ea:	4013      	ands	r3, r2
 80054ec:	b29b      	uxth	r3, r3
 80054ee:	2b00      	cmp	r3, #0
 80054f0:	bf0c      	ite	eq
 80054f2:	2301      	moveq	r3, #1
 80054f4:	2300      	movne	r3, #0
 80054f6:	b2db      	uxtb	r3, r3
 80054f8:	461a      	mov	r2, r3
 80054fa:	e00c      	b.n	8005516 <I2C_WaitOnFlagUntilTimeout+0x92>
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	681b      	ldr	r3, [r3, #0]
 8005500:	699b      	ldr	r3, [r3, #24]
 8005502:	43da      	mvns	r2, r3
 8005504:	68bb      	ldr	r3, [r7, #8]
 8005506:	4013      	ands	r3, r2
 8005508:	b29b      	uxth	r3, r3
 800550a:	2b00      	cmp	r3, #0
 800550c:	bf0c      	ite	eq
 800550e:	2301      	moveq	r3, #1
 8005510:	2300      	movne	r3, #0
 8005512:	b2db      	uxtb	r3, r3
 8005514:	461a      	mov	r2, r3
 8005516:	79fb      	ldrb	r3, [r7, #7]
 8005518:	429a      	cmp	r2, r3
 800551a:	d0bc      	beq.n	8005496 <I2C_WaitOnFlagUntilTimeout+0x12>
 800551c:	2300      	movs	r3, #0
 800551e:	4618      	mov	r0, r3
 8005520:	3710      	adds	r7, #16
 8005522:	46bd      	mov	sp, r7
 8005524:	bd80      	pop	{r7, pc}

08005526 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8005526:	b580      	push	{r7, lr}
 8005528:	b084      	sub	sp, #16
 800552a:	af00      	add	r7, sp, #0
 800552c:	60f8      	str	r0, [r7, #12]
 800552e:	60b9      	str	r1, [r7, #8]
 8005530:	607a      	str	r2, [r7, #4]
 8005532:	603b      	str	r3, [r7, #0]
 8005534:	e040      	b.n	80055b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x92>
 8005536:	68fb      	ldr	r3, [r7, #12]
 8005538:	681b      	ldr	r3, [r3, #0]
 800553a:	695b      	ldr	r3, [r3, #20]
 800553c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005540:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8005544:	d11c      	bne.n	8005580 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x5a>
 8005546:	68fb      	ldr	r3, [r7, #12]
 8005548:	681b      	ldr	r3, [r3, #0]
 800554a:	681a      	ldr	r2, [r3, #0]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005554:	601a      	str	r2, [r3, #0]
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	681b      	ldr	r3, [r3, #0]
 800555a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800555e:	615a      	str	r2, [r3, #20]
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	2204      	movs	r2, #4
 8005564:	641a      	str	r2, [r3, #64]	; 0x40
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	2200      	movs	r2, #0
 800556a:	631a      	str	r2, [r3, #48]	; 0x30
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	2220      	movs	r2, #32
 8005570:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	2200      	movs	r2, #0
 8005578:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800557c:	2301      	movs	r3, #1
 800557e:	e03c      	b.n	80055fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd4>
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005586:	d017      	beq.n	80055b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x92>
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	2b00      	cmp	r3, #0
 800558c:	d007      	beq.n	800559e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x78>
 800558e:	f7fe fd43 	bl	8004018 <HAL_GetTick>
 8005592:	4602      	mov	r2, r0
 8005594:	683b      	ldr	r3, [r7, #0]
 8005596:	1ad3      	subs	r3, r2, r3
 8005598:	687a      	ldr	r2, [r7, #4]
 800559a:	429a      	cmp	r2, r3
 800559c:	d20c      	bcs.n	80055b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x92>
 800559e:	68fb      	ldr	r3, [r7, #12]
 80055a0:	2200      	movs	r2, #0
 80055a2:	631a      	str	r2, [r3, #48]	; 0x30
 80055a4:	68fb      	ldr	r3, [r7, #12]
 80055a6:	2220      	movs	r2, #32
 80055a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	2200      	movs	r2, #0
 80055b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80055b4:	2303      	movs	r3, #3
 80055b6:	e020      	b.n	80055fa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd4>
 80055b8:	68bb      	ldr	r3, [r7, #8]
 80055ba:	0c1b      	lsrs	r3, r3, #16
 80055bc:	b2db      	uxtb	r3, r3
 80055be:	2b01      	cmp	r3, #1
 80055c0:	d10c      	bne.n	80055dc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb6>
 80055c2:	68fb      	ldr	r3, [r7, #12]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	695b      	ldr	r3, [r3, #20]
 80055c8:	43da      	mvns	r2, r3
 80055ca:	68bb      	ldr	r3, [r7, #8]
 80055cc:	4013      	ands	r3, r2
 80055ce:	b29b      	uxth	r3, r3
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	bf14      	ite	ne
 80055d4:	2301      	movne	r3, #1
 80055d6:	2300      	moveq	r3, #0
 80055d8:	b2db      	uxtb	r3, r3
 80055da:	e00b      	b.n	80055f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xce>
 80055dc:	68fb      	ldr	r3, [r7, #12]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	699b      	ldr	r3, [r3, #24]
 80055e2:	43da      	mvns	r2, r3
 80055e4:	68bb      	ldr	r3, [r7, #8]
 80055e6:	4013      	ands	r3, r2
 80055e8:	b29b      	uxth	r3, r3
 80055ea:	2b00      	cmp	r3, #0
 80055ec:	bf14      	ite	ne
 80055ee:	2301      	movne	r3, #1
 80055f0:	2300      	moveq	r3, #0
 80055f2:	b2db      	uxtb	r3, r3
 80055f4:	2b00      	cmp	r3, #0
 80055f6:	d19e      	bne.n	8005536 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80055f8:	2300      	movs	r3, #0
 80055fa:	4618      	mov	r0, r3
 80055fc:	3710      	adds	r7, #16
 80055fe:	46bd      	mov	sp, r7
 8005600:	bd80      	pop	{r7, pc}

08005602 <I2C_WaitOnTXEFlagUntilTimeout>:
 8005602:	b580      	push	{r7, lr}
 8005604:	b084      	sub	sp, #16
 8005606:	af00      	add	r7, sp, #0
 8005608:	60f8      	str	r0, [r7, #12]
 800560a:	60b9      	str	r1, [r7, #8]
 800560c:	607a      	str	r2, [r7, #4]
 800560e:	e029      	b.n	8005664 <I2C_WaitOnTXEFlagUntilTimeout+0x62>
 8005610:	68f8      	ldr	r0, [r7, #12]
 8005612:	f000 f8ba 	bl	800578a <I2C_IsAcknowledgeFailed>
 8005616:	4603      	mov	r3, r0
 8005618:	2b00      	cmp	r3, #0
 800561a:	d001      	beq.n	8005620 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 800561c:	2301      	movs	r3, #1
 800561e:	e029      	b.n	8005674 <I2C_WaitOnTXEFlagUntilTimeout+0x72>
 8005620:	68bb      	ldr	r3, [r7, #8]
 8005622:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005626:	d01d      	beq.n	8005664 <I2C_WaitOnTXEFlagUntilTimeout+0x62>
 8005628:	68bb      	ldr	r3, [r7, #8]
 800562a:	2b00      	cmp	r3, #0
 800562c:	d007      	beq.n	800563e <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800562e:	f7fe fcf3 	bl	8004018 <HAL_GetTick>
 8005632:	4602      	mov	r2, r0
 8005634:	687b      	ldr	r3, [r7, #4]
 8005636:	1ad3      	subs	r3, r2, r3
 8005638:	68ba      	ldr	r2, [r7, #8]
 800563a:	429a      	cmp	r2, r3
 800563c:	d212      	bcs.n	8005664 <I2C_WaitOnTXEFlagUntilTimeout+0x62>
 800563e:	68fb      	ldr	r3, [r7, #12]
 8005640:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005642:	f043 0220 	orr.w	r2, r3, #32
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	641a      	str	r2, [r3, #64]	; 0x40
 800564a:	68fb      	ldr	r3, [r7, #12]
 800564c:	2200      	movs	r2, #0
 800564e:	631a      	str	r2, [r3, #48]	; 0x30
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	2220      	movs	r2, #32
 8005654:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	2200      	movs	r2, #0
 800565c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005660:	2303      	movs	r3, #3
 8005662:	e007      	b.n	8005674 <I2C_WaitOnTXEFlagUntilTimeout+0x72>
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	695b      	ldr	r3, [r3, #20]
 800566a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800566e:	2b80      	cmp	r3, #128	; 0x80
 8005670:	d1ce      	bne.n	8005610 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8005672:	2300      	movs	r3, #0
 8005674:	4618      	mov	r0, r3
 8005676:	3710      	adds	r7, #16
 8005678:	46bd      	mov	sp, r7
 800567a:	bd80      	pop	{r7, pc}

0800567c <I2C_WaitOnBTFFlagUntilTimeout>:
 800567c:	b580      	push	{r7, lr}
 800567e:	b084      	sub	sp, #16
 8005680:	af00      	add	r7, sp, #0
 8005682:	60f8      	str	r0, [r7, #12]
 8005684:	60b9      	str	r1, [r7, #8]
 8005686:	607a      	str	r2, [r7, #4]
 8005688:	e029      	b.n	80056de <I2C_WaitOnBTFFlagUntilTimeout+0x62>
 800568a:	68f8      	ldr	r0, [r7, #12]
 800568c:	f000 f87d 	bl	800578a <I2C_IsAcknowledgeFailed>
 8005690:	4603      	mov	r3, r0
 8005692:	2b00      	cmp	r3, #0
 8005694:	d001      	beq.n	800569a <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8005696:	2301      	movs	r3, #1
 8005698:	e029      	b.n	80056ee <I2C_WaitOnBTFFlagUntilTimeout+0x72>
 800569a:	68bb      	ldr	r3, [r7, #8]
 800569c:	f1b3 3fff 	cmp.w	r3, #4294967295
 80056a0:	d01d      	beq.n	80056de <I2C_WaitOnBTFFlagUntilTimeout+0x62>
 80056a2:	68bb      	ldr	r3, [r7, #8]
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d007      	beq.n	80056b8 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80056a8:	f7fe fcb6 	bl	8004018 <HAL_GetTick>
 80056ac:	4602      	mov	r2, r0
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	1ad3      	subs	r3, r2, r3
 80056b2:	68ba      	ldr	r2, [r7, #8]
 80056b4:	429a      	cmp	r2, r3
 80056b6:	d212      	bcs.n	80056de <I2C_WaitOnBTFFlagUntilTimeout+0x62>
 80056b8:	68fb      	ldr	r3, [r7, #12]
 80056ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80056bc:	f043 0220 	orr.w	r2, r3, #32
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	641a      	str	r2, [r3, #64]	; 0x40
 80056c4:	68fb      	ldr	r3, [r7, #12]
 80056c6:	2200      	movs	r2, #0
 80056c8:	631a      	str	r2, [r3, #48]	; 0x30
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	2220      	movs	r2, #32
 80056ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	2200      	movs	r2, #0
 80056d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80056da:	2303      	movs	r3, #3
 80056dc:	e007      	b.n	80056ee <I2C_WaitOnBTFFlagUntilTimeout+0x72>
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	695b      	ldr	r3, [r3, #20]
 80056e4:	f003 0304 	and.w	r3, r3, #4
 80056e8:	2b04      	cmp	r3, #4
 80056ea:	d1ce      	bne.n	800568a <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80056ec:	2300      	movs	r3, #0
 80056ee:	4618      	mov	r0, r3
 80056f0:	3710      	adds	r7, #16
 80056f2:	46bd      	mov	sp, r7
 80056f4:	bd80      	pop	{r7, pc}

080056f6 <I2C_WaitOnRXNEFlagUntilTimeout>:
 80056f6:	b580      	push	{r7, lr}
 80056f8:	b084      	sub	sp, #16
 80056fa:	af00      	add	r7, sp, #0
 80056fc:	60f8      	str	r0, [r7, #12]
 80056fe:	60b9      	str	r1, [r7, #8]
 8005700:	607a      	str	r2, [r7, #4]
 8005702:	e036      	b.n	8005772 <I2C_WaitOnRXNEFlagUntilTimeout+0x7c>
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	695b      	ldr	r3, [r3, #20]
 800570a:	f003 0310 	and.w	r3, r3, #16
 800570e:	2b10      	cmp	r3, #16
 8005710:	d114      	bne.n	800573c <I2C_WaitOnRXNEFlagUntilTimeout+0x46>
 8005712:	68fb      	ldr	r3, [r7, #12]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	f06f 0210 	mvn.w	r2, #16
 800571a:	615a      	str	r2, [r3, #20]
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	2200      	movs	r2, #0
 8005720:	641a      	str	r2, [r3, #64]	; 0x40
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	2200      	movs	r2, #0
 8005726:	631a      	str	r2, [r3, #48]	; 0x30
 8005728:	68fb      	ldr	r3, [r7, #12]
 800572a:	2220      	movs	r2, #32
 800572c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	2200      	movs	r2, #0
 8005734:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005738:	2301      	movs	r3, #1
 800573a:	e022      	b.n	8005782 <I2C_WaitOnRXNEFlagUntilTimeout+0x8c>
 800573c:	68bb      	ldr	r3, [r7, #8]
 800573e:	2b00      	cmp	r3, #0
 8005740:	d007      	beq.n	8005752 <I2C_WaitOnRXNEFlagUntilTimeout+0x5c>
 8005742:	f7fe fc69 	bl	8004018 <HAL_GetTick>
 8005746:	4602      	mov	r2, r0
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	1ad3      	subs	r3, r2, r3
 800574c:	68ba      	ldr	r2, [r7, #8]
 800574e:	429a      	cmp	r2, r3
 8005750:	d20f      	bcs.n	8005772 <I2C_WaitOnRXNEFlagUntilTimeout+0x7c>
 8005752:	68fb      	ldr	r3, [r7, #12]
 8005754:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005756:	f043 0220 	orr.w	r2, r3, #32
 800575a:	68fb      	ldr	r3, [r7, #12]
 800575c:	641a      	str	r2, [r3, #64]	; 0x40
 800575e:	68fb      	ldr	r3, [r7, #12]
 8005760:	2220      	movs	r2, #32
 8005762:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005766:	68fb      	ldr	r3, [r7, #12]
 8005768:	2200      	movs	r2, #0
 800576a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800576e:	2303      	movs	r3, #3
 8005770:	e007      	b.n	8005782 <I2C_WaitOnRXNEFlagUntilTimeout+0x8c>
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	695b      	ldr	r3, [r3, #20]
 8005778:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800577c:	2b40      	cmp	r3, #64	; 0x40
 800577e:	d1c1      	bne.n	8005704 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8005780:	2300      	movs	r3, #0
 8005782:	4618      	mov	r0, r3
 8005784:	3710      	adds	r7, #16
 8005786:	46bd      	mov	sp, r7
 8005788:	bd80      	pop	{r7, pc}

0800578a <I2C_IsAcknowledgeFailed>:
 800578a:	b480      	push	{r7}
 800578c:	b083      	sub	sp, #12
 800578e:	af00      	add	r7, sp, #0
 8005790:	6078      	str	r0, [r7, #4]
 8005792:	687b      	ldr	r3, [r7, #4]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	695b      	ldr	r3, [r3, #20]
 8005798:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800579c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80057a0:	d114      	bne.n	80057cc <I2C_IsAcknowledgeFailed+0x42>
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80057aa:	615a      	str	r2, [r3, #20]
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	2204      	movs	r2, #4
 80057b0:	641a      	str	r2, [r3, #64]	; 0x40
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	2200      	movs	r2, #0
 80057b6:	631a      	str	r2, [r3, #48]	; 0x30
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	2220      	movs	r2, #32
 80057bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80057c0:	687b      	ldr	r3, [r7, #4]
 80057c2:	2200      	movs	r2, #0
 80057c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80057c8:	2301      	movs	r3, #1
 80057ca:	e000      	b.n	80057ce <I2C_IsAcknowledgeFailed+0x44>
 80057cc:	2300      	movs	r3, #0
 80057ce:	4618      	mov	r0, r3
 80057d0:	370c      	adds	r7, #12
 80057d2:	46bd      	mov	sp, r7
 80057d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057d8:	4770      	bx	lr
	...

080057dc <HAL_RCC_OscConfig>:
 80057dc:	b580      	push	{r7, lr}
 80057de:	b08e      	sub	sp, #56	; 0x38
 80057e0:	af00      	add	r7, sp, #0
 80057e2:	6078      	str	r0, [r7, #4]
 80057e4:	2300      	movs	r3, #0
 80057e6:	637b      	str	r3, [r7, #52]	; 0x34
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	f003 0301 	and.w	r3, r3, #1
 80057f0:	2b00      	cmp	r3, #0
 80057f2:	d075      	beq.n	80058e0 <HAL_RCC_OscConfig+0x104>
 80057f4:	4b92      	ldr	r3, [pc, #584]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80057f6:	689b      	ldr	r3, [r3, #8]
 80057f8:	f003 030c 	and.w	r3, r3, #12
 80057fc:	2b04      	cmp	r3, #4
 80057fe:	d00c      	beq.n	800581a <HAL_RCC_OscConfig+0x3e>
 8005800:	4b8f      	ldr	r3, [pc, #572]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005802:	689b      	ldr	r3, [r3, #8]
 8005804:	f003 030c 	and.w	r3, r3, #12
 8005808:	2b08      	cmp	r3, #8
 800580a:	d112      	bne.n	8005832 <HAL_RCC_OscConfig+0x56>
 800580c:	4b8c      	ldr	r3, [pc, #560]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800580e:	685b      	ldr	r3, [r3, #4]
 8005810:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005814:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005818:	d10b      	bne.n	8005832 <HAL_RCC_OscConfig+0x56>
 800581a:	4b89      	ldr	r3, [pc, #548]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005822:	2b00      	cmp	r3, #0
 8005824:	d05b      	beq.n	80058de <HAL_RCC_OscConfig+0x102>
 8005826:	687b      	ldr	r3, [r7, #4]
 8005828:	685b      	ldr	r3, [r3, #4]
 800582a:	2b00      	cmp	r3, #0
 800582c:	d157      	bne.n	80058de <HAL_RCC_OscConfig+0x102>
 800582e:	2301      	movs	r3, #1
 8005830:	e222      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	685b      	ldr	r3, [r3, #4]
 8005836:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800583a:	d106      	bne.n	800584a <HAL_RCC_OscConfig+0x6e>
 800583c:	4b80      	ldr	r3, [pc, #512]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800583e:	681b      	ldr	r3, [r3, #0]
 8005840:	4a7f      	ldr	r2, [pc, #508]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005842:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005846:	6013      	str	r3, [r2, #0]
 8005848:	e01d      	b.n	8005886 <HAL_RCC_OscConfig+0xaa>
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	685b      	ldr	r3, [r3, #4]
 800584e:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8005852:	d10c      	bne.n	800586e <HAL_RCC_OscConfig+0x92>
 8005854:	4b7a      	ldr	r3, [pc, #488]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005856:	681b      	ldr	r3, [r3, #0]
 8005858:	4a79      	ldr	r2, [pc, #484]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800585a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800585e:	6013      	str	r3, [r2, #0]
 8005860:	4b77      	ldr	r3, [pc, #476]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	4a76      	ldr	r2, [pc, #472]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005866:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800586a:	6013      	str	r3, [r2, #0]
 800586c:	e00b      	b.n	8005886 <HAL_RCC_OscConfig+0xaa>
 800586e:	4b74      	ldr	r3, [pc, #464]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	4a73      	ldr	r2, [pc, #460]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005874:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005878:	6013      	str	r3, [r2, #0]
 800587a:	4b71      	ldr	r3, [pc, #452]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	4a70      	ldr	r2, [pc, #448]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005880:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005884:	6013      	str	r3, [r2, #0]
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	685b      	ldr	r3, [r3, #4]
 800588a:	2b00      	cmp	r3, #0
 800588c:	d013      	beq.n	80058b6 <HAL_RCC_OscConfig+0xda>
 800588e:	f7fe fbc3 	bl	8004018 <HAL_GetTick>
 8005892:	6378      	str	r0, [r7, #52]	; 0x34
 8005894:	e008      	b.n	80058a8 <HAL_RCC_OscConfig+0xcc>
 8005896:	f7fe fbbf 	bl	8004018 <HAL_GetTick>
 800589a:	4602      	mov	r2, r0
 800589c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800589e:	1ad3      	subs	r3, r2, r3
 80058a0:	2b64      	cmp	r3, #100	; 0x64
 80058a2:	d901      	bls.n	80058a8 <HAL_RCC_OscConfig+0xcc>
 80058a4:	2303      	movs	r3, #3
 80058a6:	e1e7      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 80058a8:	4b65      	ldr	r3, [pc, #404]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80058b0:	2b00      	cmp	r3, #0
 80058b2:	d0f0      	beq.n	8005896 <HAL_RCC_OscConfig+0xba>
 80058b4:	e014      	b.n	80058e0 <HAL_RCC_OscConfig+0x104>
 80058b6:	f7fe fbaf 	bl	8004018 <HAL_GetTick>
 80058ba:	6378      	str	r0, [r7, #52]	; 0x34
 80058bc:	e008      	b.n	80058d0 <HAL_RCC_OscConfig+0xf4>
 80058be:	f7fe fbab 	bl	8004018 <HAL_GetTick>
 80058c2:	4602      	mov	r2, r0
 80058c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80058c6:	1ad3      	subs	r3, r2, r3
 80058c8:	2b64      	cmp	r3, #100	; 0x64
 80058ca:	d901      	bls.n	80058d0 <HAL_RCC_OscConfig+0xf4>
 80058cc:	2303      	movs	r3, #3
 80058ce:	e1d3      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 80058d0:	4b5b      	ldr	r3, [pc, #364]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80058d8:	2b00      	cmp	r3, #0
 80058da:	d1f0      	bne.n	80058be <HAL_RCC_OscConfig+0xe2>
 80058dc:	e000      	b.n	80058e0 <HAL_RCC_OscConfig+0x104>
 80058de:	bf00      	nop
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	681b      	ldr	r3, [r3, #0]
 80058e4:	f003 0302 	and.w	r3, r3, #2
 80058e8:	2b00      	cmp	r3, #0
 80058ea:	d077      	beq.n	80059dc <HAL_RCC_OscConfig+0x200>
 80058ec:	4b54      	ldr	r3, [pc, #336]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80058ee:	689b      	ldr	r3, [r3, #8]
 80058f0:	f003 030c 	and.w	r3, r3, #12
 80058f4:	2b00      	cmp	r3, #0
 80058f6:	d00b      	beq.n	8005910 <HAL_RCC_OscConfig+0x134>
 80058f8:	4b51      	ldr	r3, [pc, #324]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80058fa:	689b      	ldr	r3, [r3, #8]
 80058fc:	f003 030c 	and.w	r3, r3, #12
 8005900:	2b08      	cmp	r3, #8
 8005902:	d126      	bne.n	8005952 <HAL_RCC_OscConfig+0x176>
 8005904:	4b4e      	ldr	r3, [pc, #312]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005906:	685b      	ldr	r3, [r3, #4]
 8005908:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800590c:	2b00      	cmp	r3, #0
 800590e:	d120      	bne.n	8005952 <HAL_RCC_OscConfig+0x176>
 8005910:	4b4b      	ldr	r3, [pc, #300]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005912:	681b      	ldr	r3, [r3, #0]
 8005914:	f003 0302 	and.w	r3, r3, #2
 8005918:	2b00      	cmp	r3, #0
 800591a:	d005      	beq.n	8005928 <HAL_RCC_OscConfig+0x14c>
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	68db      	ldr	r3, [r3, #12]
 8005920:	2b01      	cmp	r3, #1
 8005922:	d001      	beq.n	8005928 <HAL_RCC_OscConfig+0x14c>
 8005924:	2301      	movs	r3, #1
 8005926:	e1a7      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005928:	4b45      	ldr	r3, [pc, #276]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800592a:	681b      	ldr	r3, [r3, #0]
 800592c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8005930:	687b      	ldr	r3, [r7, #4]
 8005932:	6919      	ldr	r1, [r3, #16]
 8005934:	23f8      	movs	r3, #248	; 0xf8
 8005936:	633b      	str	r3, [r7, #48]	; 0x30
 8005938:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800593a:	fa93 f3a3 	rbit	r3, r3
 800593e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005940:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005942:	fab3 f383 	clz	r3, r3
 8005946:	fa01 f303 	lsl.w	r3, r1, r3
 800594a:	493d      	ldr	r1, [pc, #244]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800594c:	4313      	orrs	r3, r2
 800594e:	600b      	str	r3, [r1, #0]
 8005950:	e044      	b.n	80059dc <HAL_RCC_OscConfig+0x200>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	68db      	ldr	r3, [r3, #12]
 8005956:	2b00      	cmp	r3, #0
 8005958:	d02a      	beq.n	80059b0 <HAL_RCC_OscConfig+0x1d4>
 800595a:	4b3a      	ldr	r3, [pc, #232]	; (8005a44 <HAL_RCC_OscConfig+0x268>)
 800595c:	2201      	movs	r2, #1
 800595e:	601a      	str	r2, [r3, #0]
 8005960:	f7fe fb5a 	bl	8004018 <HAL_GetTick>
 8005964:	6378      	str	r0, [r7, #52]	; 0x34
 8005966:	e008      	b.n	800597a <HAL_RCC_OscConfig+0x19e>
 8005968:	f7fe fb56 	bl	8004018 <HAL_GetTick>
 800596c:	4602      	mov	r2, r0
 800596e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005970:	1ad3      	subs	r3, r2, r3
 8005972:	2b02      	cmp	r3, #2
 8005974:	d901      	bls.n	800597a <HAL_RCC_OscConfig+0x19e>
 8005976:	2303      	movs	r3, #3
 8005978:	e17e      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 800597a:	4b31      	ldr	r3, [pc, #196]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	f003 0302 	and.w	r3, r3, #2
 8005982:	2b00      	cmp	r3, #0
 8005984:	d0f0      	beq.n	8005968 <HAL_RCC_OscConfig+0x18c>
 8005986:	4b2e      	ldr	r3, [pc, #184]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	6919      	ldr	r1, [r3, #16]
 8005992:	23f8      	movs	r3, #248	; 0xf8
 8005994:	62bb      	str	r3, [r7, #40]	; 0x28
 8005996:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005998:	fa93 f3a3 	rbit	r3, r3
 800599c:	627b      	str	r3, [r7, #36]	; 0x24
 800599e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80059a0:	fab3 f383 	clz	r3, r3
 80059a4:	fa01 f303 	lsl.w	r3, r1, r3
 80059a8:	4925      	ldr	r1, [pc, #148]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80059aa:	4313      	orrs	r3, r2
 80059ac:	600b      	str	r3, [r1, #0]
 80059ae:	e015      	b.n	80059dc <HAL_RCC_OscConfig+0x200>
 80059b0:	4b24      	ldr	r3, [pc, #144]	; (8005a44 <HAL_RCC_OscConfig+0x268>)
 80059b2:	2200      	movs	r2, #0
 80059b4:	601a      	str	r2, [r3, #0]
 80059b6:	f7fe fb2f 	bl	8004018 <HAL_GetTick>
 80059ba:	6378      	str	r0, [r7, #52]	; 0x34
 80059bc:	e008      	b.n	80059d0 <HAL_RCC_OscConfig+0x1f4>
 80059be:	f7fe fb2b 	bl	8004018 <HAL_GetTick>
 80059c2:	4602      	mov	r2, r0
 80059c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80059c6:	1ad3      	subs	r3, r2, r3
 80059c8:	2b02      	cmp	r3, #2
 80059ca:	d901      	bls.n	80059d0 <HAL_RCC_OscConfig+0x1f4>
 80059cc:	2303      	movs	r3, #3
 80059ce:	e153      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 80059d0:	4b1b      	ldr	r3, [pc, #108]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 80059d2:	681b      	ldr	r3, [r3, #0]
 80059d4:	f003 0302 	and.w	r3, r3, #2
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d1f0      	bne.n	80059be <HAL_RCC_OscConfig+0x1e2>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	f003 0308 	and.w	r3, r3, #8
 80059e4:	2b00      	cmp	r3, #0
 80059e6:	d037      	beq.n	8005a58 <HAL_RCC_OscConfig+0x27c>
 80059e8:	687b      	ldr	r3, [r7, #4]
 80059ea:	695b      	ldr	r3, [r3, #20]
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	d016      	beq.n	8005a1e <HAL_RCC_OscConfig+0x242>
 80059f0:	4b15      	ldr	r3, [pc, #84]	; (8005a48 <HAL_RCC_OscConfig+0x26c>)
 80059f2:	2201      	movs	r2, #1
 80059f4:	601a      	str	r2, [r3, #0]
 80059f6:	f7fe fb0f 	bl	8004018 <HAL_GetTick>
 80059fa:	6378      	str	r0, [r7, #52]	; 0x34
 80059fc:	e008      	b.n	8005a10 <HAL_RCC_OscConfig+0x234>
 80059fe:	f7fe fb0b 	bl	8004018 <HAL_GetTick>
 8005a02:	4602      	mov	r2, r0
 8005a04:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005a06:	1ad3      	subs	r3, r2, r3
 8005a08:	2b02      	cmp	r3, #2
 8005a0a:	d901      	bls.n	8005a10 <HAL_RCC_OscConfig+0x234>
 8005a0c:	2303      	movs	r3, #3
 8005a0e:	e133      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005a10:	4b0b      	ldr	r3, [pc, #44]	; (8005a40 <HAL_RCC_OscConfig+0x264>)
 8005a12:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a14:	f003 0302 	and.w	r3, r3, #2
 8005a18:	2b00      	cmp	r3, #0
 8005a1a:	d0f0      	beq.n	80059fe <HAL_RCC_OscConfig+0x222>
 8005a1c:	e01c      	b.n	8005a58 <HAL_RCC_OscConfig+0x27c>
 8005a1e:	4b0a      	ldr	r3, [pc, #40]	; (8005a48 <HAL_RCC_OscConfig+0x26c>)
 8005a20:	2200      	movs	r2, #0
 8005a22:	601a      	str	r2, [r3, #0]
 8005a24:	f7fe faf8 	bl	8004018 <HAL_GetTick>
 8005a28:	6378      	str	r0, [r7, #52]	; 0x34
 8005a2a:	e00f      	b.n	8005a4c <HAL_RCC_OscConfig+0x270>
 8005a2c:	f7fe faf4 	bl	8004018 <HAL_GetTick>
 8005a30:	4602      	mov	r2, r0
 8005a32:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005a34:	1ad3      	subs	r3, r2, r3
 8005a36:	2b02      	cmp	r3, #2
 8005a38:	d908      	bls.n	8005a4c <HAL_RCC_OscConfig+0x270>
 8005a3a:	2303      	movs	r3, #3
 8005a3c:	e11c      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005a3e:	bf00      	nop
 8005a40:	40023800 	.word	0x40023800
 8005a44:	42470000 	.word	0x42470000
 8005a48:	42470e80 	.word	0x42470e80
 8005a4c:	4b8c      	ldr	r3, [pc, #560]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005a4e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005a50:	f003 0302 	and.w	r3, r3, #2
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	d1e9      	bne.n	8005a2c <HAL_RCC_OscConfig+0x250>
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	f003 0304 	and.w	r3, r3, #4
 8005a60:	2b00      	cmp	r3, #0
 8005a62:	d07d      	beq.n	8005b60 <HAL_RCC_OscConfig+0x384>
 8005a64:	2300      	movs	r3, #0
 8005a66:	60bb      	str	r3, [r7, #8]
 8005a68:	4b85      	ldr	r3, [pc, #532]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005a6a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a6c:	4a84      	ldr	r2, [pc, #528]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005a6e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005a72:	6413      	str	r3, [r2, #64]	; 0x40
 8005a74:	4b82      	ldr	r3, [pc, #520]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005a76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005a78:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005a7c:	60bb      	str	r3, [r7, #8]
 8005a7e:	68bb      	ldr	r3, [r7, #8]
 8005a80:	4b80      	ldr	r3, [pc, #512]	; (8005c84 <HAL_RCC_OscConfig+0x4a8>)
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	4a7f      	ldr	r2, [pc, #508]	; (8005c84 <HAL_RCC_OscConfig+0x4a8>)
 8005a86:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005a8a:	6013      	str	r3, [r2, #0]
 8005a8c:	f7fe fac4 	bl	8004018 <HAL_GetTick>
 8005a90:	6378      	str	r0, [r7, #52]	; 0x34
 8005a92:	e008      	b.n	8005aa6 <HAL_RCC_OscConfig+0x2ca>
 8005a94:	f7fe fac0 	bl	8004018 <HAL_GetTick>
 8005a98:	4602      	mov	r2, r0
 8005a9a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005a9c:	1ad3      	subs	r3, r2, r3
 8005a9e:	2b02      	cmp	r3, #2
 8005aa0:	d901      	bls.n	8005aa6 <HAL_RCC_OscConfig+0x2ca>
 8005aa2:	2303      	movs	r3, #3
 8005aa4:	e0e8      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005aa6:	4b77      	ldr	r3, [pc, #476]	; (8005c84 <HAL_RCC_OscConfig+0x4a8>)
 8005aa8:	681b      	ldr	r3, [r3, #0]
 8005aaa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005aae:	2b00      	cmp	r3, #0
 8005ab0:	d0f0      	beq.n	8005a94 <HAL_RCC_OscConfig+0x2b8>
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	689b      	ldr	r3, [r3, #8]
 8005ab6:	2b01      	cmp	r3, #1
 8005ab8:	d106      	bne.n	8005ac8 <HAL_RCC_OscConfig+0x2ec>
 8005aba:	4b71      	ldr	r3, [pc, #452]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005abc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005abe:	4a70      	ldr	r2, [pc, #448]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ac0:	f043 0301 	orr.w	r3, r3, #1
 8005ac4:	6713      	str	r3, [r2, #112]	; 0x70
 8005ac6:	e01c      	b.n	8005b02 <HAL_RCC_OscConfig+0x326>
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	689b      	ldr	r3, [r3, #8]
 8005acc:	2b05      	cmp	r3, #5
 8005ace:	d10c      	bne.n	8005aea <HAL_RCC_OscConfig+0x30e>
 8005ad0:	4b6b      	ldr	r3, [pc, #428]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ad2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005ad4:	4a6a      	ldr	r2, [pc, #424]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ad6:	f043 0304 	orr.w	r3, r3, #4
 8005ada:	6713      	str	r3, [r2, #112]	; 0x70
 8005adc:	4b68      	ldr	r3, [pc, #416]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ade:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005ae0:	4a67      	ldr	r2, [pc, #412]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ae2:	f043 0301 	orr.w	r3, r3, #1
 8005ae6:	6713      	str	r3, [r2, #112]	; 0x70
 8005ae8:	e00b      	b.n	8005b02 <HAL_RCC_OscConfig+0x326>
 8005aea:	4b65      	ldr	r3, [pc, #404]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005aec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005aee:	4a64      	ldr	r2, [pc, #400]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005af0:	f023 0301 	bic.w	r3, r3, #1
 8005af4:	6713      	str	r3, [r2, #112]	; 0x70
 8005af6:	4b62      	ldr	r3, [pc, #392]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005af8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005afa:	4a61      	ldr	r2, [pc, #388]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005afc:	f023 0304 	bic.w	r3, r3, #4
 8005b00:	6713      	str	r3, [r2, #112]	; 0x70
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	689b      	ldr	r3, [r3, #8]
 8005b06:	2b00      	cmp	r3, #0
 8005b08:	d015      	beq.n	8005b36 <HAL_RCC_OscConfig+0x35a>
 8005b0a:	f7fe fa85 	bl	8004018 <HAL_GetTick>
 8005b0e:	6378      	str	r0, [r7, #52]	; 0x34
 8005b10:	e00a      	b.n	8005b28 <HAL_RCC_OscConfig+0x34c>
 8005b12:	f7fe fa81 	bl	8004018 <HAL_GetTick>
 8005b16:	4602      	mov	r2, r0
 8005b18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005b1a:	1ad3      	subs	r3, r2, r3
 8005b1c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b20:	4293      	cmp	r3, r2
 8005b22:	d901      	bls.n	8005b28 <HAL_RCC_OscConfig+0x34c>
 8005b24:	2303      	movs	r3, #3
 8005b26:	e0a7      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005b28:	4b55      	ldr	r3, [pc, #340]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005b2a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b2c:	f003 0302 	and.w	r3, r3, #2
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d0ee      	beq.n	8005b12 <HAL_RCC_OscConfig+0x336>
 8005b34:	e014      	b.n	8005b60 <HAL_RCC_OscConfig+0x384>
 8005b36:	f7fe fa6f 	bl	8004018 <HAL_GetTick>
 8005b3a:	6378      	str	r0, [r7, #52]	; 0x34
 8005b3c:	e00a      	b.n	8005b54 <HAL_RCC_OscConfig+0x378>
 8005b3e:	f7fe fa6b 	bl	8004018 <HAL_GetTick>
 8005b42:	4602      	mov	r2, r0
 8005b44:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005b46:	1ad3      	subs	r3, r2, r3
 8005b48:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b4c:	4293      	cmp	r3, r2
 8005b4e:	d901      	bls.n	8005b54 <HAL_RCC_OscConfig+0x378>
 8005b50:	2303      	movs	r3, #3
 8005b52:	e091      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005b54:	4b4a      	ldr	r3, [pc, #296]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005b56:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005b58:	f003 0302 	and.w	r3, r3, #2
 8005b5c:	2b00      	cmp	r3, #0
 8005b5e:	d1ee      	bne.n	8005b3e <HAL_RCC_OscConfig+0x362>
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	699b      	ldr	r3, [r3, #24]
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	f000 8086 	beq.w	8005c76 <HAL_RCC_OscConfig+0x49a>
 8005b6a:	4b45      	ldr	r3, [pc, #276]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005b6c:	689b      	ldr	r3, [r3, #8]
 8005b6e:	f003 030c 	and.w	r3, r3, #12
 8005b72:	2b08      	cmp	r3, #8
 8005b74:	d07d      	beq.n	8005c72 <HAL_RCC_OscConfig+0x496>
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	699b      	ldr	r3, [r3, #24]
 8005b7a:	2b02      	cmp	r3, #2
 8005b7c:	d162      	bne.n	8005c44 <HAL_RCC_OscConfig+0x468>
 8005b7e:	4b42      	ldr	r3, [pc, #264]	; (8005c88 <HAL_RCC_OscConfig+0x4ac>)
 8005b80:	2200      	movs	r2, #0
 8005b82:	601a      	str	r2, [r3, #0]
 8005b84:	f7fe fa48 	bl	8004018 <HAL_GetTick>
 8005b88:	6378      	str	r0, [r7, #52]	; 0x34
 8005b8a:	e008      	b.n	8005b9e <HAL_RCC_OscConfig+0x3c2>
 8005b8c:	f7fe fa44 	bl	8004018 <HAL_GetTick>
 8005b90:	4602      	mov	r2, r0
 8005b92:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005b94:	1ad3      	subs	r3, r2, r3
 8005b96:	2b02      	cmp	r3, #2
 8005b98:	d901      	bls.n	8005b9e <HAL_RCC_OscConfig+0x3c2>
 8005b9a:	2303      	movs	r3, #3
 8005b9c:	e06c      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005b9e:	4b38      	ldr	r3, [pc, #224]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d1f0      	bne.n	8005b8c <HAL_RCC_OscConfig+0x3b0>
 8005baa:	687b      	ldr	r3, [r7, #4]
 8005bac:	69da      	ldr	r2, [r3, #28]
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	6a1b      	ldr	r3, [r3, #32]
 8005bb2:	431a      	orrs	r2, r3
 8005bb4:	687b      	ldr	r3, [r7, #4]
 8005bb6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8005bb8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005bbc:	613b      	str	r3, [r7, #16]
 8005bbe:	693b      	ldr	r3, [r7, #16]
 8005bc0:	fa93 f3a3 	rbit	r3, r3
 8005bc4:	60fb      	str	r3, [r7, #12]
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	fab3 f383 	clz	r3, r3
 8005bcc:	fa01 f303 	lsl.w	r3, r1, r3
 8005bd0:	431a      	orrs	r2, r3
 8005bd2:	687b      	ldr	r3, [r7, #4]
 8005bd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005bd6:	085b      	lsrs	r3, r3, #1
 8005bd8:	1e59      	subs	r1, r3, #1
 8005bda:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8005bde:	61bb      	str	r3, [r7, #24]
 8005be0:	69bb      	ldr	r3, [r7, #24]
 8005be2:	fa93 f3a3 	rbit	r3, r3
 8005be6:	617b      	str	r3, [r7, #20]
 8005be8:	697b      	ldr	r3, [r7, #20]
 8005bea:	fab3 f383 	clz	r3, r3
 8005bee:	fa01 f303 	lsl.w	r3, r1, r3
 8005bf2:	431a      	orrs	r2, r3
 8005bf4:	687b      	ldr	r3, [r7, #4]
 8005bf6:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005bf8:	f04f 6370 	mov.w	r3, #251658240	; 0xf000000
 8005bfc:	623b      	str	r3, [r7, #32]
 8005bfe:	6a3b      	ldr	r3, [r7, #32]
 8005c00:	fa93 f3a3 	rbit	r3, r3
 8005c04:	61fb      	str	r3, [r7, #28]
 8005c06:	69fb      	ldr	r3, [r7, #28]
 8005c08:	fab3 f383 	clz	r3, r3
 8005c0c:	fa01 f303 	lsl.w	r3, r1, r3
 8005c10:	491b      	ldr	r1, [pc, #108]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005c12:	4313      	orrs	r3, r2
 8005c14:	604b      	str	r3, [r1, #4]
 8005c16:	4b1c      	ldr	r3, [pc, #112]	; (8005c88 <HAL_RCC_OscConfig+0x4ac>)
 8005c18:	2201      	movs	r2, #1
 8005c1a:	601a      	str	r2, [r3, #0]
 8005c1c:	f7fe f9fc 	bl	8004018 <HAL_GetTick>
 8005c20:	6378      	str	r0, [r7, #52]	; 0x34
 8005c22:	e008      	b.n	8005c36 <HAL_RCC_OscConfig+0x45a>
 8005c24:	f7fe f9f8 	bl	8004018 <HAL_GetTick>
 8005c28:	4602      	mov	r2, r0
 8005c2a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005c2c:	1ad3      	subs	r3, r2, r3
 8005c2e:	2b02      	cmp	r3, #2
 8005c30:	d901      	bls.n	8005c36 <HAL_RCC_OscConfig+0x45a>
 8005c32:	2303      	movs	r3, #3
 8005c34:	e020      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005c36:	4b12      	ldr	r3, [pc, #72]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005c38:	681b      	ldr	r3, [r3, #0]
 8005c3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	d0f0      	beq.n	8005c24 <HAL_RCC_OscConfig+0x448>
 8005c42:	e018      	b.n	8005c76 <HAL_RCC_OscConfig+0x49a>
 8005c44:	4b10      	ldr	r3, [pc, #64]	; (8005c88 <HAL_RCC_OscConfig+0x4ac>)
 8005c46:	2200      	movs	r2, #0
 8005c48:	601a      	str	r2, [r3, #0]
 8005c4a:	f7fe f9e5 	bl	8004018 <HAL_GetTick>
 8005c4e:	6378      	str	r0, [r7, #52]	; 0x34
 8005c50:	e008      	b.n	8005c64 <HAL_RCC_OscConfig+0x488>
 8005c52:	f7fe f9e1 	bl	8004018 <HAL_GetTick>
 8005c56:	4602      	mov	r2, r0
 8005c58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005c5a:	1ad3      	subs	r3, r2, r3
 8005c5c:	2b02      	cmp	r3, #2
 8005c5e:	d901      	bls.n	8005c64 <HAL_RCC_OscConfig+0x488>
 8005c60:	2303      	movs	r3, #3
 8005c62:	e009      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005c64:	4b06      	ldr	r3, [pc, #24]	; (8005c80 <HAL_RCC_OscConfig+0x4a4>)
 8005c66:	681b      	ldr	r3, [r3, #0]
 8005c68:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005c6c:	2b00      	cmp	r3, #0
 8005c6e:	d1f0      	bne.n	8005c52 <HAL_RCC_OscConfig+0x476>
 8005c70:	e001      	b.n	8005c76 <HAL_RCC_OscConfig+0x49a>
 8005c72:	2301      	movs	r3, #1
 8005c74:	e000      	b.n	8005c78 <HAL_RCC_OscConfig+0x49c>
 8005c76:	2300      	movs	r3, #0
 8005c78:	4618      	mov	r0, r3
 8005c7a:	3738      	adds	r7, #56	; 0x38
 8005c7c:	46bd      	mov	sp, r7
 8005c7e:	bd80      	pop	{r7, pc}
 8005c80:	40023800 	.word	0x40023800
 8005c84:	40007000 	.word	0x40007000
 8005c88:	42470060 	.word	0x42470060

08005c8c <HAL_RCC_ClockConfig>:
 8005c8c:	b580      	push	{r7, lr}
 8005c8e:	b086      	sub	sp, #24
 8005c90:	af00      	add	r7, sp, #0
 8005c92:	6078      	str	r0, [r7, #4]
 8005c94:	6039      	str	r1, [r7, #0]
 8005c96:	2300      	movs	r3, #0
 8005c98:	617b      	str	r3, [r7, #20]
 8005c9a:	4b81      	ldr	r3, [pc, #516]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	f003 030f 	and.w	r3, r3, #15
 8005ca2:	683a      	ldr	r2, [r7, #0]
 8005ca4:	429a      	cmp	r2, r3
 8005ca6:	d90c      	bls.n	8005cc2 <HAL_RCC_ClockConfig+0x36>
 8005ca8:	4b7d      	ldr	r3, [pc, #500]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005caa:	683a      	ldr	r2, [r7, #0]
 8005cac:	b2d2      	uxtb	r2, r2
 8005cae:	701a      	strb	r2, [r3, #0]
 8005cb0:	4b7b      	ldr	r3, [pc, #492]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	f003 030f 	and.w	r3, r3, #15
 8005cb8:	683a      	ldr	r2, [r7, #0]
 8005cba:	429a      	cmp	r2, r3
 8005cbc:	d001      	beq.n	8005cc2 <HAL_RCC_ClockConfig+0x36>
 8005cbe:	2301      	movs	r3, #1
 8005cc0:	e0ea      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005cc2:	687b      	ldr	r3, [r7, #4]
 8005cc4:	681b      	ldr	r3, [r3, #0]
 8005cc6:	f003 0302 	and.w	r3, r3, #2
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	d008      	beq.n	8005ce0 <HAL_RCC_ClockConfig+0x54>
 8005cce:	4b75      	ldr	r3, [pc, #468]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005cd0:	689b      	ldr	r3, [r3, #8]
 8005cd2:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	689b      	ldr	r3, [r3, #8]
 8005cda:	4972      	ldr	r1, [pc, #456]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005cdc:	4313      	orrs	r3, r2
 8005cde:	608b      	str	r3, [r1, #8]
 8005ce0:	687b      	ldr	r3, [r7, #4]
 8005ce2:	681b      	ldr	r3, [r3, #0]
 8005ce4:	f003 0301 	and.w	r3, r3, #1
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	f000 8086 	beq.w	8005dfa <HAL_RCC_ClockConfig+0x16e>
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	685b      	ldr	r3, [r3, #4]
 8005cf2:	2b01      	cmp	r3, #1
 8005cf4:	d107      	bne.n	8005d06 <HAL_RCC_ClockConfig+0x7a>
 8005cf6:	4b6b      	ldr	r3, [pc, #428]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d119      	bne.n	8005d36 <HAL_RCC_ClockConfig+0xaa>
 8005d02:	2301      	movs	r3, #1
 8005d04:	e0c8      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	685b      	ldr	r3, [r3, #4]
 8005d0a:	2b02      	cmp	r3, #2
 8005d0c:	d003      	beq.n	8005d16 <HAL_RCC_ClockConfig+0x8a>
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	685b      	ldr	r3, [r3, #4]
 8005d12:	2b03      	cmp	r3, #3
 8005d14:	d107      	bne.n	8005d26 <HAL_RCC_ClockConfig+0x9a>
 8005d16:	4b63      	ldr	r3, [pc, #396]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d18:	681b      	ldr	r3, [r3, #0]
 8005d1a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d109      	bne.n	8005d36 <HAL_RCC_ClockConfig+0xaa>
 8005d22:	2301      	movs	r3, #1
 8005d24:	e0b8      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005d26:	4b5f      	ldr	r3, [pc, #380]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	f003 0302 	and.w	r3, r3, #2
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d101      	bne.n	8005d36 <HAL_RCC_ClockConfig+0xaa>
 8005d32:	2301      	movs	r3, #1
 8005d34:	e0b0      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005d36:	4b5b      	ldr	r3, [pc, #364]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d38:	689b      	ldr	r3, [r3, #8]
 8005d3a:	f023 0203 	bic.w	r2, r3, #3
 8005d3e:	687b      	ldr	r3, [r7, #4]
 8005d40:	685b      	ldr	r3, [r3, #4]
 8005d42:	4958      	ldr	r1, [pc, #352]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d44:	4313      	orrs	r3, r2
 8005d46:	608b      	str	r3, [r1, #8]
 8005d48:	f7fe f966 	bl	8004018 <HAL_GetTick>
 8005d4c:	6178      	str	r0, [r7, #20]
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	685b      	ldr	r3, [r3, #4]
 8005d52:	2b01      	cmp	r3, #1
 8005d54:	d112      	bne.n	8005d7c <HAL_RCC_ClockConfig+0xf0>
 8005d56:	e00a      	b.n	8005d6e <HAL_RCC_ClockConfig+0xe2>
 8005d58:	f7fe f95e 	bl	8004018 <HAL_GetTick>
 8005d5c:	4602      	mov	r2, r0
 8005d5e:	697b      	ldr	r3, [r7, #20]
 8005d60:	1ad3      	subs	r3, r2, r3
 8005d62:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d66:	4293      	cmp	r3, r2
 8005d68:	d901      	bls.n	8005d6e <HAL_RCC_ClockConfig+0xe2>
 8005d6a:	2303      	movs	r3, #3
 8005d6c:	e094      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005d6e:	4b4d      	ldr	r3, [pc, #308]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d70:	689b      	ldr	r3, [r3, #8]
 8005d72:	f003 030c 	and.w	r3, r3, #12
 8005d76:	2b04      	cmp	r3, #4
 8005d78:	d1ee      	bne.n	8005d58 <HAL_RCC_ClockConfig+0xcc>
 8005d7a:	e03e      	b.n	8005dfa <HAL_RCC_ClockConfig+0x16e>
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	685b      	ldr	r3, [r3, #4]
 8005d80:	2b02      	cmp	r3, #2
 8005d82:	d112      	bne.n	8005daa <HAL_RCC_ClockConfig+0x11e>
 8005d84:	e00a      	b.n	8005d9c <HAL_RCC_ClockConfig+0x110>
 8005d86:	f7fe f947 	bl	8004018 <HAL_GetTick>
 8005d8a:	4602      	mov	r2, r0
 8005d8c:	697b      	ldr	r3, [r7, #20]
 8005d8e:	1ad3      	subs	r3, r2, r3
 8005d90:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d94:	4293      	cmp	r3, r2
 8005d96:	d901      	bls.n	8005d9c <HAL_RCC_ClockConfig+0x110>
 8005d98:	2303      	movs	r3, #3
 8005d9a:	e07d      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005d9c:	4b41      	ldr	r3, [pc, #260]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005d9e:	689b      	ldr	r3, [r3, #8]
 8005da0:	f003 030c 	and.w	r3, r3, #12
 8005da4:	2b08      	cmp	r3, #8
 8005da6:	d1ee      	bne.n	8005d86 <HAL_RCC_ClockConfig+0xfa>
 8005da8:	e027      	b.n	8005dfa <HAL_RCC_ClockConfig+0x16e>
 8005daa:	687b      	ldr	r3, [r7, #4]
 8005dac:	685b      	ldr	r3, [r3, #4]
 8005dae:	2b03      	cmp	r3, #3
 8005db0:	d11d      	bne.n	8005dee <HAL_RCC_ClockConfig+0x162>
 8005db2:	e00a      	b.n	8005dca <HAL_RCC_ClockConfig+0x13e>
 8005db4:	f7fe f930 	bl	8004018 <HAL_GetTick>
 8005db8:	4602      	mov	r2, r0
 8005dba:	697b      	ldr	r3, [r7, #20]
 8005dbc:	1ad3      	subs	r3, r2, r3
 8005dbe:	f241 3288 	movw	r2, #5000	; 0x1388
 8005dc2:	4293      	cmp	r3, r2
 8005dc4:	d901      	bls.n	8005dca <HAL_RCC_ClockConfig+0x13e>
 8005dc6:	2303      	movs	r3, #3
 8005dc8:	e066      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005dca:	4b36      	ldr	r3, [pc, #216]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005dcc:	689b      	ldr	r3, [r3, #8]
 8005dce:	f003 030c 	and.w	r3, r3, #12
 8005dd2:	2b0c      	cmp	r3, #12
 8005dd4:	d1ee      	bne.n	8005db4 <HAL_RCC_ClockConfig+0x128>
 8005dd6:	e010      	b.n	8005dfa <HAL_RCC_ClockConfig+0x16e>
 8005dd8:	f7fe f91e 	bl	8004018 <HAL_GetTick>
 8005ddc:	4602      	mov	r2, r0
 8005dde:	697b      	ldr	r3, [r7, #20]
 8005de0:	1ad3      	subs	r3, r2, r3
 8005de2:	f241 3288 	movw	r2, #5000	; 0x1388
 8005de6:	4293      	cmp	r3, r2
 8005de8:	d901      	bls.n	8005dee <HAL_RCC_ClockConfig+0x162>
 8005dea:	2303      	movs	r3, #3
 8005dec:	e054      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005dee:	4b2d      	ldr	r3, [pc, #180]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005df0:	689b      	ldr	r3, [r3, #8]
 8005df2:	f003 030c 	and.w	r3, r3, #12
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d1ee      	bne.n	8005dd8 <HAL_RCC_ClockConfig+0x14c>
 8005dfa:	4b29      	ldr	r3, [pc, #164]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	f003 030f 	and.w	r3, r3, #15
 8005e02:	683a      	ldr	r2, [r7, #0]
 8005e04:	429a      	cmp	r2, r3
 8005e06:	d20c      	bcs.n	8005e22 <HAL_RCC_ClockConfig+0x196>
 8005e08:	4b25      	ldr	r3, [pc, #148]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005e0a:	683a      	ldr	r2, [r7, #0]
 8005e0c:	b2d2      	uxtb	r2, r2
 8005e0e:	701a      	strb	r2, [r3, #0]
 8005e10:	4b23      	ldr	r3, [pc, #140]	; (8005ea0 <HAL_RCC_ClockConfig+0x214>)
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	f003 030f 	and.w	r3, r3, #15
 8005e18:	683a      	ldr	r2, [r7, #0]
 8005e1a:	429a      	cmp	r2, r3
 8005e1c:	d001      	beq.n	8005e22 <HAL_RCC_ClockConfig+0x196>
 8005e1e:	2301      	movs	r3, #1
 8005e20:	e03a      	b.n	8005e98 <HAL_RCC_ClockConfig+0x20c>
 8005e22:	687b      	ldr	r3, [r7, #4]
 8005e24:	681b      	ldr	r3, [r3, #0]
 8005e26:	f003 0304 	and.w	r3, r3, #4
 8005e2a:	2b00      	cmp	r3, #0
 8005e2c:	d008      	beq.n	8005e40 <HAL_RCC_ClockConfig+0x1b4>
 8005e2e:	4b1d      	ldr	r3, [pc, #116]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005e30:	689b      	ldr	r3, [r3, #8]
 8005e32:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	68db      	ldr	r3, [r3, #12]
 8005e3a:	491a      	ldr	r1, [pc, #104]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005e3c:	4313      	orrs	r3, r2
 8005e3e:	608b      	str	r3, [r1, #8]
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	681b      	ldr	r3, [r3, #0]
 8005e44:	f003 0308 	and.w	r3, r3, #8
 8005e48:	2b00      	cmp	r3, #0
 8005e4a:	d009      	beq.n	8005e60 <HAL_RCC_ClockConfig+0x1d4>
 8005e4c:	4b15      	ldr	r3, [pc, #84]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005e4e:	689b      	ldr	r3, [r3, #8]
 8005e50:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	691b      	ldr	r3, [r3, #16]
 8005e58:	00db      	lsls	r3, r3, #3
 8005e5a:	4912      	ldr	r1, [pc, #72]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005e5c:	4313      	orrs	r3, r2
 8005e5e:	608b      	str	r3, [r1, #8]
 8005e60:	f000 f826 	bl	8005eb0 <HAL_RCC_GetSysClockFreq>
 8005e64:	4601      	mov	r1, r0
 8005e66:	4b0f      	ldr	r3, [pc, #60]	; (8005ea4 <HAL_RCC_ClockConfig+0x218>)
 8005e68:	689b      	ldr	r3, [r3, #8]
 8005e6a:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8005e6e:	23f0      	movs	r3, #240	; 0xf0
 8005e70:	613b      	str	r3, [r7, #16]
 8005e72:	693b      	ldr	r3, [r7, #16]
 8005e74:	fa93 f3a3 	rbit	r3, r3
 8005e78:	60fb      	str	r3, [r7, #12]
 8005e7a:	68fb      	ldr	r3, [r7, #12]
 8005e7c:	fab3 f383 	clz	r3, r3
 8005e80:	fa22 f303 	lsr.w	r3, r2, r3
 8005e84:	4a08      	ldr	r2, [pc, #32]	; (8005ea8 <HAL_RCC_ClockConfig+0x21c>)
 8005e86:	5cd3      	ldrb	r3, [r2, r3]
 8005e88:	fa21 f303 	lsr.w	r3, r1, r3
 8005e8c:	4a07      	ldr	r2, [pc, #28]	; (8005eac <HAL_RCC_ClockConfig+0x220>)
 8005e8e:	6013      	str	r3, [r2, #0]
 8005e90:	200f      	movs	r0, #15
 8005e92:	f004 fc45 	bl	800a720 <HAL_InitTick>
 8005e96:	2300      	movs	r3, #0
 8005e98:	4618      	mov	r0, r3
 8005e9a:	3718      	adds	r7, #24
 8005e9c:	46bd      	mov	sp, r7
 8005e9e:	bd80      	pop	{r7, pc}
 8005ea0:	40023c00 	.word	0x40023c00
 8005ea4:	40023800 	.word	0x40023800
 8005ea8:	08010d20 	.word	0x08010d20
 8005eac:	20000014 	.word	0x20000014

08005eb0 <HAL_RCC_GetSysClockFreq>:
 8005eb0:	b480      	push	{r7}
 8005eb2:	b08b      	sub	sp, #44	; 0x2c
 8005eb4:	af00      	add	r7, sp, #0
 8005eb6:	2300      	movs	r3, #0
 8005eb8:	61fb      	str	r3, [r7, #28]
 8005eba:	2300      	movs	r3, #0
 8005ebc:	627b      	str	r3, [r7, #36]	; 0x24
 8005ebe:	2300      	movs	r3, #0
 8005ec0:	61bb      	str	r3, [r7, #24]
 8005ec2:	2300      	movs	r3, #0
 8005ec4:	623b      	str	r3, [r7, #32]
 8005ec6:	4b38      	ldr	r3, [pc, #224]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005ec8:	689b      	ldr	r3, [r3, #8]
 8005eca:	f003 030c 	and.w	r3, r3, #12
 8005ece:	2b08      	cmp	r3, #8
 8005ed0:	d00c      	beq.n	8005eec <HAL_RCC_GetSysClockFreq+0x3c>
 8005ed2:	2b08      	cmp	r3, #8
 8005ed4:	d85d      	bhi.n	8005f92 <HAL_RCC_GetSysClockFreq+0xe2>
 8005ed6:	2b00      	cmp	r3, #0
 8005ed8:	d002      	beq.n	8005ee0 <HAL_RCC_GetSysClockFreq+0x30>
 8005eda:	2b04      	cmp	r3, #4
 8005edc:	d003      	beq.n	8005ee6 <HAL_RCC_GetSysClockFreq+0x36>
 8005ede:	e058      	b.n	8005f92 <HAL_RCC_GetSysClockFreq+0xe2>
 8005ee0:	4b32      	ldr	r3, [pc, #200]	; (8005fac <HAL_RCC_GetSysClockFreq+0xfc>)
 8005ee2:	623b      	str	r3, [r7, #32]
 8005ee4:	e058      	b.n	8005f98 <HAL_RCC_GetSysClockFreq+0xe8>
 8005ee6:	4b31      	ldr	r3, [pc, #196]	; (8005fac <HAL_RCC_GetSysClockFreq+0xfc>)
 8005ee8:	623b      	str	r3, [r7, #32]
 8005eea:	e055      	b.n	8005f98 <HAL_RCC_GetSysClockFreq+0xe8>
 8005eec:	4b2e      	ldr	r3, [pc, #184]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005eee:	685b      	ldr	r3, [r3, #4]
 8005ef0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005ef4:	61fb      	str	r3, [r7, #28]
 8005ef6:	4b2c      	ldr	r3, [pc, #176]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005ef8:	685b      	ldr	r3, [r3, #4]
 8005efa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d017      	beq.n	8005f32 <HAL_RCC_GetSysClockFreq+0x82>
 8005f02:	4a2a      	ldr	r2, [pc, #168]	; (8005fac <HAL_RCC_GetSysClockFreq+0xfc>)
 8005f04:	69fb      	ldr	r3, [r7, #28]
 8005f06:	fbb2 f2f3 	udiv	r2, r2, r3
 8005f0a:	4b27      	ldr	r3, [pc, #156]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005f0c:	6859      	ldr	r1, [r3, #4]
 8005f0e:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005f12:	400b      	ands	r3, r1
 8005f14:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8005f18:	6179      	str	r1, [r7, #20]
 8005f1a:	6979      	ldr	r1, [r7, #20]
 8005f1c:	fa91 f1a1 	rbit	r1, r1
 8005f20:	6139      	str	r1, [r7, #16]
 8005f22:	6939      	ldr	r1, [r7, #16]
 8005f24:	fab1 f181 	clz	r1, r1
 8005f28:	40cb      	lsrs	r3, r1
 8005f2a:	fb02 f303 	mul.w	r3, r2, r3
 8005f2e:	627b      	str	r3, [r7, #36]	; 0x24
 8005f30:	e016      	b.n	8005f60 <HAL_RCC_GetSysClockFreq+0xb0>
 8005f32:	4a1e      	ldr	r2, [pc, #120]	; (8005fac <HAL_RCC_GetSysClockFreq+0xfc>)
 8005f34:	69fb      	ldr	r3, [r7, #28]
 8005f36:	fbb2 f2f3 	udiv	r2, r2, r3
 8005f3a:	4b1b      	ldr	r3, [pc, #108]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005f3c:	6859      	ldr	r1, [r3, #4]
 8005f3e:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8005f42:	400b      	ands	r3, r1
 8005f44:	f647 71c0 	movw	r1, #32704	; 0x7fc0
 8005f48:	60f9      	str	r1, [r7, #12]
 8005f4a:	68f9      	ldr	r1, [r7, #12]
 8005f4c:	fa91 f1a1 	rbit	r1, r1
 8005f50:	60b9      	str	r1, [r7, #8]
 8005f52:	68b9      	ldr	r1, [r7, #8]
 8005f54:	fab1 f181 	clz	r1, r1
 8005f58:	40cb      	lsrs	r3, r1
 8005f5a:	fb02 f303 	mul.w	r3, r2, r3
 8005f5e:	627b      	str	r3, [r7, #36]	; 0x24
 8005f60:	4b11      	ldr	r3, [pc, #68]	; (8005fa8 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005f62:	685b      	ldr	r3, [r3, #4]
 8005f64:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8005f68:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8005f6c:	607b      	str	r3, [r7, #4]
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	fa93 f3a3 	rbit	r3, r3
 8005f74:	603b      	str	r3, [r7, #0]
 8005f76:	683b      	ldr	r3, [r7, #0]
 8005f78:	fab3 f383 	clz	r3, r3
 8005f7c:	fa22 f303 	lsr.w	r3, r2, r3
 8005f80:	3301      	adds	r3, #1
 8005f82:	005b      	lsls	r3, r3, #1
 8005f84:	61bb      	str	r3, [r7, #24]
 8005f86:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005f88:	69bb      	ldr	r3, [r7, #24]
 8005f8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8005f8e:	623b      	str	r3, [r7, #32]
 8005f90:	e002      	b.n	8005f98 <HAL_RCC_GetSysClockFreq+0xe8>
 8005f92:	4b06      	ldr	r3, [pc, #24]	; (8005fac <HAL_RCC_GetSysClockFreq+0xfc>)
 8005f94:	623b      	str	r3, [r7, #32]
 8005f96:	bf00      	nop
 8005f98:	6a3b      	ldr	r3, [r7, #32]
 8005f9a:	4618      	mov	r0, r3
 8005f9c:	372c      	adds	r7, #44	; 0x2c
 8005f9e:	46bd      	mov	sp, r7
 8005fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fa4:	4770      	bx	lr
 8005fa6:	bf00      	nop
 8005fa8:	40023800 	.word	0x40023800
 8005fac:	00f42400 	.word	0x00f42400

08005fb0 <HAL_RCC_GetHCLKFreq>:
 8005fb0:	b480      	push	{r7}
 8005fb2:	af00      	add	r7, sp, #0
 8005fb4:	4b03      	ldr	r3, [pc, #12]	; (8005fc4 <HAL_RCC_GetHCLKFreq+0x14>)
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	4618      	mov	r0, r3
 8005fba:	46bd      	mov	sp, r7
 8005fbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fc0:	4770      	bx	lr
 8005fc2:	bf00      	nop
 8005fc4:	20000014 	.word	0x20000014

08005fc8 <HAL_RCC_GetPCLK1Freq>:
 8005fc8:	b580      	push	{r7, lr}
 8005fca:	b082      	sub	sp, #8
 8005fcc:	af00      	add	r7, sp, #0
 8005fce:	f7ff ffef 	bl	8005fb0 <HAL_RCC_GetHCLKFreq>
 8005fd2:	4601      	mov	r1, r0
 8005fd4:	4b0b      	ldr	r3, [pc, #44]	; (8006004 <HAL_RCC_GetPCLK1Freq+0x3c>)
 8005fd6:	689b      	ldr	r3, [r3, #8]
 8005fd8:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8005fdc:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 8005fe0:	607b      	str	r3, [r7, #4]
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	fa93 f3a3 	rbit	r3, r3
 8005fe8:	603b      	str	r3, [r7, #0]
 8005fea:	683b      	ldr	r3, [r7, #0]
 8005fec:	fab3 f383 	clz	r3, r3
 8005ff0:	fa22 f303 	lsr.w	r3, r2, r3
 8005ff4:	4a04      	ldr	r2, [pc, #16]	; (8006008 <HAL_RCC_GetPCLK1Freq+0x40>)
 8005ff6:	5cd3      	ldrb	r3, [r2, r3]
 8005ff8:	fa21 f303 	lsr.w	r3, r1, r3
 8005ffc:	4618      	mov	r0, r3
 8005ffe:	3708      	adds	r7, #8
 8006000:	46bd      	mov	sp, r7
 8006002:	bd80      	pop	{r7, pc}
 8006004:	40023800 	.word	0x40023800
 8006008:	08010d30 	.word	0x08010d30

0800600c <HAL_RCC_GetPCLK2Freq>:
 800600c:	b580      	push	{r7, lr}
 800600e:	b082      	sub	sp, #8
 8006010:	af00      	add	r7, sp, #0
 8006012:	f7ff ffcd 	bl	8005fb0 <HAL_RCC_GetHCLKFreq>
 8006016:	4601      	mov	r1, r0
 8006018:	4b0b      	ldr	r3, [pc, #44]	; (8006048 <HAL_RCC_GetPCLK2Freq+0x3c>)
 800601a:	689b      	ldr	r3, [r3, #8]
 800601c:	f403 4260 	and.w	r2, r3, #57344	; 0xe000
 8006020:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8006024:	607b      	str	r3, [r7, #4]
 8006026:	687b      	ldr	r3, [r7, #4]
 8006028:	fa93 f3a3 	rbit	r3, r3
 800602c:	603b      	str	r3, [r7, #0]
 800602e:	683b      	ldr	r3, [r7, #0]
 8006030:	fab3 f383 	clz	r3, r3
 8006034:	fa22 f303 	lsr.w	r3, r2, r3
 8006038:	4a04      	ldr	r2, [pc, #16]	; (800604c <HAL_RCC_GetPCLK2Freq+0x40>)
 800603a:	5cd3      	ldrb	r3, [r2, r3]
 800603c:	fa21 f303 	lsr.w	r3, r1, r3
 8006040:	4618      	mov	r0, r3
 8006042:	3708      	adds	r7, #8
 8006044:	46bd      	mov	sp, r7
 8006046:	bd80      	pop	{r7, pc}
 8006048:	40023800 	.word	0x40023800
 800604c:	08010d30 	.word	0x08010d30

08006050 <HAL_RCC_GetClockConfig>:
 8006050:	b480      	push	{r7}
 8006052:	b083      	sub	sp, #12
 8006054:	af00      	add	r7, sp, #0
 8006056:	6078      	str	r0, [r7, #4]
 8006058:	6039      	str	r1, [r7, #0]
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	220f      	movs	r2, #15
 800605e:	601a      	str	r2, [r3, #0]
 8006060:	4b12      	ldr	r3, [pc, #72]	; (80060ac <HAL_RCC_GetClockConfig+0x5c>)
 8006062:	689b      	ldr	r3, [r3, #8]
 8006064:	f003 0203 	and.w	r2, r3, #3
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	605a      	str	r2, [r3, #4]
 800606c:	4b0f      	ldr	r3, [pc, #60]	; (80060ac <HAL_RCC_GetClockConfig+0x5c>)
 800606e:	689b      	ldr	r3, [r3, #8]
 8006070:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	609a      	str	r2, [r3, #8]
 8006078:	4b0c      	ldr	r3, [pc, #48]	; (80060ac <HAL_RCC_GetClockConfig+0x5c>)
 800607a:	689b      	ldr	r3, [r3, #8]
 800607c:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	60da      	str	r2, [r3, #12]
 8006084:	4b09      	ldr	r3, [pc, #36]	; (80060ac <HAL_RCC_GetClockConfig+0x5c>)
 8006086:	689b      	ldr	r3, [r3, #8]
 8006088:	08db      	lsrs	r3, r3, #3
 800608a:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	611a      	str	r2, [r3, #16]
 8006092:	4b07      	ldr	r3, [pc, #28]	; (80060b0 <HAL_RCC_GetClockConfig+0x60>)
 8006094:	681b      	ldr	r3, [r3, #0]
 8006096:	f003 020f 	and.w	r2, r3, #15
 800609a:	683b      	ldr	r3, [r7, #0]
 800609c:	601a      	str	r2, [r3, #0]
 800609e:	bf00      	nop
 80060a0:	370c      	adds	r7, #12
 80060a2:	46bd      	mov	sp, r7
 80060a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060a8:	4770      	bx	lr
 80060aa:	bf00      	nop
 80060ac:	40023800 	.word	0x40023800
 80060b0:	40023c00 	.word	0x40023c00

080060b4 <HAL_RCCEx_PeriphCLKConfig>:
 80060b4:	b580      	push	{r7, lr}
 80060b6:	b09c      	sub	sp, #112	; 0x70
 80060b8:	af00      	add	r7, sp, #0
 80060ba:	6078      	str	r0, [r7, #4]
 80060bc:	2300      	movs	r3, #0
 80060be:	66fb      	str	r3, [r7, #108]	; 0x6c
 80060c0:	2300      	movs	r3, #0
 80060c2:	66bb      	str	r3, [r7, #104]	; 0x68
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	681b      	ldr	r3, [r3, #0]
 80060c8:	f003 0301 	and.w	r3, r3, #1
 80060cc:	2b00      	cmp	r3, #0
 80060ce:	d106      	bne.n	80060de <HAL_RCCEx_PeriphCLKConfig+0x2a>
 80060d0:	687b      	ldr	r3, [r7, #4]
 80060d2:	681b      	ldr	r3, [r3, #0]
 80060d4:	f003 0302 	and.w	r3, r3, #2
 80060d8:	2b00      	cmp	r3, #0
 80060da:	f000 8082 	beq.w	80061e2 <HAL_RCCEx_PeriphCLKConfig+0x12e>
 80060de:	4bac      	ldr	r3, [pc, #688]	; (8006390 <HAL_RCCEx_PeriphCLKConfig+0x2dc>)
 80060e0:	2200      	movs	r2, #0
 80060e2:	601a      	str	r2, [r3, #0]
 80060e4:	f7fd ff98 	bl	8004018 <HAL_GetTick>
 80060e8:	66f8      	str	r0, [r7, #108]	; 0x6c
 80060ea:	e008      	b.n	80060fe <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80060ec:	f7fd ff94 	bl	8004018 <HAL_GetTick>
 80060f0:	4602      	mov	r2, r0
 80060f2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80060f4:	1ad3      	subs	r3, r2, r3
 80060f6:	2b02      	cmp	r3, #2
 80060f8:	d901      	bls.n	80060fe <HAL_RCCEx_PeriphCLKConfig+0x4a>
 80060fa:	2303      	movs	r3, #3
 80060fc:	e1eb      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 80060fe:	4ba5      	ldr	r3, [pc, #660]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8006106:	2b00      	cmp	r3, #0
 8006108:	d1f0      	bne.n	80060ec <HAL_RCCEx_PeriphCLKConfig+0x38>
 800610a:	687b      	ldr	r3, [r7, #4]
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	f003 0301 	and.w	r3, r3, #1
 8006112:	2b00      	cmp	r3, #0
 8006114:	d01e      	beq.n	8006154 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8006116:	687b      	ldr	r3, [r7, #4]
 8006118:	685a      	ldr	r2, [r3, #4]
 800611a:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800611e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8006120:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8006122:	fa93 f3a3 	rbit	r3, r3
 8006126:	65bb      	str	r3, [r7, #88]	; 0x58
 8006128:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800612a:	fab3 f383 	clz	r3, r3
 800612e:	409a      	lsls	r2, r3
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	6899      	ldr	r1, [r3, #8]
 8006134:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8006138:	667b      	str	r3, [r7, #100]	; 0x64
 800613a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800613c:	fa93 f3a3 	rbit	r3, r3
 8006140:	663b      	str	r3, [r7, #96]	; 0x60
 8006142:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8006144:	fab3 f383 	clz	r3, r3
 8006148:	fa01 f303 	lsl.w	r3, r1, r3
 800614c:	4991      	ldr	r1, [pc, #580]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 800614e:	4313      	orrs	r3, r2
 8006150:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	f003 0302 	and.w	r3, r3, #2
 800615c:	2b00      	cmp	r3, #0
 800615e:	d02a      	beq.n	80061b6 <HAL_RCCEx_PeriphCLKConfig+0x102>
 8006160:	4b8c      	ldr	r3, [pc, #560]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006162:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006166:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 800616a:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 800616e:	657b      	str	r3, [r7, #84]	; 0x54
 8006170:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8006172:	fa93 f3a3 	rbit	r3, r3
 8006176:	653b      	str	r3, [r7, #80]	; 0x50
 8006178:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800617a:	fab3 f383 	clz	r3, r3
 800617e:	fa22 f303 	lsr.w	r3, r2, r3
 8006182:	66bb      	str	r3, [r7, #104]	; 0x68
 8006184:	687b      	ldr	r3, [r7, #4]
 8006186:	685b      	ldr	r3, [r3, #4]
 8006188:	019a      	lsls	r2, r3, #6
 800618a:	687b      	ldr	r3, [r7, #4]
 800618c:	68db      	ldr	r3, [r3, #12]
 800618e:	061b      	lsls	r3, r3, #24
 8006190:	431a      	orrs	r2, r3
 8006192:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8006194:	071b      	lsls	r3, r3, #28
 8006196:	497f      	ldr	r1, [pc, #508]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006198:	4313      	orrs	r3, r2
 800619a:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
 800619e:	4b7d      	ldr	r3, [pc, #500]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80061a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80061a4:	f023 021f 	bic.w	r2, r3, #31
 80061a8:	687b      	ldr	r3, [r7, #4]
 80061aa:	69db      	ldr	r3, [r3, #28]
 80061ac:	3b01      	subs	r3, #1
 80061ae:	4979      	ldr	r1, [pc, #484]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80061b0:	4313      	orrs	r3, r2
 80061b2:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80061b6:	4b76      	ldr	r3, [pc, #472]	; (8006390 <HAL_RCCEx_PeriphCLKConfig+0x2dc>)
 80061b8:	2201      	movs	r2, #1
 80061ba:	601a      	str	r2, [r3, #0]
 80061bc:	f7fd ff2c 	bl	8004018 <HAL_GetTick>
 80061c0:	66f8      	str	r0, [r7, #108]	; 0x6c
 80061c2:	e008      	b.n	80061d6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 80061c4:	f7fd ff28 	bl	8004018 <HAL_GetTick>
 80061c8:	4602      	mov	r2, r0
 80061ca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80061cc:	1ad3      	subs	r3, r2, r3
 80061ce:	2b02      	cmp	r3, #2
 80061d0:	d901      	bls.n	80061d6 <HAL_RCCEx_PeriphCLKConfig+0x122>
 80061d2:	2303      	movs	r3, #3
 80061d4:	e17f      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 80061d6:	4b6f      	ldr	r3, [pc, #444]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80061de:	2b00      	cmp	r3, #0
 80061e0:	d0f0      	beq.n	80061c4 <HAL_RCCEx_PeriphCLKConfig+0x110>
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	f003 0304 	and.w	r3, r3, #4
 80061ea:	2b00      	cmp	r3, #0
 80061ec:	d106      	bne.n	80061fc <HAL_RCCEx_PeriphCLKConfig+0x148>
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	f003 0308 	and.w	r3, r3, #8
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	f000 80d7 	beq.w	80063aa <HAL_RCCEx_PeriphCLKConfig+0x2f6>
 80061fc:	4b66      	ldr	r3, [pc, #408]	; (8006398 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 80061fe:	2200      	movs	r2, #0
 8006200:	601a      	str	r2, [r3, #0]
 8006202:	f7fd ff09 	bl	8004018 <HAL_GetTick>
 8006206:	66f8      	str	r0, [r7, #108]	; 0x6c
 8006208:	e008      	b.n	800621c <HAL_RCCEx_PeriphCLKConfig+0x168>
 800620a:	f7fd ff05 	bl	8004018 <HAL_GetTick>
 800620e:	4602      	mov	r2, r0
 8006210:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006212:	1ad3      	subs	r3, r2, r3
 8006214:	2b02      	cmp	r3, #2
 8006216:	d901      	bls.n	800621c <HAL_RCCEx_PeriphCLKConfig+0x168>
 8006218:	2303      	movs	r3, #3
 800621a:	e15c      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 800621c:	4b5d      	ldr	r3, [pc, #372]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8006224:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8006228:	d0ef      	beq.n	800620a <HAL_RCCEx_PeriphCLKConfig+0x156>
 800622a:	687b      	ldr	r3, [r7, #4]
 800622c:	681b      	ldr	r3, [r3, #0]
 800622e:	f003 0304 	and.w	r3, r3, #4
 8006232:	2b00      	cmp	r3, #0
 8006234:	d04b      	beq.n	80062ce <HAL_RCCEx_PeriphCLKConfig+0x21a>
 8006236:	4b57      	ldr	r3, [pc, #348]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006238:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800623c:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8006240:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8006244:	637b      	str	r3, [r7, #52]	; 0x34
 8006246:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006248:	fa93 f3a3 	rbit	r3, r3
 800624c:	633b      	str	r3, [r7, #48]	; 0x30
 800624e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006250:	fab3 f383 	clz	r3, r3
 8006254:	fa22 f303 	lsr.w	r3, r2, r3
 8006258:	66bb      	str	r3, [r7, #104]	; 0x68
 800625a:	687b      	ldr	r3, [r7, #4]
 800625c:	691a      	ldr	r2, [r3, #16]
 800625e:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006262:	63fb      	str	r3, [r7, #60]	; 0x3c
 8006264:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8006266:	fa93 f3a3 	rbit	r3, r3
 800626a:	63bb      	str	r3, [r7, #56]	; 0x38
 800626c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800626e:	fab3 f383 	clz	r3, r3
 8006272:	409a      	lsls	r2, r3
 8006274:	687b      	ldr	r3, [r7, #4]
 8006276:	6959      	ldr	r1, [r3, #20]
 8006278:	f04f 6370 	mov.w	r3, #251658240	; 0xf000000
 800627c:	647b      	str	r3, [r7, #68]	; 0x44
 800627e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8006280:	fa93 f3a3 	rbit	r3, r3
 8006284:	643b      	str	r3, [r7, #64]	; 0x40
 8006286:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006288:	fab3 f383 	clz	r3, r3
 800628c:	fa01 f303 	lsl.w	r3, r1, r3
 8006290:	431a      	orrs	r2, r3
 8006292:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8006296:	64fb      	str	r3, [r7, #76]	; 0x4c
 8006298:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800629a:	fa93 f3a3 	rbit	r3, r3
 800629e:	64bb      	str	r3, [r7, #72]	; 0x48
 80062a0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80062a2:	fab3 f383 	clz	r3, r3
 80062a6:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80062a8:	fa01 f303 	lsl.w	r3, r1, r3
 80062ac:	4939      	ldr	r1, [pc, #228]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80062ae:	4313      	orrs	r3, r2
 80062b0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80062b4:	4b37      	ldr	r3, [pc, #220]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80062b6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80062ba:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	6a1b      	ldr	r3, [r3, #32]
 80062c2:	3b01      	subs	r3, #1
 80062c4:	021b      	lsls	r3, r3, #8
 80062c6:	4933      	ldr	r1, [pc, #204]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80062c8:	4313      	orrs	r3, r2
 80062ca:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 80062ce:	687b      	ldr	r3, [r7, #4]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	f003 0308 	and.w	r3, r3, #8
 80062d6:	2b00      	cmp	r3, #0
 80062d8:	d049      	beq.n	800636e <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 80062da:	4b2e      	ldr	r3, [pc, #184]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80062dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80062e0:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80062e4:	f04f 6370 	mov.w	r3, #251658240	; 0xf000000
 80062e8:	617b      	str	r3, [r7, #20]
 80062ea:	697b      	ldr	r3, [r7, #20]
 80062ec:	fa93 f3a3 	rbit	r3, r3
 80062f0:	613b      	str	r3, [r7, #16]
 80062f2:	693b      	ldr	r3, [r7, #16]
 80062f4:	fab3 f383 	clz	r3, r3
 80062f8:	fa22 f303 	lsr.w	r3, r2, r3
 80062fc:	66bb      	str	r3, [r7, #104]	; 0x68
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	691a      	ldr	r2, [r3, #16]
 8006302:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8006306:	61fb      	str	r3, [r7, #28]
 8006308:	69fb      	ldr	r3, [r7, #28]
 800630a:	fa93 f3a3 	rbit	r3, r3
 800630e:	61bb      	str	r3, [r7, #24]
 8006310:	69bb      	ldr	r3, [r7, #24]
 8006312:	fab3 f383 	clz	r3, r3
 8006316:	409a      	lsls	r2, r3
 8006318:	f04f 6370 	mov.w	r3, #251658240	; 0xf000000
 800631c:	627b      	str	r3, [r7, #36]	; 0x24
 800631e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006320:	fa93 f3a3 	rbit	r3, r3
 8006324:	623b      	str	r3, [r7, #32]
 8006326:	6a3b      	ldr	r3, [r7, #32]
 8006328:	fab3 f383 	clz	r3, r3
 800632c:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800632e:	fa01 f303 	lsl.w	r3, r1, r3
 8006332:	431a      	orrs	r2, r3
 8006334:	687b      	ldr	r3, [r7, #4]
 8006336:	6999      	ldr	r1, [r3, #24]
 8006338:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 800633c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800633e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006340:	fa93 f3a3 	rbit	r3, r3
 8006344:	62bb      	str	r3, [r7, #40]	; 0x28
 8006346:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006348:	fab3 f383 	clz	r3, r3
 800634c:	fa01 f303 	lsl.w	r3, r1, r3
 8006350:	4910      	ldr	r1, [pc, #64]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006352:	4313      	orrs	r3, r2
 8006354:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8006358:	4b0e      	ldr	r3, [pc, #56]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 800635a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800635e:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8006362:	687b      	ldr	r3, [r7, #4]
 8006364:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006366:	490b      	ldr	r1, [pc, #44]	; (8006394 <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 8006368:	4313      	orrs	r3, r2
 800636a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
 800636e:	4b0a      	ldr	r3, [pc, #40]	; (8006398 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 8006370:	2201      	movs	r2, #1
 8006372:	601a      	str	r2, [r3, #0]
 8006374:	f7fd fe50 	bl	8004018 <HAL_GetTick>
 8006378:	66f8      	str	r0, [r7, #108]	; 0x6c
 800637a:	e00f      	b.n	800639c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
 800637c:	f7fd fe4c 	bl	8004018 <HAL_GetTick>
 8006380:	4602      	mov	r2, r0
 8006382:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8006384:	1ad3      	subs	r3, r2, r3
 8006386:	2b02      	cmp	r3, #2
 8006388:	d908      	bls.n	800639c <HAL_RCCEx_PeriphCLKConfig+0x2e8>
 800638a:	2303      	movs	r3, #3
 800638c:	e0a3      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 800638e:	bf00      	nop
 8006390:	42470068 	.word	0x42470068
 8006394:	40023800 	.word	0x40023800
 8006398:	42470070 	.word	0x42470070
 800639c:	4b50      	ldr	r3, [pc, #320]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80063a4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80063a8:	d1e8      	bne.n	800637c <HAL_RCCEx_PeriphCLKConfig+0x2c8>
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	681b      	ldr	r3, [r3, #0]
 80063ae:	f003 0320 	and.w	r3, r3, #32
 80063b2:	2b00      	cmp	r3, #0
 80063b4:	f000 8083 	beq.w	80064be <HAL_RCCEx_PeriphCLKConfig+0x40a>
 80063b8:	2300      	movs	r3, #0
 80063ba:	60fb      	str	r3, [r7, #12]
 80063bc:	4b48      	ldr	r3, [pc, #288]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063c0:	4a47      	ldr	r2, [pc, #284]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063c2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80063c6:	6413      	str	r3, [r2, #64]	; 0x40
 80063c8:	4b45      	ldr	r3, [pc, #276]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80063ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063cc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80063d0:	60fb      	str	r3, [r7, #12]
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	4b43      	ldr	r3, [pc, #268]	; (80064e4 <HAL_RCCEx_PeriphCLKConfig+0x430>)
 80063d6:	681b      	ldr	r3, [r3, #0]
 80063d8:	4a42      	ldr	r2, [pc, #264]	; (80064e4 <HAL_RCCEx_PeriphCLKConfig+0x430>)
 80063da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80063de:	6013      	str	r3, [r2, #0]
 80063e0:	f7fd fe1a 	bl	8004018 <HAL_GetTick>
 80063e4:	66f8      	str	r0, [r7, #108]	; 0x6c
 80063e6:	e008      	b.n	80063fa <HAL_RCCEx_PeriphCLKConfig+0x346>
 80063e8:	f7fd fe16 	bl	8004018 <HAL_GetTick>
 80063ec:	4602      	mov	r2, r0
 80063ee:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80063f0:	1ad3      	subs	r3, r2, r3
 80063f2:	2b02      	cmp	r3, #2
 80063f4:	d901      	bls.n	80063fa <HAL_RCCEx_PeriphCLKConfig+0x346>
 80063f6:	2303      	movs	r3, #3
 80063f8:	e06d      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 80063fa:	4b3a      	ldr	r3, [pc, #232]	; (80064e4 <HAL_RCCEx_PeriphCLKConfig+0x430>)
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006402:	2b00      	cmp	r3, #0
 8006404:	d0f0      	beq.n	80063e8 <HAL_RCCEx_PeriphCLKConfig+0x334>
 8006406:	4b36      	ldr	r3, [pc, #216]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006408:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800640a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800640e:	66bb      	str	r3, [r7, #104]	; 0x68
 8006410:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8006412:	2b00      	cmp	r3, #0
 8006414:	d02f      	beq.n	8006476 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800641a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800641e:	6eba      	ldr	r2, [r7, #104]	; 0x68
 8006420:	429a      	cmp	r2, r3
 8006422:	d028      	beq.n	8006476 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
 8006424:	4b2e      	ldr	r3, [pc, #184]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006426:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006428:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800642c:	66bb      	str	r3, [r7, #104]	; 0x68
 800642e:	4b2e      	ldr	r3, [pc, #184]	; (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x434>)
 8006430:	2201      	movs	r2, #1
 8006432:	601a      	str	r2, [r3, #0]
 8006434:	4b2c      	ldr	r3, [pc, #176]	; (80064e8 <HAL_RCCEx_PeriphCLKConfig+0x434>)
 8006436:	2200      	movs	r2, #0
 8006438:	601a      	str	r2, [r3, #0]
 800643a:	4a29      	ldr	r2, [pc, #164]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800643c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800643e:	6713      	str	r3, [r2, #112]	; 0x70
 8006440:	4b27      	ldr	r3, [pc, #156]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006442:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8006444:	f003 0301 	and.w	r3, r3, #1
 8006448:	2b00      	cmp	r3, #0
 800644a:	d014      	beq.n	8006476 <HAL_RCCEx_PeriphCLKConfig+0x3c2>
 800644c:	f7fd fde4 	bl	8004018 <HAL_GetTick>
 8006450:	66f8      	str	r0, [r7, #108]	; 0x6c
 8006452:	e00a      	b.n	800646a <HAL_RCCEx_PeriphCLKConfig+0x3b6>
 8006454:	f7fd fde0 	bl	8004018 <HAL_GetTick>
 8006458:	4602      	mov	r2, r0
 800645a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800645c:	1ad3      	subs	r3, r2, r3
 800645e:	f241 3288 	movw	r2, #5000	; 0x1388
 8006462:	4293      	cmp	r3, r2
 8006464:	d901      	bls.n	800646a <HAL_RCCEx_PeriphCLKConfig+0x3b6>
 8006466:	2303      	movs	r3, #3
 8006468:	e035      	b.n	80064d6 <HAL_RCCEx_PeriphCLKConfig+0x422>
 800646a:	4b1d      	ldr	r3, [pc, #116]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800646c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800646e:	f003 0302 	and.w	r3, r3, #2
 8006472:	2b00      	cmp	r3, #0
 8006474:	d0ee      	beq.n	8006454 <HAL_RCCEx_PeriphCLKConfig+0x3a0>
 8006476:	687b      	ldr	r3, [r7, #4]
 8006478:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800647a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800647e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006482:	d10d      	bne.n	80064a0 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 8006484:	4b16      	ldr	r3, [pc, #88]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 8006486:	689b      	ldr	r3, [r3, #8]
 8006488:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006490:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8006494:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006498:	4911      	ldr	r1, [pc, #68]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 800649a:	4313      	orrs	r3, r2
 800649c:	608b      	str	r3, [r1, #8]
 800649e:	e005      	b.n	80064ac <HAL_RCCEx_PeriphCLKConfig+0x3f8>
 80064a0:	4b0f      	ldr	r3, [pc, #60]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064a2:	689b      	ldr	r3, [r3, #8]
 80064a4:	4a0e      	ldr	r2, [pc, #56]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064a6:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80064aa:	6093      	str	r3, [r2, #8]
 80064ac:	4b0c      	ldr	r3, [pc, #48]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064ae:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80064b0:	687b      	ldr	r3, [r7, #4]
 80064b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80064b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80064b8:	4909      	ldr	r1, [pc, #36]	; (80064e0 <HAL_RCCEx_PeriphCLKConfig+0x42c>)
 80064ba:	4313      	orrs	r3, r2
 80064bc:	670b      	str	r3, [r1, #112]	; 0x70
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	f003 0310 	and.w	r3, r3, #16
 80064c6:	2b00      	cmp	r3, #0
 80064c8:	d004      	beq.n	80064d4 <HAL_RCCEx_PeriphCLKConfig+0x420>
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 80064d0:	4b06      	ldr	r3, [pc, #24]	; (80064ec <HAL_RCCEx_PeriphCLKConfig+0x438>)
 80064d2:	601a      	str	r2, [r3, #0]
 80064d4:	2300      	movs	r3, #0
 80064d6:	4618      	mov	r0, r3
 80064d8:	3770      	adds	r7, #112	; 0x70
 80064da:	46bd      	mov	sp, r7
 80064dc:	bd80      	pop	{r7, pc}
 80064de:	bf00      	nop
 80064e0:	40023800 	.word	0x40023800
 80064e4:	40007000 	.word	0x40007000
 80064e8:	42470e40 	.word	0x42470e40
 80064ec:	424711e0 	.word	0x424711e0

080064f0 <HAL_SD_Init>:
 80064f0:	b580      	push	{r7, lr}
 80064f2:	b082      	sub	sp, #8
 80064f4:	af00      	add	r7, sp, #0
 80064f6:	6078      	str	r0, [r7, #4]
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d101      	bne.n	8006502 <HAL_SD_Init+0x12>
 80064fe:	2301      	movs	r3, #1
 8006500:	e01d      	b.n	800653e <HAL_SD_Init+0x4e>
 8006502:	687b      	ldr	r3, [r7, #4]
 8006504:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8006508:	b2db      	uxtb	r3, r3
 800650a:	2b00      	cmp	r3, #0
 800650c:	d105      	bne.n	800651a <HAL_SD_Init+0x2a>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	2200      	movs	r2, #0
 8006512:	771a      	strb	r2, [r3, #28]
 8006514:	6878      	ldr	r0, [r7, #4]
 8006516:	f003 ffdb 	bl	800a4d0 <HAL_SD_MspInit>
 800651a:	687b      	ldr	r3, [r7, #4]
 800651c:	2203      	movs	r2, #3
 800651e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006522:	6878      	ldr	r0, [r7, #4]
 8006524:	f000 f810 	bl	8006548 <HAL_SD_InitCard>
 8006528:	687b      	ldr	r3, [r7, #4]
 800652a:	2200      	movs	r2, #0
 800652c:	639a      	str	r2, [r3, #56]	; 0x38
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	2200      	movs	r2, #0
 8006532:	631a      	str	r2, [r3, #48]	; 0x30
 8006534:	687b      	ldr	r3, [r7, #4]
 8006536:	2201      	movs	r2, #1
 8006538:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800653c:	2300      	movs	r3, #0
 800653e:	4618      	mov	r0, r3
 8006540:	3708      	adds	r7, #8
 8006542:	46bd      	mov	sp, r7
 8006544:	bd80      	pop	{r7, pc}
	...

08006548 <HAL_SD_InitCard>:
 8006548:	b5b0      	push	{r4, r5, r7, lr}
 800654a:	b08e      	sub	sp, #56	; 0x38
 800654c:	af04      	add	r7, sp, #16
 800654e:	6078      	str	r0, [r7, #4]
 8006550:	2300      	movs	r3, #0
 8006552:	627b      	str	r3, [r7, #36]	; 0x24
 8006554:	2300      	movs	r3, #0
 8006556:	60fb      	str	r3, [r7, #12]
 8006558:	2300      	movs	r3, #0
 800655a:	613b      	str	r3, [r7, #16]
 800655c:	2300      	movs	r3, #0
 800655e:	617b      	str	r3, [r7, #20]
 8006560:	2300      	movs	r3, #0
 8006562:	61bb      	str	r3, [r7, #24]
 8006564:	2300      	movs	r3, #0
 8006566:	61fb      	str	r3, [r7, #28]
 8006568:	2376      	movs	r3, #118	; 0x76
 800656a:	623b      	str	r3, [r7, #32]
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	681d      	ldr	r5, [r3, #0]
 8006570:	466c      	mov	r4, sp
 8006572:	f107 0318 	add.w	r3, r7, #24
 8006576:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 800657a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800657e:	f107 030c 	add.w	r3, r7, #12
 8006582:	cb0e      	ldmia	r3, {r1, r2, r3}
 8006584:	4628      	mov	r0, r5
 8006586:	f002 fc85 	bl	8008e94 <SDIO_Init>
 800658a:	4b1c      	ldr	r3, [pc, #112]	; (80065fc <HAL_SD_InitCard+0xb4>)
 800658c:	2200      	movs	r2, #0
 800658e:	601a      	str	r2, [r3, #0]
 8006590:	687b      	ldr	r3, [r7, #4]
 8006592:	681b      	ldr	r3, [r3, #0]
 8006594:	4618      	mov	r0, r3
 8006596:	f002 fcc6 	bl	8008f26 <SDIO_PowerState_ON>
 800659a:	4b18      	ldr	r3, [pc, #96]	; (80065fc <HAL_SD_InitCard+0xb4>)
 800659c:	2201      	movs	r2, #1
 800659e:	601a      	str	r2, [r3, #0]
 80065a0:	2002      	movs	r0, #2
 80065a2:	f7fd fd45 	bl	8004030 <HAL_Delay>
 80065a6:	6878      	ldr	r0, [r7, #4]
 80065a8:	f001 f90c 	bl	80077c4 <SD_PowerON>
 80065ac:	6278      	str	r0, [r7, #36]	; 0x24
 80065ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065b0:	2b00      	cmp	r3, #0
 80065b2:	d00b      	beq.n	80065cc <HAL_SD_InitCard+0x84>
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	2201      	movs	r2, #1
 80065b8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80065c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065c2:	431a      	orrs	r2, r3
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	639a      	str	r2, [r3, #56]	; 0x38
 80065c8:	2301      	movs	r3, #1
 80065ca:	e013      	b.n	80065f4 <HAL_SD_InitCard+0xac>
 80065cc:	6878      	ldr	r0, [r7, #4]
 80065ce:	f001 f82f 	bl	8007630 <SD_InitCard>
 80065d2:	6278      	str	r0, [r7, #36]	; 0x24
 80065d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065d6:	2b00      	cmp	r3, #0
 80065d8:	d00b      	beq.n	80065f2 <HAL_SD_InitCard+0xaa>
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	2201      	movs	r2, #1
 80065de:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80065e2:	687b      	ldr	r3, [r7, #4]
 80065e4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80065e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065e8:	431a      	orrs	r2, r3
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	639a      	str	r2, [r3, #56]	; 0x38
 80065ee:	2301      	movs	r3, #1
 80065f0:	e000      	b.n	80065f4 <HAL_SD_InitCard+0xac>
 80065f2:	2300      	movs	r3, #0
 80065f4:	4618      	mov	r0, r3
 80065f6:	3728      	adds	r7, #40	; 0x28
 80065f8:	46bd      	mov	sp, r7
 80065fa:	bdb0      	pop	{r4, r5, r7, pc}
 80065fc:	422580a0 	.word	0x422580a0

08006600 <HAL_SD_ReadBlocks>:
 8006600:	b590      	push	{r4, r7, lr}
 8006602:	b08f      	sub	sp, #60	; 0x3c
 8006604:	af00      	add	r7, sp, #0
 8006606:	60f8      	str	r0, [r7, #12]
 8006608:	60b9      	str	r1, [r7, #8]
 800660a:	607a      	str	r2, [r7, #4]
 800660c:	603b      	str	r3, [r7, #0]
 800660e:	2300      	movs	r3, #0
 8006610:	637b      	str	r3, [r7, #52]	; 0x34
 8006612:	f7fd fd01 	bl	8004018 <HAL_GetTick>
 8006616:	62b8      	str	r0, [r7, #40]	; 0x28
 8006618:	2300      	movs	r3, #0
 800661a:	633b      	str	r3, [r7, #48]	; 0x30
 800661c:	68bb      	ldr	r3, [r7, #8]
 800661e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006620:	68bb      	ldr	r3, [r7, #8]
 8006622:	2b00      	cmp	r3, #0
 8006624:	d107      	bne.n	8006636 <HAL_SD_ReadBlocks+0x36>
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800662a:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	639a      	str	r2, [r3, #56]	; 0x38
 8006632:	2301      	movs	r3, #1
 8006634:	e177      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800663c:	b2db      	uxtb	r3, r3
 800663e:	2b01      	cmp	r3, #1
 8006640:	f040 816a 	bne.w	8006918 <HAL_SD_ReadBlocks+0x318>
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	2200      	movs	r2, #0
 8006648:	639a      	str	r2, [r3, #56]	; 0x38
 800664a:	687a      	ldr	r2, [r7, #4]
 800664c:	683b      	ldr	r3, [r7, #0]
 800664e:	441a      	add	r2, r3
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006654:	429a      	cmp	r2, r3
 8006656:	d907      	bls.n	8006668 <HAL_SD_ReadBlocks+0x68>
 8006658:	68fb      	ldr	r3, [r7, #12]
 800665a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800665c:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	639a      	str	r2, [r3, #56]	; 0x38
 8006664:	2301      	movs	r3, #1
 8006666:	e15e      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	2203      	movs	r2, #3
 800666c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	681b      	ldr	r3, [r3, #0]
 8006674:	2200      	movs	r2, #0
 8006676:	62da      	str	r2, [r3, #44]	; 0x2c
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800667c:	2b01      	cmp	r3, #1
 800667e:	d002      	beq.n	8006686 <HAL_SD_ReadBlocks+0x86>
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	025b      	lsls	r3, r3, #9
 8006684:	607b      	str	r3, [r7, #4]
 8006686:	68fb      	ldr	r3, [r7, #12]
 8006688:	681b      	ldr	r3, [r3, #0]
 800668a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800668e:	4618      	mov	r0, r3
 8006690:	f002 fcdd 	bl	800904e <SDMMC_CmdBlockLength>
 8006694:	6378      	str	r0, [r7, #52]	; 0x34
 8006696:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006698:	2b00      	cmp	r3, #0
 800669a:	d010      	beq.n	80066be <HAL_SD_ReadBlocks+0xbe>
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80066a4:	639a      	str	r2, [r3, #56]	; 0x38
 80066a6:	68fb      	ldr	r3, [r7, #12]
 80066a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80066aa:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80066ac:	431a      	orrs	r2, r3
 80066ae:	68fb      	ldr	r3, [r7, #12]
 80066b0:	639a      	str	r2, [r3, #56]	; 0x38
 80066b2:	68fb      	ldr	r3, [r7, #12]
 80066b4:	2201      	movs	r2, #1
 80066b6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80066ba:	2301      	movs	r3, #1
 80066bc:	e133      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 80066be:	f04f 33ff 	mov.w	r3, #4294967295
 80066c2:	613b      	str	r3, [r7, #16]
 80066c4:	683b      	ldr	r3, [r7, #0]
 80066c6:	025b      	lsls	r3, r3, #9
 80066c8:	617b      	str	r3, [r7, #20]
 80066ca:	2390      	movs	r3, #144	; 0x90
 80066cc:	61bb      	str	r3, [r7, #24]
 80066ce:	2302      	movs	r3, #2
 80066d0:	61fb      	str	r3, [r7, #28]
 80066d2:	2300      	movs	r3, #0
 80066d4:	623b      	str	r3, [r7, #32]
 80066d6:	2301      	movs	r3, #1
 80066d8:	627b      	str	r3, [r7, #36]	; 0x24
 80066da:	68fb      	ldr	r3, [r7, #12]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	f107 0210 	add.w	r2, r7, #16
 80066e2:	4611      	mov	r1, r2
 80066e4:	4618      	mov	r0, r3
 80066e6:	f002 fc86 	bl	8008ff6 <SDIO_ConfigData>
 80066ea:	683b      	ldr	r3, [r7, #0]
 80066ec:	2b01      	cmp	r3, #1
 80066ee:	d90a      	bls.n	8006706 <HAL_SD_ReadBlocks+0x106>
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	2202      	movs	r2, #2
 80066f4:	631a      	str	r2, [r3, #48]	; 0x30
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	681b      	ldr	r3, [r3, #0]
 80066fa:	6879      	ldr	r1, [r7, #4]
 80066fc:	4618      	mov	r0, r3
 80066fe:	f002 fcee 	bl	80090de <SDMMC_CmdReadMultiBlock>
 8006702:	6378      	str	r0, [r7, #52]	; 0x34
 8006704:	e009      	b.n	800671a <HAL_SD_ReadBlocks+0x11a>
 8006706:	68fb      	ldr	r3, [r7, #12]
 8006708:	2201      	movs	r2, #1
 800670a:	631a      	str	r2, [r3, #48]	; 0x30
 800670c:	68fb      	ldr	r3, [r7, #12]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	6879      	ldr	r1, [r7, #4]
 8006712:	4618      	mov	r0, r3
 8006714:	f002 fcbf 	bl	8009096 <SDMMC_CmdReadSingleBlock>
 8006718:	6378      	str	r0, [r7, #52]	; 0x34
 800671a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800671c:	2b00      	cmp	r3, #0
 800671e:	d04a      	beq.n	80067b6 <HAL_SD_ReadBlocks+0x1b6>
 8006720:	68fb      	ldr	r3, [r7, #12]
 8006722:	681b      	ldr	r3, [r3, #0]
 8006724:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006728:	639a      	str	r2, [r3, #56]	; 0x38
 800672a:	68fb      	ldr	r3, [r7, #12]
 800672c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800672e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006730:	431a      	orrs	r2, r3
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	639a      	str	r2, [r3, #56]	; 0x38
 8006736:	68fb      	ldr	r3, [r7, #12]
 8006738:	2201      	movs	r2, #1
 800673a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800673e:	2301      	movs	r3, #1
 8006740:	e0f1      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	681b      	ldr	r3, [r3, #0]
 8006746:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006748:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800674c:	2b00      	cmp	r3, #0
 800674e:	d016      	beq.n	800677e <HAL_SD_ReadBlocks+0x17e>
 8006750:	2300      	movs	r3, #0
 8006752:	633b      	str	r3, [r7, #48]	; 0x30
 8006754:	e00d      	b.n	8006772 <HAL_SD_ReadBlocks+0x172>
 8006756:	68fb      	ldr	r3, [r7, #12]
 8006758:	6819      	ldr	r1, [r3, #0]
 800675a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800675c:	009b      	lsls	r3, r3, #2
 800675e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006760:	18d4      	adds	r4, r2, r3
 8006762:	4608      	mov	r0, r1
 8006764:	f002 fbc1 	bl	8008eea <SDIO_ReadFIFO>
 8006768:	4603      	mov	r3, r0
 800676a:	6023      	str	r3, [r4, #0]
 800676c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800676e:	3301      	adds	r3, #1
 8006770:	633b      	str	r3, [r7, #48]	; 0x30
 8006772:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006774:	2b07      	cmp	r3, #7
 8006776:	d9ee      	bls.n	8006756 <HAL_SD_ReadBlocks+0x156>
 8006778:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800677a:	3320      	adds	r3, #32
 800677c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800677e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8006780:	2b00      	cmp	r3, #0
 8006782:	d007      	beq.n	8006794 <HAL_SD_ReadBlocks+0x194>
 8006784:	f7fd fc48 	bl	8004018 <HAL_GetTick>
 8006788:	4602      	mov	r2, r0
 800678a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800678c:	1ad3      	subs	r3, r2, r3
 800678e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8006790:	429a      	cmp	r2, r3
 8006792:	d810      	bhi.n	80067b6 <HAL_SD_ReadBlocks+0x1b6>
 8006794:	68fb      	ldr	r3, [r7, #12]
 8006796:	681b      	ldr	r3, [r3, #0]
 8006798:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800679c:	639a      	str	r2, [r3, #56]	; 0x38
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80067a2:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 80067a6:	68fb      	ldr	r3, [r7, #12]
 80067a8:	639a      	str	r2, [r3, #56]	; 0x38
 80067aa:	68fb      	ldr	r3, [r7, #12]
 80067ac:	2201      	movs	r2, #1
 80067ae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80067b2:	2303      	movs	r3, #3
 80067b4:	e0b7      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 80067b6:	68fb      	ldr	r3, [r7, #12]
 80067b8:	681b      	ldr	r3, [r3, #0]
 80067ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80067bc:	f240 332a 	movw	r3, #810	; 0x32a
 80067c0:	4013      	ands	r3, r2
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d0bd      	beq.n	8006742 <HAL_SD_ReadBlocks+0x142>
 80067c6:	68fb      	ldr	r3, [r7, #12]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80067cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d020      	beq.n	8006816 <HAL_SD_ReadBlocks+0x216>
 80067d4:	683b      	ldr	r3, [r7, #0]
 80067d6:	2b01      	cmp	r3, #1
 80067d8:	d91d      	bls.n	8006816 <HAL_SD_ReadBlocks+0x216>
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80067de:	2b03      	cmp	r3, #3
 80067e0:	d019      	beq.n	8006816 <HAL_SD_ReadBlocks+0x216>
 80067e2:	68fb      	ldr	r3, [r7, #12]
 80067e4:	681b      	ldr	r3, [r3, #0]
 80067e6:	4618      	mov	r0, r3
 80067e8:	f002 fce6 	bl	80091b8 <SDMMC_CmdStopTransfer>
 80067ec:	6378      	str	r0, [r7, #52]	; 0x34
 80067ee:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80067f0:	2b00      	cmp	r3, #0
 80067f2:	d010      	beq.n	8006816 <HAL_SD_ReadBlocks+0x216>
 80067f4:	68fb      	ldr	r3, [r7, #12]
 80067f6:	681b      	ldr	r3, [r3, #0]
 80067f8:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80067fc:	639a      	str	r2, [r3, #56]	; 0x38
 80067fe:	68fb      	ldr	r3, [r7, #12]
 8006800:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006802:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006804:	431a      	orrs	r2, r3
 8006806:	68fb      	ldr	r3, [r7, #12]
 8006808:	639a      	str	r2, [r3, #56]	; 0x38
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	2201      	movs	r2, #1
 800680e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006812:	2301      	movs	r3, #1
 8006814:	e087      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006816:	68fb      	ldr	r3, [r7, #12]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800681c:	f003 0308 	and.w	r3, r3, #8
 8006820:	2b00      	cmp	r3, #0
 8006822:	d010      	beq.n	8006846 <HAL_SD_ReadBlocks+0x246>
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800682c:	639a      	str	r2, [r3, #56]	; 0x38
 800682e:	68fb      	ldr	r3, [r7, #12]
 8006830:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006832:	f043 0208 	orr.w	r2, r3, #8
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	639a      	str	r2, [r3, #56]	; 0x38
 800683a:	68fb      	ldr	r3, [r7, #12]
 800683c:	2201      	movs	r2, #1
 800683e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006842:	2301      	movs	r3, #1
 8006844:	e06f      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006846:	68fb      	ldr	r3, [r7, #12]
 8006848:	681b      	ldr	r3, [r3, #0]
 800684a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800684c:	f003 0302 	and.w	r3, r3, #2
 8006850:	2b00      	cmp	r3, #0
 8006852:	d010      	beq.n	8006876 <HAL_SD_ReadBlocks+0x276>
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800685c:	639a      	str	r2, [r3, #56]	; 0x38
 800685e:	68fb      	ldr	r3, [r7, #12]
 8006860:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006862:	f043 0202 	orr.w	r2, r3, #2
 8006866:	68fb      	ldr	r3, [r7, #12]
 8006868:	639a      	str	r2, [r3, #56]	; 0x38
 800686a:	68fb      	ldr	r3, [r7, #12]
 800686c:	2201      	movs	r2, #1
 800686e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006872:	2301      	movs	r3, #1
 8006874:	e057      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006876:	68fb      	ldr	r3, [r7, #12]
 8006878:	681b      	ldr	r3, [r3, #0]
 800687a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800687c:	f003 0320 	and.w	r3, r3, #32
 8006880:	2b00      	cmp	r3, #0
 8006882:	d037      	beq.n	80068f4 <HAL_SD_ReadBlocks+0x2f4>
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800688c:	639a      	str	r2, [r3, #56]	; 0x38
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006892:	f043 0220 	orr.w	r2, r3, #32
 8006896:	68fb      	ldr	r3, [r7, #12]
 8006898:	639a      	str	r2, [r3, #56]	; 0x38
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	2201      	movs	r2, #1
 800689e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80068a2:	2301      	movs	r3, #1
 80068a4:	e03f      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	4618      	mov	r0, r3
 80068ac:	f002 fb1d 	bl	8008eea <SDIO_ReadFIFO>
 80068b0:	4602      	mov	r2, r0
 80068b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80068b4:	601a      	str	r2, [r3, #0]
 80068b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80068b8:	3304      	adds	r3, #4
 80068ba:	62fb      	str	r3, [r7, #44]	; 0x2c
 80068bc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80068be:	2b00      	cmp	r3, #0
 80068c0:	d007      	beq.n	80068d2 <HAL_SD_ReadBlocks+0x2d2>
 80068c2:	f7fd fba9 	bl	8004018 <HAL_GetTick>
 80068c6:	4602      	mov	r2, r0
 80068c8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80068ca:	1ad3      	subs	r3, r2, r3
 80068cc:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80068ce:	429a      	cmp	r2, r3
 80068d0:	d810      	bhi.n	80068f4 <HAL_SD_ReadBlocks+0x2f4>
 80068d2:	68fb      	ldr	r3, [r7, #12]
 80068d4:	681b      	ldr	r3, [r3, #0]
 80068d6:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80068da:	639a      	str	r2, [r3, #56]	; 0x38
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80068e0:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 80068e4:	68fb      	ldr	r3, [r7, #12]
 80068e6:	639a      	str	r2, [r3, #56]	; 0x38
 80068e8:	68fb      	ldr	r3, [r7, #12]
 80068ea:	2201      	movs	r2, #1
 80068ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80068f0:	2301      	movs	r3, #1
 80068f2:	e018      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 80068f4:	68fb      	ldr	r3, [r7, #12]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80068fa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d1d1      	bne.n	80068a6 <HAL_SD_ReadBlocks+0x2a6>
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	681b      	ldr	r3, [r3, #0]
 8006906:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800690a:	639a      	str	r2, [r3, #56]	; 0x38
 800690c:	68fb      	ldr	r3, [r7, #12]
 800690e:	2201      	movs	r2, #1
 8006910:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006914:	2300      	movs	r3, #0
 8006916:	e006      	b.n	8006926 <HAL_SD_ReadBlocks+0x326>
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800691c:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	639a      	str	r2, [r3, #56]	; 0x38
 8006924:	2301      	movs	r3, #1
 8006926:	4618      	mov	r0, r3
 8006928:	373c      	adds	r7, #60	; 0x3c
 800692a:	46bd      	mov	sp, r7
 800692c:	bd90      	pop	{r4, r7, pc}

0800692e <HAL_SD_WriteBlocks>:
 800692e:	b580      	push	{r7, lr}
 8006930:	b08e      	sub	sp, #56	; 0x38
 8006932:	af00      	add	r7, sp, #0
 8006934:	60f8      	str	r0, [r7, #12]
 8006936:	60b9      	str	r1, [r7, #8]
 8006938:	607a      	str	r2, [r7, #4]
 800693a:	603b      	str	r3, [r7, #0]
 800693c:	2300      	movs	r3, #0
 800693e:	637b      	str	r3, [r7, #52]	; 0x34
 8006940:	f7fd fb6a 	bl	8004018 <HAL_GetTick>
 8006944:	62b8      	str	r0, [r7, #40]	; 0x28
 8006946:	2300      	movs	r3, #0
 8006948:	633b      	str	r3, [r7, #48]	; 0x30
 800694a:	68bb      	ldr	r3, [r7, #8]
 800694c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800694e:	68bb      	ldr	r3, [r7, #8]
 8006950:	2b00      	cmp	r3, #0
 8006952:	d107      	bne.n	8006964 <HAL_SD_WriteBlocks+0x36>
 8006954:	68fb      	ldr	r3, [r7, #12]
 8006956:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006958:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 800695c:	68fb      	ldr	r3, [r7, #12]
 800695e:	639a      	str	r2, [r3, #56]	; 0x38
 8006960:	2301      	movs	r3, #1
 8006962:	e160      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006964:	68fb      	ldr	r3, [r7, #12]
 8006966:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800696a:	b2db      	uxtb	r3, r3
 800696c:	2b01      	cmp	r3, #1
 800696e:	f040 8153 	bne.w	8006c18 <HAL_SD_WriteBlocks+0x2ea>
 8006972:	68fb      	ldr	r3, [r7, #12]
 8006974:	2200      	movs	r2, #0
 8006976:	639a      	str	r2, [r3, #56]	; 0x38
 8006978:	687a      	ldr	r2, [r7, #4]
 800697a:	683b      	ldr	r3, [r7, #0]
 800697c:	441a      	add	r2, r3
 800697e:	68fb      	ldr	r3, [r7, #12]
 8006980:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006982:	429a      	cmp	r2, r3
 8006984:	d907      	bls.n	8006996 <HAL_SD_WriteBlocks+0x68>
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800698a:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 800698e:	68fb      	ldr	r3, [r7, #12]
 8006990:	639a      	str	r2, [r3, #56]	; 0x38
 8006992:	2301      	movs	r3, #1
 8006994:	e147      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006996:	68fb      	ldr	r3, [r7, #12]
 8006998:	2203      	movs	r2, #3
 800699a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800699e:	68fb      	ldr	r3, [r7, #12]
 80069a0:	681b      	ldr	r3, [r3, #0]
 80069a2:	2200      	movs	r2, #0
 80069a4:	62da      	str	r2, [r3, #44]	; 0x2c
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80069aa:	2b01      	cmp	r3, #1
 80069ac:	d002      	beq.n	80069b4 <HAL_SD_WriteBlocks+0x86>
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	025b      	lsls	r3, r3, #9
 80069b2:	607b      	str	r3, [r7, #4]
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	681b      	ldr	r3, [r3, #0]
 80069b8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80069bc:	4618      	mov	r0, r3
 80069be:	f002 fb46 	bl	800904e <SDMMC_CmdBlockLength>
 80069c2:	6378      	str	r0, [r7, #52]	; 0x34
 80069c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80069c6:	2b00      	cmp	r3, #0
 80069c8:	d010      	beq.n	80069ec <HAL_SD_WriteBlocks+0xbe>
 80069ca:	68fb      	ldr	r3, [r7, #12]
 80069cc:	681b      	ldr	r3, [r3, #0]
 80069ce:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80069d2:	639a      	str	r2, [r3, #56]	; 0x38
 80069d4:	68fb      	ldr	r3, [r7, #12]
 80069d6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80069d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80069da:	431a      	orrs	r2, r3
 80069dc:	68fb      	ldr	r3, [r7, #12]
 80069de:	639a      	str	r2, [r3, #56]	; 0x38
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	2201      	movs	r2, #1
 80069e4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80069e8:	2301      	movs	r3, #1
 80069ea:	e11c      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 80069ec:	683b      	ldr	r3, [r7, #0]
 80069ee:	2b01      	cmp	r3, #1
 80069f0:	d90a      	bls.n	8006a08 <HAL_SD_WriteBlocks+0xda>
 80069f2:	68fb      	ldr	r3, [r7, #12]
 80069f4:	2220      	movs	r2, #32
 80069f6:	631a      	str	r2, [r3, #48]	; 0x30
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	6879      	ldr	r1, [r7, #4]
 80069fe:	4618      	mov	r0, r3
 8006a00:	f002 fbb5 	bl	800916e <SDMMC_CmdWriteMultiBlock>
 8006a04:	6378      	str	r0, [r7, #52]	; 0x34
 8006a06:	e009      	b.n	8006a1c <HAL_SD_WriteBlocks+0xee>
 8006a08:	68fb      	ldr	r3, [r7, #12]
 8006a0a:	2210      	movs	r2, #16
 8006a0c:	631a      	str	r2, [r3, #48]	; 0x30
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	6879      	ldr	r1, [r7, #4]
 8006a14:	4618      	mov	r0, r3
 8006a16:	f002 fb86 	bl	8009126 <SDMMC_CmdWriteSingleBlock>
 8006a1a:	6378      	str	r0, [r7, #52]	; 0x34
 8006a1c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	d010      	beq.n	8006a44 <HAL_SD_WriteBlocks+0x116>
 8006a22:	68fb      	ldr	r3, [r7, #12]
 8006a24:	681b      	ldr	r3, [r3, #0]
 8006a26:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006a2a:	639a      	str	r2, [r3, #56]	; 0x38
 8006a2c:	68fb      	ldr	r3, [r7, #12]
 8006a2e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006a30:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006a32:	431a      	orrs	r2, r3
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	639a      	str	r2, [r3, #56]	; 0x38
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	2201      	movs	r2, #1
 8006a3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006a40:	2301      	movs	r3, #1
 8006a42:	e0f0      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006a44:	f04f 33ff 	mov.w	r3, #4294967295
 8006a48:	613b      	str	r3, [r7, #16]
 8006a4a:	683b      	ldr	r3, [r7, #0]
 8006a4c:	025b      	lsls	r3, r3, #9
 8006a4e:	617b      	str	r3, [r7, #20]
 8006a50:	2390      	movs	r3, #144	; 0x90
 8006a52:	61bb      	str	r3, [r7, #24]
 8006a54:	2300      	movs	r3, #0
 8006a56:	61fb      	str	r3, [r7, #28]
 8006a58:	2300      	movs	r3, #0
 8006a5a:	623b      	str	r3, [r7, #32]
 8006a5c:	2301      	movs	r3, #1
 8006a5e:	627b      	str	r3, [r7, #36]	; 0x24
 8006a60:	68fb      	ldr	r3, [r7, #12]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	f107 0210 	add.w	r2, r7, #16
 8006a68:	4611      	mov	r1, r2
 8006a6a:	4618      	mov	r0, r3
 8006a6c:	f002 fac3 	bl	8008ff6 <SDIO_ConfigData>
 8006a70:	e037      	b.n	8006ae2 <HAL_SD_WriteBlocks+0x1b4>
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006a78:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006a7c:	2b00      	cmp	r3, #0
 8006a7e:	d014      	beq.n	8006aaa <HAL_SD_WriteBlocks+0x17c>
 8006a80:	2300      	movs	r3, #0
 8006a82:	633b      	str	r3, [r7, #48]	; 0x30
 8006a84:	e00b      	b.n	8006a9e <HAL_SD_WriteBlocks+0x170>
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	6818      	ldr	r0, [r3, #0]
 8006a8a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a8c:	009b      	lsls	r3, r3, #2
 8006a8e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006a90:	4413      	add	r3, r2
 8006a92:	4619      	mov	r1, r3
 8006a94:	f002 fa36 	bl	8008f04 <SDIO_WriteFIFO>
 8006a98:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006a9a:	3301      	adds	r3, #1
 8006a9c:	633b      	str	r3, [r7, #48]	; 0x30
 8006a9e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006aa0:	2b07      	cmp	r3, #7
 8006aa2:	d9f0      	bls.n	8006a86 <HAL_SD_WriteBlocks+0x158>
 8006aa4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006aa6:	3320      	adds	r3, #32
 8006aa8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006aaa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8006aac:	2b00      	cmp	r3, #0
 8006aae:	d007      	beq.n	8006ac0 <HAL_SD_WriteBlocks+0x192>
 8006ab0:	f7fd fab2 	bl	8004018 <HAL_GetTick>
 8006ab4:	4602      	mov	r2, r0
 8006ab6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006ab8:	1ad3      	subs	r3, r2, r3
 8006aba:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8006abc:	429a      	cmp	r2, r3
 8006abe:	d810      	bhi.n	8006ae2 <HAL_SD_WriteBlocks+0x1b4>
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006ac8:	639a      	str	r2, [r3, #56]	; 0x38
 8006aca:	68fb      	ldr	r3, [r7, #12]
 8006acc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006ace:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006ad0:	431a      	orrs	r2, r3
 8006ad2:	68fb      	ldr	r3, [r7, #12]
 8006ad4:	639a      	str	r2, [r3, #56]	; 0x38
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	2201      	movs	r2, #1
 8006ada:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006ade:	2303      	movs	r3, #3
 8006ae0:	e0a1      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006ae2:	68fb      	ldr	r3, [r7, #12]
 8006ae4:	681b      	ldr	r3, [r3, #0]
 8006ae6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006ae8:	f240 331a 	movw	r3, #794	; 0x31a
 8006aec:	4013      	ands	r3, r2
 8006aee:	2b00      	cmp	r3, #0
 8006af0:	d0bf      	beq.n	8006a72 <HAL_SD_WriteBlocks+0x144>
 8006af2:	68fb      	ldr	r3, [r7, #12]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006af8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006afc:	2b00      	cmp	r3, #0
 8006afe:	d020      	beq.n	8006b42 <HAL_SD_WriteBlocks+0x214>
 8006b00:	683b      	ldr	r3, [r7, #0]
 8006b02:	2b01      	cmp	r3, #1
 8006b04:	d91d      	bls.n	8006b42 <HAL_SD_WriteBlocks+0x214>
 8006b06:	68fb      	ldr	r3, [r7, #12]
 8006b08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b0a:	2b03      	cmp	r3, #3
 8006b0c:	d019      	beq.n	8006b42 <HAL_SD_WriteBlocks+0x214>
 8006b0e:	68fb      	ldr	r3, [r7, #12]
 8006b10:	681b      	ldr	r3, [r3, #0]
 8006b12:	4618      	mov	r0, r3
 8006b14:	f002 fb50 	bl	80091b8 <SDMMC_CmdStopTransfer>
 8006b18:	6378      	str	r0, [r7, #52]	; 0x34
 8006b1a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006b1c:	2b00      	cmp	r3, #0
 8006b1e:	d010      	beq.n	8006b42 <HAL_SD_WriteBlocks+0x214>
 8006b20:	68fb      	ldr	r3, [r7, #12]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006b28:	639a      	str	r2, [r3, #56]	; 0x38
 8006b2a:	68fb      	ldr	r3, [r7, #12]
 8006b2c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006b2e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006b30:	431a      	orrs	r2, r3
 8006b32:	68fb      	ldr	r3, [r7, #12]
 8006b34:	639a      	str	r2, [r3, #56]	; 0x38
 8006b36:	68fb      	ldr	r3, [r7, #12]
 8006b38:	2201      	movs	r2, #1
 8006b3a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006b3e:	2301      	movs	r3, #1
 8006b40:	e071      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006b42:	68fb      	ldr	r3, [r7, #12]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006b48:	f003 0308 	and.w	r3, r3, #8
 8006b4c:	2b00      	cmp	r3, #0
 8006b4e:	d010      	beq.n	8006b72 <HAL_SD_WriteBlocks+0x244>
 8006b50:	68fb      	ldr	r3, [r7, #12]
 8006b52:	681b      	ldr	r3, [r3, #0]
 8006b54:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006b58:	639a      	str	r2, [r3, #56]	; 0x38
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b5e:	f043 0208 	orr.w	r2, r3, #8
 8006b62:	68fb      	ldr	r3, [r7, #12]
 8006b64:	639a      	str	r2, [r3, #56]	; 0x38
 8006b66:	68fb      	ldr	r3, [r7, #12]
 8006b68:	2201      	movs	r2, #1
 8006b6a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006b6e:	2301      	movs	r3, #1
 8006b70:	e059      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006b72:	68fb      	ldr	r3, [r7, #12]
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006b78:	f003 0302 	and.w	r3, r3, #2
 8006b7c:	2b00      	cmp	r3, #0
 8006b7e:	d010      	beq.n	8006ba2 <HAL_SD_WriteBlocks+0x274>
 8006b80:	68fb      	ldr	r3, [r7, #12]
 8006b82:	681b      	ldr	r3, [r3, #0]
 8006b84:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006b88:	639a      	str	r2, [r3, #56]	; 0x38
 8006b8a:	68fb      	ldr	r3, [r7, #12]
 8006b8c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b8e:	f043 0202 	orr.w	r2, r3, #2
 8006b92:	68fb      	ldr	r3, [r7, #12]
 8006b94:	639a      	str	r2, [r3, #56]	; 0x38
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	2201      	movs	r2, #1
 8006b9a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006b9e:	2301      	movs	r3, #1
 8006ba0:	e041      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006ba2:	68fb      	ldr	r3, [r7, #12]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006ba8:	f003 0310 	and.w	r3, r3, #16
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	d010      	beq.n	8006bd2 <HAL_SD_WriteBlocks+0x2a4>
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006bb8:	639a      	str	r2, [r3, #56]	; 0x38
 8006bba:	68fb      	ldr	r3, [r7, #12]
 8006bbc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006bbe:	f043 0210 	orr.w	r2, r3, #16
 8006bc2:	68fb      	ldr	r3, [r7, #12]
 8006bc4:	639a      	str	r2, [r3, #56]	; 0x38
 8006bc6:	68fb      	ldr	r3, [r7, #12]
 8006bc8:	2201      	movs	r2, #1
 8006bca:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006bce:	2301      	movs	r3, #1
 8006bd0:	e029      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006bd2:	68fb      	ldr	r3, [r7, #12]
 8006bd4:	681b      	ldr	r3, [r3, #0]
 8006bd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006bd8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006bdc:	2b00      	cmp	r3, #0
 8006bde:	d010      	beq.n	8006c02 <HAL_SD_WriteBlocks+0x2d4>
 8006be0:	68fb      	ldr	r3, [r7, #12]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006be8:	639a      	str	r2, [r3, #56]	; 0x38
 8006bea:	68fb      	ldr	r3, [r7, #12]
 8006bec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006bee:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8006bf2:	68fb      	ldr	r3, [r7, #12]
 8006bf4:	639a      	str	r2, [r3, #56]	; 0x38
 8006bf6:	68fb      	ldr	r3, [r7, #12]
 8006bf8:	2201      	movs	r2, #1
 8006bfa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006bfe:	2301      	movs	r3, #1
 8006c00:	e011      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006c02:	68fb      	ldr	r3, [r7, #12]
 8006c04:	681b      	ldr	r3, [r3, #0]
 8006c06:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006c0a:	639a      	str	r2, [r3, #56]	; 0x38
 8006c0c:	68fb      	ldr	r3, [r7, #12]
 8006c0e:	2201      	movs	r2, #1
 8006c10:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006c14:	2300      	movs	r3, #0
 8006c16:	e006      	b.n	8006c26 <HAL_SD_WriteBlocks+0x2f8>
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006c1c:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8006c20:	68fb      	ldr	r3, [r7, #12]
 8006c22:	639a      	str	r2, [r3, #56]	; 0x38
 8006c24:	2301      	movs	r3, #1
 8006c26:	4618      	mov	r0, r3
 8006c28:	3738      	adds	r7, #56	; 0x38
 8006c2a:	46bd      	mov	sp, r7
 8006c2c:	bd80      	pop	{r7, pc}
	...

08006c30 <HAL_SD_IRQHandler>:
 8006c30:	b580      	push	{r7, lr}
 8006c32:	b084      	sub	sp, #16
 8006c34:	af00      	add	r7, sp, #0
 8006c36:	6078      	str	r0, [r7, #4]
 8006c38:	2300      	movs	r3, #0
 8006c3a:	60fb      	str	r3, [r7, #12]
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006c42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006c46:	2b00      	cmp	r3, #0
 8006c48:	f000 808d 	beq.w	8006d66 <HAL_SD_IRQHandler+0x136>
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006c54:	639a      	str	r2, [r3, #56]	; 0x38
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006c5c:	687a      	ldr	r2, [r7, #4]
 8006c5e:	6812      	ldr	r2, [r2, #0]
 8006c60:	f423 734e 	bic.w	r3, r3, #824	; 0x338
 8006c64:	f023 0302 	bic.w	r3, r3, #2
 8006c68:	63d3      	str	r3, [r2, #60]	; 0x3c
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c6e:	f003 0308 	and.w	r3, r3, #8
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	d03a      	beq.n	8006cec <HAL_SD_IRQHandler+0xbc>
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c7a:	f003 0302 	and.w	r3, r3, #2
 8006c7e:	2b00      	cmp	r3, #0
 8006c80:	d105      	bne.n	8006c8e <HAL_SD_IRQHandler+0x5e>
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c86:	f003 0320 	and.w	r3, r3, #32
 8006c8a:	2b00      	cmp	r3, #0
 8006c8c:	d011      	beq.n	8006cb2 <HAL_SD_IRQHandler+0x82>
 8006c8e:	687b      	ldr	r3, [r7, #4]
 8006c90:	681b      	ldr	r3, [r3, #0]
 8006c92:	4618      	mov	r0, r3
 8006c94:	f002 fa90 	bl	80091b8 <SDMMC_CmdStopTransfer>
 8006c98:	60f8      	str	r0, [r7, #12]
 8006c9a:	68fb      	ldr	r3, [r7, #12]
 8006c9c:	2b00      	cmp	r3, #0
 8006c9e:	d008      	beq.n	8006cb2 <HAL_SD_IRQHandler+0x82>
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006ca4:	68fb      	ldr	r3, [r7, #12]
 8006ca6:	431a      	orrs	r2, r3
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	639a      	str	r2, [r3, #56]	; 0x38
 8006cac:	6878      	ldr	r0, [r7, #4]
 8006cae:	f000 f939 	bl	8006f24 <HAL_SD_ErrorCallback>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8006cba:	639a      	str	r2, [r3, #56]	; 0x38
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	2201      	movs	r2, #1
 8006cc0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cc8:	f003 0301 	and.w	r3, r3, #1
 8006ccc:	2b00      	cmp	r3, #0
 8006cce:	d105      	bne.n	8006cdc <HAL_SD_IRQHandler+0xac>
 8006cd0:	687b      	ldr	r3, [r7, #4]
 8006cd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cd4:	f003 0302 	and.w	r3, r3, #2
 8006cd8:	2b00      	cmp	r3, #0
 8006cda:	d003      	beq.n	8006ce4 <HAL_SD_IRQHandler+0xb4>
 8006cdc:	6878      	ldr	r0, [r7, #4]
 8006cde:	f000 f917 	bl	8006f10 <HAL_SD_RxCpltCallback>
 8006ce2:	e103      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006ce4:	6878      	ldr	r0, [r7, #4]
 8006ce6:	f000 f909 	bl	8006efc <HAL_SD_TxCpltCallback>
 8006cea:	e0ff      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cf0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006cf4:	2b00      	cmp	r3, #0
 8006cf6:	f000 80f9 	beq.w	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006cfe:	f003 0320 	and.w	r3, r3, #32
 8006d02:	2b00      	cmp	r3, #0
 8006d04:	d011      	beq.n	8006d2a <HAL_SD_IRQHandler+0xfa>
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	f002 fa54 	bl	80091b8 <SDMMC_CmdStopTransfer>
 8006d10:	60f8      	str	r0, [r7, #12]
 8006d12:	68fb      	ldr	r3, [r7, #12]
 8006d14:	2b00      	cmp	r3, #0
 8006d16:	d008      	beq.n	8006d2a <HAL_SD_IRQHandler+0xfa>
 8006d18:	687b      	ldr	r3, [r7, #4]
 8006d1a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	431a      	orrs	r2, r3
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	639a      	str	r2, [r3, #56]	; 0x38
 8006d24:	6878      	ldr	r0, [r7, #4]
 8006d26:	f000 f8fd 	bl	8006f24 <HAL_SD_ErrorCallback>
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d2e:	f003 0301 	and.w	r3, r3, #1
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	f040 80da 	bne.w	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d3c:	f003 0302 	and.w	r3, r3, #2
 8006d40:	2b00      	cmp	r3, #0
 8006d42:	f040 80d3 	bne.w	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681b      	ldr	r3, [r3, #0]
 8006d50:	f022 0208 	bic.w	r2, r2, #8
 8006d54:	62da      	str	r2, [r3, #44]	; 0x2c
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	2201      	movs	r2, #1
 8006d5a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006d5e:	6878      	ldr	r0, [r7, #4]
 8006d60:	f000 f8cc 	bl	8006efc <HAL_SD_TxCpltCallback>
 8006d64:	e0c2      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	681b      	ldr	r3, [r3, #0]
 8006d6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006d6c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006d70:	2b00      	cmp	r3, #0
 8006d72:	d008      	beq.n	8006d86 <HAL_SD_IRQHandler+0x156>
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	681b      	ldr	r3, [r3, #0]
 8006d78:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8006d7c:	639a      	str	r2, [r3, #56]	; 0x38
 8006d7e:	6878      	ldr	r0, [r7, #4]
 8006d80:	f000 ff7d 	bl	8007c7e <SD_Write_IT>
 8006d84:	e0b2      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006d8c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8006d90:	2b00      	cmp	r3, #0
 8006d92:	d008      	beq.n	8006da6 <HAL_SD_IRQHandler+0x176>
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	681b      	ldr	r3, [r3, #0]
 8006d98:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8006d9c:	639a      	str	r2, [r3, #56]	; 0x38
 8006d9e:	6878      	ldr	r0, [r7, #4]
 8006da0:	f000 ff45 	bl	8007c2e <SD_Read_IT>
 8006da4:	e0a2      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006da6:	687b      	ldr	r3, [r7, #4]
 8006da8:	681b      	ldr	r3, [r3, #0]
 8006daa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006dac:	f240 233a 	movw	r3, #570	; 0x23a
 8006db0:	4013      	ands	r3, r2
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	f000 809a 	beq.w	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dbe:	f003 0302 	and.w	r3, r3, #2
 8006dc2:	2b00      	cmp	r3, #0
 8006dc4:	d005      	beq.n	8006dd2 <HAL_SD_IRQHandler+0x1a2>
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006dca:	f043 0202 	orr.w	r2, r3, #2
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	639a      	str	r2, [r3, #56]	; 0x38
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dd8:	f003 0308 	and.w	r3, r3, #8
 8006ddc:	2b00      	cmp	r3, #0
 8006dde:	d005      	beq.n	8006dec <HAL_SD_IRQHandler+0x1bc>
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006de4:	f043 0208 	orr.w	r2, r3, #8
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	639a      	str	r2, [r3, #56]	; 0x38
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006df2:	f003 0320 	and.w	r3, r3, #32
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d005      	beq.n	8006e06 <HAL_SD_IRQHandler+0x1d6>
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006dfe:	f043 0220 	orr.w	r2, r3, #32
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	639a      	str	r2, [r3, #56]	; 0x38
 8006e06:	687b      	ldr	r3, [r7, #4]
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e0c:	f003 0310 	and.w	r3, r3, #16
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d005      	beq.n	8006e20 <HAL_SD_IRQHandler+0x1f0>
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e18:	f043 0210 	orr.w	r2, r3, #16
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	639a      	str	r2, [r3, #56]	; 0x38
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e26:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006e2a:	2b00      	cmp	r3, #0
 8006e2c:	d005      	beq.n	8006e3a <HAL_SD_IRQHandler+0x20a>
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e32:	f043 0208 	orr.w	r2, r3, #8
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	639a      	str	r2, [r3, #56]	; 0x38
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	681b      	ldr	r3, [r3, #0]
 8006e3e:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8006e42:	639a      	str	r2, [r3, #56]	; 0x38
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e4a:	687a      	ldr	r2, [r7, #4]
 8006e4c:	6812      	ldr	r2, [r2, #0]
 8006e4e:	f423 734e 	bic.w	r3, r3, #824	; 0x338
 8006e52:	f023 0302 	bic.w	r3, r3, #2
 8006e56:	63d3      	str	r3, [r2, #60]	; 0x3c
 8006e58:	687b      	ldr	r3, [r7, #4]
 8006e5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e5c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006e60:	2b00      	cmp	r3, #0
 8006e62:	d036      	beq.n	8006ed2 <HAL_SD_IRQHandler+0x2a2>
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e68:	2b00      	cmp	r3, #0
 8006e6a:	d011      	beq.n	8006e90 <HAL_SD_IRQHandler+0x260>
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e70:	4a20      	ldr	r2, [pc, #128]	; (8006ef4 <HAL_SD_IRQHandler+0x2c4>)
 8006e72:	651a      	str	r2, [r3, #80]	; 0x50
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e78:	4618      	mov	r0, r3
 8006e7a:	f7fd fa21 	bl	80042c0 <HAL_DMA_Abort_IT>
 8006e7e:	4603      	mov	r3, r0
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	d033      	beq.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e88:	4618      	mov	r0, r3
 8006e8a:	f000 fb55 	bl	8007538 <SD_DMATxAbort>
 8006e8e:	e02d      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d011      	beq.n	8006ebc <HAL_SD_IRQHandler+0x28c>
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e9c:	4a16      	ldr	r2, [pc, #88]	; (8006ef8 <HAL_SD_IRQHandler+0x2c8>)
 8006e9e:	651a      	str	r2, [r3, #80]	; 0x50
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006ea4:	4618      	mov	r0, r3
 8006ea6:	f7fd fa0b 	bl	80042c0 <HAL_DMA_Abort_IT>
 8006eaa:	4603      	mov	r3, r0
 8006eac:	2b00      	cmp	r3, #0
 8006eae:	d01d      	beq.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006eb4:	4618      	mov	r0, r3
 8006eb6:	f000 fb7d 	bl	80075b4 <SD_DMARxAbort>
 8006eba:	e017      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006ebc:	687b      	ldr	r3, [r7, #4]
 8006ebe:	2200      	movs	r2, #0
 8006ec0:	639a      	str	r2, [r3, #56]	; 0x38
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	2201      	movs	r2, #1
 8006ec6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006eca:	6878      	ldr	r0, [r7, #4]
 8006ecc:	f000 f834 	bl	8006f38 <HAL_SD_AbortCallback>
 8006ed0:	e00c      	b.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ed6:	f003 0308 	and.w	r3, r3, #8
 8006eda:	2b00      	cmp	r3, #0
 8006edc:	d006      	beq.n	8006eec <HAL_SD_IRQHandler+0x2bc>
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	2201      	movs	r2, #1
 8006ee2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006ee6:	6878      	ldr	r0, [r7, #4]
 8006ee8:	f000 f81c 	bl	8006f24 <HAL_SD_ErrorCallback>
 8006eec:	bf00      	nop
 8006eee:	3710      	adds	r7, #16
 8006ef0:	46bd      	mov	sp, r7
 8006ef2:	bd80      	pop	{r7, pc}
 8006ef4:	08007539 	.word	0x08007539
 8006ef8:	080075b5 	.word	0x080075b5

08006efc <HAL_SD_TxCpltCallback>:
 8006efc:	b480      	push	{r7}
 8006efe:	b083      	sub	sp, #12
 8006f00:	af00      	add	r7, sp, #0
 8006f02:	6078      	str	r0, [r7, #4]
 8006f04:	bf00      	nop
 8006f06:	370c      	adds	r7, #12
 8006f08:	46bd      	mov	sp, r7
 8006f0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f0e:	4770      	bx	lr

08006f10 <HAL_SD_RxCpltCallback>:
 8006f10:	b480      	push	{r7}
 8006f12:	b083      	sub	sp, #12
 8006f14:	af00      	add	r7, sp, #0
 8006f16:	6078      	str	r0, [r7, #4]
 8006f18:	bf00      	nop
 8006f1a:	370c      	adds	r7, #12
 8006f1c:	46bd      	mov	sp, r7
 8006f1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f22:	4770      	bx	lr

08006f24 <HAL_SD_ErrorCallback>:
 8006f24:	b480      	push	{r7}
 8006f26:	b083      	sub	sp, #12
 8006f28:	af00      	add	r7, sp, #0
 8006f2a:	6078      	str	r0, [r7, #4]
 8006f2c:	bf00      	nop
 8006f2e:	370c      	adds	r7, #12
 8006f30:	46bd      	mov	sp, r7
 8006f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f36:	4770      	bx	lr

08006f38 <HAL_SD_AbortCallback>:
 8006f38:	b480      	push	{r7}
 8006f3a:	b083      	sub	sp, #12
 8006f3c:	af00      	add	r7, sp, #0
 8006f3e:	6078      	str	r0, [r7, #4]
 8006f40:	bf00      	nop
 8006f42:	370c      	adds	r7, #12
 8006f44:	46bd      	mov	sp, r7
 8006f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f4a:	4770      	bx	lr

08006f4c <HAL_SD_GetCardCSD>:
 8006f4c:	b480      	push	{r7}
 8006f4e:	b085      	sub	sp, #20
 8006f50:	af00      	add	r7, sp, #0
 8006f52:	6078      	str	r0, [r7, #4]
 8006f54:	6039      	str	r1, [r7, #0]
 8006f56:	2300      	movs	r3, #0
 8006f58:	60fb      	str	r3, [r7, #12]
 8006f5a:	687b      	ldr	r3, [r7, #4]
 8006f5c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006f5e:	0e1b      	lsrs	r3, r3, #24
 8006f60:	60fb      	str	r3, [r7, #12]
 8006f62:	68fb      	ldr	r3, [r7, #12]
 8006f64:	099b      	lsrs	r3, r3, #6
 8006f66:	b2db      	uxtb	r3, r3
 8006f68:	f003 0303 	and.w	r3, r3, #3
 8006f6c:	b2da      	uxtb	r2, r3
 8006f6e:	683b      	ldr	r3, [r7, #0]
 8006f70:	701a      	strb	r2, [r3, #0]
 8006f72:	68fb      	ldr	r3, [r7, #12]
 8006f74:	089b      	lsrs	r3, r3, #2
 8006f76:	b2db      	uxtb	r3, r3
 8006f78:	f003 030f 	and.w	r3, r3, #15
 8006f7c:	b2da      	uxtb	r2, r3
 8006f7e:	683b      	ldr	r3, [r7, #0]
 8006f80:	705a      	strb	r2, [r3, #1]
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	b2db      	uxtb	r3, r3
 8006f86:	f003 0303 	and.w	r3, r3, #3
 8006f8a:	b2da      	uxtb	r2, r3
 8006f8c:	683b      	ldr	r3, [r7, #0]
 8006f8e:	709a      	strb	r2, [r3, #2]
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006f94:	0c1b      	lsrs	r3, r3, #16
 8006f96:	b2db      	uxtb	r3, r3
 8006f98:	60fb      	str	r3, [r7, #12]
 8006f9a:	68fb      	ldr	r3, [r7, #12]
 8006f9c:	b2da      	uxtb	r2, r3
 8006f9e:	683b      	ldr	r3, [r7, #0]
 8006fa0:	70da      	strb	r2, [r3, #3]
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006fa6:	0a1b      	lsrs	r3, r3, #8
 8006fa8:	b2db      	uxtb	r3, r3
 8006faa:	60fb      	str	r3, [r7, #12]
 8006fac:	68fb      	ldr	r3, [r7, #12]
 8006fae:	b2da      	uxtb	r2, r3
 8006fb0:	683b      	ldr	r3, [r7, #0]
 8006fb2:	711a      	strb	r2, [r3, #4]
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006fb8:	b2db      	uxtb	r3, r3
 8006fba:	60fb      	str	r3, [r7, #12]
 8006fbc:	68fb      	ldr	r3, [r7, #12]
 8006fbe:	b2da      	uxtb	r2, r3
 8006fc0:	683b      	ldr	r3, [r7, #0]
 8006fc2:	715a      	strb	r2, [r3, #5]
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8006fc8:	0e1b      	lsrs	r3, r3, #24
 8006fca:	60fb      	str	r3, [r7, #12]
 8006fcc:	68fb      	ldr	r3, [r7, #12]
 8006fce:	b29b      	uxth	r3, r3
 8006fd0:	011b      	lsls	r3, r3, #4
 8006fd2:	b29a      	uxth	r2, r3
 8006fd4:	683b      	ldr	r3, [r7, #0]
 8006fd6:	80da      	strh	r2, [r3, #6]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8006fdc:	0c1b      	lsrs	r3, r3, #16
 8006fde:	b2db      	uxtb	r3, r3
 8006fe0:	60fb      	str	r3, [r7, #12]
 8006fe2:	683b      	ldr	r3, [r7, #0]
 8006fe4:	88db      	ldrh	r3, [r3, #6]
 8006fe6:	b29a      	uxth	r2, r3
 8006fe8:	68fb      	ldr	r3, [r7, #12]
 8006fea:	091b      	lsrs	r3, r3, #4
 8006fec:	b29b      	uxth	r3, r3
 8006fee:	f003 030f 	and.w	r3, r3, #15
 8006ff2:	b29b      	uxth	r3, r3
 8006ff4:	4313      	orrs	r3, r2
 8006ff6:	b29a      	uxth	r2, r3
 8006ff8:	683b      	ldr	r3, [r7, #0]
 8006ffa:	80da      	strh	r2, [r3, #6]
 8006ffc:	68fb      	ldr	r3, [r7, #12]
 8006ffe:	b2db      	uxtb	r3, r3
 8007000:	f003 030f 	and.w	r3, r3, #15
 8007004:	b2da      	uxtb	r2, r3
 8007006:	683b      	ldr	r3, [r7, #0]
 8007008:	721a      	strb	r2, [r3, #8]
 800700a:	687b      	ldr	r3, [r7, #4]
 800700c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800700e:	0a1b      	lsrs	r3, r3, #8
 8007010:	b2db      	uxtb	r3, r3
 8007012:	60fb      	str	r3, [r7, #12]
 8007014:	68fb      	ldr	r3, [r7, #12]
 8007016:	09db      	lsrs	r3, r3, #7
 8007018:	b2db      	uxtb	r3, r3
 800701a:	f003 0301 	and.w	r3, r3, #1
 800701e:	b2da      	uxtb	r2, r3
 8007020:	683b      	ldr	r3, [r7, #0]
 8007022:	725a      	strb	r2, [r3, #9]
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	099b      	lsrs	r3, r3, #6
 8007028:	b2db      	uxtb	r3, r3
 800702a:	f003 0301 	and.w	r3, r3, #1
 800702e:	b2da      	uxtb	r2, r3
 8007030:	683b      	ldr	r3, [r7, #0]
 8007032:	729a      	strb	r2, [r3, #10]
 8007034:	68fb      	ldr	r3, [r7, #12]
 8007036:	095b      	lsrs	r3, r3, #5
 8007038:	b2db      	uxtb	r3, r3
 800703a:	f003 0301 	and.w	r3, r3, #1
 800703e:	b2da      	uxtb	r2, r3
 8007040:	683b      	ldr	r3, [r7, #0]
 8007042:	72da      	strb	r2, [r3, #11]
 8007044:	68fb      	ldr	r3, [r7, #12]
 8007046:	091b      	lsrs	r3, r3, #4
 8007048:	b2db      	uxtb	r3, r3
 800704a:	f003 0301 	and.w	r3, r3, #1
 800704e:	b2da      	uxtb	r2, r3
 8007050:	683b      	ldr	r3, [r7, #0]
 8007052:	731a      	strb	r2, [r3, #12]
 8007054:	683b      	ldr	r3, [r7, #0]
 8007056:	2200      	movs	r2, #0
 8007058:	735a      	strb	r2, [r3, #13]
 800705a:	687b      	ldr	r3, [r7, #4]
 800705c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800705e:	2b00      	cmp	r3, #0
 8007060:	f040 8087 	bne.w	8007172 <HAL_SD_GetCardCSD+0x226>
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	029b      	lsls	r3, r3, #10
 8007068:	f403 6240 	and.w	r2, r3, #3072	; 0xc00
 800706c:	683b      	ldr	r3, [r7, #0]
 800706e:	611a      	str	r2, [r3, #16]
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8007074:	b2db      	uxtb	r3, r3
 8007076:	60fb      	str	r3, [r7, #12]
 8007078:	683b      	ldr	r3, [r7, #0]
 800707a:	691a      	ldr	r2, [r3, #16]
 800707c:	68fb      	ldr	r3, [r7, #12]
 800707e:	009b      	lsls	r3, r3, #2
 8007080:	431a      	orrs	r2, r3
 8007082:	683b      	ldr	r3, [r7, #0]
 8007084:	611a      	str	r2, [r3, #16]
 8007086:	687b      	ldr	r3, [r7, #4]
 8007088:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800708a:	0e1b      	lsrs	r3, r3, #24
 800708c:	b2db      	uxtb	r3, r3
 800708e:	60fb      	str	r3, [r7, #12]
 8007090:	683b      	ldr	r3, [r7, #0]
 8007092:	691a      	ldr	r2, [r3, #16]
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	099b      	lsrs	r3, r3, #6
 8007098:	f003 0303 	and.w	r3, r3, #3
 800709c:	431a      	orrs	r2, r3
 800709e:	683b      	ldr	r3, [r7, #0]
 80070a0:	611a      	str	r2, [r3, #16]
 80070a2:	68fb      	ldr	r3, [r7, #12]
 80070a4:	08db      	lsrs	r3, r3, #3
 80070a6:	b2db      	uxtb	r3, r3
 80070a8:	f003 0307 	and.w	r3, r3, #7
 80070ac:	b2da      	uxtb	r2, r3
 80070ae:	683b      	ldr	r3, [r7, #0]
 80070b0:	751a      	strb	r2, [r3, #20]
 80070b2:	68fb      	ldr	r3, [r7, #12]
 80070b4:	b2db      	uxtb	r3, r3
 80070b6:	f003 0307 	and.w	r3, r3, #7
 80070ba:	b2da      	uxtb	r2, r3
 80070bc:	683b      	ldr	r3, [r7, #0]
 80070be:	755a      	strb	r2, [r3, #21]
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80070c4:	0c1b      	lsrs	r3, r3, #16
 80070c6:	b2db      	uxtb	r3, r3
 80070c8:	60fb      	str	r3, [r7, #12]
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	095b      	lsrs	r3, r3, #5
 80070ce:	b2db      	uxtb	r3, r3
 80070d0:	f003 0307 	and.w	r3, r3, #7
 80070d4:	b2da      	uxtb	r2, r3
 80070d6:	683b      	ldr	r3, [r7, #0]
 80070d8:	759a      	strb	r2, [r3, #22]
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	089b      	lsrs	r3, r3, #2
 80070de:	b2db      	uxtb	r3, r3
 80070e0:	f003 0307 	and.w	r3, r3, #7
 80070e4:	b2da      	uxtb	r2, r3
 80070e6:	683b      	ldr	r3, [r7, #0]
 80070e8:	75da      	strb	r2, [r3, #23]
 80070ea:	68fb      	ldr	r3, [r7, #12]
 80070ec:	b2db      	uxtb	r3, r3
 80070ee:	005b      	lsls	r3, r3, #1
 80070f0:	b2db      	uxtb	r3, r3
 80070f2:	f003 0306 	and.w	r3, r3, #6
 80070f6:	b2da      	uxtb	r2, r3
 80070f8:	683b      	ldr	r3, [r7, #0]
 80070fa:	761a      	strb	r2, [r3, #24]
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007100:	0a1b      	lsrs	r3, r3, #8
 8007102:	b2db      	uxtb	r3, r3
 8007104:	60fb      	str	r3, [r7, #12]
 8007106:	683b      	ldr	r3, [r7, #0]
 8007108:	7e1b      	ldrb	r3, [r3, #24]
 800710a:	b2da      	uxtb	r2, r3
 800710c:	68fb      	ldr	r3, [r7, #12]
 800710e:	09db      	lsrs	r3, r3, #7
 8007110:	b2db      	uxtb	r3, r3
 8007112:	f003 0301 	and.w	r3, r3, #1
 8007116:	b2db      	uxtb	r3, r3
 8007118:	4313      	orrs	r3, r2
 800711a:	b2da      	uxtb	r2, r3
 800711c:	683b      	ldr	r3, [r7, #0]
 800711e:	761a      	strb	r2, [r3, #24]
 8007120:	683b      	ldr	r3, [r7, #0]
 8007122:	691b      	ldr	r3, [r3, #16]
 8007124:	1c5a      	adds	r2, r3, #1
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	655a      	str	r2, [r3, #84]	; 0x54
 800712a:	683b      	ldr	r3, [r7, #0]
 800712c:	7e1b      	ldrb	r3, [r3, #24]
 800712e:	b2db      	uxtb	r3, r3
 8007130:	3302      	adds	r3, #2
 8007132:	2201      	movs	r2, #1
 8007134:	fa02 f303 	lsl.w	r3, r2, r3
 8007138:	687a      	ldr	r2, [r7, #4]
 800713a:	6d52      	ldr	r2, [r2, #84]	; 0x54
 800713c:	fb03 f202 	mul.w	r2, r3, r2
 8007140:	687b      	ldr	r3, [r7, #4]
 8007142:	655a      	str	r2, [r3, #84]	; 0x54
 8007144:	683b      	ldr	r3, [r7, #0]
 8007146:	7a1b      	ldrb	r3, [r3, #8]
 8007148:	b2db      	uxtb	r3, r3
 800714a:	461a      	mov	r2, r3
 800714c:	2301      	movs	r3, #1
 800714e:	fa03 f202 	lsl.w	r2, r3, r2
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	659a      	str	r2, [r3, #88]	; 0x58
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800715a:	687a      	ldr	r2, [r7, #4]
 800715c:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800715e:	0a52      	lsrs	r2, r2, #9
 8007160:	fb03 f202 	mul.w	r2, r3, r2
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	65da      	str	r2, [r3, #92]	; 0x5c
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800716e:	661a      	str	r2, [r3, #96]	; 0x60
 8007170:	e04d      	b.n	800720e <HAL_SD_GetCardCSD+0x2c2>
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007176:	2b01      	cmp	r3, #1
 8007178:	d138      	bne.n	80071ec <HAL_SD_GetCardCSD+0x2a0>
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800717e:	b2db      	uxtb	r3, r3
 8007180:	60fb      	str	r3, [r7, #12]
 8007182:	68fb      	ldr	r3, [r7, #12]
 8007184:	041b      	lsls	r3, r3, #16
 8007186:	f403 127c 	and.w	r2, r3, #4128768	; 0x3f0000
 800718a:	683b      	ldr	r3, [r7, #0]
 800718c:	611a      	str	r2, [r3, #16]
 800718e:	687b      	ldr	r3, [r7, #4]
 8007190:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007192:	0e1b      	lsrs	r3, r3, #24
 8007194:	b2db      	uxtb	r3, r3
 8007196:	60fb      	str	r3, [r7, #12]
 8007198:	683b      	ldr	r3, [r7, #0]
 800719a:	691a      	ldr	r2, [r3, #16]
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	021b      	lsls	r3, r3, #8
 80071a0:	431a      	orrs	r2, r3
 80071a2:	683b      	ldr	r3, [r7, #0]
 80071a4:	611a      	str	r2, [r3, #16]
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80071aa:	0c1b      	lsrs	r3, r3, #16
 80071ac:	b2db      	uxtb	r3, r3
 80071ae:	60fb      	str	r3, [r7, #12]
 80071b0:	683b      	ldr	r3, [r7, #0]
 80071b2:	691a      	ldr	r2, [r3, #16]
 80071b4:	68fb      	ldr	r3, [r7, #12]
 80071b6:	431a      	orrs	r2, r3
 80071b8:	683b      	ldr	r3, [r7, #0]
 80071ba:	611a      	str	r2, [r3, #16]
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80071c0:	0a1b      	lsrs	r3, r3, #8
 80071c2:	b2db      	uxtb	r3, r3
 80071c4:	60fb      	str	r3, [r7, #12]
 80071c6:	683b      	ldr	r3, [r7, #0]
 80071c8:	691b      	ldr	r3, [r3, #16]
 80071ca:	3301      	adds	r3, #1
 80071cc:	029a      	lsls	r2, r3, #10
 80071ce:	687b      	ldr	r3, [r7, #4]
 80071d0:	655a      	str	r2, [r3, #84]	; 0x54
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	65da      	str	r2, [r3, #92]	; 0x5c
 80071da:	687b      	ldr	r3, [r7, #4]
 80071dc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80071e0:	659a      	str	r2, [r3, #88]	; 0x58
 80071e2:	687b      	ldr	r3, [r7, #4]
 80071e4:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80071e6:	687b      	ldr	r3, [r7, #4]
 80071e8:	661a      	str	r2, [r3, #96]	; 0x60
 80071ea:	e010      	b.n	800720e <HAL_SD_GetCardCSD+0x2c2>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	681b      	ldr	r3, [r3, #0]
 80071f0:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80071f4:	639a      	str	r2, [r3, #56]	; 0x38
 80071f6:	687b      	ldr	r3, [r7, #4]
 80071f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80071fa:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	639a      	str	r2, [r3, #56]	; 0x38
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	2201      	movs	r2, #1
 8007206:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800720a:	2301      	movs	r3, #1
 800720c:	e0c1      	b.n	8007392 <HAL_SD_GetCardCSD+0x446>
 800720e:	68fb      	ldr	r3, [r7, #12]
 8007210:	099b      	lsrs	r3, r3, #6
 8007212:	b2db      	uxtb	r3, r3
 8007214:	f003 0301 	and.w	r3, r3, #1
 8007218:	b2da      	uxtb	r2, r3
 800721a:	683b      	ldr	r3, [r7, #0]
 800721c:	765a      	strb	r2, [r3, #25]
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	b2db      	uxtb	r3, r3
 8007222:	005b      	lsls	r3, r3, #1
 8007224:	b2db      	uxtb	r3, r3
 8007226:	f003 037e 	and.w	r3, r3, #126	; 0x7e
 800722a:	b2da      	uxtb	r2, r3
 800722c:	683b      	ldr	r3, [r7, #0]
 800722e:	769a      	strb	r2, [r3, #26]
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007234:	b2db      	uxtb	r3, r3
 8007236:	60fb      	str	r3, [r7, #12]
 8007238:	683b      	ldr	r3, [r7, #0]
 800723a:	7e9b      	ldrb	r3, [r3, #26]
 800723c:	b2da      	uxtb	r2, r3
 800723e:	68fb      	ldr	r3, [r7, #12]
 8007240:	09db      	lsrs	r3, r3, #7
 8007242:	b2db      	uxtb	r3, r3
 8007244:	f003 0301 	and.w	r3, r3, #1
 8007248:	b2db      	uxtb	r3, r3
 800724a:	4313      	orrs	r3, r2
 800724c:	b2da      	uxtb	r2, r3
 800724e:	683b      	ldr	r3, [r7, #0]
 8007250:	769a      	strb	r2, [r3, #26]
 8007252:	68fb      	ldr	r3, [r7, #12]
 8007254:	b2db      	uxtb	r3, r3
 8007256:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800725a:	b2da      	uxtb	r2, r3
 800725c:	683b      	ldr	r3, [r7, #0]
 800725e:	76da      	strb	r2, [r3, #27]
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007264:	0e1b      	lsrs	r3, r3, #24
 8007266:	b2db      	uxtb	r3, r3
 8007268:	60fb      	str	r3, [r7, #12]
 800726a:	68fb      	ldr	r3, [r7, #12]
 800726c:	09db      	lsrs	r3, r3, #7
 800726e:	b2db      	uxtb	r3, r3
 8007270:	f003 0301 	and.w	r3, r3, #1
 8007274:	b2da      	uxtb	r2, r3
 8007276:	683b      	ldr	r3, [r7, #0]
 8007278:	771a      	strb	r2, [r3, #28]
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	095b      	lsrs	r3, r3, #5
 800727e:	b2db      	uxtb	r3, r3
 8007280:	f003 0303 	and.w	r3, r3, #3
 8007284:	b2da      	uxtb	r2, r3
 8007286:	683b      	ldr	r3, [r7, #0]
 8007288:	775a      	strb	r2, [r3, #29]
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	089b      	lsrs	r3, r3, #2
 800728e:	b2db      	uxtb	r3, r3
 8007290:	f003 0307 	and.w	r3, r3, #7
 8007294:	b2da      	uxtb	r2, r3
 8007296:	683b      	ldr	r3, [r7, #0]
 8007298:	779a      	strb	r2, [r3, #30]
 800729a:	68fb      	ldr	r3, [r7, #12]
 800729c:	b2db      	uxtb	r3, r3
 800729e:	009b      	lsls	r3, r3, #2
 80072a0:	b2db      	uxtb	r3, r3
 80072a2:	f003 030c 	and.w	r3, r3, #12
 80072a6:	b2da      	uxtb	r2, r3
 80072a8:	683b      	ldr	r3, [r7, #0]
 80072aa:	77da      	strb	r2, [r3, #31]
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072b0:	0c1b      	lsrs	r3, r3, #16
 80072b2:	b2db      	uxtb	r3, r3
 80072b4:	60fb      	str	r3, [r7, #12]
 80072b6:	683b      	ldr	r3, [r7, #0]
 80072b8:	7fdb      	ldrb	r3, [r3, #31]
 80072ba:	b2da      	uxtb	r2, r3
 80072bc:	68fb      	ldr	r3, [r7, #12]
 80072be:	099b      	lsrs	r3, r3, #6
 80072c0:	b2db      	uxtb	r3, r3
 80072c2:	f003 0303 	and.w	r3, r3, #3
 80072c6:	b2db      	uxtb	r3, r3
 80072c8:	4313      	orrs	r3, r2
 80072ca:	b2da      	uxtb	r2, r3
 80072cc:	683b      	ldr	r3, [r7, #0]
 80072ce:	77da      	strb	r2, [r3, #31]
 80072d0:	68fb      	ldr	r3, [r7, #12]
 80072d2:	095b      	lsrs	r3, r3, #5
 80072d4:	b2db      	uxtb	r3, r3
 80072d6:	f003 0301 	and.w	r3, r3, #1
 80072da:	b2da      	uxtb	r2, r3
 80072dc:	683b      	ldr	r3, [r7, #0]
 80072de:	f883 2020 	strb.w	r2, [r3, #32]
 80072e2:	683b      	ldr	r3, [r7, #0]
 80072e4:	2200      	movs	r2, #0
 80072e6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80072ea:	68fb      	ldr	r3, [r7, #12]
 80072ec:	b2db      	uxtb	r3, r3
 80072ee:	f003 0301 	and.w	r3, r3, #1
 80072f2:	b2da      	uxtb	r2, r3
 80072f4:	683b      	ldr	r3, [r7, #0]
 80072f6:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80072fe:	0a1b      	lsrs	r3, r3, #8
 8007300:	b2db      	uxtb	r3, r3
 8007302:	60fb      	str	r3, [r7, #12]
 8007304:	68fb      	ldr	r3, [r7, #12]
 8007306:	09db      	lsrs	r3, r3, #7
 8007308:	b2db      	uxtb	r3, r3
 800730a:	f003 0301 	and.w	r3, r3, #1
 800730e:	b2da      	uxtb	r2, r3
 8007310:	683b      	ldr	r3, [r7, #0]
 8007312:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23
 8007316:	68fb      	ldr	r3, [r7, #12]
 8007318:	099b      	lsrs	r3, r3, #6
 800731a:	b2db      	uxtb	r3, r3
 800731c:	f003 0301 	and.w	r3, r3, #1
 8007320:	b2da      	uxtb	r2, r3
 8007322:	683b      	ldr	r3, [r7, #0]
 8007324:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8007328:	68fb      	ldr	r3, [r7, #12]
 800732a:	095b      	lsrs	r3, r3, #5
 800732c:	b2db      	uxtb	r3, r3
 800732e:	f003 0301 	and.w	r3, r3, #1
 8007332:	b2da      	uxtb	r2, r3
 8007334:	683b      	ldr	r3, [r7, #0]
 8007336:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800733a:	68fb      	ldr	r3, [r7, #12]
 800733c:	091b      	lsrs	r3, r3, #4
 800733e:	b2db      	uxtb	r3, r3
 8007340:	f003 0301 	and.w	r3, r3, #1
 8007344:	b2da      	uxtb	r2, r3
 8007346:	683b      	ldr	r3, [r7, #0]
 8007348:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800734c:	68fb      	ldr	r3, [r7, #12]
 800734e:	089b      	lsrs	r3, r3, #2
 8007350:	b2db      	uxtb	r3, r3
 8007352:	f003 0303 	and.w	r3, r3, #3
 8007356:	b2da      	uxtb	r2, r3
 8007358:	683b      	ldr	r3, [r7, #0]
 800735a:	f883 2027 	strb.w	r2, [r3, #39]	; 0x27
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	b2db      	uxtb	r3, r3
 8007362:	f003 0303 	and.w	r3, r3, #3
 8007366:	b2da      	uxtb	r2, r3
 8007368:	683b      	ldr	r3, [r7, #0]
 800736a:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007372:	b2db      	uxtb	r3, r3
 8007374:	60fb      	str	r3, [r7, #12]
 8007376:	68fb      	ldr	r3, [r7, #12]
 8007378:	085b      	lsrs	r3, r3, #1
 800737a:	b2db      	uxtb	r3, r3
 800737c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007380:	b2da      	uxtb	r2, r3
 8007382:	683b      	ldr	r3, [r7, #0]
 8007384:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 8007388:	683b      	ldr	r3, [r7, #0]
 800738a:	2201      	movs	r2, #1
 800738c:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 8007390:	2300      	movs	r3, #0
 8007392:	4618      	mov	r0, r3
 8007394:	3714      	adds	r7, #20
 8007396:	46bd      	mov	sp, r7
 8007398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800739c:	4770      	bx	lr

0800739e <HAL_SD_GetCardInfo>:
 800739e:	b480      	push	{r7}
 80073a0:	b083      	sub	sp, #12
 80073a2:	af00      	add	r7, sp, #0
 80073a4:	6078      	str	r0, [r7, #4]
 80073a6:	6039      	str	r1, [r7, #0]
 80073a8:	687b      	ldr	r3, [r7, #4]
 80073aa:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80073ac:	683b      	ldr	r3, [r7, #0]
 80073ae:	601a      	str	r2, [r3, #0]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80073b4:	683b      	ldr	r3, [r7, #0]
 80073b6:	605a      	str	r2, [r3, #4]
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80073bc:	683b      	ldr	r3, [r7, #0]
 80073be:	609a      	str	r2, [r3, #8]
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80073c4:	683b      	ldr	r3, [r7, #0]
 80073c6:	60da      	str	r2, [r3, #12]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 80073cc:	683b      	ldr	r3, [r7, #0]
 80073ce:	611a      	str	r2, [r3, #16]
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 80073d4:	683b      	ldr	r3, [r7, #0]
 80073d6:	615a      	str	r2, [r3, #20]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 80073dc:	683b      	ldr	r3, [r7, #0]
 80073de:	619a      	str	r2, [r3, #24]
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 80073e4:	683b      	ldr	r3, [r7, #0]
 80073e6:	61da      	str	r2, [r3, #28]
 80073e8:	2300      	movs	r3, #0
 80073ea:	4618      	mov	r0, r3
 80073ec:	370c      	adds	r7, #12
 80073ee:	46bd      	mov	sp, r7
 80073f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073f4:	4770      	bx	lr

080073f6 <HAL_SD_ConfigWideBusOperation>:
 80073f6:	b5b0      	push	{r4, r5, r7, lr}
 80073f8:	b08e      	sub	sp, #56	; 0x38
 80073fa:	af04      	add	r7, sp, #16
 80073fc:	6078      	str	r0, [r7, #4]
 80073fe:	6039      	str	r1, [r7, #0]
 8007400:	2300      	movs	r3, #0
 8007402:	627b      	str	r3, [r7, #36]	; 0x24
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	2203      	movs	r2, #3
 8007408:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007410:	2b03      	cmp	r3, #3
 8007412:	d02e      	beq.n	8007472 <HAL_SD_ConfigWideBusOperation+0x7c>
 8007414:	683b      	ldr	r3, [r7, #0]
 8007416:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800741a:	d106      	bne.n	800742a <HAL_SD_ConfigWideBusOperation+0x34>
 800741c:	687b      	ldr	r3, [r7, #4]
 800741e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007420:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	639a      	str	r2, [r3, #56]	; 0x38
 8007428:	e029      	b.n	800747e <HAL_SD_ConfigWideBusOperation+0x88>
 800742a:	683b      	ldr	r3, [r7, #0]
 800742c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007430:	d10a      	bne.n	8007448 <HAL_SD_ConfigWideBusOperation+0x52>
 8007432:	6878      	ldr	r0, [r7, #4]
 8007434:	f000 fa98 	bl	8007968 <SD_WideBus_Enable>
 8007438:	6278      	str	r0, [r7, #36]	; 0x24
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800743e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007440:	431a      	orrs	r2, r3
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	639a      	str	r2, [r3, #56]	; 0x38
 8007446:	e01a      	b.n	800747e <HAL_SD_ConfigWideBusOperation+0x88>
 8007448:	683b      	ldr	r3, [r7, #0]
 800744a:	2b00      	cmp	r3, #0
 800744c:	d10a      	bne.n	8007464 <HAL_SD_ConfigWideBusOperation+0x6e>
 800744e:	6878      	ldr	r0, [r7, #4]
 8007450:	f000 fad7 	bl	8007a02 <SD_WideBus_Disable>
 8007454:	6278      	str	r0, [r7, #36]	; 0x24
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800745a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800745c:	431a      	orrs	r2, r3
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	639a      	str	r2, [r3, #56]	; 0x38
 8007462:	e00c      	b.n	800747e <HAL_SD_ConfigWideBusOperation+0x88>
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007468:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	639a      	str	r2, [r3, #56]	; 0x38
 8007470:	e005      	b.n	800747e <HAL_SD_ConfigWideBusOperation+0x88>
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007476:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	639a      	str	r2, [r3, #56]	; 0x38
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007482:	2b00      	cmp	r3, #0
 8007484:	d00a      	beq.n	800749c <HAL_SD_ConfigWideBusOperation+0xa6>
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	681b      	ldr	r3, [r3, #0]
 800748a:	f240 52ff 	movw	r2, #1535	; 0x5ff
 800748e:	639a      	str	r2, [r3, #56]	; 0x38
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	2201      	movs	r2, #1
 8007494:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007498:	2301      	movs	r3, #1
 800749a:	e024      	b.n	80074e6 <HAL_SD_ConfigWideBusOperation+0xf0>
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	685b      	ldr	r3, [r3, #4]
 80074a0:	60fb      	str	r3, [r7, #12]
 80074a2:	687b      	ldr	r3, [r7, #4]
 80074a4:	689b      	ldr	r3, [r3, #8]
 80074a6:	613b      	str	r3, [r7, #16]
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	68db      	ldr	r3, [r3, #12]
 80074ac:	617b      	str	r3, [r7, #20]
 80074ae:	683b      	ldr	r3, [r7, #0]
 80074b0:	61bb      	str	r3, [r7, #24]
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	695b      	ldr	r3, [r3, #20]
 80074b6:	61fb      	str	r3, [r7, #28]
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	699b      	ldr	r3, [r3, #24]
 80074bc:	623b      	str	r3, [r7, #32]
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	681d      	ldr	r5, [r3, #0]
 80074c2:	466c      	mov	r4, sp
 80074c4:	f107 0318 	add.w	r3, r7, #24
 80074c8:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80074cc:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80074d0:	f107 030c 	add.w	r3, r7, #12
 80074d4:	cb0e      	ldmia	r3, {r1, r2, r3}
 80074d6:	4628      	mov	r0, r5
 80074d8:	f001 fcdc 	bl	8008e94 <SDIO_Init>
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	2201      	movs	r2, #1
 80074e0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80074e4:	2300      	movs	r3, #0
 80074e6:	4618      	mov	r0, r3
 80074e8:	3728      	adds	r7, #40	; 0x28
 80074ea:	46bd      	mov	sp, r7
 80074ec:	bdb0      	pop	{r4, r5, r7, pc}

080074ee <HAL_SD_GetCardState>:
 80074ee:	b580      	push	{r7, lr}
 80074f0:	b086      	sub	sp, #24
 80074f2:	af00      	add	r7, sp, #0
 80074f4:	6078      	str	r0, [r7, #4]
 80074f6:	2304      	movs	r3, #4
 80074f8:	75fb      	strb	r3, [r7, #23]
 80074fa:	2300      	movs	r3, #0
 80074fc:	613b      	str	r3, [r7, #16]
 80074fe:	2300      	movs	r3, #0
 8007500:	60fb      	str	r3, [r7, #12]
 8007502:	f107 030c 	add.w	r3, r7, #12
 8007506:	4619      	mov	r1, r3
 8007508:	6878      	ldr	r0, [r7, #4]
 800750a:	f000 fa03 	bl	8007914 <SD_SendStatus>
 800750e:	6138      	str	r0, [r7, #16]
 8007510:	693b      	ldr	r3, [r7, #16]
 8007512:	2b00      	cmp	r3, #0
 8007514:	d005      	beq.n	8007522 <HAL_SD_GetCardState+0x34>
 8007516:	687b      	ldr	r3, [r7, #4]
 8007518:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800751a:	693b      	ldr	r3, [r7, #16]
 800751c:	431a      	orrs	r2, r3
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	639a      	str	r2, [r3, #56]	; 0x38
 8007522:	68fb      	ldr	r3, [r7, #12]
 8007524:	0a5b      	lsrs	r3, r3, #9
 8007526:	b2db      	uxtb	r3, r3
 8007528:	f003 030f 	and.w	r3, r3, #15
 800752c:	75fb      	strb	r3, [r7, #23]
 800752e:	7dfb      	ldrb	r3, [r7, #23]
 8007530:	4618      	mov	r0, r3
 8007532:	3718      	adds	r7, #24
 8007534:	46bd      	mov	sp, r7
 8007536:	bd80      	pop	{r7, pc}

08007538 <SD_DMATxAbort>:
 8007538:	b580      	push	{r7, lr}
 800753a:	b084      	sub	sp, #16
 800753c:	af00      	add	r7, sp, #0
 800753e:	6078      	str	r0, [r7, #4]
 8007540:	687b      	ldr	r3, [r7, #4]
 8007542:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007544:	60fb      	str	r3, [r7, #12]
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800754a:	2b00      	cmp	r3, #0
 800754c:	d002      	beq.n	8007554 <SD_DMATxAbort+0x1c>
 800754e:	68fb      	ldr	r3, [r7, #12]
 8007550:	2200      	movs	r2, #0
 8007552:	641a      	str	r2, [r3, #64]	; 0x40
 8007554:	68fb      	ldr	r3, [r7, #12]
 8007556:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007558:	2b00      	cmp	r3, #0
 800755a:	d127      	bne.n	80075ac <SD_DMATxAbort+0x74>
 800755c:	68f8      	ldr	r0, [r7, #12]
 800755e:	f7ff ffc6 	bl	80074ee <HAL_SD_GetCardState>
 8007562:	4603      	mov	r3, r0
 8007564:	72fb      	strb	r3, [r7, #11]
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	2200      	movs	r2, #0
 800756a:	639a      	str	r2, [r3, #56]	; 0x38
 800756c:	68fb      	ldr	r3, [r7, #12]
 800756e:	2201      	movs	r2, #1
 8007570:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8007574:	7afb      	ldrb	r3, [r7, #11]
 8007576:	2b06      	cmp	r3, #6
 8007578:	d002      	beq.n	8007580 <SD_DMATxAbort+0x48>
 800757a:	7afb      	ldrb	r3, [r7, #11]
 800757c:	2b05      	cmp	r3, #5
 800757e:	d115      	bne.n	80075ac <SD_DMATxAbort+0x74>
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	4618      	mov	r0, r3
 8007586:	f001 fe17 	bl	80091b8 <SDMMC_CmdStopTransfer>
 800758a:	4602      	mov	r2, r0
 800758c:	68fb      	ldr	r3, [r7, #12]
 800758e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007590:	431a      	orrs	r2, r3
 8007592:	68fb      	ldr	r3, [r7, #12]
 8007594:	639a      	str	r2, [r3, #56]	; 0x38
 8007596:	68fb      	ldr	r3, [r7, #12]
 8007598:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800759a:	2b00      	cmp	r3, #0
 800759c:	d003      	beq.n	80075a6 <SD_DMATxAbort+0x6e>
 800759e:	68f8      	ldr	r0, [r7, #12]
 80075a0:	f7ff fcca 	bl	8006f38 <HAL_SD_AbortCallback>
 80075a4:	e002      	b.n	80075ac <SD_DMATxAbort+0x74>
 80075a6:	68f8      	ldr	r0, [r7, #12]
 80075a8:	f7ff fcbc 	bl	8006f24 <HAL_SD_ErrorCallback>
 80075ac:	bf00      	nop
 80075ae:	3710      	adds	r7, #16
 80075b0:	46bd      	mov	sp, r7
 80075b2:	bd80      	pop	{r7, pc}

080075b4 <SD_DMARxAbort>:
 80075b4:	b580      	push	{r7, lr}
 80075b6:	b084      	sub	sp, #16
 80075b8:	af00      	add	r7, sp, #0
 80075ba:	6078      	str	r0, [r7, #4]
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80075c0:	60fb      	str	r3, [r7, #12]
 80075c2:	68fb      	ldr	r3, [r7, #12]
 80075c4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80075c6:	2b00      	cmp	r3, #0
 80075c8:	d002      	beq.n	80075d0 <SD_DMARxAbort+0x1c>
 80075ca:	68fb      	ldr	r3, [r7, #12]
 80075cc:	2200      	movs	r2, #0
 80075ce:	63da      	str	r2, [r3, #60]	; 0x3c
 80075d0:	68fb      	ldr	r3, [r7, #12]
 80075d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075d4:	2b00      	cmp	r3, #0
 80075d6:	d127      	bne.n	8007628 <SD_DMARxAbort+0x74>
 80075d8:	68f8      	ldr	r0, [r7, #12]
 80075da:	f7ff ff88 	bl	80074ee <HAL_SD_GetCardState>
 80075de:	4603      	mov	r3, r0
 80075e0:	72fb      	strb	r3, [r7, #11]
 80075e2:	68fb      	ldr	r3, [r7, #12]
 80075e4:	2200      	movs	r2, #0
 80075e6:	639a      	str	r2, [r3, #56]	; 0x38
 80075e8:	68fb      	ldr	r3, [r7, #12]
 80075ea:	2201      	movs	r2, #1
 80075ec:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80075f0:	7afb      	ldrb	r3, [r7, #11]
 80075f2:	2b06      	cmp	r3, #6
 80075f4:	d002      	beq.n	80075fc <SD_DMARxAbort+0x48>
 80075f6:	7afb      	ldrb	r3, [r7, #11]
 80075f8:	2b05      	cmp	r3, #5
 80075fa:	d115      	bne.n	8007628 <SD_DMARxAbort+0x74>
 80075fc:	68fb      	ldr	r3, [r7, #12]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	4618      	mov	r0, r3
 8007602:	f001 fdd9 	bl	80091b8 <SDMMC_CmdStopTransfer>
 8007606:	4602      	mov	r2, r0
 8007608:	68fb      	ldr	r3, [r7, #12]
 800760a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800760c:	431a      	orrs	r2, r3
 800760e:	68fb      	ldr	r3, [r7, #12]
 8007610:	639a      	str	r2, [r3, #56]	; 0x38
 8007612:	68fb      	ldr	r3, [r7, #12]
 8007614:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007616:	2b00      	cmp	r3, #0
 8007618:	d003      	beq.n	8007622 <SD_DMARxAbort+0x6e>
 800761a:	68f8      	ldr	r0, [r7, #12]
 800761c:	f7ff fc8c 	bl	8006f38 <HAL_SD_AbortCallback>
 8007620:	e002      	b.n	8007628 <SD_DMARxAbort+0x74>
 8007622:	68f8      	ldr	r0, [r7, #12]
 8007624:	f7ff fc7e 	bl	8006f24 <HAL_SD_ErrorCallback>
 8007628:	bf00      	nop
 800762a:	3710      	adds	r7, #16
 800762c:	46bd      	mov	sp, r7
 800762e:	bd80      	pop	{r7, pc}

08007630 <SD_InitCard>:
 8007630:	b5b0      	push	{r4, r5, r7, lr}
 8007632:	b094      	sub	sp, #80	; 0x50
 8007634:	af04      	add	r7, sp, #16
 8007636:	6078      	str	r0, [r7, #4]
 8007638:	2300      	movs	r3, #0
 800763a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800763c:	2301      	movs	r3, #1
 800763e:	81fb      	strh	r3, [r7, #14]
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	681b      	ldr	r3, [r3, #0]
 8007644:	4618      	mov	r0, r3
 8007646:	f001 fc7c 	bl	8008f42 <SDIO_GetPowerState>
 800764a:	4603      	mov	r3, r0
 800764c:	2b00      	cmp	r3, #0
 800764e:	d102      	bne.n	8007656 <SD_InitCard+0x26>
 8007650:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8007654:	e0b2      	b.n	80077bc <SD_InitCard+0x18c>
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800765a:	2b03      	cmp	r3, #3
 800765c:	d02f      	beq.n	80076be <SD_InitCard+0x8e>
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	4618      	mov	r0, r3
 8007664:	f001 fec2 	bl	80093ec <SDMMC_CmdSendCID>
 8007668:	63f8      	str	r0, [r7, #60]	; 0x3c
 800766a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800766c:	2b00      	cmp	r3, #0
 800766e:	d001      	beq.n	8007674 <SD_InitCard+0x44>
 8007670:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007672:	e0a3      	b.n	80077bc <SD_InitCard+0x18c>
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	681b      	ldr	r3, [r3, #0]
 8007678:	2100      	movs	r1, #0
 800767a:	4618      	mov	r0, r3
 800767c:	f001 fca6 	bl	8008fcc <SDIO_GetResponse>
 8007680:	4602      	mov	r2, r0
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	675a      	str	r2, [r3, #116]	; 0x74
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	2104      	movs	r1, #4
 800768c:	4618      	mov	r0, r3
 800768e:	f001 fc9d 	bl	8008fcc <SDIO_GetResponse>
 8007692:	4602      	mov	r2, r0
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	679a      	str	r2, [r3, #120]	; 0x78
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	2108      	movs	r1, #8
 800769e:	4618      	mov	r0, r3
 80076a0:	f001 fc94 	bl	8008fcc <SDIO_GetResponse>
 80076a4:	4602      	mov	r2, r0
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	67da      	str	r2, [r3, #124]	; 0x7c
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	681b      	ldr	r3, [r3, #0]
 80076ae:	210c      	movs	r1, #12
 80076b0:	4618      	mov	r0, r3
 80076b2:	f001 fc8b 	bl	8008fcc <SDIO_GetResponse>
 80076b6:	4602      	mov	r2, r0
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80076c2:	2b03      	cmp	r3, #3
 80076c4:	d00d      	beq.n	80076e2 <SD_InitCard+0xb2>
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	f107 020e 	add.w	r2, r7, #14
 80076ce:	4611      	mov	r1, r2
 80076d0:	4618      	mov	r0, r3
 80076d2:	f001 fecc 	bl	800946e <SDMMC_CmdSetRelAdd>
 80076d6:	63f8      	str	r0, [r7, #60]	; 0x3c
 80076d8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80076da:	2b00      	cmp	r3, #0
 80076dc:	d001      	beq.n	80076e2 <SD_InitCard+0xb2>
 80076de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80076e0:	e06c      	b.n	80077bc <SD_InitCard+0x18c>
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80076e6:	2b03      	cmp	r3, #3
 80076e8:	d036      	beq.n	8007758 <SD_InitCard+0x128>
 80076ea:	89fb      	ldrh	r3, [r7, #14]
 80076ec:	461a      	mov	r2, r3
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	651a      	str	r2, [r3, #80]	; 0x50
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	681a      	ldr	r2, [r3, #0]
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80076fa:	041b      	lsls	r3, r3, #16
 80076fc:	4619      	mov	r1, r3
 80076fe:	4610      	mov	r0, r2
 8007700:	f001 fe94 	bl	800942c <SDMMC_CmdSendCSD>
 8007704:	63f8      	str	r0, [r7, #60]	; 0x3c
 8007706:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007708:	2b00      	cmp	r3, #0
 800770a:	d001      	beq.n	8007710 <SD_InitCard+0xe0>
 800770c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800770e:	e055      	b.n	80077bc <SD_InitCard+0x18c>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	2100      	movs	r1, #0
 8007716:	4618      	mov	r0, r3
 8007718:	f001 fc58 	bl	8008fcc <SDIO_GetResponse>
 800771c:	4602      	mov	r2, r0
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	665a      	str	r2, [r3, #100]	; 0x64
 8007722:	687b      	ldr	r3, [r7, #4]
 8007724:	681b      	ldr	r3, [r3, #0]
 8007726:	2104      	movs	r1, #4
 8007728:	4618      	mov	r0, r3
 800772a:	f001 fc4f 	bl	8008fcc <SDIO_GetResponse>
 800772e:	4602      	mov	r2, r0
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	669a      	str	r2, [r3, #104]	; 0x68
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	681b      	ldr	r3, [r3, #0]
 8007738:	2108      	movs	r1, #8
 800773a:	4618      	mov	r0, r3
 800773c:	f001 fc46 	bl	8008fcc <SDIO_GetResponse>
 8007740:	4602      	mov	r2, r0
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	66da      	str	r2, [r3, #108]	; 0x6c
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	681b      	ldr	r3, [r3, #0]
 800774a:	210c      	movs	r1, #12
 800774c:	4618      	mov	r0, r3
 800774e:	f001 fc3d 	bl	8008fcc <SDIO_GetResponse>
 8007752:	4602      	mov	r2, r0
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	671a      	str	r2, [r3, #112]	; 0x70
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	2104      	movs	r1, #4
 800775e:	4618      	mov	r0, r3
 8007760:	f001 fc34 	bl	8008fcc <SDIO_GetResponse>
 8007764:	4603      	mov	r3, r0
 8007766:	0d1a      	lsrs	r2, r3, #20
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	64da      	str	r2, [r3, #76]	; 0x4c
 800776c:	f107 0310 	add.w	r3, r7, #16
 8007770:	4619      	mov	r1, r3
 8007772:	6878      	ldr	r0, [r7, #4]
 8007774:	f7ff fbea 	bl	8006f4c <HAL_SD_GetCardCSD>
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	6819      	ldr	r1, [r3, #0]
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007780:	041b      	lsls	r3, r3, #16
 8007782:	2200      	movs	r2, #0
 8007784:	461c      	mov	r4, r3
 8007786:	4615      	mov	r5, r2
 8007788:	4622      	mov	r2, r4
 800778a:	462b      	mov	r3, r5
 800778c:	4608      	mov	r0, r1
 800778e:	f001 fd37 	bl	8009200 <SDMMC_CmdSelDesel>
 8007792:	63f8      	str	r0, [r7, #60]	; 0x3c
 8007794:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8007796:	2b00      	cmp	r3, #0
 8007798:	d001      	beq.n	800779e <SD_InitCard+0x16e>
 800779a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800779c:	e00e      	b.n	80077bc <SD_InitCard+0x18c>
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	681d      	ldr	r5, [r3, #0]
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	466c      	mov	r4, sp
 80077a6:	f103 0210 	add.w	r2, r3, #16
 80077aa:	ca07      	ldmia	r2, {r0, r1, r2}
 80077ac:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80077b0:	3304      	adds	r3, #4
 80077b2:	cb0e      	ldmia	r3, {r1, r2, r3}
 80077b4:	4628      	mov	r0, r5
 80077b6:	f001 fb6d 	bl	8008e94 <SDIO_Init>
 80077ba:	2300      	movs	r3, #0
 80077bc:	4618      	mov	r0, r3
 80077be:	3740      	adds	r7, #64	; 0x40
 80077c0:	46bd      	mov	sp, r7
 80077c2:	bdb0      	pop	{r4, r5, r7, pc}

080077c4 <SD_PowerON>:
 80077c4:	b580      	push	{r7, lr}
 80077c6:	b086      	sub	sp, #24
 80077c8:	af00      	add	r7, sp, #0
 80077ca:	6078      	str	r0, [r7, #4]
 80077cc:	2300      	movs	r3, #0
 80077ce:	60bb      	str	r3, [r7, #8]
 80077d0:	2300      	movs	r3, #0
 80077d2:	617b      	str	r3, [r7, #20]
 80077d4:	2300      	movs	r3, #0
 80077d6:	613b      	str	r3, [r7, #16]
 80077d8:	2300      	movs	r3, #0
 80077da:	60fb      	str	r3, [r7, #12]
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	681b      	ldr	r3, [r3, #0]
 80077e0:	4618      	mov	r0, r3
 80077e2:	f001 fd32 	bl	800924a <SDMMC_CmdGoIdleState>
 80077e6:	60f8      	str	r0, [r7, #12]
 80077e8:	68fb      	ldr	r3, [r7, #12]
 80077ea:	2b00      	cmp	r3, #0
 80077ec:	d001      	beq.n	80077f2 <SD_PowerON+0x2e>
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	e08c      	b.n	800790c <SD_PowerON+0x148>
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	4618      	mov	r0, r3
 80077f8:	f001 fd47 	bl	800928a <SDMMC_CmdOperCond>
 80077fc:	60f8      	str	r0, [r7, #12]
 80077fe:	68fb      	ldr	r3, [r7, #12]
 8007800:	2b00      	cmp	r3, #0
 8007802:	d03d      	beq.n	8007880 <SD_PowerON+0xbc>
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	2200      	movs	r2, #0
 8007808:	649a      	str	r2, [r3, #72]	; 0x48
 800780a:	e032      	b.n	8007872 <SD_PowerON+0xae>
 800780c:	68bb      	ldr	r3, [r7, #8]
 800780e:	1c5a      	adds	r2, r3, #1
 8007810:	60ba      	str	r2, [r7, #8]
 8007812:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007816:	4293      	cmp	r3, r2
 8007818:	d102      	bne.n	8007820 <SD_PowerON+0x5c>
 800781a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800781e:	e075      	b.n	800790c <SD_PowerON+0x148>
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	2100      	movs	r1, #0
 8007826:	4618      	mov	r0, r3
 8007828:	f001 fd50 	bl	80092cc <SDMMC_CmdAppCommand>
 800782c:	60f8      	str	r0, [r7, #12]
 800782e:	68fb      	ldr	r3, [r7, #12]
 8007830:	2b00      	cmp	r3, #0
 8007832:	d002      	beq.n	800783a <SD_PowerON+0x76>
 8007834:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007838:	e068      	b.n	800790c <SD_PowerON+0x148>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	681b      	ldr	r3, [r3, #0]
 800783e:	2100      	movs	r1, #0
 8007840:	4618      	mov	r0, r3
 8007842:	f001 fd67 	bl	8009314 <SDMMC_CmdAppOperCommand>
 8007846:	60f8      	str	r0, [r7, #12]
 8007848:	68fb      	ldr	r3, [r7, #12]
 800784a:	2b00      	cmp	r3, #0
 800784c:	d002      	beq.n	8007854 <SD_PowerON+0x90>
 800784e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007852:	e05b      	b.n	800790c <SD_PowerON+0x148>
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	681b      	ldr	r3, [r3, #0]
 8007858:	2100      	movs	r1, #0
 800785a:	4618      	mov	r0, r3
 800785c:	f001 fbb6 	bl	8008fcc <SDIO_GetResponse>
 8007860:	6178      	str	r0, [r7, #20]
 8007862:	697b      	ldr	r3, [r7, #20]
 8007864:	0fdb      	lsrs	r3, r3, #31
 8007866:	2b01      	cmp	r3, #1
 8007868:	d101      	bne.n	800786e <SD_PowerON+0xaa>
 800786a:	2301      	movs	r3, #1
 800786c:	e000      	b.n	8007870 <SD_PowerON+0xac>
 800786e:	2300      	movs	r3, #0
 8007870:	613b      	str	r3, [r7, #16]
 8007872:	693b      	ldr	r3, [r7, #16]
 8007874:	2b00      	cmp	r3, #0
 8007876:	d0c9      	beq.n	800780c <SD_PowerON+0x48>
 8007878:	687b      	ldr	r3, [r7, #4]
 800787a:	2200      	movs	r2, #0
 800787c:	645a      	str	r2, [r3, #68]	; 0x44
 800787e:	e044      	b.n	800790a <SD_PowerON+0x146>
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	2201      	movs	r2, #1
 8007884:	649a      	str	r2, [r3, #72]	; 0x48
 8007886:	e031      	b.n	80078ec <SD_PowerON+0x128>
 8007888:	68bb      	ldr	r3, [r7, #8]
 800788a:	1c5a      	adds	r2, r3, #1
 800788c:	60ba      	str	r2, [r7, #8]
 800788e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007892:	4293      	cmp	r3, r2
 8007894:	d102      	bne.n	800789c <SD_PowerON+0xd8>
 8007896:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800789a:	e037      	b.n	800790c <SD_PowerON+0x148>
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	681b      	ldr	r3, [r3, #0]
 80078a0:	2100      	movs	r1, #0
 80078a2:	4618      	mov	r0, r3
 80078a4:	f001 fd12 	bl	80092cc <SDMMC_CmdAppCommand>
 80078a8:	60f8      	str	r0, [r7, #12]
 80078aa:	68fb      	ldr	r3, [r7, #12]
 80078ac:	2b00      	cmp	r3, #0
 80078ae:	d001      	beq.n	80078b4 <SD_PowerON+0xf0>
 80078b0:	68fb      	ldr	r3, [r7, #12]
 80078b2:	e02b      	b.n	800790c <SD_PowerON+0x148>
 80078b4:	687b      	ldr	r3, [r7, #4]
 80078b6:	681b      	ldr	r3, [r3, #0]
 80078b8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80078bc:	4618      	mov	r0, r3
 80078be:	f001 fd29 	bl	8009314 <SDMMC_CmdAppOperCommand>
 80078c2:	60f8      	str	r0, [r7, #12]
 80078c4:	68fb      	ldr	r3, [r7, #12]
 80078c6:	2b00      	cmp	r3, #0
 80078c8:	d001      	beq.n	80078ce <SD_PowerON+0x10a>
 80078ca:	68fb      	ldr	r3, [r7, #12]
 80078cc:	e01e      	b.n	800790c <SD_PowerON+0x148>
 80078ce:	687b      	ldr	r3, [r7, #4]
 80078d0:	681b      	ldr	r3, [r3, #0]
 80078d2:	2100      	movs	r1, #0
 80078d4:	4618      	mov	r0, r3
 80078d6:	f001 fb79 	bl	8008fcc <SDIO_GetResponse>
 80078da:	6178      	str	r0, [r7, #20]
 80078dc:	697b      	ldr	r3, [r7, #20]
 80078de:	0fdb      	lsrs	r3, r3, #31
 80078e0:	2b01      	cmp	r3, #1
 80078e2:	d101      	bne.n	80078e8 <SD_PowerON+0x124>
 80078e4:	2301      	movs	r3, #1
 80078e6:	e000      	b.n	80078ea <SD_PowerON+0x126>
 80078e8:	2300      	movs	r3, #0
 80078ea:	613b      	str	r3, [r7, #16]
 80078ec:	693b      	ldr	r3, [r7, #16]
 80078ee:	2b00      	cmp	r3, #0
 80078f0:	d0ca      	beq.n	8007888 <SD_PowerON+0xc4>
 80078f2:	697b      	ldr	r3, [r7, #20]
 80078f4:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	d003      	beq.n	8007904 <SD_PowerON+0x140>
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	2201      	movs	r2, #1
 8007900:	645a      	str	r2, [r3, #68]	; 0x44
 8007902:	e002      	b.n	800790a <SD_PowerON+0x146>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	2200      	movs	r2, #0
 8007908:	645a      	str	r2, [r3, #68]	; 0x44
 800790a:	2300      	movs	r3, #0
 800790c:	4618      	mov	r0, r3
 800790e:	3718      	adds	r7, #24
 8007910:	46bd      	mov	sp, r7
 8007912:	bd80      	pop	{r7, pc}

08007914 <SD_SendStatus>:
 8007914:	b580      	push	{r7, lr}
 8007916:	b084      	sub	sp, #16
 8007918:	af00      	add	r7, sp, #0
 800791a:	6078      	str	r0, [r7, #4]
 800791c:	6039      	str	r1, [r7, #0]
 800791e:	2300      	movs	r3, #0
 8007920:	60fb      	str	r3, [r7, #12]
 8007922:	683b      	ldr	r3, [r7, #0]
 8007924:	2b00      	cmp	r3, #0
 8007926:	d102      	bne.n	800792e <SD_SendStatus+0x1a>
 8007928:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800792c:	e018      	b.n	8007960 <SD_SendStatus+0x4c>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	681a      	ldr	r2, [r3, #0]
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007936:	041b      	lsls	r3, r3, #16
 8007938:	4619      	mov	r1, r3
 800793a:	4610      	mov	r0, r2
 800793c:	f001 fdba 	bl	80094b4 <SDMMC_CmdSendStatus>
 8007940:	60f8      	str	r0, [r7, #12]
 8007942:	68fb      	ldr	r3, [r7, #12]
 8007944:	2b00      	cmp	r3, #0
 8007946:	d001      	beq.n	800794c <SD_SendStatus+0x38>
 8007948:	68fb      	ldr	r3, [r7, #12]
 800794a:	e009      	b.n	8007960 <SD_SendStatus+0x4c>
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	681b      	ldr	r3, [r3, #0]
 8007950:	2100      	movs	r1, #0
 8007952:	4618      	mov	r0, r3
 8007954:	f001 fb3a 	bl	8008fcc <SDIO_GetResponse>
 8007958:	4602      	mov	r2, r0
 800795a:	683b      	ldr	r3, [r7, #0]
 800795c:	601a      	str	r2, [r3, #0]
 800795e:	2300      	movs	r3, #0
 8007960:	4618      	mov	r0, r3
 8007962:	3710      	adds	r7, #16
 8007964:	46bd      	mov	sp, r7
 8007966:	bd80      	pop	{r7, pc}

08007968 <SD_WideBus_Enable>:
 8007968:	b580      	push	{r7, lr}
 800796a:	b086      	sub	sp, #24
 800796c:	af00      	add	r7, sp, #0
 800796e:	6078      	str	r0, [r7, #4]
 8007970:	2300      	movs	r3, #0
 8007972:	60fb      	str	r3, [r7, #12]
 8007974:	2300      	movs	r3, #0
 8007976:	613b      	str	r3, [r7, #16]
 8007978:	2300      	movs	r3, #0
 800797a:	617b      	str	r3, [r7, #20]
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	2100      	movs	r1, #0
 8007982:	4618      	mov	r0, r3
 8007984:	f001 fb22 	bl	8008fcc <SDIO_GetResponse>
 8007988:	4603      	mov	r3, r0
 800798a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800798e:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007992:	d102      	bne.n	800799a <SD_WideBus_Enable+0x32>
 8007994:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8007998:	e02f      	b.n	80079fa <SD_WideBus_Enable+0x92>
 800799a:	f107 030c 	add.w	r3, r7, #12
 800799e:	4619      	mov	r1, r3
 80079a0:	6878      	ldr	r0, [r7, #4]
 80079a2:	f000 f87b 	bl	8007a9c <SD_FindSCR>
 80079a6:	6178      	str	r0, [r7, #20]
 80079a8:	697b      	ldr	r3, [r7, #20]
 80079aa:	2b00      	cmp	r3, #0
 80079ac:	d001      	beq.n	80079b2 <SD_WideBus_Enable+0x4a>
 80079ae:	697b      	ldr	r3, [r7, #20]
 80079b0:	e023      	b.n	80079fa <SD_WideBus_Enable+0x92>
 80079b2:	693b      	ldr	r3, [r7, #16]
 80079b4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80079b8:	2b00      	cmp	r3, #0
 80079ba:	d01c      	beq.n	80079f6 <SD_WideBus_Enable+0x8e>
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	681a      	ldr	r2, [r3, #0]
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80079c4:	041b      	lsls	r3, r3, #16
 80079c6:	4619      	mov	r1, r3
 80079c8:	4610      	mov	r0, r2
 80079ca:	f001 fc7f 	bl	80092cc <SDMMC_CmdAppCommand>
 80079ce:	6178      	str	r0, [r7, #20]
 80079d0:	697b      	ldr	r3, [r7, #20]
 80079d2:	2b00      	cmp	r3, #0
 80079d4:	d001      	beq.n	80079da <SD_WideBus_Enable+0x72>
 80079d6:	697b      	ldr	r3, [r7, #20]
 80079d8:	e00f      	b.n	80079fa <SD_WideBus_Enable+0x92>
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	681b      	ldr	r3, [r3, #0]
 80079de:	2102      	movs	r1, #2
 80079e0:	4618      	mov	r0, r3
 80079e2:	f001 fcbc 	bl	800935e <SDMMC_CmdBusWidth>
 80079e6:	6178      	str	r0, [r7, #20]
 80079e8:	697b      	ldr	r3, [r7, #20]
 80079ea:	2b00      	cmp	r3, #0
 80079ec:	d001      	beq.n	80079f2 <SD_WideBus_Enable+0x8a>
 80079ee:	697b      	ldr	r3, [r7, #20]
 80079f0:	e003      	b.n	80079fa <SD_WideBus_Enable+0x92>
 80079f2:	2300      	movs	r3, #0
 80079f4:	e001      	b.n	80079fa <SD_WideBus_Enable+0x92>
 80079f6:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 80079fa:	4618      	mov	r0, r3
 80079fc:	3718      	adds	r7, #24
 80079fe:	46bd      	mov	sp, r7
 8007a00:	bd80      	pop	{r7, pc}

08007a02 <SD_WideBus_Disable>:
 8007a02:	b580      	push	{r7, lr}
 8007a04:	b086      	sub	sp, #24
 8007a06:	af00      	add	r7, sp, #0
 8007a08:	6078      	str	r0, [r7, #4]
 8007a0a:	2300      	movs	r3, #0
 8007a0c:	60fb      	str	r3, [r7, #12]
 8007a0e:	2300      	movs	r3, #0
 8007a10:	613b      	str	r3, [r7, #16]
 8007a12:	2300      	movs	r3, #0
 8007a14:	617b      	str	r3, [r7, #20]
 8007a16:	687b      	ldr	r3, [r7, #4]
 8007a18:	681b      	ldr	r3, [r3, #0]
 8007a1a:	2100      	movs	r1, #0
 8007a1c:	4618      	mov	r0, r3
 8007a1e:	f001 fad5 	bl	8008fcc <SDIO_GetResponse>
 8007a22:	4603      	mov	r3, r0
 8007a24:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007a28:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8007a2c:	d102      	bne.n	8007a34 <SD_WideBus_Disable+0x32>
 8007a2e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8007a32:	e02f      	b.n	8007a94 <SD_WideBus_Disable+0x92>
 8007a34:	f107 030c 	add.w	r3, r7, #12
 8007a38:	4619      	mov	r1, r3
 8007a3a:	6878      	ldr	r0, [r7, #4]
 8007a3c:	f000 f82e 	bl	8007a9c <SD_FindSCR>
 8007a40:	6178      	str	r0, [r7, #20]
 8007a42:	697b      	ldr	r3, [r7, #20]
 8007a44:	2b00      	cmp	r3, #0
 8007a46:	d001      	beq.n	8007a4c <SD_WideBus_Disable+0x4a>
 8007a48:	697b      	ldr	r3, [r7, #20]
 8007a4a:	e023      	b.n	8007a94 <SD_WideBus_Disable+0x92>
 8007a4c:	693b      	ldr	r3, [r7, #16]
 8007a4e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	d01c      	beq.n	8007a90 <SD_WideBus_Disable+0x8e>
 8007a56:	687b      	ldr	r3, [r7, #4]
 8007a58:	681a      	ldr	r2, [r3, #0]
 8007a5a:	687b      	ldr	r3, [r7, #4]
 8007a5c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007a5e:	041b      	lsls	r3, r3, #16
 8007a60:	4619      	mov	r1, r3
 8007a62:	4610      	mov	r0, r2
 8007a64:	f001 fc32 	bl	80092cc <SDMMC_CmdAppCommand>
 8007a68:	6178      	str	r0, [r7, #20]
 8007a6a:	697b      	ldr	r3, [r7, #20]
 8007a6c:	2b00      	cmp	r3, #0
 8007a6e:	d001      	beq.n	8007a74 <SD_WideBus_Disable+0x72>
 8007a70:	697b      	ldr	r3, [r7, #20]
 8007a72:	e00f      	b.n	8007a94 <SD_WideBus_Disable+0x92>
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	681b      	ldr	r3, [r3, #0]
 8007a78:	2100      	movs	r1, #0
 8007a7a:	4618      	mov	r0, r3
 8007a7c:	f001 fc6f 	bl	800935e <SDMMC_CmdBusWidth>
 8007a80:	6178      	str	r0, [r7, #20]
 8007a82:	697b      	ldr	r3, [r7, #20]
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	d001      	beq.n	8007a8c <SD_WideBus_Disable+0x8a>
 8007a88:	697b      	ldr	r3, [r7, #20]
 8007a8a:	e003      	b.n	8007a94 <SD_WideBus_Disable+0x92>
 8007a8c:	2300      	movs	r3, #0
 8007a8e:	e001      	b.n	8007a94 <SD_WideBus_Disable+0x92>
 8007a90:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8007a94:	4618      	mov	r0, r3
 8007a96:	3718      	adds	r7, #24
 8007a98:	46bd      	mov	sp, r7
 8007a9a:	bd80      	pop	{r7, pc}

08007a9c <SD_FindSCR>:
 8007a9c:	b590      	push	{r4, r7, lr}
 8007a9e:	b08f      	sub	sp, #60	; 0x3c
 8007aa0:	af00      	add	r7, sp, #0
 8007aa2:	6078      	str	r0, [r7, #4]
 8007aa4:	6039      	str	r1, [r7, #0]
 8007aa6:	2300      	movs	r3, #0
 8007aa8:	633b      	str	r3, [r7, #48]	; 0x30
 8007aaa:	f7fc fab5 	bl	8004018 <HAL_GetTick>
 8007aae:	62f8      	str	r0, [r7, #44]	; 0x2c
 8007ab0:	2300      	movs	r3, #0
 8007ab2:	637b      	str	r3, [r7, #52]	; 0x34
 8007ab4:	2300      	movs	r3, #0
 8007ab6:	60fb      	str	r3, [r7, #12]
 8007ab8:	2300      	movs	r3, #0
 8007aba:	613b      	str	r3, [r7, #16]
 8007abc:	687b      	ldr	r3, [r7, #4]
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	2108      	movs	r1, #8
 8007ac2:	4618      	mov	r0, r3
 8007ac4:	f001 fac3 	bl	800904e <SDMMC_CmdBlockLength>
 8007ac8:	6338      	str	r0, [r7, #48]	; 0x30
 8007aca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	d001      	beq.n	8007ad4 <SD_FindSCR+0x38>
 8007ad0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007ad2:	e0a8      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007ad4:	687b      	ldr	r3, [r7, #4]
 8007ad6:	681a      	ldr	r2, [r3, #0]
 8007ad8:	687b      	ldr	r3, [r7, #4]
 8007ada:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007adc:	041b      	lsls	r3, r3, #16
 8007ade:	4619      	mov	r1, r3
 8007ae0:	4610      	mov	r0, r2
 8007ae2:	f001 fbf3 	bl	80092cc <SDMMC_CmdAppCommand>
 8007ae6:	6338      	str	r0, [r7, #48]	; 0x30
 8007ae8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007aea:	2b00      	cmp	r3, #0
 8007aec:	d001      	beq.n	8007af2 <SD_FindSCR+0x56>
 8007aee:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007af0:	e099      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007af2:	f04f 33ff 	mov.w	r3, #4294967295
 8007af6:	617b      	str	r3, [r7, #20]
 8007af8:	2308      	movs	r3, #8
 8007afa:	61bb      	str	r3, [r7, #24]
 8007afc:	2330      	movs	r3, #48	; 0x30
 8007afe:	61fb      	str	r3, [r7, #28]
 8007b00:	2302      	movs	r3, #2
 8007b02:	623b      	str	r3, [r7, #32]
 8007b04:	2300      	movs	r3, #0
 8007b06:	627b      	str	r3, [r7, #36]	; 0x24
 8007b08:	2301      	movs	r3, #1
 8007b0a:	62bb      	str	r3, [r7, #40]	; 0x28
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	f107 0214 	add.w	r2, r7, #20
 8007b14:	4611      	mov	r1, r2
 8007b16:	4618      	mov	r0, r3
 8007b18:	f001 fa6d 	bl	8008ff6 <SDIO_ConfigData>
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	4618      	mov	r0, r3
 8007b22:	f001 fc40 	bl	80093a6 <SDMMC_CmdSendSCR>
 8007b26:	6338      	str	r0, [r7, #48]	; 0x30
 8007b28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007b2a:	2b00      	cmp	r3, #0
 8007b2c:	d022      	beq.n	8007b74 <SD_FindSCR+0xd8>
 8007b2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007b30:	e079      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007b32:	687b      	ldr	r3, [r7, #4]
 8007b34:	681b      	ldr	r3, [r3, #0]
 8007b36:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007b38:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d00e      	beq.n	8007b5e <SD_FindSCR+0xc2>
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	6819      	ldr	r1, [r3, #0]
 8007b44:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007b46:	009b      	lsls	r3, r3, #2
 8007b48:	f107 020c 	add.w	r2, r7, #12
 8007b4c:	18d4      	adds	r4, r2, r3
 8007b4e:	4608      	mov	r0, r1
 8007b50:	f001 f9cb 	bl	8008eea <SDIO_ReadFIFO>
 8007b54:	4603      	mov	r3, r0
 8007b56:	6023      	str	r3, [r4, #0]
 8007b58:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007b5a:	3301      	adds	r3, #1
 8007b5c:	637b      	str	r3, [r7, #52]	; 0x34
 8007b5e:	f7fc fa5b 	bl	8004018 <HAL_GetTick>
 8007b62:	4602      	mov	r2, r0
 8007b64:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b66:	1ad3      	subs	r3, r2, r3
 8007b68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007b6c:	d102      	bne.n	8007b74 <SD_FindSCR+0xd8>
 8007b6e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8007b72:	e058      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007b7a:	f240 432a 	movw	r3, #1066	; 0x42a
 8007b7e:	4013      	ands	r3, r2
 8007b80:	2b00      	cmp	r3, #0
 8007b82:	d0d6      	beq.n	8007b32 <SD_FindSCR+0x96>
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	681b      	ldr	r3, [r3, #0]
 8007b88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007b8a:	f003 0308 	and.w	r3, r3, #8
 8007b8e:	2b00      	cmp	r3, #0
 8007b90:	d005      	beq.n	8007b9e <SD_FindSCR+0x102>
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	681b      	ldr	r3, [r3, #0]
 8007b96:	2208      	movs	r2, #8
 8007b98:	639a      	str	r2, [r3, #56]	; 0x38
 8007b9a:	2308      	movs	r3, #8
 8007b9c:	e043      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007ba4:	f003 0302 	and.w	r3, r3, #2
 8007ba8:	2b00      	cmp	r3, #0
 8007baa:	d005      	beq.n	8007bb8 <SD_FindSCR+0x11c>
 8007bac:	687b      	ldr	r3, [r7, #4]
 8007bae:	681b      	ldr	r3, [r3, #0]
 8007bb0:	2202      	movs	r2, #2
 8007bb2:	639a      	str	r2, [r3, #56]	; 0x38
 8007bb4:	2302      	movs	r3, #2
 8007bb6:	e036      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	681b      	ldr	r3, [r3, #0]
 8007bbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007bbe:	f003 0320 	and.w	r3, r3, #32
 8007bc2:	2b00      	cmp	r3, #0
 8007bc4:	d005      	beq.n	8007bd2 <SD_FindSCR+0x136>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	2220      	movs	r2, #32
 8007bcc:	639a      	str	r2, [r3, #56]	; 0x38
 8007bce:	2320      	movs	r3, #32
 8007bd0:	e029      	b.n	8007c26 <SD_FindSCR+0x18a>
 8007bd2:	687b      	ldr	r3, [r7, #4]
 8007bd4:	681b      	ldr	r3, [r3, #0]
 8007bd6:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8007bda:	639a      	str	r2, [r3, #56]	; 0x38
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	061a      	lsls	r2, r3, #24
 8007be0:	68fb      	ldr	r3, [r7, #12]
 8007be2:	021b      	lsls	r3, r3, #8
 8007be4:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8007be8:	431a      	orrs	r2, r3
 8007bea:	68fb      	ldr	r3, [r7, #12]
 8007bec:	0a1b      	lsrs	r3, r3, #8
 8007bee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8007bf2:	ea42 0103 	orr.w	r1, r2, r3
 8007bf6:	68fb      	ldr	r3, [r7, #12]
 8007bf8:	0e1a      	lsrs	r2, r3, #24
 8007bfa:	683b      	ldr	r3, [r7, #0]
 8007bfc:	3304      	adds	r3, #4
 8007bfe:	430a      	orrs	r2, r1
 8007c00:	601a      	str	r2, [r3, #0]
 8007c02:	693b      	ldr	r3, [r7, #16]
 8007c04:	061a      	lsls	r2, r3, #24
 8007c06:	693b      	ldr	r3, [r7, #16]
 8007c08:	021b      	lsls	r3, r3, #8
 8007c0a:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8007c0e:	431a      	orrs	r2, r3
 8007c10:	693b      	ldr	r3, [r7, #16]
 8007c12:	0a1b      	lsrs	r3, r3, #8
 8007c14:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8007c18:	431a      	orrs	r2, r3
 8007c1a:	693b      	ldr	r3, [r7, #16]
 8007c1c:	0e1b      	lsrs	r3, r3, #24
 8007c1e:	431a      	orrs	r2, r3
 8007c20:	683b      	ldr	r3, [r7, #0]
 8007c22:	601a      	str	r2, [r3, #0]
 8007c24:	2300      	movs	r3, #0
 8007c26:	4618      	mov	r0, r3
 8007c28:	373c      	adds	r7, #60	; 0x3c
 8007c2a:	46bd      	mov	sp, r7
 8007c2c:	bd90      	pop	{r4, r7, pc}

08007c2e <SD_Read_IT>:
 8007c2e:	b590      	push	{r4, r7, lr}
 8007c30:	b085      	sub	sp, #20
 8007c32:	af00      	add	r7, sp, #0
 8007c34:	6078      	str	r0, [r7, #4]
 8007c36:	2300      	movs	r3, #0
 8007c38:	60fb      	str	r3, [r7, #12]
 8007c3a:	687b      	ldr	r3, [r7, #4]
 8007c3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c3e:	60bb      	str	r3, [r7, #8]
 8007c40:	2300      	movs	r3, #0
 8007c42:	60fb      	str	r3, [r7, #12]
 8007c44:	e00d      	b.n	8007c62 <SD_Read_IT+0x34>
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	6819      	ldr	r1, [r3, #0]
 8007c4a:	68fb      	ldr	r3, [r7, #12]
 8007c4c:	009b      	lsls	r3, r3, #2
 8007c4e:	68ba      	ldr	r2, [r7, #8]
 8007c50:	18d4      	adds	r4, r2, r3
 8007c52:	4608      	mov	r0, r1
 8007c54:	f001 f949 	bl	8008eea <SDIO_ReadFIFO>
 8007c58:	4603      	mov	r3, r0
 8007c5a:	6023      	str	r3, [r4, #0]
 8007c5c:	68fb      	ldr	r3, [r7, #12]
 8007c5e:	3301      	adds	r3, #1
 8007c60:	60fb      	str	r3, [r7, #12]
 8007c62:	68fb      	ldr	r3, [r7, #12]
 8007c64:	2b07      	cmp	r3, #7
 8007c66:	d9ee      	bls.n	8007c46 <SD_Read_IT+0x18>
 8007c68:	687b      	ldr	r3, [r7, #4]
 8007c6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007c6c:	f103 0220 	add.w	r2, r3, #32
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	629a      	str	r2, [r3, #40]	; 0x28
 8007c74:	2300      	movs	r3, #0
 8007c76:	4618      	mov	r0, r3
 8007c78:	3714      	adds	r7, #20
 8007c7a:	46bd      	mov	sp, r7
 8007c7c:	bd90      	pop	{r4, r7, pc}

08007c7e <SD_Write_IT>:
 8007c7e:	b580      	push	{r7, lr}
 8007c80:	b084      	sub	sp, #16
 8007c82:	af00      	add	r7, sp, #0
 8007c84:	6078      	str	r0, [r7, #4]
 8007c86:	2300      	movs	r3, #0
 8007c88:	60fb      	str	r3, [r7, #12]
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	6a1b      	ldr	r3, [r3, #32]
 8007c8e:	60bb      	str	r3, [r7, #8]
 8007c90:	2300      	movs	r3, #0
 8007c92:	60fb      	str	r3, [r7, #12]
 8007c94:	e00b      	b.n	8007cae <SD_Write_IT+0x30>
 8007c96:	687b      	ldr	r3, [r7, #4]
 8007c98:	6818      	ldr	r0, [r3, #0]
 8007c9a:	68fb      	ldr	r3, [r7, #12]
 8007c9c:	009b      	lsls	r3, r3, #2
 8007c9e:	68ba      	ldr	r2, [r7, #8]
 8007ca0:	4413      	add	r3, r2
 8007ca2:	4619      	mov	r1, r3
 8007ca4:	f001 f92e 	bl	8008f04 <SDIO_WriteFIFO>
 8007ca8:	68fb      	ldr	r3, [r7, #12]
 8007caa:	3301      	adds	r3, #1
 8007cac:	60fb      	str	r3, [r7, #12]
 8007cae:	68fb      	ldr	r3, [r7, #12]
 8007cb0:	2b07      	cmp	r3, #7
 8007cb2:	d9f0      	bls.n	8007c96 <SD_Write_IT+0x18>
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	6a1b      	ldr	r3, [r3, #32]
 8007cb8:	f103 0220 	add.w	r2, r3, #32
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	621a      	str	r2, [r3, #32]
 8007cc0:	2300      	movs	r3, #0
 8007cc2:	4618      	mov	r0, r3
 8007cc4:	3710      	adds	r7, #16
 8007cc6:	46bd      	mov	sp, r7
 8007cc8:	bd80      	pop	{r7, pc}

08007cca <HAL_TIM_Base_Init>:
 8007cca:	b580      	push	{r7, lr}
 8007ccc:	b082      	sub	sp, #8
 8007cce:	af00      	add	r7, sp, #0
 8007cd0:	6078      	str	r0, [r7, #4]
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d101      	bne.n	8007cdc <HAL_TIM_Base_Init+0x12>
 8007cd8:	2301      	movs	r3, #1
 8007cda:	e01d      	b.n	8007d18 <HAL_TIM_Base_Init+0x4e>
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8007ce2:	b2db      	uxtb	r3, r3
 8007ce4:	2b00      	cmp	r3, #0
 8007ce6:	d106      	bne.n	8007cf6 <HAL_TIM_Base_Init+0x2c>
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	2200      	movs	r2, #0
 8007cec:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8007cf0:	6878      	ldr	r0, [r7, #4]
 8007cf2:	f002 fc39 	bl	800a568 <HAL_TIM_Base_MspInit>
 8007cf6:	687b      	ldr	r3, [r7, #4]
 8007cf8:	2202      	movs	r2, #2
 8007cfa:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007cfe:	687b      	ldr	r3, [r7, #4]
 8007d00:	681a      	ldr	r2, [r3, #0]
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	3304      	adds	r3, #4
 8007d06:	4619      	mov	r1, r3
 8007d08:	4610      	mov	r0, r2
 8007d0a:	f000 f955 	bl	8007fb8 <TIM_Base_SetConfig>
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	2201      	movs	r2, #1
 8007d12:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8007d16:	2300      	movs	r3, #0
 8007d18:	4618      	mov	r0, r3
 8007d1a:	3708      	adds	r7, #8
 8007d1c:	46bd      	mov	sp, r7
 8007d1e:	bd80      	pop	{r7, pc}

08007d20 <HAL_TIM_Base_Start_IT>:
 8007d20:	b480      	push	{r7}
 8007d22:	b083      	sub	sp, #12
 8007d24:	af00      	add	r7, sp, #0
 8007d26:	6078      	str	r0, [r7, #4]
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	681b      	ldr	r3, [r3, #0]
 8007d2c:	68da      	ldr	r2, [r3, #12]
 8007d2e:	687b      	ldr	r3, [r7, #4]
 8007d30:	681b      	ldr	r3, [r3, #0]
 8007d32:	f042 0201 	orr.w	r2, r2, #1
 8007d36:	60da      	str	r2, [r3, #12]
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	681b      	ldr	r3, [r3, #0]
 8007d3c:	681a      	ldr	r2, [r3, #0]
 8007d3e:	687b      	ldr	r3, [r7, #4]
 8007d40:	681b      	ldr	r3, [r3, #0]
 8007d42:	f042 0201 	orr.w	r2, r2, #1
 8007d46:	601a      	str	r2, [r3, #0]
 8007d48:	2300      	movs	r3, #0
 8007d4a:	4618      	mov	r0, r3
 8007d4c:	370c      	adds	r7, #12
 8007d4e:	46bd      	mov	sp, r7
 8007d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d54:	4770      	bx	lr

08007d56 <HAL_TIM_IRQHandler>:
 8007d56:	b580      	push	{r7, lr}
 8007d58:	b082      	sub	sp, #8
 8007d5a:	af00      	add	r7, sp, #0
 8007d5c:	6078      	str	r0, [r7, #4]
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	681b      	ldr	r3, [r3, #0]
 8007d62:	691b      	ldr	r3, [r3, #16]
 8007d64:	f003 0302 	and.w	r3, r3, #2
 8007d68:	2b02      	cmp	r3, #2
 8007d6a:	d122      	bne.n	8007db2 <HAL_TIM_IRQHandler+0x5c>
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	681b      	ldr	r3, [r3, #0]
 8007d70:	68db      	ldr	r3, [r3, #12]
 8007d72:	f003 0302 	and.w	r3, r3, #2
 8007d76:	2b02      	cmp	r3, #2
 8007d78:	d11b      	bne.n	8007db2 <HAL_TIM_IRQHandler+0x5c>
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	681b      	ldr	r3, [r3, #0]
 8007d7e:	f06f 0202 	mvn.w	r2, #2
 8007d82:	611a      	str	r2, [r3, #16]
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	2201      	movs	r2, #1
 8007d88:	761a      	strb	r2, [r3, #24]
 8007d8a:	687b      	ldr	r3, [r7, #4]
 8007d8c:	681b      	ldr	r3, [r3, #0]
 8007d8e:	699b      	ldr	r3, [r3, #24]
 8007d90:	f003 0303 	and.w	r3, r3, #3
 8007d94:	2b00      	cmp	r3, #0
 8007d96:	d003      	beq.n	8007da0 <HAL_TIM_IRQHandler+0x4a>
 8007d98:	6878      	ldr	r0, [r7, #4]
 8007d9a:	f000 f8ee 	bl	8007f7a <HAL_TIM_IC_CaptureCallback>
 8007d9e:	e005      	b.n	8007dac <HAL_TIM_IRQHandler+0x56>
 8007da0:	6878      	ldr	r0, [r7, #4]
 8007da2:	f000 f8e0 	bl	8007f66 <HAL_TIM_OC_DelayElapsedCallback>
 8007da6:	6878      	ldr	r0, [r7, #4]
 8007da8:	f000 f8f1 	bl	8007f8e <HAL_TIM_PWM_PulseFinishedCallback>
 8007dac:	687b      	ldr	r3, [r7, #4]
 8007dae:	2200      	movs	r2, #0
 8007db0:	761a      	strb	r2, [r3, #24]
 8007db2:	687b      	ldr	r3, [r7, #4]
 8007db4:	681b      	ldr	r3, [r3, #0]
 8007db6:	691b      	ldr	r3, [r3, #16]
 8007db8:	f003 0304 	and.w	r3, r3, #4
 8007dbc:	2b04      	cmp	r3, #4
 8007dbe:	d122      	bne.n	8007e06 <HAL_TIM_IRQHandler+0xb0>
 8007dc0:	687b      	ldr	r3, [r7, #4]
 8007dc2:	681b      	ldr	r3, [r3, #0]
 8007dc4:	68db      	ldr	r3, [r3, #12]
 8007dc6:	f003 0304 	and.w	r3, r3, #4
 8007dca:	2b04      	cmp	r3, #4
 8007dcc:	d11b      	bne.n	8007e06 <HAL_TIM_IRQHandler+0xb0>
 8007dce:	687b      	ldr	r3, [r7, #4]
 8007dd0:	681b      	ldr	r3, [r3, #0]
 8007dd2:	f06f 0204 	mvn.w	r2, #4
 8007dd6:	611a      	str	r2, [r3, #16]
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	2202      	movs	r2, #2
 8007ddc:	761a      	strb	r2, [r3, #24]
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	681b      	ldr	r3, [r3, #0]
 8007de2:	699b      	ldr	r3, [r3, #24]
 8007de4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d003      	beq.n	8007df4 <HAL_TIM_IRQHandler+0x9e>
 8007dec:	6878      	ldr	r0, [r7, #4]
 8007dee:	f000 f8c4 	bl	8007f7a <HAL_TIM_IC_CaptureCallback>
 8007df2:	e005      	b.n	8007e00 <HAL_TIM_IRQHandler+0xaa>
 8007df4:	6878      	ldr	r0, [r7, #4]
 8007df6:	f000 f8b6 	bl	8007f66 <HAL_TIM_OC_DelayElapsedCallback>
 8007dfa:	6878      	ldr	r0, [r7, #4]
 8007dfc:	f000 f8c7 	bl	8007f8e <HAL_TIM_PWM_PulseFinishedCallback>
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	2200      	movs	r2, #0
 8007e04:	761a      	strb	r2, [r3, #24]
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	681b      	ldr	r3, [r3, #0]
 8007e0a:	691b      	ldr	r3, [r3, #16]
 8007e0c:	f003 0308 	and.w	r3, r3, #8
 8007e10:	2b08      	cmp	r3, #8
 8007e12:	d122      	bne.n	8007e5a <HAL_TIM_IRQHandler+0x104>
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	681b      	ldr	r3, [r3, #0]
 8007e18:	68db      	ldr	r3, [r3, #12]
 8007e1a:	f003 0308 	and.w	r3, r3, #8
 8007e1e:	2b08      	cmp	r3, #8
 8007e20:	d11b      	bne.n	8007e5a <HAL_TIM_IRQHandler+0x104>
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	681b      	ldr	r3, [r3, #0]
 8007e26:	f06f 0208 	mvn.w	r2, #8
 8007e2a:	611a      	str	r2, [r3, #16]
 8007e2c:	687b      	ldr	r3, [r7, #4]
 8007e2e:	2204      	movs	r2, #4
 8007e30:	761a      	strb	r2, [r3, #24]
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	69db      	ldr	r3, [r3, #28]
 8007e38:	f003 0303 	and.w	r3, r3, #3
 8007e3c:	2b00      	cmp	r3, #0
 8007e3e:	d003      	beq.n	8007e48 <HAL_TIM_IRQHandler+0xf2>
 8007e40:	6878      	ldr	r0, [r7, #4]
 8007e42:	f000 f89a 	bl	8007f7a <HAL_TIM_IC_CaptureCallback>
 8007e46:	e005      	b.n	8007e54 <HAL_TIM_IRQHandler+0xfe>
 8007e48:	6878      	ldr	r0, [r7, #4]
 8007e4a:	f000 f88c 	bl	8007f66 <HAL_TIM_OC_DelayElapsedCallback>
 8007e4e:	6878      	ldr	r0, [r7, #4]
 8007e50:	f000 f89d 	bl	8007f8e <HAL_TIM_PWM_PulseFinishedCallback>
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	2200      	movs	r2, #0
 8007e58:	761a      	strb	r2, [r3, #24]
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	691b      	ldr	r3, [r3, #16]
 8007e60:	f003 0310 	and.w	r3, r3, #16
 8007e64:	2b10      	cmp	r3, #16
 8007e66:	d122      	bne.n	8007eae <HAL_TIM_IRQHandler+0x158>
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	681b      	ldr	r3, [r3, #0]
 8007e6c:	68db      	ldr	r3, [r3, #12]
 8007e6e:	f003 0310 	and.w	r3, r3, #16
 8007e72:	2b10      	cmp	r3, #16
 8007e74:	d11b      	bne.n	8007eae <HAL_TIM_IRQHandler+0x158>
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	681b      	ldr	r3, [r3, #0]
 8007e7a:	f06f 0210 	mvn.w	r2, #16
 8007e7e:	611a      	str	r2, [r3, #16]
 8007e80:	687b      	ldr	r3, [r7, #4]
 8007e82:	2208      	movs	r2, #8
 8007e84:	761a      	strb	r2, [r3, #24]
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	681b      	ldr	r3, [r3, #0]
 8007e8a:	69db      	ldr	r3, [r3, #28]
 8007e8c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8007e90:	2b00      	cmp	r3, #0
 8007e92:	d003      	beq.n	8007e9c <HAL_TIM_IRQHandler+0x146>
 8007e94:	6878      	ldr	r0, [r7, #4]
 8007e96:	f000 f870 	bl	8007f7a <HAL_TIM_IC_CaptureCallback>
 8007e9a:	e005      	b.n	8007ea8 <HAL_TIM_IRQHandler+0x152>
 8007e9c:	6878      	ldr	r0, [r7, #4]
 8007e9e:	f000 f862 	bl	8007f66 <HAL_TIM_OC_DelayElapsedCallback>
 8007ea2:	6878      	ldr	r0, [r7, #4]
 8007ea4:	f000 f873 	bl	8007f8e <HAL_TIM_PWM_PulseFinishedCallback>
 8007ea8:	687b      	ldr	r3, [r7, #4]
 8007eaa:	2200      	movs	r2, #0
 8007eac:	761a      	strb	r2, [r3, #24]
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	681b      	ldr	r3, [r3, #0]
 8007eb2:	691b      	ldr	r3, [r3, #16]
 8007eb4:	f003 0301 	and.w	r3, r3, #1
 8007eb8:	2b01      	cmp	r3, #1
 8007eba:	d10e      	bne.n	8007eda <HAL_TIM_IRQHandler+0x184>
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	68db      	ldr	r3, [r3, #12]
 8007ec2:	f003 0301 	and.w	r3, r3, #1
 8007ec6:	2b01      	cmp	r3, #1
 8007ec8:	d107      	bne.n	8007eda <HAL_TIM_IRQHandler+0x184>
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	f06f 0201 	mvn.w	r2, #1
 8007ed2:	611a      	str	r2, [r3, #16]
 8007ed4:	6878      	ldr	r0, [r7, #4]
 8007ed6:	f7fc f80b 	bl	8003ef0 <HAL_TIM_PeriodElapsedCallback>
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	691b      	ldr	r3, [r3, #16]
 8007ee0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007ee4:	2b80      	cmp	r3, #128	; 0x80
 8007ee6:	d10e      	bne.n	8007f06 <HAL_TIM_IRQHandler+0x1b0>
 8007ee8:	687b      	ldr	r3, [r7, #4]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	68db      	ldr	r3, [r3, #12]
 8007eee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007ef2:	2b80      	cmp	r3, #128	; 0x80
 8007ef4:	d107      	bne.n	8007f06 <HAL_TIM_IRQHandler+0x1b0>
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8007efe:	611a      	str	r2, [r3, #16]
 8007f00:	6878      	ldr	r0, [r7, #4]
 8007f02:	f000 f90d 	bl	8008120 <HAL_TIMEx_BreakCallback>
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	681b      	ldr	r3, [r3, #0]
 8007f0a:	691b      	ldr	r3, [r3, #16]
 8007f0c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007f10:	2b40      	cmp	r3, #64	; 0x40
 8007f12:	d10e      	bne.n	8007f32 <HAL_TIM_IRQHandler+0x1dc>
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	68db      	ldr	r3, [r3, #12]
 8007f1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007f1e:	2b40      	cmp	r3, #64	; 0x40
 8007f20:	d107      	bne.n	8007f32 <HAL_TIM_IRQHandler+0x1dc>
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	681b      	ldr	r3, [r3, #0]
 8007f26:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8007f2a:	611a      	str	r2, [r3, #16]
 8007f2c:	6878      	ldr	r0, [r7, #4]
 8007f2e:	f000 f838 	bl	8007fa2 <HAL_TIM_TriggerCallback>
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	691b      	ldr	r3, [r3, #16]
 8007f38:	f003 0320 	and.w	r3, r3, #32
 8007f3c:	2b20      	cmp	r3, #32
 8007f3e:	d10e      	bne.n	8007f5e <HAL_TIM_IRQHandler+0x208>
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	681b      	ldr	r3, [r3, #0]
 8007f44:	68db      	ldr	r3, [r3, #12]
 8007f46:	f003 0320 	and.w	r3, r3, #32
 8007f4a:	2b20      	cmp	r3, #32
 8007f4c:	d107      	bne.n	8007f5e <HAL_TIM_IRQHandler+0x208>
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	681b      	ldr	r3, [r3, #0]
 8007f52:	f06f 0220 	mvn.w	r2, #32
 8007f56:	611a      	str	r2, [r3, #16]
 8007f58:	6878      	ldr	r0, [r7, #4]
 8007f5a:	f000 f8d7 	bl	800810c <HAL_TIMEx_CommutationCallback>
 8007f5e:	bf00      	nop
 8007f60:	3708      	adds	r7, #8
 8007f62:	46bd      	mov	sp, r7
 8007f64:	bd80      	pop	{r7, pc}

08007f66 <HAL_TIM_OC_DelayElapsedCallback>:
 8007f66:	b480      	push	{r7}
 8007f68:	b083      	sub	sp, #12
 8007f6a:	af00      	add	r7, sp, #0
 8007f6c:	6078      	str	r0, [r7, #4]
 8007f6e:	bf00      	nop
 8007f70:	370c      	adds	r7, #12
 8007f72:	46bd      	mov	sp, r7
 8007f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f78:	4770      	bx	lr

08007f7a <HAL_TIM_IC_CaptureCallback>:
 8007f7a:	b480      	push	{r7}
 8007f7c:	b083      	sub	sp, #12
 8007f7e:	af00      	add	r7, sp, #0
 8007f80:	6078      	str	r0, [r7, #4]
 8007f82:	bf00      	nop
 8007f84:	370c      	adds	r7, #12
 8007f86:	46bd      	mov	sp, r7
 8007f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f8c:	4770      	bx	lr

08007f8e <HAL_TIM_PWM_PulseFinishedCallback>:
 8007f8e:	b480      	push	{r7}
 8007f90:	b083      	sub	sp, #12
 8007f92:	af00      	add	r7, sp, #0
 8007f94:	6078      	str	r0, [r7, #4]
 8007f96:	bf00      	nop
 8007f98:	370c      	adds	r7, #12
 8007f9a:	46bd      	mov	sp, r7
 8007f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fa0:	4770      	bx	lr

08007fa2 <HAL_TIM_TriggerCallback>:
 8007fa2:	b480      	push	{r7}
 8007fa4:	b083      	sub	sp, #12
 8007fa6:	af00      	add	r7, sp, #0
 8007fa8:	6078      	str	r0, [r7, #4]
 8007faa:	bf00      	nop
 8007fac:	370c      	adds	r7, #12
 8007fae:	46bd      	mov	sp, r7
 8007fb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fb4:	4770      	bx	lr
	...

08007fb8 <TIM_Base_SetConfig>:
 8007fb8:	b480      	push	{r7}
 8007fba:	b085      	sub	sp, #20
 8007fbc:	af00      	add	r7, sp, #0
 8007fbe:	6078      	str	r0, [r7, #4]
 8007fc0:	6039      	str	r1, [r7, #0]
 8007fc2:	2300      	movs	r3, #0
 8007fc4:	60fb      	str	r3, [r7, #12]
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	60fb      	str	r3, [r7, #12]
 8007fcc:	687b      	ldr	r3, [r7, #4]
 8007fce:	4a44      	ldr	r2, [pc, #272]	; (80080e0 <TIM_Base_SetConfig+0x128>)
 8007fd0:	4293      	cmp	r3, r2
 8007fd2:	d013      	beq.n	8007ffc <TIM_Base_SetConfig+0x44>
 8007fd4:	687b      	ldr	r3, [r7, #4]
 8007fd6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007fda:	d00f      	beq.n	8007ffc <TIM_Base_SetConfig+0x44>
 8007fdc:	687b      	ldr	r3, [r7, #4]
 8007fde:	4a41      	ldr	r2, [pc, #260]	; (80080e4 <TIM_Base_SetConfig+0x12c>)
 8007fe0:	4293      	cmp	r3, r2
 8007fe2:	d00b      	beq.n	8007ffc <TIM_Base_SetConfig+0x44>
 8007fe4:	687b      	ldr	r3, [r7, #4]
 8007fe6:	4a40      	ldr	r2, [pc, #256]	; (80080e8 <TIM_Base_SetConfig+0x130>)
 8007fe8:	4293      	cmp	r3, r2
 8007fea:	d007      	beq.n	8007ffc <TIM_Base_SetConfig+0x44>
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	4a3f      	ldr	r2, [pc, #252]	; (80080ec <TIM_Base_SetConfig+0x134>)
 8007ff0:	4293      	cmp	r3, r2
 8007ff2:	d003      	beq.n	8007ffc <TIM_Base_SetConfig+0x44>
 8007ff4:	687b      	ldr	r3, [r7, #4]
 8007ff6:	4a3e      	ldr	r2, [pc, #248]	; (80080f0 <TIM_Base_SetConfig+0x138>)
 8007ff8:	4293      	cmp	r3, r2
 8007ffa:	d101      	bne.n	8008000 <TIM_Base_SetConfig+0x48>
 8007ffc:	2301      	movs	r3, #1
 8007ffe:	e000      	b.n	8008002 <TIM_Base_SetConfig+0x4a>
 8008000:	2300      	movs	r3, #0
 8008002:	2b00      	cmp	r3, #0
 8008004:	d008      	beq.n	8008018 <TIM_Base_SetConfig+0x60>
 8008006:	68fb      	ldr	r3, [r7, #12]
 8008008:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800800c:	60fb      	str	r3, [r7, #12]
 800800e:	683b      	ldr	r3, [r7, #0]
 8008010:	685b      	ldr	r3, [r3, #4]
 8008012:	68fa      	ldr	r2, [r7, #12]
 8008014:	4313      	orrs	r3, r2
 8008016:	60fb      	str	r3, [r7, #12]
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	4a31      	ldr	r2, [pc, #196]	; (80080e0 <TIM_Base_SetConfig+0x128>)
 800801c:	4293      	cmp	r3, r2
 800801e:	d02b      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008020:	687b      	ldr	r3, [r7, #4]
 8008022:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008026:	d027      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	4a2e      	ldr	r2, [pc, #184]	; (80080e4 <TIM_Base_SetConfig+0x12c>)
 800802c:	4293      	cmp	r3, r2
 800802e:	d023      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008030:	687b      	ldr	r3, [r7, #4]
 8008032:	4a2d      	ldr	r2, [pc, #180]	; (80080e8 <TIM_Base_SetConfig+0x130>)
 8008034:	4293      	cmp	r3, r2
 8008036:	d01f      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	4a2c      	ldr	r2, [pc, #176]	; (80080ec <TIM_Base_SetConfig+0x134>)
 800803c:	4293      	cmp	r3, r2
 800803e:	d01b      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	4a2b      	ldr	r2, [pc, #172]	; (80080f0 <TIM_Base_SetConfig+0x138>)
 8008044:	4293      	cmp	r3, r2
 8008046:	d017      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	4a2a      	ldr	r2, [pc, #168]	; (80080f4 <TIM_Base_SetConfig+0x13c>)
 800804c:	4293      	cmp	r3, r2
 800804e:	d013      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	4a29      	ldr	r2, [pc, #164]	; (80080f8 <TIM_Base_SetConfig+0x140>)
 8008054:	4293      	cmp	r3, r2
 8008056:	d00f      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	4a28      	ldr	r2, [pc, #160]	; (80080fc <TIM_Base_SetConfig+0x144>)
 800805c:	4293      	cmp	r3, r2
 800805e:	d00b      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008060:	687b      	ldr	r3, [r7, #4]
 8008062:	4a27      	ldr	r2, [pc, #156]	; (8008100 <TIM_Base_SetConfig+0x148>)
 8008064:	4293      	cmp	r3, r2
 8008066:	d007      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008068:	687b      	ldr	r3, [r7, #4]
 800806a:	4a26      	ldr	r2, [pc, #152]	; (8008104 <TIM_Base_SetConfig+0x14c>)
 800806c:	4293      	cmp	r3, r2
 800806e:	d003      	beq.n	8008078 <TIM_Base_SetConfig+0xc0>
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	4a25      	ldr	r2, [pc, #148]	; (8008108 <TIM_Base_SetConfig+0x150>)
 8008074:	4293      	cmp	r3, r2
 8008076:	d101      	bne.n	800807c <TIM_Base_SetConfig+0xc4>
 8008078:	2301      	movs	r3, #1
 800807a:	e000      	b.n	800807e <TIM_Base_SetConfig+0xc6>
 800807c:	2300      	movs	r3, #0
 800807e:	2b00      	cmp	r3, #0
 8008080:	d008      	beq.n	8008094 <TIM_Base_SetConfig+0xdc>
 8008082:	68fb      	ldr	r3, [r7, #12]
 8008084:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008088:	60fb      	str	r3, [r7, #12]
 800808a:	683b      	ldr	r3, [r7, #0]
 800808c:	68db      	ldr	r3, [r3, #12]
 800808e:	68fa      	ldr	r2, [r7, #12]
 8008090:	4313      	orrs	r3, r2
 8008092:	60fb      	str	r3, [r7, #12]
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	68fa      	ldr	r2, [r7, #12]
 8008098:	601a      	str	r2, [r3, #0]
 800809a:	683b      	ldr	r3, [r7, #0]
 800809c:	689a      	ldr	r2, [r3, #8]
 800809e:	687b      	ldr	r3, [r7, #4]
 80080a0:	62da      	str	r2, [r3, #44]	; 0x2c
 80080a2:	683b      	ldr	r3, [r7, #0]
 80080a4:	681a      	ldr	r2, [r3, #0]
 80080a6:	687b      	ldr	r3, [r7, #4]
 80080a8:	629a      	str	r2, [r3, #40]	; 0x28
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	4a0c      	ldr	r2, [pc, #48]	; (80080e0 <TIM_Base_SetConfig+0x128>)
 80080ae:	4293      	cmp	r3, r2
 80080b0:	d003      	beq.n	80080ba <TIM_Base_SetConfig+0x102>
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	4a0e      	ldr	r2, [pc, #56]	; (80080f0 <TIM_Base_SetConfig+0x138>)
 80080b6:	4293      	cmp	r3, r2
 80080b8:	d101      	bne.n	80080be <TIM_Base_SetConfig+0x106>
 80080ba:	2301      	movs	r3, #1
 80080bc:	e000      	b.n	80080c0 <TIM_Base_SetConfig+0x108>
 80080be:	2300      	movs	r3, #0
 80080c0:	2b00      	cmp	r3, #0
 80080c2:	d003      	beq.n	80080cc <TIM_Base_SetConfig+0x114>
 80080c4:	683b      	ldr	r3, [r7, #0]
 80080c6:	691a      	ldr	r2, [r3, #16]
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	631a      	str	r2, [r3, #48]	; 0x30
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	2201      	movs	r2, #1
 80080d0:	615a      	str	r2, [r3, #20]
 80080d2:	bf00      	nop
 80080d4:	3714      	adds	r7, #20
 80080d6:	46bd      	mov	sp, r7
 80080d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080dc:	4770      	bx	lr
 80080de:	bf00      	nop
 80080e0:	40010000 	.word	0x40010000
 80080e4:	40000400 	.word	0x40000400
 80080e8:	40000800 	.word	0x40000800
 80080ec:	40000c00 	.word	0x40000c00
 80080f0:	40010400 	.word	0x40010400
 80080f4:	40014000 	.word	0x40014000
 80080f8:	40014400 	.word	0x40014400
 80080fc:	40014800 	.word	0x40014800
 8008100:	40001800 	.word	0x40001800
 8008104:	40001c00 	.word	0x40001c00
 8008108:	40002000 	.word	0x40002000

0800810c <HAL_TIMEx_CommutationCallback>:
 800810c:	b480      	push	{r7}
 800810e:	b083      	sub	sp, #12
 8008110:	af00      	add	r7, sp, #0
 8008112:	6078      	str	r0, [r7, #4]
 8008114:	bf00      	nop
 8008116:	370c      	adds	r7, #12
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr

08008120 <HAL_TIMEx_BreakCallback>:
 8008120:	b480      	push	{r7}
 8008122:	b083      	sub	sp, #12
 8008124:	af00      	add	r7, sp, #0
 8008126:	6078      	str	r0, [r7, #4]
 8008128:	bf00      	nop
 800812a:	370c      	adds	r7, #12
 800812c:	46bd      	mov	sp, r7
 800812e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008132:	4770      	bx	lr

08008134 <HAL_UART_Init>:
 8008134:	b580      	push	{r7, lr}
 8008136:	b082      	sub	sp, #8
 8008138:	af00      	add	r7, sp, #0
 800813a:	6078      	str	r0, [r7, #4]
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	2b00      	cmp	r3, #0
 8008140:	d101      	bne.n	8008146 <HAL_UART_Init+0x12>
 8008142:	2301      	movs	r3, #1
 8008144:	e03f      	b.n	80081c6 <HAL_UART_Init+0x92>
 8008146:	687b      	ldr	r3, [r7, #4]
 8008148:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800814c:	b2db      	uxtb	r3, r3
 800814e:	2b00      	cmp	r3, #0
 8008150:	d106      	bne.n	8008160 <HAL_UART_Init+0x2c>
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	2200      	movs	r2, #0
 8008156:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800815a:	6878      	ldr	r0, [r7, #4]
 800815c:	f002 fa26 	bl	800a5ac <HAL_UART_MspInit>
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	2224      	movs	r2, #36	; 0x24
 8008164:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8008168:	687b      	ldr	r3, [r7, #4]
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	68da      	ldr	r2, [r3, #12]
 800816e:	687b      	ldr	r3, [r7, #4]
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8008176:	60da      	str	r2, [r3, #12]
 8008178:	6878      	ldr	r0, [r7, #4]
 800817a:	f000 fc4b 	bl	8008a14 <UART_SetConfig>
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	691a      	ldr	r2, [r3, #16]
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	681b      	ldr	r3, [r3, #0]
 8008188:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800818c:	611a      	str	r2, [r3, #16]
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	681b      	ldr	r3, [r3, #0]
 8008192:	695a      	ldr	r2, [r3, #20]
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	681b      	ldr	r3, [r3, #0]
 8008198:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800819c:	615a      	str	r2, [r3, #20]
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	681b      	ldr	r3, [r3, #0]
 80081a2:	68da      	ldr	r2, [r3, #12]
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80081ac:	60da      	str	r2, [r3, #12]
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	2200      	movs	r2, #0
 80081b2:	63da      	str	r2, [r3, #60]	; 0x3c
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	2220      	movs	r2, #32
 80081b8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	2220      	movs	r2, #32
 80081c0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80081c4:	2300      	movs	r3, #0
 80081c6:	4618      	mov	r0, r3
 80081c8:	3708      	adds	r7, #8
 80081ca:	46bd      	mov	sp, r7
 80081cc:	bd80      	pop	{r7, pc}

080081ce <HAL_UART_Transmit>:
 80081ce:	b580      	push	{r7, lr}
 80081d0:	b088      	sub	sp, #32
 80081d2:	af02      	add	r7, sp, #8
 80081d4:	60f8      	str	r0, [r7, #12]
 80081d6:	60b9      	str	r1, [r7, #8]
 80081d8:	603b      	str	r3, [r7, #0]
 80081da:	4613      	mov	r3, r2
 80081dc:	80fb      	strh	r3, [r7, #6]
 80081de:	2300      	movs	r3, #0
 80081e0:	617b      	str	r3, [r7, #20]
 80081e2:	68fb      	ldr	r3, [r7, #12]
 80081e4:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80081e8:	b2db      	uxtb	r3, r3
 80081ea:	2b20      	cmp	r3, #32
 80081ec:	f040 8083 	bne.w	80082f6 <HAL_UART_Transmit+0x128>
 80081f0:	68bb      	ldr	r3, [r7, #8]
 80081f2:	2b00      	cmp	r3, #0
 80081f4:	d002      	beq.n	80081fc <HAL_UART_Transmit+0x2e>
 80081f6:	88fb      	ldrh	r3, [r7, #6]
 80081f8:	2b00      	cmp	r3, #0
 80081fa:	d101      	bne.n	8008200 <HAL_UART_Transmit+0x32>
 80081fc:	2301      	movs	r3, #1
 80081fe:	e07b      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 8008200:	68fb      	ldr	r3, [r7, #12]
 8008202:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8008206:	2b01      	cmp	r3, #1
 8008208:	d101      	bne.n	800820e <HAL_UART_Transmit+0x40>
 800820a:	2302      	movs	r3, #2
 800820c:	e074      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 800820e:	68fb      	ldr	r3, [r7, #12]
 8008210:	2201      	movs	r2, #1
 8008212:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008216:	68fb      	ldr	r3, [r7, #12]
 8008218:	2200      	movs	r2, #0
 800821a:	63da      	str	r2, [r3, #60]	; 0x3c
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	2221      	movs	r2, #33	; 0x21
 8008220:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8008224:	f7fb fef8 	bl	8004018 <HAL_GetTick>
 8008228:	6178      	str	r0, [r7, #20]
 800822a:	68fb      	ldr	r3, [r7, #12]
 800822c:	88fa      	ldrh	r2, [r7, #6]
 800822e:	849a      	strh	r2, [r3, #36]	; 0x24
 8008230:	68fb      	ldr	r3, [r7, #12]
 8008232:	88fa      	ldrh	r2, [r7, #6]
 8008234:	84da      	strh	r2, [r3, #38]	; 0x26
 8008236:	e042      	b.n	80082be <HAL_UART_Transmit+0xf0>
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800823c:	b29b      	uxth	r3, r3
 800823e:	3b01      	subs	r3, #1
 8008240:	b29a      	uxth	r2, r3
 8008242:	68fb      	ldr	r3, [r7, #12]
 8008244:	84da      	strh	r2, [r3, #38]	; 0x26
 8008246:	68fb      	ldr	r3, [r7, #12]
 8008248:	689b      	ldr	r3, [r3, #8]
 800824a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800824e:	d122      	bne.n	8008296 <HAL_UART_Transmit+0xc8>
 8008250:	683b      	ldr	r3, [r7, #0]
 8008252:	9300      	str	r3, [sp, #0]
 8008254:	697b      	ldr	r3, [r7, #20]
 8008256:	2200      	movs	r2, #0
 8008258:	2180      	movs	r1, #128	; 0x80
 800825a:	68f8      	ldr	r0, [r7, #12]
 800825c:	f000 fa58 	bl	8008710 <UART_WaitOnFlagUntilTimeout>
 8008260:	4603      	mov	r3, r0
 8008262:	2b00      	cmp	r3, #0
 8008264:	d001      	beq.n	800826a <HAL_UART_Transmit+0x9c>
 8008266:	2303      	movs	r3, #3
 8008268:	e046      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 800826a:	68bb      	ldr	r3, [r7, #8]
 800826c:	613b      	str	r3, [r7, #16]
 800826e:	693b      	ldr	r3, [r7, #16]
 8008270:	881b      	ldrh	r3, [r3, #0]
 8008272:	461a      	mov	r2, r3
 8008274:	68fb      	ldr	r3, [r7, #12]
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800827c:	605a      	str	r2, [r3, #4]
 800827e:	68fb      	ldr	r3, [r7, #12]
 8008280:	691b      	ldr	r3, [r3, #16]
 8008282:	2b00      	cmp	r3, #0
 8008284:	d103      	bne.n	800828e <HAL_UART_Transmit+0xc0>
 8008286:	68bb      	ldr	r3, [r7, #8]
 8008288:	3302      	adds	r3, #2
 800828a:	60bb      	str	r3, [r7, #8]
 800828c:	e017      	b.n	80082be <HAL_UART_Transmit+0xf0>
 800828e:	68bb      	ldr	r3, [r7, #8]
 8008290:	3301      	adds	r3, #1
 8008292:	60bb      	str	r3, [r7, #8]
 8008294:	e013      	b.n	80082be <HAL_UART_Transmit+0xf0>
 8008296:	683b      	ldr	r3, [r7, #0]
 8008298:	9300      	str	r3, [sp, #0]
 800829a:	697b      	ldr	r3, [r7, #20]
 800829c:	2200      	movs	r2, #0
 800829e:	2180      	movs	r1, #128	; 0x80
 80082a0:	68f8      	ldr	r0, [r7, #12]
 80082a2:	f000 fa35 	bl	8008710 <UART_WaitOnFlagUntilTimeout>
 80082a6:	4603      	mov	r3, r0
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d001      	beq.n	80082b0 <HAL_UART_Transmit+0xe2>
 80082ac:	2303      	movs	r3, #3
 80082ae:	e023      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 80082b0:	68bb      	ldr	r3, [r7, #8]
 80082b2:	1c5a      	adds	r2, r3, #1
 80082b4:	60ba      	str	r2, [r7, #8]
 80082b6:	781a      	ldrb	r2, [r3, #0]
 80082b8:	68fb      	ldr	r3, [r7, #12]
 80082ba:	681b      	ldr	r3, [r3, #0]
 80082bc:	605a      	str	r2, [r3, #4]
 80082be:	68fb      	ldr	r3, [r7, #12]
 80082c0:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80082c2:	b29b      	uxth	r3, r3
 80082c4:	2b00      	cmp	r3, #0
 80082c6:	d1b7      	bne.n	8008238 <HAL_UART_Transmit+0x6a>
 80082c8:	683b      	ldr	r3, [r7, #0]
 80082ca:	9300      	str	r3, [sp, #0]
 80082cc:	697b      	ldr	r3, [r7, #20]
 80082ce:	2200      	movs	r2, #0
 80082d0:	2140      	movs	r1, #64	; 0x40
 80082d2:	68f8      	ldr	r0, [r7, #12]
 80082d4:	f000 fa1c 	bl	8008710 <UART_WaitOnFlagUntilTimeout>
 80082d8:	4603      	mov	r3, r0
 80082da:	2b00      	cmp	r3, #0
 80082dc:	d001      	beq.n	80082e2 <HAL_UART_Transmit+0x114>
 80082de:	2303      	movs	r3, #3
 80082e0:	e00a      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 80082e2:	68fb      	ldr	r3, [r7, #12]
 80082e4:	2220      	movs	r2, #32
 80082e6:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80082ea:	68fb      	ldr	r3, [r7, #12]
 80082ec:	2200      	movs	r2, #0
 80082ee:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80082f2:	2300      	movs	r3, #0
 80082f4:	e000      	b.n	80082f8 <HAL_UART_Transmit+0x12a>
 80082f6:	2302      	movs	r3, #2
 80082f8:	4618      	mov	r0, r3
 80082fa:	3718      	adds	r7, #24
 80082fc:	46bd      	mov	sp, r7
 80082fe:	bd80      	pop	{r7, pc}

08008300 <HAL_UART_Receive>:
 8008300:	b580      	push	{r7, lr}
 8008302:	b088      	sub	sp, #32
 8008304:	af02      	add	r7, sp, #8
 8008306:	60f8      	str	r0, [r7, #12]
 8008308:	60b9      	str	r1, [r7, #8]
 800830a:	603b      	str	r3, [r7, #0]
 800830c:	4613      	mov	r3, r2
 800830e:	80fb      	strh	r3, [r7, #6]
 8008310:	2300      	movs	r3, #0
 8008312:	617b      	str	r3, [r7, #20]
 8008314:	68fb      	ldr	r3, [r7, #12]
 8008316:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800831a:	b2db      	uxtb	r3, r3
 800831c:	2b20      	cmp	r3, #32
 800831e:	f040 8094 	bne.w	800844a <HAL_UART_Receive+0x14a>
 8008322:	68bb      	ldr	r3, [r7, #8]
 8008324:	2b00      	cmp	r3, #0
 8008326:	d002      	beq.n	800832e <HAL_UART_Receive+0x2e>
 8008328:	88fb      	ldrh	r3, [r7, #6]
 800832a:	2b00      	cmp	r3, #0
 800832c:	d101      	bne.n	8008332 <HAL_UART_Receive+0x32>
 800832e:	2301      	movs	r3, #1
 8008330:	e08c      	b.n	800844c <HAL_UART_Receive+0x14c>
 8008332:	68fb      	ldr	r3, [r7, #12]
 8008334:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8008338:	2b01      	cmp	r3, #1
 800833a:	d101      	bne.n	8008340 <HAL_UART_Receive+0x40>
 800833c:	2302      	movs	r3, #2
 800833e:	e085      	b.n	800844c <HAL_UART_Receive+0x14c>
 8008340:	68fb      	ldr	r3, [r7, #12]
 8008342:	2201      	movs	r2, #1
 8008344:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008348:	68fb      	ldr	r3, [r7, #12]
 800834a:	2200      	movs	r2, #0
 800834c:	63da      	str	r2, [r3, #60]	; 0x3c
 800834e:	68fb      	ldr	r3, [r7, #12]
 8008350:	2222      	movs	r2, #34	; 0x22
 8008352:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8008356:	f7fb fe5f 	bl	8004018 <HAL_GetTick>
 800835a:	6178      	str	r0, [r7, #20]
 800835c:	68fb      	ldr	r3, [r7, #12]
 800835e:	88fa      	ldrh	r2, [r7, #6]
 8008360:	859a      	strh	r2, [r3, #44]	; 0x2c
 8008362:	68fb      	ldr	r3, [r7, #12]
 8008364:	88fa      	ldrh	r2, [r7, #6]
 8008366:	85da      	strh	r2, [r3, #46]	; 0x2e
 8008368:	e05c      	b.n	8008424 <HAL_UART_Receive+0x124>
 800836a:	68fb      	ldr	r3, [r7, #12]
 800836c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800836e:	b29b      	uxth	r3, r3
 8008370:	3b01      	subs	r3, #1
 8008372:	b29a      	uxth	r2, r3
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	85da      	strh	r2, [r3, #46]	; 0x2e
 8008378:	68fb      	ldr	r3, [r7, #12]
 800837a:	689b      	ldr	r3, [r3, #8]
 800837c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008380:	d12b      	bne.n	80083da <HAL_UART_Receive+0xda>
 8008382:	683b      	ldr	r3, [r7, #0]
 8008384:	9300      	str	r3, [sp, #0]
 8008386:	697b      	ldr	r3, [r7, #20]
 8008388:	2200      	movs	r2, #0
 800838a:	2120      	movs	r1, #32
 800838c:	68f8      	ldr	r0, [r7, #12]
 800838e:	f000 f9bf 	bl	8008710 <UART_WaitOnFlagUntilTimeout>
 8008392:	4603      	mov	r3, r0
 8008394:	2b00      	cmp	r3, #0
 8008396:	d001      	beq.n	800839c <HAL_UART_Receive+0x9c>
 8008398:	2303      	movs	r3, #3
 800839a:	e057      	b.n	800844c <HAL_UART_Receive+0x14c>
 800839c:	68bb      	ldr	r3, [r7, #8]
 800839e:	613b      	str	r3, [r7, #16]
 80083a0:	68fb      	ldr	r3, [r7, #12]
 80083a2:	691b      	ldr	r3, [r3, #16]
 80083a4:	2b00      	cmp	r3, #0
 80083a6:	d10c      	bne.n	80083c2 <HAL_UART_Receive+0xc2>
 80083a8:	68fb      	ldr	r3, [r7, #12]
 80083aa:	681b      	ldr	r3, [r3, #0]
 80083ac:	685b      	ldr	r3, [r3, #4]
 80083ae:	b29b      	uxth	r3, r3
 80083b0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80083b4:	b29a      	uxth	r2, r3
 80083b6:	693b      	ldr	r3, [r7, #16]
 80083b8:	801a      	strh	r2, [r3, #0]
 80083ba:	68bb      	ldr	r3, [r7, #8]
 80083bc:	3302      	adds	r3, #2
 80083be:	60bb      	str	r3, [r7, #8]
 80083c0:	e030      	b.n	8008424 <HAL_UART_Receive+0x124>
 80083c2:	68fb      	ldr	r3, [r7, #12]
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	685b      	ldr	r3, [r3, #4]
 80083c8:	b29b      	uxth	r3, r3
 80083ca:	b2db      	uxtb	r3, r3
 80083cc:	b29a      	uxth	r2, r3
 80083ce:	693b      	ldr	r3, [r7, #16]
 80083d0:	801a      	strh	r2, [r3, #0]
 80083d2:	68bb      	ldr	r3, [r7, #8]
 80083d4:	3301      	adds	r3, #1
 80083d6:	60bb      	str	r3, [r7, #8]
 80083d8:	e024      	b.n	8008424 <HAL_UART_Receive+0x124>
 80083da:	683b      	ldr	r3, [r7, #0]
 80083dc:	9300      	str	r3, [sp, #0]
 80083de:	697b      	ldr	r3, [r7, #20]
 80083e0:	2200      	movs	r2, #0
 80083e2:	2120      	movs	r1, #32
 80083e4:	68f8      	ldr	r0, [r7, #12]
 80083e6:	f000 f993 	bl	8008710 <UART_WaitOnFlagUntilTimeout>
 80083ea:	4603      	mov	r3, r0
 80083ec:	2b00      	cmp	r3, #0
 80083ee:	d001      	beq.n	80083f4 <HAL_UART_Receive+0xf4>
 80083f0:	2303      	movs	r3, #3
 80083f2:	e02b      	b.n	800844c <HAL_UART_Receive+0x14c>
 80083f4:	68fb      	ldr	r3, [r7, #12]
 80083f6:	691b      	ldr	r3, [r3, #16]
 80083f8:	2b00      	cmp	r3, #0
 80083fa:	d108      	bne.n	800840e <HAL_UART_Receive+0x10e>
 80083fc:	68fb      	ldr	r3, [r7, #12]
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	6859      	ldr	r1, [r3, #4]
 8008402:	68bb      	ldr	r3, [r7, #8]
 8008404:	1c5a      	adds	r2, r3, #1
 8008406:	60ba      	str	r2, [r7, #8]
 8008408:	b2ca      	uxtb	r2, r1
 800840a:	701a      	strb	r2, [r3, #0]
 800840c:	e00a      	b.n	8008424 <HAL_UART_Receive+0x124>
 800840e:	68fb      	ldr	r3, [r7, #12]
 8008410:	681b      	ldr	r3, [r3, #0]
 8008412:	685b      	ldr	r3, [r3, #4]
 8008414:	b2da      	uxtb	r2, r3
 8008416:	68bb      	ldr	r3, [r7, #8]
 8008418:	1c59      	adds	r1, r3, #1
 800841a:	60b9      	str	r1, [r7, #8]
 800841c:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8008420:	b2d2      	uxtb	r2, r2
 8008422:	701a      	strb	r2, [r3, #0]
 8008424:	68fb      	ldr	r3, [r7, #12]
 8008426:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8008428:	b29b      	uxth	r3, r3
 800842a:	2b00      	cmp	r3, #0
 800842c:	d19d      	bne.n	800836a <HAL_UART_Receive+0x6a>
 800842e:	68fb      	ldr	r3, [r7, #12]
 8008430:	2220      	movs	r2, #32
 8008432:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8008436:	68fb      	ldr	r3, [r7, #12]
 8008438:	2200      	movs	r2, #0
 800843a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800843e:	68b9      	ldr	r1, [r7, #8]
 8008440:	4804      	ldr	r0, [pc, #16]	; (8008454 <HAL_UART_Receive+0x154>)
 8008442:	f7fb fbad 	bl	8003ba0 <debug_printf>
 8008446:	2300      	movs	r3, #0
 8008448:	e000      	b.n	800844c <HAL_UART_Receive+0x14c>
 800844a:	2302      	movs	r3, #2
 800844c:	4618      	mov	r0, r3
 800844e:	3718      	adds	r7, #24
 8008450:	46bd      	mov	sp, r7
 8008452:	bd80      	pop	{r7, pc}
 8008454:	08010cf8 	.word	0x08010cf8

08008458 <HAL_UART_Receive_IT>:
 8008458:	b480      	push	{r7}
 800845a:	b085      	sub	sp, #20
 800845c:	af00      	add	r7, sp, #0
 800845e:	60f8      	str	r0, [r7, #12]
 8008460:	60b9      	str	r1, [r7, #8]
 8008462:	4613      	mov	r3, r2
 8008464:	80fb      	strh	r3, [r7, #6]
 8008466:	68fb      	ldr	r3, [r7, #12]
 8008468:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 800846c:	b2db      	uxtb	r3, r3
 800846e:	2b20      	cmp	r3, #32
 8008470:	d138      	bne.n	80084e4 <HAL_UART_Receive_IT+0x8c>
 8008472:	68bb      	ldr	r3, [r7, #8]
 8008474:	2b00      	cmp	r3, #0
 8008476:	d002      	beq.n	800847e <HAL_UART_Receive_IT+0x26>
 8008478:	88fb      	ldrh	r3, [r7, #6]
 800847a:	2b00      	cmp	r3, #0
 800847c:	d101      	bne.n	8008482 <HAL_UART_Receive_IT+0x2a>
 800847e:	2301      	movs	r3, #1
 8008480:	e031      	b.n	80084e6 <HAL_UART_Receive_IT+0x8e>
 8008482:	68fb      	ldr	r3, [r7, #12]
 8008484:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8008488:	2b01      	cmp	r3, #1
 800848a:	d101      	bne.n	8008490 <HAL_UART_Receive_IT+0x38>
 800848c:	2302      	movs	r3, #2
 800848e:	e02a      	b.n	80084e6 <HAL_UART_Receive_IT+0x8e>
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	2201      	movs	r2, #1
 8008494:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008498:	68fb      	ldr	r3, [r7, #12]
 800849a:	68ba      	ldr	r2, [r7, #8]
 800849c:	629a      	str	r2, [r3, #40]	; 0x28
 800849e:	68fb      	ldr	r3, [r7, #12]
 80084a0:	88fa      	ldrh	r2, [r7, #6]
 80084a2:	859a      	strh	r2, [r3, #44]	; 0x2c
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	88fa      	ldrh	r2, [r7, #6]
 80084a8:	85da      	strh	r2, [r3, #46]	; 0x2e
 80084aa:	68fb      	ldr	r3, [r7, #12]
 80084ac:	2200      	movs	r2, #0
 80084ae:	63da      	str	r2, [r3, #60]	; 0x3c
 80084b0:	68fb      	ldr	r3, [r7, #12]
 80084b2:	2222      	movs	r2, #34	; 0x22
 80084b4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80084b8:	68fb      	ldr	r3, [r7, #12]
 80084ba:	2200      	movs	r2, #0
 80084bc:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80084c0:	68fb      	ldr	r3, [r7, #12]
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	695a      	ldr	r2, [r3, #20]
 80084c6:	68fb      	ldr	r3, [r7, #12]
 80084c8:	681b      	ldr	r3, [r3, #0]
 80084ca:	f042 0201 	orr.w	r2, r2, #1
 80084ce:	615a      	str	r2, [r3, #20]
 80084d0:	68fb      	ldr	r3, [r7, #12]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	68da      	ldr	r2, [r3, #12]
 80084d6:	68fb      	ldr	r3, [r7, #12]
 80084d8:	681b      	ldr	r3, [r3, #0]
 80084da:	f442 7290 	orr.w	r2, r2, #288	; 0x120
 80084de:	60da      	str	r2, [r3, #12]
 80084e0:	2300      	movs	r3, #0
 80084e2:	e000      	b.n	80084e6 <HAL_UART_Receive_IT+0x8e>
 80084e4:	2302      	movs	r3, #2
 80084e6:	4618      	mov	r0, r3
 80084e8:	3714      	adds	r7, #20
 80084ea:	46bd      	mov	sp, r7
 80084ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084f0:	4770      	bx	lr
	...

080084f4 <HAL_UART_IRQHandler>:
 80084f4:	b580      	push	{r7, lr}
 80084f6:	b088      	sub	sp, #32
 80084f8:	af00      	add	r7, sp, #0
 80084fa:	6078      	str	r0, [r7, #4]
 80084fc:	687b      	ldr	r3, [r7, #4]
 80084fe:	681b      	ldr	r3, [r3, #0]
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	61fb      	str	r3, [r7, #28]
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	68db      	ldr	r3, [r3, #12]
 800850a:	61bb      	str	r3, [r7, #24]
 800850c:	687b      	ldr	r3, [r7, #4]
 800850e:	681b      	ldr	r3, [r3, #0]
 8008510:	695b      	ldr	r3, [r3, #20]
 8008512:	617b      	str	r3, [r7, #20]
 8008514:	2300      	movs	r3, #0
 8008516:	613b      	str	r3, [r7, #16]
 8008518:	2300      	movs	r3, #0
 800851a:	60fb      	str	r3, [r7, #12]
 800851c:	69fb      	ldr	r3, [r7, #28]
 800851e:	f003 030f 	and.w	r3, r3, #15
 8008522:	613b      	str	r3, [r7, #16]
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	2b00      	cmp	r3, #0
 8008528:	d10d      	bne.n	8008546 <HAL_UART_IRQHandler+0x52>
 800852a:	69fb      	ldr	r3, [r7, #28]
 800852c:	f003 0320 	and.w	r3, r3, #32
 8008530:	2b00      	cmp	r3, #0
 8008532:	d008      	beq.n	8008546 <HAL_UART_IRQHandler+0x52>
 8008534:	69bb      	ldr	r3, [r7, #24]
 8008536:	f003 0320 	and.w	r3, r3, #32
 800853a:	2b00      	cmp	r3, #0
 800853c:	d003      	beq.n	8008546 <HAL_UART_IRQHandler+0x52>
 800853e:	6878      	ldr	r0, [r7, #4]
 8008540:	f000 f9d0 	bl	80088e4 <UART_Receive_IT>
 8008544:	e0cb      	b.n	80086de <HAL_UART_IRQHandler+0x1ea>
 8008546:	693b      	ldr	r3, [r7, #16]
 8008548:	2b00      	cmp	r3, #0
 800854a:	f000 80ab 	beq.w	80086a4 <HAL_UART_IRQHandler+0x1b0>
 800854e:	697b      	ldr	r3, [r7, #20]
 8008550:	f003 0301 	and.w	r3, r3, #1
 8008554:	2b00      	cmp	r3, #0
 8008556:	d105      	bne.n	8008564 <HAL_UART_IRQHandler+0x70>
 8008558:	69bb      	ldr	r3, [r7, #24]
 800855a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800855e:	2b00      	cmp	r3, #0
 8008560:	f000 80a0 	beq.w	80086a4 <HAL_UART_IRQHandler+0x1b0>
 8008564:	69fb      	ldr	r3, [r7, #28]
 8008566:	f003 0301 	and.w	r3, r3, #1
 800856a:	2b00      	cmp	r3, #0
 800856c:	d00a      	beq.n	8008584 <HAL_UART_IRQHandler+0x90>
 800856e:	69bb      	ldr	r3, [r7, #24]
 8008570:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008574:	2b00      	cmp	r3, #0
 8008576:	d005      	beq.n	8008584 <HAL_UART_IRQHandler+0x90>
 8008578:	687b      	ldr	r3, [r7, #4]
 800857a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800857c:	f043 0201 	orr.w	r2, r3, #1
 8008580:	687b      	ldr	r3, [r7, #4]
 8008582:	63da      	str	r2, [r3, #60]	; 0x3c
 8008584:	69fb      	ldr	r3, [r7, #28]
 8008586:	f003 0304 	and.w	r3, r3, #4
 800858a:	2b00      	cmp	r3, #0
 800858c:	d00a      	beq.n	80085a4 <HAL_UART_IRQHandler+0xb0>
 800858e:	697b      	ldr	r3, [r7, #20]
 8008590:	f003 0301 	and.w	r3, r3, #1
 8008594:	2b00      	cmp	r3, #0
 8008596:	d005      	beq.n	80085a4 <HAL_UART_IRQHandler+0xb0>
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800859c:	f043 0202 	orr.w	r2, r3, #2
 80085a0:	687b      	ldr	r3, [r7, #4]
 80085a2:	63da      	str	r2, [r3, #60]	; 0x3c
 80085a4:	69fb      	ldr	r3, [r7, #28]
 80085a6:	f003 0302 	and.w	r3, r3, #2
 80085aa:	2b00      	cmp	r3, #0
 80085ac:	d00a      	beq.n	80085c4 <HAL_UART_IRQHandler+0xd0>
 80085ae:	697b      	ldr	r3, [r7, #20]
 80085b0:	f003 0301 	and.w	r3, r3, #1
 80085b4:	2b00      	cmp	r3, #0
 80085b6:	d005      	beq.n	80085c4 <HAL_UART_IRQHandler+0xd0>
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80085bc:	f043 0204 	orr.w	r2, r3, #4
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	63da      	str	r2, [r3, #60]	; 0x3c
 80085c4:	69fb      	ldr	r3, [r7, #28]
 80085c6:	f003 0308 	and.w	r3, r3, #8
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d00a      	beq.n	80085e4 <HAL_UART_IRQHandler+0xf0>
 80085ce:	697b      	ldr	r3, [r7, #20]
 80085d0:	f003 0301 	and.w	r3, r3, #1
 80085d4:	2b00      	cmp	r3, #0
 80085d6:	d005      	beq.n	80085e4 <HAL_UART_IRQHandler+0xf0>
 80085d8:	687b      	ldr	r3, [r7, #4]
 80085da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80085dc:	f043 0208 	orr.w	r2, r3, #8
 80085e0:	687b      	ldr	r3, [r7, #4]
 80085e2:	63da      	str	r2, [r3, #60]	; 0x3c
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d077      	beq.n	80086dc <HAL_UART_IRQHandler+0x1e8>
 80085ec:	69fb      	ldr	r3, [r7, #28]
 80085ee:	f003 0320 	and.w	r3, r3, #32
 80085f2:	2b00      	cmp	r3, #0
 80085f4:	d007      	beq.n	8008606 <HAL_UART_IRQHandler+0x112>
 80085f6:	69bb      	ldr	r3, [r7, #24]
 80085f8:	f003 0320 	and.w	r3, r3, #32
 80085fc:	2b00      	cmp	r3, #0
 80085fe:	d002      	beq.n	8008606 <HAL_UART_IRQHandler+0x112>
 8008600:	6878      	ldr	r0, [r7, #4]
 8008602:	f000 f96f 	bl	80088e4 <UART_Receive_IT>
 8008606:	687b      	ldr	r3, [r7, #4]
 8008608:	681b      	ldr	r3, [r3, #0]
 800860a:	695b      	ldr	r3, [r3, #20]
 800860c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008610:	2b00      	cmp	r3, #0
 8008612:	bf14      	ite	ne
 8008614:	2301      	movne	r3, #1
 8008616:	2300      	moveq	r3, #0
 8008618:	b2db      	uxtb	r3, r3
 800861a:	60fb      	str	r3, [r7, #12]
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008620:	f003 0308 	and.w	r3, r3, #8
 8008624:	2b00      	cmp	r3, #0
 8008626:	d102      	bne.n	800862e <HAL_UART_IRQHandler+0x13a>
 8008628:	68fb      	ldr	r3, [r7, #12]
 800862a:	2b00      	cmp	r3, #0
 800862c:	d031      	beq.n	8008692 <HAL_UART_IRQHandler+0x19e>
 800862e:	6878      	ldr	r0, [r7, #4]
 8008630:	f000 f8b8 	bl	80087a4 <UART_EndRxTransfer>
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	681b      	ldr	r3, [r3, #0]
 8008638:	695b      	ldr	r3, [r3, #20]
 800863a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800863e:	2b00      	cmp	r3, #0
 8008640:	d023      	beq.n	800868a <HAL_UART_IRQHandler+0x196>
 8008642:	687b      	ldr	r3, [r7, #4]
 8008644:	681b      	ldr	r3, [r3, #0]
 8008646:	695a      	ldr	r2, [r3, #20]
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008650:	615a      	str	r2, [r3, #20]
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008656:	2b00      	cmp	r3, #0
 8008658:	d013      	beq.n	8008682 <HAL_UART_IRQHandler+0x18e>
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800865e:	4a21      	ldr	r2, [pc, #132]	; (80086e4 <HAL_UART_IRQHandler+0x1f0>)
 8008660:	651a      	str	r2, [r3, #80]	; 0x50
 8008662:	687b      	ldr	r3, [r7, #4]
 8008664:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008666:	4618      	mov	r0, r3
 8008668:	f7fb fe2a 	bl	80042c0 <HAL_DMA_Abort_IT>
 800866c:	4603      	mov	r3, r0
 800866e:	2b00      	cmp	r3, #0
 8008670:	d016      	beq.n	80086a0 <HAL_UART_IRQHandler+0x1ac>
 8008672:	687b      	ldr	r3, [r7, #4]
 8008674:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008676:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008678:	687a      	ldr	r2, [r7, #4]
 800867a:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800867c:	4610      	mov	r0, r2
 800867e:	4798      	blx	r3
 8008680:	e00e      	b.n	80086a0 <HAL_UART_IRQHandler+0x1ac>
 8008682:	6878      	ldr	r0, [r7, #4]
 8008684:	f000 f83a 	bl	80086fc <HAL_UART_ErrorCallback>
 8008688:	e00a      	b.n	80086a0 <HAL_UART_IRQHandler+0x1ac>
 800868a:	6878      	ldr	r0, [r7, #4]
 800868c:	f000 f836 	bl	80086fc <HAL_UART_ErrorCallback>
 8008690:	e006      	b.n	80086a0 <HAL_UART_IRQHandler+0x1ac>
 8008692:	6878      	ldr	r0, [r7, #4]
 8008694:	f000 f832 	bl	80086fc <HAL_UART_ErrorCallback>
 8008698:	687b      	ldr	r3, [r7, #4]
 800869a:	2200      	movs	r2, #0
 800869c:	63da      	str	r2, [r3, #60]	; 0x3c
 800869e:	e01d      	b.n	80086dc <HAL_UART_IRQHandler+0x1e8>
 80086a0:	bf00      	nop
 80086a2:	e01b      	b.n	80086dc <HAL_UART_IRQHandler+0x1e8>
 80086a4:	69fb      	ldr	r3, [r7, #28]
 80086a6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80086aa:	2b00      	cmp	r3, #0
 80086ac:	d008      	beq.n	80086c0 <HAL_UART_IRQHandler+0x1cc>
 80086ae:	69bb      	ldr	r3, [r7, #24]
 80086b0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80086b4:	2b00      	cmp	r3, #0
 80086b6:	d003      	beq.n	80086c0 <HAL_UART_IRQHandler+0x1cc>
 80086b8:	6878      	ldr	r0, [r7, #4]
 80086ba:	f000 f8a5 	bl	8008808 <UART_Transmit_IT>
 80086be:	e00e      	b.n	80086de <HAL_UART_IRQHandler+0x1ea>
 80086c0:	69fb      	ldr	r3, [r7, #28]
 80086c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d009      	beq.n	80086de <HAL_UART_IRQHandler+0x1ea>
 80086ca:	69bb      	ldr	r3, [r7, #24]
 80086cc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80086d0:	2b00      	cmp	r3, #0
 80086d2:	d004      	beq.n	80086de <HAL_UART_IRQHandler+0x1ea>
 80086d4:	6878      	ldr	r0, [r7, #4]
 80086d6:	f000 f8ed 	bl	80088b4 <UART_EndTransmit_IT>
 80086da:	e000      	b.n	80086de <HAL_UART_IRQHandler+0x1ea>
 80086dc:	bf00      	nop
 80086de:	3720      	adds	r7, #32
 80086e0:	46bd      	mov	sp, r7
 80086e2:	bd80      	pop	{r7, pc}
 80086e4:	080087e1 	.word	0x080087e1

080086e8 <HAL_UART_TxCpltCallback>:
 80086e8:	b480      	push	{r7}
 80086ea:	b083      	sub	sp, #12
 80086ec:	af00      	add	r7, sp, #0
 80086ee:	6078      	str	r0, [r7, #4]
 80086f0:	bf00      	nop
 80086f2:	370c      	adds	r7, #12
 80086f4:	46bd      	mov	sp, r7
 80086f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fa:	4770      	bx	lr

080086fc <HAL_UART_ErrorCallback>:
 80086fc:	b480      	push	{r7}
 80086fe:	b083      	sub	sp, #12
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
 8008704:	bf00      	nop
 8008706:	370c      	adds	r7, #12
 8008708:	46bd      	mov	sp, r7
 800870a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800870e:	4770      	bx	lr

08008710 <UART_WaitOnFlagUntilTimeout>:
 8008710:	b580      	push	{r7, lr}
 8008712:	b084      	sub	sp, #16
 8008714:	af00      	add	r7, sp, #0
 8008716:	60f8      	str	r0, [r7, #12]
 8008718:	60b9      	str	r1, [r7, #8]
 800871a:	603b      	str	r3, [r7, #0]
 800871c:	4613      	mov	r3, r2
 800871e:	71fb      	strb	r3, [r7, #7]
 8008720:	e02c      	b.n	800877c <UART_WaitOnFlagUntilTimeout+0x6c>
 8008722:	69bb      	ldr	r3, [r7, #24]
 8008724:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008728:	d028      	beq.n	800877c <UART_WaitOnFlagUntilTimeout+0x6c>
 800872a:	69bb      	ldr	r3, [r7, #24]
 800872c:	2b00      	cmp	r3, #0
 800872e:	d007      	beq.n	8008740 <UART_WaitOnFlagUntilTimeout+0x30>
 8008730:	f7fb fc72 	bl	8004018 <HAL_GetTick>
 8008734:	4602      	mov	r2, r0
 8008736:	683b      	ldr	r3, [r7, #0]
 8008738:	1ad3      	subs	r3, r2, r3
 800873a:	69ba      	ldr	r2, [r7, #24]
 800873c:	429a      	cmp	r2, r3
 800873e:	d21d      	bcs.n	800877c <UART_WaitOnFlagUntilTimeout+0x6c>
 8008740:	68fb      	ldr	r3, [r7, #12]
 8008742:	681b      	ldr	r3, [r3, #0]
 8008744:	68da      	ldr	r2, [r3, #12]
 8008746:	68fb      	ldr	r3, [r7, #12]
 8008748:	681b      	ldr	r3, [r3, #0]
 800874a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800874e:	60da      	str	r2, [r3, #12]
 8008750:	68fb      	ldr	r3, [r7, #12]
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	695a      	ldr	r2, [r3, #20]
 8008756:	68fb      	ldr	r3, [r7, #12]
 8008758:	681b      	ldr	r3, [r3, #0]
 800875a:	f022 0201 	bic.w	r2, r2, #1
 800875e:	615a      	str	r2, [r3, #20]
 8008760:	68fb      	ldr	r3, [r7, #12]
 8008762:	2220      	movs	r2, #32
 8008764:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8008768:	68fb      	ldr	r3, [r7, #12]
 800876a:	2220      	movs	r2, #32
 800876c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8008770:	68fb      	ldr	r3, [r7, #12]
 8008772:	2200      	movs	r2, #0
 8008774:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008778:	2303      	movs	r3, #3
 800877a:	e00f      	b.n	800879c <UART_WaitOnFlagUntilTimeout+0x8c>
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	681b      	ldr	r3, [r3, #0]
 8008780:	681a      	ldr	r2, [r3, #0]
 8008782:	68bb      	ldr	r3, [r7, #8]
 8008784:	4013      	ands	r3, r2
 8008786:	68ba      	ldr	r2, [r7, #8]
 8008788:	429a      	cmp	r2, r3
 800878a:	bf0c      	ite	eq
 800878c:	2301      	moveq	r3, #1
 800878e:	2300      	movne	r3, #0
 8008790:	b2db      	uxtb	r3, r3
 8008792:	461a      	mov	r2, r3
 8008794:	79fb      	ldrb	r3, [r7, #7]
 8008796:	429a      	cmp	r2, r3
 8008798:	d0c3      	beq.n	8008722 <UART_WaitOnFlagUntilTimeout+0x12>
 800879a:	2300      	movs	r3, #0
 800879c:	4618      	mov	r0, r3
 800879e:	3710      	adds	r7, #16
 80087a0:	46bd      	mov	sp, r7
 80087a2:	bd80      	pop	{r7, pc}

080087a4 <UART_EndRxTransfer>:
 80087a4:	b480      	push	{r7}
 80087a6:	b083      	sub	sp, #12
 80087a8:	af00      	add	r7, sp, #0
 80087aa:	6078      	str	r0, [r7, #4]
 80087ac:	687b      	ldr	r3, [r7, #4]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	68da      	ldr	r2, [r3, #12]
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80087ba:	60da      	str	r2, [r3, #12]
 80087bc:	687b      	ldr	r3, [r7, #4]
 80087be:	681b      	ldr	r3, [r3, #0]
 80087c0:	695a      	ldr	r2, [r3, #20]
 80087c2:	687b      	ldr	r3, [r7, #4]
 80087c4:	681b      	ldr	r3, [r3, #0]
 80087c6:	f022 0201 	bic.w	r2, r2, #1
 80087ca:	615a      	str	r2, [r3, #20]
 80087cc:	687b      	ldr	r3, [r7, #4]
 80087ce:	2220      	movs	r2, #32
 80087d0:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80087d4:	bf00      	nop
 80087d6:	370c      	adds	r7, #12
 80087d8:	46bd      	mov	sp, r7
 80087da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087de:	4770      	bx	lr

080087e0 <UART_DMAAbortOnError>:
 80087e0:	b580      	push	{r7, lr}
 80087e2:	b084      	sub	sp, #16
 80087e4:	af00      	add	r7, sp, #0
 80087e6:	6078      	str	r0, [r7, #4]
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80087ec:	60fb      	str	r3, [r7, #12]
 80087ee:	68fb      	ldr	r3, [r7, #12]
 80087f0:	2200      	movs	r2, #0
 80087f2:	85da      	strh	r2, [r3, #46]	; 0x2e
 80087f4:	68fb      	ldr	r3, [r7, #12]
 80087f6:	2200      	movs	r2, #0
 80087f8:	84da      	strh	r2, [r3, #38]	; 0x26
 80087fa:	68f8      	ldr	r0, [r7, #12]
 80087fc:	f7ff ff7e 	bl	80086fc <HAL_UART_ErrorCallback>
 8008800:	bf00      	nop
 8008802:	3710      	adds	r7, #16
 8008804:	46bd      	mov	sp, r7
 8008806:	bd80      	pop	{r7, pc}

08008808 <UART_Transmit_IT>:
 8008808:	b480      	push	{r7}
 800880a:	b085      	sub	sp, #20
 800880c:	af00      	add	r7, sp, #0
 800880e:	6078      	str	r0, [r7, #4]
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8008816:	b2db      	uxtb	r3, r3
 8008818:	2b21      	cmp	r3, #33	; 0x21
 800881a:	d144      	bne.n	80088a6 <UART_Transmit_IT+0x9e>
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	689b      	ldr	r3, [r3, #8]
 8008820:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008824:	d11a      	bne.n	800885c <UART_Transmit_IT+0x54>
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	6a1b      	ldr	r3, [r3, #32]
 800882a:	60fb      	str	r3, [r7, #12]
 800882c:	68fb      	ldr	r3, [r7, #12]
 800882e:	881b      	ldrh	r3, [r3, #0]
 8008830:	461a      	mov	r2, r3
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	681b      	ldr	r3, [r3, #0]
 8008836:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800883a:	605a      	str	r2, [r3, #4]
 800883c:	687b      	ldr	r3, [r7, #4]
 800883e:	691b      	ldr	r3, [r3, #16]
 8008840:	2b00      	cmp	r3, #0
 8008842:	d105      	bne.n	8008850 <UART_Transmit_IT+0x48>
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	6a1b      	ldr	r3, [r3, #32]
 8008848:	1c9a      	adds	r2, r3, #2
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	621a      	str	r2, [r3, #32]
 800884e:	e00e      	b.n	800886e <UART_Transmit_IT+0x66>
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	6a1b      	ldr	r3, [r3, #32]
 8008854:	1c5a      	adds	r2, r3, #1
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	621a      	str	r2, [r3, #32]
 800885a:	e008      	b.n	800886e <UART_Transmit_IT+0x66>
 800885c:	687b      	ldr	r3, [r7, #4]
 800885e:	6a1b      	ldr	r3, [r3, #32]
 8008860:	1c59      	adds	r1, r3, #1
 8008862:	687a      	ldr	r2, [r7, #4]
 8008864:	6211      	str	r1, [r2, #32]
 8008866:	781a      	ldrb	r2, [r3, #0]
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	681b      	ldr	r3, [r3, #0]
 800886c:	605a      	str	r2, [r3, #4]
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8008872:	b29b      	uxth	r3, r3
 8008874:	3b01      	subs	r3, #1
 8008876:	b29b      	uxth	r3, r3
 8008878:	687a      	ldr	r2, [r7, #4]
 800887a:	4619      	mov	r1, r3
 800887c:	84d1      	strh	r1, [r2, #38]	; 0x26
 800887e:	2b00      	cmp	r3, #0
 8008880:	d10f      	bne.n	80088a2 <UART_Transmit_IT+0x9a>
 8008882:	687b      	ldr	r3, [r7, #4]
 8008884:	681b      	ldr	r3, [r3, #0]
 8008886:	68da      	ldr	r2, [r3, #12]
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	681b      	ldr	r3, [r3, #0]
 800888c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008890:	60da      	str	r2, [r3, #12]
 8008892:	687b      	ldr	r3, [r7, #4]
 8008894:	681b      	ldr	r3, [r3, #0]
 8008896:	68da      	ldr	r2, [r3, #12]
 8008898:	687b      	ldr	r3, [r7, #4]
 800889a:	681b      	ldr	r3, [r3, #0]
 800889c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80088a0:	60da      	str	r2, [r3, #12]
 80088a2:	2300      	movs	r3, #0
 80088a4:	e000      	b.n	80088a8 <UART_Transmit_IT+0xa0>
 80088a6:	2302      	movs	r3, #2
 80088a8:	4618      	mov	r0, r3
 80088aa:	3714      	adds	r7, #20
 80088ac:	46bd      	mov	sp, r7
 80088ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b2:	4770      	bx	lr

080088b4 <UART_EndTransmit_IT>:
 80088b4:	b580      	push	{r7, lr}
 80088b6:	b082      	sub	sp, #8
 80088b8:	af00      	add	r7, sp, #0
 80088ba:	6078      	str	r0, [r7, #4]
 80088bc:	687b      	ldr	r3, [r7, #4]
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	68da      	ldr	r2, [r3, #12]
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	681b      	ldr	r3, [r3, #0]
 80088c6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80088ca:	60da      	str	r2, [r3, #12]
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	2220      	movs	r2, #32
 80088d0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 80088d4:	6878      	ldr	r0, [r7, #4]
 80088d6:	f7ff ff07 	bl	80086e8 <HAL_UART_TxCpltCallback>
 80088da:	2300      	movs	r3, #0
 80088dc:	4618      	mov	r0, r3
 80088de:	3708      	adds	r7, #8
 80088e0:	46bd      	mov	sp, r7
 80088e2:	bd80      	pop	{r7, pc}

080088e4 <UART_Receive_IT>:
 80088e4:	b580      	push	{r7, lr}
 80088e6:	b084      	sub	sp, #16
 80088e8:	af00      	add	r7, sp, #0
 80088ea:	6078      	str	r0, [r7, #4]
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	f893 303a 	ldrb.w	r3, [r3, #58]	; 0x3a
 80088f2:	b2db      	uxtb	r3, r3
 80088f4:	2b22      	cmp	r3, #34	; 0x22
 80088f6:	f040 8088 	bne.w	8008a0a <UART_Receive_IT+0x126>
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	689b      	ldr	r3, [r3, #8]
 80088fe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008902:	d123      	bne.n	800894c <UART_Receive_IT+0x68>
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008908:	60fb      	str	r3, [r7, #12]
 800890a:	687b      	ldr	r3, [r7, #4]
 800890c:	691b      	ldr	r3, [r3, #16]
 800890e:	2b00      	cmp	r3, #0
 8008910:	d10e      	bne.n	8008930 <UART_Receive_IT+0x4c>
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	681b      	ldr	r3, [r3, #0]
 8008916:	685b      	ldr	r3, [r3, #4]
 8008918:	b29b      	uxth	r3, r3
 800891a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800891e:	b29a      	uxth	r2, r3
 8008920:	68fb      	ldr	r3, [r7, #12]
 8008922:	801a      	strh	r2, [r3, #0]
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008928:	1c9a      	adds	r2, r3, #2
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	629a      	str	r2, [r3, #40]	; 0x28
 800892e:	e029      	b.n	8008984 <UART_Receive_IT+0xa0>
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	681b      	ldr	r3, [r3, #0]
 8008934:	685b      	ldr	r3, [r3, #4]
 8008936:	b29b      	uxth	r3, r3
 8008938:	b2db      	uxtb	r3, r3
 800893a:	b29a      	uxth	r2, r3
 800893c:	68fb      	ldr	r3, [r7, #12]
 800893e:	801a      	strh	r2, [r3, #0]
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008944:	1c5a      	adds	r2, r3, #1
 8008946:	687b      	ldr	r3, [r7, #4]
 8008948:	629a      	str	r2, [r3, #40]	; 0x28
 800894a:	e01b      	b.n	8008984 <UART_Receive_IT+0xa0>
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	691b      	ldr	r3, [r3, #16]
 8008950:	2b00      	cmp	r3, #0
 8008952:	d10a      	bne.n	800896a <UART_Receive_IT+0x86>
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	681b      	ldr	r3, [r3, #0]
 8008958:	6858      	ldr	r0, [r3, #4]
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800895e:	1c59      	adds	r1, r3, #1
 8008960:	687a      	ldr	r2, [r7, #4]
 8008962:	6291      	str	r1, [r2, #40]	; 0x28
 8008964:	b2c2      	uxtb	r2, r0
 8008966:	701a      	strb	r2, [r3, #0]
 8008968:	e00c      	b.n	8008984 <UART_Receive_IT+0xa0>
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	681b      	ldr	r3, [r3, #0]
 800896e:	685b      	ldr	r3, [r3, #4]
 8008970:	b2da      	uxtb	r2, r3
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008976:	1c58      	adds	r0, r3, #1
 8008978:	6879      	ldr	r1, [r7, #4]
 800897a:	6288      	str	r0, [r1, #40]	; 0x28
 800897c:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 8008980:	b2d2      	uxtb	r2, r2
 8008982:	701a      	strb	r2, [r3, #0]
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8008988:	b29b      	uxth	r3, r3
 800898a:	3b01      	subs	r3, #1
 800898c:	b29b      	uxth	r3, r3
 800898e:	687a      	ldr	r2, [r7, #4]
 8008990:	4619      	mov	r1, r3
 8008992:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8008994:	2b00      	cmp	r3, #0
 8008996:	d136      	bne.n	8008a06 <UART_Receive_IT+0x122>
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800899c:	3b01      	subs	r3, #1
 800899e:	781b      	ldrb	r3, [r3, #0]
 80089a0:	2b00      	cmp	r3, #0
 80089a2:	d017      	beq.n	80089d4 <UART_Receive_IT+0xf0>
 80089a4:	687b      	ldr	r3, [r7, #4]
 80089a6:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80089a8:	2b04      	cmp	r3, #4
 80089aa:	d113      	bne.n	80089d4 <UART_Receive_IT+0xf0>
 80089ac:	687b      	ldr	r3, [r7, #4]
 80089ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80089b0:	3b01      	subs	r3, #1
 80089b2:	781b      	ldrb	r3, [r3, #0]
 80089b4:	b29b      	uxth	r3, r3
 80089b6:	3301      	adds	r3, #1
 80089b8:	b29a      	uxth	r2, r3
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80089c2:	3b01      	subs	r3, #1
 80089c4:	781b      	ldrb	r3, [r3, #0]
 80089c6:	b29b      	uxth	r3, r3
 80089c8:	3305      	adds	r3, #5
 80089ca:	b29a      	uxth	r2, r3
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	859a      	strh	r2, [r3, #44]	; 0x2c
 80089d0:	2300      	movs	r3, #0
 80089d2:	e01b      	b.n	8008a0c <UART_Receive_IT+0x128>
 80089d4:	687b      	ldr	r3, [r7, #4]
 80089d6:	681b      	ldr	r3, [r3, #0]
 80089d8:	68da      	ldr	r2, [r3, #12]
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	681b      	ldr	r3, [r3, #0]
 80089de:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80089e2:	60da      	str	r2, [r3, #12]
 80089e4:	687b      	ldr	r3, [r7, #4]
 80089e6:	681b      	ldr	r3, [r3, #0]
 80089e8:	695a      	ldr	r2, [r3, #20]
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	681b      	ldr	r3, [r3, #0]
 80089ee:	f022 0201 	bic.w	r2, r2, #1
 80089f2:	615a      	str	r2, [r3, #20]
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	2220      	movs	r2, #32
 80089f8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 80089fc:	6878      	ldr	r0, [r7, #4]
 80089fe:	f7fb fa97 	bl	8003f30 <HAL_UART_RxCpltCallback>
 8008a02:	2300      	movs	r3, #0
 8008a04:	e002      	b.n	8008a0c <UART_Receive_IT+0x128>
 8008a06:	2300      	movs	r3, #0
 8008a08:	e000      	b.n	8008a0c <UART_Receive_IT+0x128>
 8008a0a:	2302      	movs	r3, #2
 8008a0c:	4618      	mov	r0, r3
 8008a0e:	3710      	adds	r7, #16
 8008a10:	46bd      	mov	sp, r7
 8008a12:	bd80      	pop	{r7, pc}

08008a14 <UART_SetConfig>:
 8008a14:	b5b0      	push	{r4, r5, r7, lr}
 8008a16:	b084      	sub	sp, #16
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	2300      	movs	r3, #0
 8008a1e:	60fb      	str	r3, [r7, #12]
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	681b      	ldr	r3, [r3, #0]
 8008a24:	691b      	ldr	r3, [r3, #16]
 8008a26:	60fb      	str	r3, [r7, #12]
 8008a28:	68fb      	ldr	r3, [r7, #12]
 8008a2a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8008a2e:	60fb      	str	r3, [r7, #12]
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	68db      	ldr	r3, [r3, #12]
 8008a34:	68fa      	ldr	r2, [r7, #12]
 8008a36:	4313      	orrs	r3, r2
 8008a38:	60fb      	str	r3, [r7, #12]
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	681b      	ldr	r3, [r3, #0]
 8008a3e:	68fa      	ldr	r2, [r7, #12]
 8008a40:	611a      	str	r2, [r3, #16]
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	681b      	ldr	r3, [r3, #0]
 8008a46:	68db      	ldr	r3, [r3, #12]
 8008a48:	60fb      	str	r3, [r7, #12]
 8008a4a:	68fb      	ldr	r3, [r7, #12]
 8008a4c:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8008a50:	f023 030c 	bic.w	r3, r3, #12
 8008a54:	60fb      	str	r3, [r7, #12]
 8008a56:	687b      	ldr	r3, [r7, #4]
 8008a58:	689a      	ldr	r2, [r3, #8]
 8008a5a:	687b      	ldr	r3, [r7, #4]
 8008a5c:	691b      	ldr	r3, [r3, #16]
 8008a5e:	431a      	orrs	r2, r3
 8008a60:	687b      	ldr	r3, [r7, #4]
 8008a62:	695b      	ldr	r3, [r3, #20]
 8008a64:	431a      	orrs	r2, r3
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	69db      	ldr	r3, [r3, #28]
 8008a6a:	4313      	orrs	r3, r2
 8008a6c:	68fa      	ldr	r2, [r7, #12]
 8008a6e:	4313      	orrs	r3, r2
 8008a70:	60fb      	str	r3, [r7, #12]
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	681b      	ldr	r3, [r3, #0]
 8008a76:	68fa      	ldr	r2, [r7, #12]
 8008a78:	60da      	str	r2, [r3, #12]
 8008a7a:	687b      	ldr	r3, [r7, #4]
 8008a7c:	681b      	ldr	r3, [r3, #0]
 8008a7e:	695b      	ldr	r3, [r3, #20]
 8008a80:	60fb      	str	r3, [r7, #12]
 8008a82:	68fb      	ldr	r3, [r7, #12]
 8008a84:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008a88:	60fb      	str	r3, [r7, #12]
 8008a8a:	687b      	ldr	r3, [r7, #4]
 8008a8c:	699b      	ldr	r3, [r3, #24]
 8008a8e:	68fa      	ldr	r2, [r7, #12]
 8008a90:	4313      	orrs	r3, r2
 8008a92:	60fb      	str	r3, [r7, #12]
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	681b      	ldr	r3, [r3, #0]
 8008a98:	68fa      	ldr	r2, [r7, #12]
 8008a9a:	615a      	str	r2, [r3, #20]
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	69db      	ldr	r3, [r3, #28]
 8008aa0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008aa4:	f040 80e4 	bne.w	8008c70 <UART_SetConfig+0x25c>
 8008aa8:	687b      	ldr	r3, [r7, #4]
 8008aaa:	681b      	ldr	r3, [r3, #0]
 8008aac:	4aab      	ldr	r2, [pc, #684]	; (8008d5c <UART_SetConfig+0x348>)
 8008aae:	4293      	cmp	r3, r2
 8008ab0:	d004      	beq.n	8008abc <UART_SetConfig+0xa8>
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	681b      	ldr	r3, [r3, #0]
 8008ab6:	4aaa      	ldr	r2, [pc, #680]	; (8008d60 <UART_SetConfig+0x34c>)
 8008ab8:	4293      	cmp	r3, r2
 8008aba:	d16c      	bne.n	8008b96 <UART_SetConfig+0x182>
 8008abc:	f7fd faa6 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008ac0:	4602      	mov	r2, r0
 8008ac2:	4613      	mov	r3, r2
 8008ac4:	009b      	lsls	r3, r3, #2
 8008ac6:	4413      	add	r3, r2
 8008ac8:	009a      	lsls	r2, r3, #2
 8008aca:	441a      	add	r2, r3
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	685b      	ldr	r3, [r3, #4]
 8008ad0:	005b      	lsls	r3, r3, #1
 8008ad2:	fbb2 f3f3 	udiv	r3, r2, r3
 8008ad6:	4aa3      	ldr	r2, [pc, #652]	; (8008d64 <UART_SetConfig+0x350>)
 8008ad8:	fba2 2303 	umull	r2, r3, r2, r3
 8008adc:	095b      	lsrs	r3, r3, #5
 8008ade:	011c      	lsls	r4, r3, #4
 8008ae0:	f7fd fa94 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008ae4:	4602      	mov	r2, r0
 8008ae6:	4613      	mov	r3, r2
 8008ae8:	009b      	lsls	r3, r3, #2
 8008aea:	4413      	add	r3, r2
 8008aec:	009a      	lsls	r2, r3, #2
 8008aee:	441a      	add	r2, r3
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	685b      	ldr	r3, [r3, #4]
 8008af4:	005b      	lsls	r3, r3, #1
 8008af6:	fbb2 f5f3 	udiv	r5, r2, r3
 8008afa:	f7fd fa87 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008afe:	4602      	mov	r2, r0
 8008b00:	4613      	mov	r3, r2
 8008b02:	009b      	lsls	r3, r3, #2
 8008b04:	4413      	add	r3, r2
 8008b06:	009a      	lsls	r2, r3, #2
 8008b08:	441a      	add	r2, r3
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	685b      	ldr	r3, [r3, #4]
 8008b0e:	005b      	lsls	r3, r3, #1
 8008b10:	fbb2 f3f3 	udiv	r3, r2, r3
 8008b14:	4a93      	ldr	r2, [pc, #588]	; (8008d64 <UART_SetConfig+0x350>)
 8008b16:	fba2 2303 	umull	r2, r3, r2, r3
 8008b1a:	095b      	lsrs	r3, r3, #5
 8008b1c:	2264      	movs	r2, #100	; 0x64
 8008b1e:	fb02 f303 	mul.w	r3, r2, r3
 8008b22:	1aeb      	subs	r3, r5, r3
 8008b24:	00db      	lsls	r3, r3, #3
 8008b26:	3332      	adds	r3, #50	; 0x32
 8008b28:	4a8e      	ldr	r2, [pc, #568]	; (8008d64 <UART_SetConfig+0x350>)
 8008b2a:	fba2 2303 	umull	r2, r3, r2, r3
 8008b2e:	095b      	lsrs	r3, r3, #5
 8008b30:	005b      	lsls	r3, r3, #1
 8008b32:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008b36:	441c      	add	r4, r3
 8008b38:	f7fd fa68 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008b3c:	4602      	mov	r2, r0
 8008b3e:	4613      	mov	r3, r2
 8008b40:	009b      	lsls	r3, r3, #2
 8008b42:	4413      	add	r3, r2
 8008b44:	009a      	lsls	r2, r3, #2
 8008b46:	441a      	add	r2, r3
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	685b      	ldr	r3, [r3, #4]
 8008b4c:	005b      	lsls	r3, r3, #1
 8008b4e:	fbb2 f5f3 	udiv	r5, r2, r3
 8008b52:	f7fd fa5b 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008b56:	4602      	mov	r2, r0
 8008b58:	4613      	mov	r3, r2
 8008b5a:	009b      	lsls	r3, r3, #2
 8008b5c:	4413      	add	r3, r2
 8008b5e:	009a      	lsls	r2, r3, #2
 8008b60:	441a      	add	r2, r3
 8008b62:	687b      	ldr	r3, [r7, #4]
 8008b64:	685b      	ldr	r3, [r3, #4]
 8008b66:	005b      	lsls	r3, r3, #1
 8008b68:	fbb2 f3f3 	udiv	r3, r2, r3
 8008b6c:	4a7d      	ldr	r2, [pc, #500]	; (8008d64 <UART_SetConfig+0x350>)
 8008b6e:	fba2 2303 	umull	r2, r3, r2, r3
 8008b72:	095b      	lsrs	r3, r3, #5
 8008b74:	2264      	movs	r2, #100	; 0x64
 8008b76:	fb02 f303 	mul.w	r3, r2, r3
 8008b7a:	1aeb      	subs	r3, r5, r3
 8008b7c:	00db      	lsls	r3, r3, #3
 8008b7e:	3332      	adds	r3, #50	; 0x32
 8008b80:	4a78      	ldr	r2, [pc, #480]	; (8008d64 <UART_SetConfig+0x350>)
 8008b82:	fba2 2303 	umull	r2, r3, r2, r3
 8008b86:	095b      	lsrs	r3, r3, #5
 8008b88:	f003 0207 	and.w	r2, r3, #7
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	681b      	ldr	r3, [r3, #0]
 8008b90:	4422      	add	r2, r4
 8008b92:	609a      	str	r2, [r3, #8]
 8008b94:	e154      	b.n	8008e40 <UART_SetConfig+0x42c>
 8008b96:	f7fd fa17 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008b9a:	4602      	mov	r2, r0
 8008b9c:	4613      	mov	r3, r2
 8008b9e:	009b      	lsls	r3, r3, #2
 8008ba0:	4413      	add	r3, r2
 8008ba2:	009a      	lsls	r2, r3, #2
 8008ba4:	441a      	add	r2, r3
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	685b      	ldr	r3, [r3, #4]
 8008baa:	005b      	lsls	r3, r3, #1
 8008bac:	fbb2 f3f3 	udiv	r3, r2, r3
 8008bb0:	4a6c      	ldr	r2, [pc, #432]	; (8008d64 <UART_SetConfig+0x350>)
 8008bb2:	fba2 2303 	umull	r2, r3, r2, r3
 8008bb6:	095b      	lsrs	r3, r3, #5
 8008bb8:	011c      	lsls	r4, r3, #4
 8008bba:	f7fd fa05 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008bbe:	4602      	mov	r2, r0
 8008bc0:	4613      	mov	r3, r2
 8008bc2:	009b      	lsls	r3, r3, #2
 8008bc4:	4413      	add	r3, r2
 8008bc6:	009a      	lsls	r2, r3, #2
 8008bc8:	441a      	add	r2, r3
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	685b      	ldr	r3, [r3, #4]
 8008bce:	005b      	lsls	r3, r3, #1
 8008bd0:	fbb2 f5f3 	udiv	r5, r2, r3
 8008bd4:	f7fd f9f8 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008bd8:	4602      	mov	r2, r0
 8008bda:	4613      	mov	r3, r2
 8008bdc:	009b      	lsls	r3, r3, #2
 8008bde:	4413      	add	r3, r2
 8008be0:	009a      	lsls	r2, r3, #2
 8008be2:	441a      	add	r2, r3
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	685b      	ldr	r3, [r3, #4]
 8008be8:	005b      	lsls	r3, r3, #1
 8008bea:	fbb2 f3f3 	udiv	r3, r2, r3
 8008bee:	4a5d      	ldr	r2, [pc, #372]	; (8008d64 <UART_SetConfig+0x350>)
 8008bf0:	fba2 2303 	umull	r2, r3, r2, r3
 8008bf4:	095b      	lsrs	r3, r3, #5
 8008bf6:	2264      	movs	r2, #100	; 0x64
 8008bf8:	fb02 f303 	mul.w	r3, r2, r3
 8008bfc:	1aeb      	subs	r3, r5, r3
 8008bfe:	00db      	lsls	r3, r3, #3
 8008c00:	3332      	adds	r3, #50	; 0x32
 8008c02:	4a58      	ldr	r2, [pc, #352]	; (8008d64 <UART_SetConfig+0x350>)
 8008c04:	fba2 2303 	umull	r2, r3, r2, r3
 8008c08:	095b      	lsrs	r3, r3, #5
 8008c0a:	005b      	lsls	r3, r3, #1
 8008c0c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008c10:	441c      	add	r4, r3
 8008c12:	f7fd f9d9 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008c16:	4602      	mov	r2, r0
 8008c18:	4613      	mov	r3, r2
 8008c1a:	009b      	lsls	r3, r3, #2
 8008c1c:	4413      	add	r3, r2
 8008c1e:	009a      	lsls	r2, r3, #2
 8008c20:	441a      	add	r2, r3
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	685b      	ldr	r3, [r3, #4]
 8008c26:	005b      	lsls	r3, r3, #1
 8008c28:	fbb2 f5f3 	udiv	r5, r2, r3
 8008c2c:	f7fd f9cc 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008c30:	4602      	mov	r2, r0
 8008c32:	4613      	mov	r3, r2
 8008c34:	009b      	lsls	r3, r3, #2
 8008c36:	4413      	add	r3, r2
 8008c38:	009a      	lsls	r2, r3, #2
 8008c3a:	441a      	add	r2, r3
 8008c3c:	687b      	ldr	r3, [r7, #4]
 8008c3e:	685b      	ldr	r3, [r3, #4]
 8008c40:	005b      	lsls	r3, r3, #1
 8008c42:	fbb2 f3f3 	udiv	r3, r2, r3
 8008c46:	4a47      	ldr	r2, [pc, #284]	; (8008d64 <UART_SetConfig+0x350>)
 8008c48:	fba2 2303 	umull	r2, r3, r2, r3
 8008c4c:	095b      	lsrs	r3, r3, #5
 8008c4e:	2264      	movs	r2, #100	; 0x64
 8008c50:	fb02 f303 	mul.w	r3, r2, r3
 8008c54:	1aeb      	subs	r3, r5, r3
 8008c56:	00db      	lsls	r3, r3, #3
 8008c58:	3332      	adds	r3, #50	; 0x32
 8008c5a:	4a42      	ldr	r2, [pc, #264]	; (8008d64 <UART_SetConfig+0x350>)
 8008c5c:	fba2 2303 	umull	r2, r3, r2, r3
 8008c60:	095b      	lsrs	r3, r3, #5
 8008c62:	f003 0207 	and.w	r2, r3, #7
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	681b      	ldr	r3, [r3, #0]
 8008c6a:	4422      	add	r2, r4
 8008c6c:	609a      	str	r2, [r3, #8]
 8008c6e:	e0e7      	b.n	8008e40 <UART_SetConfig+0x42c>
 8008c70:	687b      	ldr	r3, [r7, #4]
 8008c72:	681b      	ldr	r3, [r3, #0]
 8008c74:	4a39      	ldr	r2, [pc, #228]	; (8008d5c <UART_SetConfig+0x348>)
 8008c76:	4293      	cmp	r3, r2
 8008c78:	d004      	beq.n	8008c84 <UART_SetConfig+0x270>
 8008c7a:	687b      	ldr	r3, [r7, #4]
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	4a38      	ldr	r2, [pc, #224]	; (8008d60 <UART_SetConfig+0x34c>)
 8008c80:	4293      	cmp	r3, r2
 8008c82:	d171      	bne.n	8008d68 <UART_SetConfig+0x354>
 8008c84:	f7fd f9c2 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008c88:	4602      	mov	r2, r0
 8008c8a:	4613      	mov	r3, r2
 8008c8c:	009b      	lsls	r3, r3, #2
 8008c8e:	4413      	add	r3, r2
 8008c90:	009a      	lsls	r2, r3, #2
 8008c92:	441a      	add	r2, r3
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	685b      	ldr	r3, [r3, #4]
 8008c98:	009b      	lsls	r3, r3, #2
 8008c9a:	fbb2 f3f3 	udiv	r3, r2, r3
 8008c9e:	4a31      	ldr	r2, [pc, #196]	; (8008d64 <UART_SetConfig+0x350>)
 8008ca0:	fba2 2303 	umull	r2, r3, r2, r3
 8008ca4:	095b      	lsrs	r3, r3, #5
 8008ca6:	011c      	lsls	r4, r3, #4
 8008ca8:	f7fd f9b0 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008cac:	4602      	mov	r2, r0
 8008cae:	4613      	mov	r3, r2
 8008cb0:	009b      	lsls	r3, r3, #2
 8008cb2:	4413      	add	r3, r2
 8008cb4:	009a      	lsls	r2, r3, #2
 8008cb6:	441a      	add	r2, r3
 8008cb8:	687b      	ldr	r3, [r7, #4]
 8008cba:	685b      	ldr	r3, [r3, #4]
 8008cbc:	009b      	lsls	r3, r3, #2
 8008cbe:	fbb2 f5f3 	udiv	r5, r2, r3
 8008cc2:	f7fd f9a3 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008cc6:	4602      	mov	r2, r0
 8008cc8:	4613      	mov	r3, r2
 8008cca:	009b      	lsls	r3, r3, #2
 8008ccc:	4413      	add	r3, r2
 8008cce:	009a      	lsls	r2, r3, #2
 8008cd0:	441a      	add	r2, r3
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	685b      	ldr	r3, [r3, #4]
 8008cd6:	009b      	lsls	r3, r3, #2
 8008cd8:	fbb2 f3f3 	udiv	r3, r2, r3
 8008cdc:	4a21      	ldr	r2, [pc, #132]	; (8008d64 <UART_SetConfig+0x350>)
 8008cde:	fba2 2303 	umull	r2, r3, r2, r3
 8008ce2:	095b      	lsrs	r3, r3, #5
 8008ce4:	2264      	movs	r2, #100	; 0x64
 8008ce6:	fb02 f303 	mul.w	r3, r2, r3
 8008cea:	1aeb      	subs	r3, r5, r3
 8008cec:	011b      	lsls	r3, r3, #4
 8008cee:	3332      	adds	r3, #50	; 0x32
 8008cf0:	4a1c      	ldr	r2, [pc, #112]	; (8008d64 <UART_SetConfig+0x350>)
 8008cf2:	fba2 2303 	umull	r2, r3, r2, r3
 8008cf6:	095b      	lsrs	r3, r3, #5
 8008cf8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008cfc:	441c      	add	r4, r3
 8008cfe:	f7fd f985 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008d02:	4602      	mov	r2, r0
 8008d04:	4613      	mov	r3, r2
 8008d06:	009b      	lsls	r3, r3, #2
 8008d08:	4413      	add	r3, r2
 8008d0a:	009a      	lsls	r2, r3, #2
 8008d0c:	441a      	add	r2, r3
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	685b      	ldr	r3, [r3, #4]
 8008d12:	009b      	lsls	r3, r3, #2
 8008d14:	fbb2 f5f3 	udiv	r5, r2, r3
 8008d18:	f7fd f978 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 8008d1c:	4602      	mov	r2, r0
 8008d1e:	4613      	mov	r3, r2
 8008d20:	009b      	lsls	r3, r3, #2
 8008d22:	4413      	add	r3, r2
 8008d24:	009a      	lsls	r2, r3, #2
 8008d26:	441a      	add	r2, r3
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	685b      	ldr	r3, [r3, #4]
 8008d2c:	009b      	lsls	r3, r3, #2
 8008d2e:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d32:	4a0c      	ldr	r2, [pc, #48]	; (8008d64 <UART_SetConfig+0x350>)
 8008d34:	fba2 2303 	umull	r2, r3, r2, r3
 8008d38:	095b      	lsrs	r3, r3, #5
 8008d3a:	2264      	movs	r2, #100	; 0x64
 8008d3c:	fb02 f303 	mul.w	r3, r2, r3
 8008d40:	1aeb      	subs	r3, r5, r3
 8008d42:	011b      	lsls	r3, r3, #4
 8008d44:	3332      	adds	r3, #50	; 0x32
 8008d46:	4a07      	ldr	r2, [pc, #28]	; (8008d64 <UART_SetConfig+0x350>)
 8008d48:	fba2 2303 	umull	r2, r3, r2, r3
 8008d4c:	095b      	lsrs	r3, r3, #5
 8008d4e:	f003 020f 	and.w	r2, r3, #15
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	681b      	ldr	r3, [r3, #0]
 8008d56:	4422      	add	r2, r4
 8008d58:	609a      	str	r2, [r3, #8]
 8008d5a:	e071      	b.n	8008e40 <UART_SetConfig+0x42c>
 8008d5c:	40011000 	.word	0x40011000
 8008d60:	40011400 	.word	0x40011400
 8008d64:	51eb851f 	.word	0x51eb851f
 8008d68:	f7fd f92e 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008d6c:	4602      	mov	r2, r0
 8008d6e:	4613      	mov	r3, r2
 8008d70:	009b      	lsls	r3, r3, #2
 8008d72:	4413      	add	r3, r2
 8008d74:	009a      	lsls	r2, r3, #2
 8008d76:	441a      	add	r2, r3
 8008d78:	687b      	ldr	r3, [r7, #4]
 8008d7a:	685b      	ldr	r3, [r3, #4]
 8008d7c:	009b      	lsls	r3, r3, #2
 8008d7e:	fbb2 f3f3 	udiv	r3, r2, r3
 8008d82:	4a31      	ldr	r2, [pc, #196]	; (8008e48 <UART_SetConfig+0x434>)
 8008d84:	fba2 2303 	umull	r2, r3, r2, r3
 8008d88:	095b      	lsrs	r3, r3, #5
 8008d8a:	011c      	lsls	r4, r3, #4
 8008d8c:	f7fd f91c 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008d90:	4602      	mov	r2, r0
 8008d92:	4613      	mov	r3, r2
 8008d94:	009b      	lsls	r3, r3, #2
 8008d96:	4413      	add	r3, r2
 8008d98:	009a      	lsls	r2, r3, #2
 8008d9a:	441a      	add	r2, r3
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	685b      	ldr	r3, [r3, #4]
 8008da0:	009b      	lsls	r3, r3, #2
 8008da2:	fbb2 f5f3 	udiv	r5, r2, r3
 8008da6:	f7fd f90f 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008daa:	4602      	mov	r2, r0
 8008dac:	4613      	mov	r3, r2
 8008dae:	009b      	lsls	r3, r3, #2
 8008db0:	4413      	add	r3, r2
 8008db2:	009a      	lsls	r2, r3, #2
 8008db4:	441a      	add	r2, r3
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	685b      	ldr	r3, [r3, #4]
 8008dba:	009b      	lsls	r3, r3, #2
 8008dbc:	fbb2 f3f3 	udiv	r3, r2, r3
 8008dc0:	4a21      	ldr	r2, [pc, #132]	; (8008e48 <UART_SetConfig+0x434>)
 8008dc2:	fba2 2303 	umull	r2, r3, r2, r3
 8008dc6:	095b      	lsrs	r3, r3, #5
 8008dc8:	2264      	movs	r2, #100	; 0x64
 8008dca:	fb02 f303 	mul.w	r3, r2, r3
 8008dce:	1aeb      	subs	r3, r5, r3
 8008dd0:	011b      	lsls	r3, r3, #4
 8008dd2:	3332      	adds	r3, #50	; 0x32
 8008dd4:	4a1c      	ldr	r2, [pc, #112]	; (8008e48 <UART_SetConfig+0x434>)
 8008dd6:	fba2 2303 	umull	r2, r3, r2, r3
 8008dda:	095b      	lsrs	r3, r3, #5
 8008ddc:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008de0:	441c      	add	r4, r3
 8008de2:	f7fd f8f1 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008de6:	4602      	mov	r2, r0
 8008de8:	4613      	mov	r3, r2
 8008dea:	009b      	lsls	r3, r3, #2
 8008dec:	4413      	add	r3, r2
 8008dee:	009a      	lsls	r2, r3, #2
 8008df0:	441a      	add	r2, r3
 8008df2:	687b      	ldr	r3, [r7, #4]
 8008df4:	685b      	ldr	r3, [r3, #4]
 8008df6:	009b      	lsls	r3, r3, #2
 8008df8:	fbb2 f5f3 	udiv	r5, r2, r3
 8008dfc:	f7fd f8e4 	bl	8005fc8 <HAL_RCC_GetPCLK1Freq>
 8008e00:	4602      	mov	r2, r0
 8008e02:	4613      	mov	r3, r2
 8008e04:	009b      	lsls	r3, r3, #2
 8008e06:	4413      	add	r3, r2
 8008e08:	009a      	lsls	r2, r3, #2
 8008e0a:	441a      	add	r2, r3
 8008e0c:	687b      	ldr	r3, [r7, #4]
 8008e0e:	685b      	ldr	r3, [r3, #4]
 8008e10:	009b      	lsls	r3, r3, #2
 8008e12:	fbb2 f3f3 	udiv	r3, r2, r3
 8008e16:	4a0c      	ldr	r2, [pc, #48]	; (8008e48 <UART_SetConfig+0x434>)
 8008e18:	fba2 2303 	umull	r2, r3, r2, r3
 8008e1c:	095b      	lsrs	r3, r3, #5
 8008e1e:	2264      	movs	r2, #100	; 0x64
 8008e20:	fb02 f303 	mul.w	r3, r2, r3
 8008e24:	1aeb      	subs	r3, r5, r3
 8008e26:	011b      	lsls	r3, r3, #4
 8008e28:	3332      	adds	r3, #50	; 0x32
 8008e2a:	4a07      	ldr	r2, [pc, #28]	; (8008e48 <UART_SetConfig+0x434>)
 8008e2c:	fba2 2303 	umull	r2, r3, r2, r3
 8008e30:	095b      	lsrs	r3, r3, #5
 8008e32:	f003 020f 	and.w	r2, r3, #15
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	681b      	ldr	r3, [r3, #0]
 8008e3a:	4422      	add	r2, r4
 8008e3c:	609a      	str	r2, [r3, #8]
 8008e3e:	e7ff      	b.n	8008e40 <UART_SetConfig+0x42c>
 8008e40:	bf00      	nop
 8008e42:	3710      	adds	r7, #16
 8008e44:	46bd      	mov	sp, r7
 8008e46:	bdb0      	pop	{r4, r5, r7, pc}
 8008e48:	51eb851f 	.word	0x51eb851f

08008e4c <HAL_WWDG_Init>:
 8008e4c:	b580      	push	{r7, lr}
 8008e4e:	b082      	sub	sp, #8
 8008e50:	af00      	add	r7, sp, #0
 8008e52:	6078      	str	r0, [r7, #4]
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	d101      	bne.n	8008e5e <HAL_WWDG_Init+0x12>
 8008e5a:	2301      	movs	r3, #1
 8008e5c:	e016      	b.n	8008e8c <HAL_WWDG_Init+0x40>
 8008e5e:	6878      	ldr	r0, [r7, #4]
 8008e60:	f001 fc3c 	bl	800a6dc <HAL_WWDG_MspInit>
 8008e64:	687b      	ldr	r3, [r7, #4]
 8008e66:	68da      	ldr	r2, [r3, #12]
 8008e68:	687b      	ldr	r3, [r7, #4]
 8008e6a:	681b      	ldr	r3, [r3, #0]
 8008e6c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8008e70:	601a      	str	r2, [r3, #0]
 8008e72:	687b      	ldr	r3, [r7, #4]
 8008e74:	691a      	ldr	r2, [r3, #16]
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	685b      	ldr	r3, [r3, #4]
 8008e7a:	ea42 0103 	orr.w	r1, r2, r3
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	689a      	ldr	r2, [r3, #8]
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	430a      	orrs	r2, r1
 8008e88:	605a      	str	r2, [r3, #4]
 8008e8a:	2300      	movs	r3, #0
 8008e8c:	4618      	mov	r0, r3
 8008e8e:	3708      	adds	r7, #8
 8008e90:	46bd      	mov	sp, r7
 8008e92:	bd80      	pop	{r7, pc}

08008e94 <SDIO_Init>:
 8008e94:	b084      	sub	sp, #16
 8008e96:	b480      	push	{r7}
 8008e98:	b085      	sub	sp, #20
 8008e9a:	af00      	add	r7, sp, #0
 8008e9c:	6078      	str	r0, [r7, #4]
 8008e9e:	f107 001c 	add.w	r0, r7, #28
 8008ea2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8008ea6:	2300      	movs	r3, #0
 8008ea8:	60fb      	str	r3, [r7, #12]
 8008eaa:	69fa      	ldr	r2, [r7, #28]
 8008eac:	6a3b      	ldr	r3, [r7, #32]
 8008eae:	431a      	orrs	r2, r3
 8008eb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008eb2:	431a      	orrs	r2, r3
 8008eb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8008eb6:	431a      	orrs	r2, r3
 8008eb8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8008eba:	431a      	orrs	r2, r3
 8008ebc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8008ebe:	4313      	orrs	r3, r2
 8008ec0:	68fa      	ldr	r2, [r7, #12]
 8008ec2:	4313      	orrs	r3, r2
 8008ec4:	60fb      	str	r3, [r7, #12]
 8008ec6:	687b      	ldr	r3, [r7, #4]
 8008ec8:	685b      	ldr	r3, [r3, #4]
 8008eca:	f423 43fd 	bic.w	r3, r3, #32384	; 0x7e80
 8008ece:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8008ed2:	68fa      	ldr	r2, [r7, #12]
 8008ed4:	431a      	orrs	r2, r3
 8008ed6:	687b      	ldr	r3, [r7, #4]
 8008ed8:	605a      	str	r2, [r3, #4]
 8008eda:	2300      	movs	r3, #0
 8008edc:	4618      	mov	r0, r3
 8008ede:	3714      	adds	r7, #20
 8008ee0:	46bd      	mov	sp, r7
 8008ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ee6:	b004      	add	sp, #16
 8008ee8:	4770      	bx	lr

08008eea <SDIO_ReadFIFO>:
 8008eea:	b480      	push	{r7}
 8008eec:	b083      	sub	sp, #12
 8008eee:	af00      	add	r7, sp, #0
 8008ef0:	6078      	str	r0, [r7, #4]
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008ef8:	4618      	mov	r0, r3
 8008efa:	370c      	adds	r7, #12
 8008efc:	46bd      	mov	sp, r7
 8008efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f02:	4770      	bx	lr

08008f04 <SDIO_WriteFIFO>:
 8008f04:	b480      	push	{r7}
 8008f06:	b083      	sub	sp, #12
 8008f08:	af00      	add	r7, sp, #0
 8008f0a:	6078      	str	r0, [r7, #4]
 8008f0c:	6039      	str	r1, [r7, #0]
 8008f0e:	683b      	ldr	r3, [r7, #0]
 8008f10:	681a      	ldr	r2, [r3, #0]
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8008f18:	2300      	movs	r3, #0
 8008f1a:	4618      	mov	r0, r3
 8008f1c:	370c      	adds	r7, #12
 8008f1e:	46bd      	mov	sp, r7
 8008f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f24:	4770      	bx	lr

08008f26 <SDIO_PowerState_ON>:
 8008f26:	b480      	push	{r7}
 8008f28:	b083      	sub	sp, #12
 8008f2a:	af00      	add	r7, sp, #0
 8008f2c:	6078      	str	r0, [r7, #4]
 8008f2e:	687b      	ldr	r3, [r7, #4]
 8008f30:	2203      	movs	r2, #3
 8008f32:	601a      	str	r2, [r3, #0]
 8008f34:	2300      	movs	r3, #0
 8008f36:	4618      	mov	r0, r3
 8008f38:	370c      	adds	r7, #12
 8008f3a:	46bd      	mov	sp, r7
 8008f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f40:	4770      	bx	lr

08008f42 <SDIO_GetPowerState>:
 8008f42:	b480      	push	{r7}
 8008f44:	b083      	sub	sp, #12
 8008f46:	af00      	add	r7, sp, #0
 8008f48:	6078      	str	r0, [r7, #4]
 8008f4a:	687b      	ldr	r3, [r7, #4]
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	f003 0303 	and.w	r3, r3, #3
 8008f52:	4618      	mov	r0, r3
 8008f54:	370c      	adds	r7, #12
 8008f56:	46bd      	mov	sp, r7
 8008f58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f5c:	4770      	bx	lr

08008f5e <SDIO_SendCommand>:
 8008f5e:	b480      	push	{r7}
 8008f60:	b085      	sub	sp, #20
 8008f62:	af00      	add	r7, sp, #0
 8008f64:	6078      	str	r0, [r7, #4]
 8008f66:	6039      	str	r1, [r7, #0]
 8008f68:	2300      	movs	r3, #0
 8008f6a:	60fb      	str	r3, [r7, #12]
 8008f6c:	683b      	ldr	r3, [r7, #0]
 8008f6e:	681a      	ldr	r2, [r3, #0]
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	609a      	str	r2, [r3, #8]
 8008f74:	683b      	ldr	r3, [r7, #0]
 8008f76:	685a      	ldr	r2, [r3, #4]
 8008f78:	683b      	ldr	r3, [r7, #0]
 8008f7a:	689b      	ldr	r3, [r3, #8]
 8008f7c:	431a      	orrs	r2, r3
 8008f7e:	683b      	ldr	r3, [r7, #0]
 8008f80:	68db      	ldr	r3, [r3, #12]
 8008f82:	431a      	orrs	r2, r3
 8008f84:	683b      	ldr	r3, [r7, #0]
 8008f86:	691b      	ldr	r3, [r3, #16]
 8008f88:	4313      	orrs	r3, r2
 8008f8a:	68fa      	ldr	r2, [r7, #12]
 8008f8c:	4313      	orrs	r3, r2
 8008f8e:	60fb      	str	r3, [r7, #12]
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	68db      	ldr	r3, [r3, #12]
 8008f94:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8008f98:	f023 030f 	bic.w	r3, r3, #15
 8008f9c:	68fa      	ldr	r2, [r7, #12]
 8008f9e:	431a      	orrs	r2, r3
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	60da      	str	r2, [r3, #12]
 8008fa4:	2300      	movs	r3, #0
 8008fa6:	4618      	mov	r0, r3
 8008fa8:	3714      	adds	r7, #20
 8008faa:	46bd      	mov	sp, r7
 8008fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fb0:	4770      	bx	lr

08008fb2 <SDIO_GetCommandResponse>:
 8008fb2:	b480      	push	{r7}
 8008fb4:	b083      	sub	sp, #12
 8008fb6:	af00      	add	r7, sp, #0
 8008fb8:	6078      	str	r0, [r7, #4]
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	691b      	ldr	r3, [r3, #16]
 8008fbe:	b2db      	uxtb	r3, r3
 8008fc0:	4618      	mov	r0, r3
 8008fc2:	370c      	adds	r7, #12
 8008fc4:	46bd      	mov	sp, r7
 8008fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fca:	4770      	bx	lr

08008fcc <SDIO_GetResponse>:
 8008fcc:	b480      	push	{r7}
 8008fce:	b085      	sub	sp, #20
 8008fd0:	af00      	add	r7, sp, #0
 8008fd2:	6078      	str	r0, [r7, #4]
 8008fd4:	6039      	str	r1, [r7, #0]
 8008fd6:	2300      	movs	r3, #0
 8008fd8:	60fb      	str	r3, [r7, #12]
 8008fda:	687b      	ldr	r3, [r7, #4]
 8008fdc:	3314      	adds	r3, #20
 8008fde:	461a      	mov	r2, r3
 8008fe0:	683b      	ldr	r3, [r7, #0]
 8008fe2:	4413      	add	r3, r2
 8008fe4:	60fb      	str	r3, [r7, #12]
 8008fe6:	68fb      	ldr	r3, [r7, #12]
 8008fe8:	681b      	ldr	r3, [r3, #0]
 8008fea:	4618      	mov	r0, r3
 8008fec:	3714      	adds	r7, #20
 8008fee:	46bd      	mov	sp, r7
 8008ff0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ff4:	4770      	bx	lr

08008ff6 <SDIO_ConfigData>:
 8008ff6:	b480      	push	{r7}
 8008ff8:	b085      	sub	sp, #20
 8008ffa:	af00      	add	r7, sp, #0
 8008ffc:	6078      	str	r0, [r7, #4]
 8008ffe:	6039      	str	r1, [r7, #0]
 8009000:	2300      	movs	r3, #0
 8009002:	60fb      	str	r3, [r7, #12]
 8009004:	683b      	ldr	r3, [r7, #0]
 8009006:	681a      	ldr	r2, [r3, #0]
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	625a      	str	r2, [r3, #36]	; 0x24
 800900c:	683b      	ldr	r3, [r7, #0]
 800900e:	685a      	ldr	r2, [r3, #4]
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	629a      	str	r2, [r3, #40]	; 0x28
 8009014:	683b      	ldr	r3, [r7, #0]
 8009016:	689a      	ldr	r2, [r3, #8]
 8009018:	683b      	ldr	r3, [r7, #0]
 800901a:	68db      	ldr	r3, [r3, #12]
 800901c:	431a      	orrs	r2, r3
 800901e:	683b      	ldr	r3, [r7, #0]
 8009020:	691b      	ldr	r3, [r3, #16]
 8009022:	431a      	orrs	r2, r3
 8009024:	683b      	ldr	r3, [r7, #0]
 8009026:	695b      	ldr	r3, [r3, #20]
 8009028:	4313      	orrs	r3, r2
 800902a:	68fa      	ldr	r2, [r7, #12]
 800902c:	4313      	orrs	r3, r2
 800902e:	60fb      	str	r3, [r7, #12]
 8009030:	687b      	ldr	r3, [r7, #4]
 8009032:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009034:	f023 02f7 	bic.w	r2, r3, #247	; 0xf7
 8009038:	68fb      	ldr	r3, [r7, #12]
 800903a:	431a      	orrs	r2, r3
 800903c:	687b      	ldr	r3, [r7, #4]
 800903e:	62da      	str	r2, [r3, #44]	; 0x2c
 8009040:	2300      	movs	r3, #0
 8009042:	4618      	mov	r0, r3
 8009044:	3714      	adds	r7, #20
 8009046:	46bd      	mov	sp, r7
 8009048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800904c:	4770      	bx	lr

0800904e <SDMMC_CmdBlockLength>:
 800904e:	b580      	push	{r7, lr}
 8009050:	b088      	sub	sp, #32
 8009052:	af00      	add	r7, sp, #0
 8009054:	6078      	str	r0, [r7, #4]
 8009056:	6039      	str	r1, [r7, #0]
 8009058:	2300      	movs	r3, #0
 800905a:	61fb      	str	r3, [r7, #28]
 800905c:	683b      	ldr	r3, [r7, #0]
 800905e:	60bb      	str	r3, [r7, #8]
 8009060:	2310      	movs	r3, #16
 8009062:	60fb      	str	r3, [r7, #12]
 8009064:	2340      	movs	r3, #64	; 0x40
 8009066:	613b      	str	r3, [r7, #16]
 8009068:	2300      	movs	r3, #0
 800906a:	617b      	str	r3, [r7, #20]
 800906c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009070:	61bb      	str	r3, [r7, #24]
 8009072:	f107 0308 	add.w	r3, r7, #8
 8009076:	4619      	mov	r1, r3
 8009078:	6878      	ldr	r0, [r7, #4]
 800907a:	f7ff ff70 	bl	8008f5e <SDIO_SendCommand>
 800907e:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009082:	2110      	movs	r1, #16
 8009084:	6878      	ldr	r0, [r7, #4]
 8009086:	f000 fa63 	bl	8009550 <SDMMC_GetCmdResp1>
 800908a:	61f8      	str	r0, [r7, #28]
 800908c:	69fb      	ldr	r3, [r7, #28]
 800908e:	4618      	mov	r0, r3
 8009090:	3720      	adds	r7, #32
 8009092:	46bd      	mov	sp, r7
 8009094:	bd80      	pop	{r7, pc}

08009096 <SDMMC_CmdReadSingleBlock>:
 8009096:	b580      	push	{r7, lr}
 8009098:	b088      	sub	sp, #32
 800909a:	af00      	add	r7, sp, #0
 800909c:	6078      	str	r0, [r7, #4]
 800909e:	6039      	str	r1, [r7, #0]
 80090a0:	2300      	movs	r3, #0
 80090a2:	61fb      	str	r3, [r7, #28]
 80090a4:	683b      	ldr	r3, [r7, #0]
 80090a6:	60bb      	str	r3, [r7, #8]
 80090a8:	2311      	movs	r3, #17
 80090aa:	60fb      	str	r3, [r7, #12]
 80090ac:	2340      	movs	r3, #64	; 0x40
 80090ae:	613b      	str	r3, [r7, #16]
 80090b0:	2300      	movs	r3, #0
 80090b2:	617b      	str	r3, [r7, #20]
 80090b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80090b8:	61bb      	str	r3, [r7, #24]
 80090ba:	f107 0308 	add.w	r3, r7, #8
 80090be:	4619      	mov	r1, r3
 80090c0:	6878      	ldr	r0, [r7, #4]
 80090c2:	f7ff ff4c 	bl	8008f5e <SDIO_SendCommand>
 80090c6:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80090ca:	2111      	movs	r1, #17
 80090cc:	6878      	ldr	r0, [r7, #4]
 80090ce:	f000 fa3f 	bl	8009550 <SDMMC_GetCmdResp1>
 80090d2:	61f8      	str	r0, [r7, #28]
 80090d4:	69fb      	ldr	r3, [r7, #28]
 80090d6:	4618      	mov	r0, r3
 80090d8:	3720      	adds	r7, #32
 80090da:	46bd      	mov	sp, r7
 80090dc:	bd80      	pop	{r7, pc}

080090de <SDMMC_CmdReadMultiBlock>:
 80090de:	b580      	push	{r7, lr}
 80090e0:	b088      	sub	sp, #32
 80090e2:	af00      	add	r7, sp, #0
 80090e4:	6078      	str	r0, [r7, #4]
 80090e6:	6039      	str	r1, [r7, #0]
 80090e8:	2300      	movs	r3, #0
 80090ea:	61fb      	str	r3, [r7, #28]
 80090ec:	683b      	ldr	r3, [r7, #0]
 80090ee:	60bb      	str	r3, [r7, #8]
 80090f0:	2312      	movs	r3, #18
 80090f2:	60fb      	str	r3, [r7, #12]
 80090f4:	2340      	movs	r3, #64	; 0x40
 80090f6:	613b      	str	r3, [r7, #16]
 80090f8:	2300      	movs	r3, #0
 80090fa:	617b      	str	r3, [r7, #20]
 80090fc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009100:	61bb      	str	r3, [r7, #24]
 8009102:	f107 0308 	add.w	r3, r7, #8
 8009106:	4619      	mov	r1, r3
 8009108:	6878      	ldr	r0, [r7, #4]
 800910a:	f7ff ff28 	bl	8008f5e <SDIO_SendCommand>
 800910e:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009112:	2112      	movs	r1, #18
 8009114:	6878      	ldr	r0, [r7, #4]
 8009116:	f000 fa1b 	bl	8009550 <SDMMC_GetCmdResp1>
 800911a:	61f8      	str	r0, [r7, #28]
 800911c:	69fb      	ldr	r3, [r7, #28]
 800911e:	4618      	mov	r0, r3
 8009120:	3720      	adds	r7, #32
 8009122:	46bd      	mov	sp, r7
 8009124:	bd80      	pop	{r7, pc}

08009126 <SDMMC_CmdWriteSingleBlock>:
 8009126:	b580      	push	{r7, lr}
 8009128:	b088      	sub	sp, #32
 800912a:	af00      	add	r7, sp, #0
 800912c:	6078      	str	r0, [r7, #4]
 800912e:	6039      	str	r1, [r7, #0]
 8009130:	2300      	movs	r3, #0
 8009132:	61fb      	str	r3, [r7, #28]
 8009134:	683b      	ldr	r3, [r7, #0]
 8009136:	60bb      	str	r3, [r7, #8]
 8009138:	2318      	movs	r3, #24
 800913a:	60fb      	str	r3, [r7, #12]
 800913c:	2340      	movs	r3, #64	; 0x40
 800913e:	613b      	str	r3, [r7, #16]
 8009140:	2300      	movs	r3, #0
 8009142:	617b      	str	r3, [r7, #20]
 8009144:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009148:	61bb      	str	r3, [r7, #24]
 800914a:	f107 0308 	add.w	r3, r7, #8
 800914e:	4619      	mov	r1, r3
 8009150:	6878      	ldr	r0, [r7, #4]
 8009152:	f7ff ff04 	bl	8008f5e <SDIO_SendCommand>
 8009156:	f640 12c4 	movw	r2, #2500	; 0x9c4
 800915a:	2118      	movs	r1, #24
 800915c:	6878      	ldr	r0, [r7, #4]
 800915e:	f000 f9f7 	bl	8009550 <SDMMC_GetCmdResp1>
 8009162:	61f8      	str	r0, [r7, #28]
 8009164:	69fb      	ldr	r3, [r7, #28]
 8009166:	4618      	mov	r0, r3
 8009168:	3720      	adds	r7, #32
 800916a:	46bd      	mov	sp, r7
 800916c:	bd80      	pop	{r7, pc}

0800916e <SDMMC_CmdWriteMultiBlock>:
 800916e:	b580      	push	{r7, lr}
 8009170:	b088      	sub	sp, #32
 8009172:	af00      	add	r7, sp, #0
 8009174:	6078      	str	r0, [r7, #4]
 8009176:	6039      	str	r1, [r7, #0]
 8009178:	2300      	movs	r3, #0
 800917a:	61fb      	str	r3, [r7, #28]
 800917c:	683b      	ldr	r3, [r7, #0]
 800917e:	60bb      	str	r3, [r7, #8]
 8009180:	2319      	movs	r3, #25
 8009182:	60fb      	str	r3, [r7, #12]
 8009184:	2340      	movs	r3, #64	; 0x40
 8009186:	613b      	str	r3, [r7, #16]
 8009188:	2300      	movs	r3, #0
 800918a:	617b      	str	r3, [r7, #20]
 800918c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009190:	61bb      	str	r3, [r7, #24]
 8009192:	f107 0308 	add.w	r3, r7, #8
 8009196:	4619      	mov	r1, r3
 8009198:	6878      	ldr	r0, [r7, #4]
 800919a:	f7ff fee0 	bl	8008f5e <SDIO_SendCommand>
 800919e:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80091a2:	2119      	movs	r1, #25
 80091a4:	6878      	ldr	r0, [r7, #4]
 80091a6:	f000 f9d3 	bl	8009550 <SDMMC_GetCmdResp1>
 80091aa:	61f8      	str	r0, [r7, #28]
 80091ac:	69fb      	ldr	r3, [r7, #28]
 80091ae:	4618      	mov	r0, r3
 80091b0:	3720      	adds	r7, #32
 80091b2:	46bd      	mov	sp, r7
 80091b4:	bd80      	pop	{r7, pc}
	...

080091b8 <SDMMC_CmdStopTransfer>:
 80091b8:	b580      	push	{r7, lr}
 80091ba:	b088      	sub	sp, #32
 80091bc:	af00      	add	r7, sp, #0
 80091be:	6078      	str	r0, [r7, #4]
 80091c0:	2300      	movs	r3, #0
 80091c2:	61fb      	str	r3, [r7, #28]
 80091c4:	2300      	movs	r3, #0
 80091c6:	60bb      	str	r3, [r7, #8]
 80091c8:	230c      	movs	r3, #12
 80091ca:	60fb      	str	r3, [r7, #12]
 80091cc:	2340      	movs	r3, #64	; 0x40
 80091ce:	613b      	str	r3, [r7, #16]
 80091d0:	2300      	movs	r3, #0
 80091d2:	617b      	str	r3, [r7, #20]
 80091d4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80091d8:	61bb      	str	r3, [r7, #24]
 80091da:	f107 0308 	add.w	r3, r7, #8
 80091de:	4619      	mov	r1, r3
 80091e0:	6878      	ldr	r0, [r7, #4]
 80091e2:	f7ff febc 	bl	8008f5e <SDIO_SendCommand>
 80091e6:	4a05      	ldr	r2, [pc, #20]	; (80091fc <SDMMC_CmdStopTransfer+0x44>)
 80091e8:	210c      	movs	r1, #12
 80091ea:	6878      	ldr	r0, [r7, #4]
 80091ec:	f000 f9b0 	bl	8009550 <SDMMC_GetCmdResp1>
 80091f0:	61f8      	str	r0, [r7, #28]
 80091f2:	69fb      	ldr	r3, [r7, #28]
 80091f4:	4618      	mov	r0, r3
 80091f6:	3720      	adds	r7, #32
 80091f8:	46bd      	mov	sp, r7
 80091fa:	bd80      	pop	{r7, pc}
 80091fc:	05f5e100 	.word	0x05f5e100

08009200 <SDMMC_CmdSelDesel>:
 8009200:	b580      	push	{r7, lr}
 8009202:	b08a      	sub	sp, #40	; 0x28
 8009204:	af00      	add	r7, sp, #0
 8009206:	60f8      	str	r0, [r7, #12]
 8009208:	e9c7 2300 	strd	r2, r3, [r7]
 800920c:	2300      	movs	r3, #0
 800920e:	627b      	str	r3, [r7, #36]	; 0x24
 8009210:	683b      	ldr	r3, [r7, #0]
 8009212:	613b      	str	r3, [r7, #16]
 8009214:	2307      	movs	r3, #7
 8009216:	617b      	str	r3, [r7, #20]
 8009218:	2340      	movs	r3, #64	; 0x40
 800921a:	61bb      	str	r3, [r7, #24]
 800921c:	2300      	movs	r3, #0
 800921e:	61fb      	str	r3, [r7, #28]
 8009220:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009224:	623b      	str	r3, [r7, #32]
 8009226:	f107 0310 	add.w	r3, r7, #16
 800922a:	4619      	mov	r1, r3
 800922c:	68f8      	ldr	r0, [r7, #12]
 800922e:	f7ff fe96 	bl	8008f5e <SDIO_SendCommand>
 8009232:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009236:	2107      	movs	r1, #7
 8009238:	68f8      	ldr	r0, [r7, #12]
 800923a:	f000 f989 	bl	8009550 <SDMMC_GetCmdResp1>
 800923e:	6278      	str	r0, [r7, #36]	; 0x24
 8009240:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009242:	4618      	mov	r0, r3
 8009244:	3728      	adds	r7, #40	; 0x28
 8009246:	46bd      	mov	sp, r7
 8009248:	bd80      	pop	{r7, pc}

0800924a <SDMMC_CmdGoIdleState>:
 800924a:	b580      	push	{r7, lr}
 800924c:	b088      	sub	sp, #32
 800924e:	af00      	add	r7, sp, #0
 8009250:	6078      	str	r0, [r7, #4]
 8009252:	2300      	movs	r3, #0
 8009254:	61fb      	str	r3, [r7, #28]
 8009256:	2300      	movs	r3, #0
 8009258:	60bb      	str	r3, [r7, #8]
 800925a:	2300      	movs	r3, #0
 800925c:	60fb      	str	r3, [r7, #12]
 800925e:	2300      	movs	r3, #0
 8009260:	613b      	str	r3, [r7, #16]
 8009262:	2300      	movs	r3, #0
 8009264:	617b      	str	r3, [r7, #20]
 8009266:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800926a:	61bb      	str	r3, [r7, #24]
 800926c:	f107 0308 	add.w	r3, r7, #8
 8009270:	4619      	mov	r1, r3
 8009272:	6878      	ldr	r0, [r7, #4]
 8009274:	f7ff fe73 	bl	8008f5e <SDIO_SendCommand>
 8009278:	6878      	ldr	r0, [r7, #4]
 800927a:	f000 f93f 	bl	80094fc <SDMMC_GetCmdError>
 800927e:	61f8      	str	r0, [r7, #28]
 8009280:	69fb      	ldr	r3, [r7, #28]
 8009282:	4618      	mov	r0, r3
 8009284:	3720      	adds	r7, #32
 8009286:	46bd      	mov	sp, r7
 8009288:	bd80      	pop	{r7, pc}

0800928a <SDMMC_CmdOperCond>:
 800928a:	b580      	push	{r7, lr}
 800928c:	b088      	sub	sp, #32
 800928e:	af00      	add	r7, sp, #0
 8009290:	6078      	str	r0, [r7, #4]
 8009292:	2300      	movs	r3, #0
 8009294:	61fb      	str	r3, [r7, #28]
 8009296:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 800929a:	60bb      	str	r3, [r7, #8]
 800929c:	2308      	movs	r3, #8
 800929e:	60fb      	str	r3, [r7, #12]
 80092a0:	2340      	movs	r3, #64	; 0x40
 80092a2:	613b      	str	r3, [r7, #16]
 80092a4:	2300      	movs	r3, #0
 80092a6:	617b      	str	r3, [r7, #20]
 80092a8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80092ac:	61bb      	str	r3, [r7, #24]
 80092ae:	f107 0308 	add.w	r3, r7, #8
 80092b2:	4619      	mov	r1, r3
 80092b4:	6878      	ldr	r0, [r7, #4]
 80092b6:	f7ff fe52 	bl	8008f5e <SDIO_SendCommand>
 80092ba:	6878      	ldr	r0, [r7, #4]
 80092bc:	f000 fb10 	bl	80098e0 <SDMMC_GetCmdResp7>
 80092c0:	61f8      	str	r0, [r7, #28]
 80092c2:	69fb      	ldr	r3, [r7, #28]
 80092c4:	4618      	mov	r0, r3
 80092c6:	3720      	adds	r7, #32
 80092c8:	46bd      	mov	sp, r7
 80092ca:	bd80      	pop	{r7, pc}

080092cc <SDMMC_CmdAppCommand>:
 80092cc:	b580      	push	{r7, lr}
 80092ce:	b088      	sub	sp, #32
 80092d0:	af00      	add	r7, sp, #0
 80092d2:	6078      	str	r0, [r7, #4]
 80092d4:	6039      	str	r1, [r7, #0]
 80092d6:	2300      	movs	r3, #0
 80092d8:	61fb      	str	r3, [r7, #28]
 80092da:	683b      	ldr	r3, [r7, #0]
 80092dc:	60bb      	str	r3, [r7, #8]
 80092de:	2337      	movs	r3, #55	; 0x37
 80092e0:	60fb      	str	r3, [r7, #12]
 80092e2:	2340      	movs	r3, #64	; 0x40
 80092e4:	613b      	str	r3, [r7, #16]
 80092e6:	2300      	movs	r3, #0
 80092e8:	617b      	str	r3, [r7, #20]
 80092ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80092ee:	61bb      	str	r3, [r7, #24]
 80092f0:	f107 0308 	add.w	r3, r7, #8
 80092f4:	4619      	mov	r1, r3
 80092f6:	6878      	ldr	r0, [r7, #4]
 80092f8:	f7ff fe31 	bl	8008f5e <SDIO_SendCommand>
 80092fc:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009300:	2137      	movs	r1, #55	; 0x37
 8009302:	6878      	ldr	r0, [r7, #4]
 8009304:	f000 f924 	bl	8009550 <SDMMC_GetCmdResp1>
 8009308:	61f8      	str	r0, [r7, #28]
 800930a:	69fb      	ldr	r3, [r7, #28]
 800930c:	4618      	mov	r0, r3
 800930e:	3720      	adds	r7, #32
 8009310:	46bd      	mov	sp, r7
 8009312:	bd80      	pop	{r7, pc}

08009314 <SDMMC_CmdAppOperCommand>:
 8009314:	b580      	push	{r7, lr}
 8009316:	b088      	sub	sp, #32
 8009318:	af00      	add	r7, sp, #0
 800931a:	6078      	str	r0, [r7, #4]
 800931c:	6039      	str	r1, [r7, #0]
 800931e:	2300      	movs	r3, #0
 8009320:	61fb      	str	r3, [r7, #28]
 8009322:	683b      	ldr	r3, [r7, #0]
 8009324:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009328:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800932c:	60bb      	str	r3, [r7, #8]
 800932e:	2329      	movs	r3, #41	; 0x29
 8009330:	60fb      	str	r3, [r7, #12]
 8009332:	2340      	movs	r3, #64	; 0x40
 8009334:	613b      	str	r3, [r7, #16]
 8009336:	2300      	movs	r3, #0
 8009338:	617b      	str	r3, [r7, #20]
 800933a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800933e:	61bb      	str	r3, [r7, #24]
 8009340:	f107 0308 	add.w	r3, r7, #8
 8009344:	4619      	mov	r1, r3
 8009346:	6878      	ldr	r0, [r7, #4]
 8009348:	f7ff fe09 	bl	8008f5e <SDIO_SendCommand>
 800934c:	6878      	ldr	r0, [r7, #4]
 800934e:	f000 fa25 	bl	800979c <SDMMC_GetCmdResp3>
 8009352:	61f8      	str	r0, [r7, #28]
 8009354:	69fb      	ldr	r3, [r7, #28]
 8009356:	4618      	mov	r0, r3
 8009358:	3720      	adds	r7, #32
 800935a:	46bd      	mov	sp, r7
 800935c:	bd80      	pop	{r7, pc}

0800935e <SDMMC_CmdBusWidth>:
 800935e:	b580      	push	{r7, lr}
 8009360:	b088      	sub	sp, #32
 8009362:	af00      	add	r7, sp, #0
 8009364:	6078      	str	r0, [r7, #4]
 8009366:	6039      	str	r1, [r7, #0]
 8009368:	2300      	movs	r3, #0
 800936a:	61fb      	str	r3, [r7, #28]
 800936c:	683b      	ldr	r3, [r7, #0]
 800936e:	60bb      	str	r3, [r7, #8]
 8009370:	2306      	movs	r3, #6
 8009372:	60fb      	str	r3, [r7, #12]
 8009374:	2340      	movs	r3, #64	; 0x40
 8009376:	613b      	str	r3, [r7, #16]
 8009378:	2300      	movs	r3, #0
 800937a:	617b      	str	r3, [r7, #20]
 800937c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009380:	61bb      	str	r3, [r7, #24]
 8009382:	f107 0308 	add.w	r3, r7, #8
 8009386:	4619      	mov	r1, r3
 8009388:	6878      	ldr	r0, [r7, #4]
 800938a:	f7ff fde8 	bl	8008f5e <SDIO_SendCommand>
 800938e:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009392:	2106      	movs	r1, #6
 8009394:	6878      	ldr	r0, [r7, #4]
 8009396:	f000 f8db 	bl	8009550 <SDMMC_GetCmdResp1>
 800939a:	61f8      	str	r0, [r7, #28]
 800939c:	69fb      	ldr	r3, [r7, #28]
 800939e:	4618      	mov	r0, r3
 80093a0:	3720      	adds	r7, #32
 80093a2:	46bd      	mov	sp, r7
 80093a4:	bd80      	pop	{r7, pc}

080093a6 <SDMMC_CmdSendSCR>:
 80093a6:	b580      	push	{r7, lr}
 80093a8:	b088      	sub	sp, #32
 80093aa:	af00      	add	r7, sp, #0
 80093ac:	6078      	str	r0, [r7, #4]
 80093ae:	2300      	movs	r3, #0
 80093b0:	61fb      	str	r3, [r7, #28]
 80093b2:	2300      	movs	r3, #0
 80093b4:	60bb      	str	r3, [r7, #8]
 80093b6:	2333      	movs	r3, #51	; 0x33
 80093b8:	60fb      	str	r3, [r7, #12]
 80093ba:	2340      	movs	r3, #64	; 0x40
 80093bc:	613b      	str	r3, [r7, #16]
 80093be:	2300      	movs	r3, #0
 80093c0:	617b      	str	r3, [r7, #20]
 80093c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80093c6:	61bb      	str	r3, [r7, #24]
 80093c8:	f107 0308 	add.w	r3, r7, #8
 80093cc:	4619      	mov	r1, r3
 80093ce:	6878      	ldr	r0, [r7, #4]
 80093d0:	f7ff fdc5 	bl	8008f5e <SDIO_SendCommand>
 80093d4:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80093d8:	2133      	movs	r1, #51	; 0x33
 80093da:	6878      	ldr	r0, [r7, #4]
 80093dc:	f000 f8b8 	bl	8009550 <SDMMC_GetCmdResp1>
 80093e0:	61f8      	str	r0, [r7, #28]
 80093e2:	69fb      	ldr	r3, [r7, #28]
 80093e4:	4618      	mov	r0, r3
 80093e6:	3720      	adds	r7, #32
 80093e8:	46bd      	mov	sp, r7
 80093ea:	bd80      	pop	{r7, pc}

080093ec <SDMMC_CmdSendCID>:
 80093ec:	b580      	push	{r7, lr}
 80093ee:	b088      	sub	sp, #32
 80093f0:	af00      	add	r7, sp, #0
 80093f2:	6078      	str	r0, [r7, #4]
 80093f4:	2300      	movs	r3, #0
 80093f6:	61fb      	str	r3, [r7, #28]
 80093f8:	2300      	movs	r3, #0
 80093fa:	60bb      	str	r3, [r7, #8]
 80093fc:	2302      	movs	r3, #2
 80093fe:	60fb      	str	r3, [r7, #12]
 8009400:	23c0      	movs	r3, #192	; 0xc0
 8009402:	613b      	str	r3, [r7, #16]
 8009404:	2300      	movs	r3, #0
 8009406:	617b      	str	r3, [r7, #20]
 8009408:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800940c:	61bb      	str	r3, [r7, #24]
 800940e:	f107 0308 	add.w	r3, r7, #8
 8009412:	4619      	mov	r1, r3
 8009414:	6878      	ldr	r0, [r7, #4]
 8009416:	f7ff fda2 	bl	8008f5e <SDIO_SendCommand>
 800941a:	6878      	ldr	r0, [r7, #4]
 800941c:	f000 f97e 	bl	800971c <SDMMC_GetCmdResp2>
 8009420:	61f8      	str	r0, [r7, #28]
 8009422:	69fb      	ldr	r3, [r7, #28]
 8009424:	4618      	mov	r0, r3
 8009426:	3720      	adds	r7, #32
 8009428:	46bd      	mov	sp, r7
 800942a:	bd80      	pop	{r7, pc}

0800942c <SDMMC_CmdSendCSD>:
 800942c:	b580      	push	{r7, lr}
 800942e:	b088      	sub	sp, #32
 8009430:	af00      	add	r7, sp, #0
 8009432:	6078      	str	r0, [r7, #4]
 8009434:	6039      	str	r1, [r7, #0]
 8009436:	2300      	movs	r3, #0
 8009438:	61fb      	str	r3, [r7, #28]
 800943a:	683b      	ldr	r3, [r7, #0]
 800943c:	60bb      	str	r3, [r7, #8]
 800943e:	2309      	movs	r3, #9
 8009440:	60fb      	str	r3, [r7, #12]
 8009442:	23c0      	movs	r3, #192	; 0xc0
 8009444:	613b      	str	r3, [r7, #16]
 8009446:	2300      	movs	r3, #0
 8009448:	617b      	str	r3, [r7, #20]
 800944a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800944e:	61bb      	str	r3, [r7, #24]
 8009450:	f107 0308 	add.w	r3, r7, #8
 8009454:	4619      	mov	r1, r3
 8009456:	6878      	ldr	r0, [r7, #4]
 8009458:	f7ff fd81 	bl	8008f5e <SDIO_SendCommand>
 800945c:	6878      	ldr	r0, [r7, #4]
 800945e:	f000 f95d 	bl	800971c <SDMMC_GetCmdResp2>
 8009462:	61f8      	str	r0, [r7, #28]
 8009464:	69fb      	ldr	r3, [r7, #28]
 8009466:	4618      	mov	r0, r3
 8009468:	3720      	adds	r7, #32
 800946a:	46bd      	mov	sp, r7
 800946c:	bd80      	pop	{r7, pc}

0800946e <SDMMC_CmdSetRelAdd>:
 800946e:	b580      	push	{r7, lr}
 8009470:	b088      	sub	sp, #32
 8009472:	af00      	add	r7, sp, #0
 8009474:	6078      	str	r0, [r7, #4]
 8009476:	6039      	str	r1, [r7, #0]
 8009478:	2300      	movs	r3, #0
 800947a:	61fb      	str	r3, [r7, #28]
 800947c:	2300      	movs	r3, #0
 800947e:	60bb      	str	r3, [r7, #8]
 8009480:	2303      	movs	r3, #3
 8009482:	60fb      	str	r3, [r7, #12]
 8009484:	2340      	movs	r3, #64	; 0x40
 8009486:	613b      	str	r3, [r7, #16]
 8009488:	2300      	movs	r3, #0
 800948a:	617b      	str	r3, [r7, #20]
 800948c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009490:	61bb      	str	r3, [r7, #24]
 8009492:	f107 0308 	add.w	r3, r7, #8
 8009496:	4619      	mov	r1, r3
 8009498:	6878      	ldr	r0, [r7, #4]
 800949a:	f7ff fd60 	bl	8008f5e <SDIO_SendCommand>
 800949e:	683a      	ldr	r2, [r7, #0]
 80094a0:	2103      	movs	r1, #3
 80094a2:	6878      	ldr	r0, [r7, #4]
 80094a4:	f000 f9ae 	bl	8009804 <SDMMC_GetCmdResp6>
 80094a8:	61f8      	str	r0, [r7, #28]
 80094aa:	69fb      	ldr	r3, [r7, #28]
 80094ac:	4618      	mov	r0, r3
 80094ae:	3720      	adds	r7, #32
 80094b0:	46bd      	mov	sp, r7
 80094b2:	bd80      	pop	{r7, pc}

080094b4 <SDMMC_CmdSendStatus>:
 80094b4:	b580      	push	{r7, lr}
 80094b6:	b088      	sub	sp, #32
 80094b8:	af00      	add	r7, sp, #0
 80094ba:	6078      	str	r0, [r7, #4]
 80094bc:	6039      	str	r1, [r7, #0]
 80094be:	2300      	movs	r3, #0
 80094c0:	61fb      	str	r3, [r7, #28]
 80094c2:	683b      	ldr	r3, [r7, #0]
 80094c4:	60bb      	str	r3, [r7, #8]
 80094c6:	230d      	movs	r3, #13
 80094c8:	60fb      	str	r3, [r7, #12]
 80094ca:	2340      	movs	r3, #64	; 0x40
 80094cc:	613b      	str	r3, [r7, #16]
 80094ce:	2300      	movs	r3, #0
 80094d0:	617b      	str	r3, [r7, #20]
 80094d2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80094d6:	61bb      	str	r3, [r7, #24]
 80094d8:	f107 0308 	add.w	r3, r7, #8
 80094dc:	4619      	mov	r1, r3
 80094de:	6878      	ldr	r0, [r7, #4]
 80094e0:	f7ff fd3d 	bl	8008f5e <SDIO_SendCommand>
 80094e4:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80094e8:	210d      	movs	r1, #13
 80094ea:	6878      	ldr	r0, [r7, #4]
 80094ec:	f000 f830 	bl	8009550 <SDMMC_GetCmdResp1>
 80094f0:	61f8      	str	r0, [r7, #28]
 80094f2:	69fb      	ldr	r3, [r7, #28]
 80094f4:	4618      	mov	r0, r3
 80094f6:	3720      	adds	r7, #32
 80094f8:	46bd      	mov	sp, r7
 80094fa:	bd80      	pop	{r7, pc}

080094fc <SDMMC_GetCmdError>:
 80094fc:	b490      	push	{r4, r7}
 80094fe:	b082      	sub	sp, #8
 8009500:	af00      	add	r7, sp, #0
 8009502:	6078      	str	r0, [r7, #4]
 8009504:	4b10      	ldr	r3, [pc, #64]	; (8009548 <SDMMC_GetCmdError+0x4c>)
 8009506:	681b      	ldr	r3, [r3, #0]
 8009508:	4a10      	ldr	r2, [pc, #64]	; (800954c <SDMMC_GetCmdError+0x50>)
 800950a:	fba2 2303 	umull	r2, r3, r2, r3
 800950e:	0a5b      	lsrs	r3, r3, #9
 8009510:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009514:	fb02 f403 	mul.w	r4, r2, r3
 8009518:	4623      	mov	r3, r4
 800951a:	1e5c      	subs	r4, r3, #1
 800951c:	2b00      	cmp	r3, #0
 800951e:	d102      	bne.n	8009526 <SDMMC_GetCmdError+0x2a>
 8009520:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009524:	e00a      	b.n	800953c <SDMMC_GetCmdError+0x40>
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800952a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800952e:	2b00      	cmp	r3, #0
 8009530:	d0f2      	beq.n	8009518 <SDMMC_GetCmdError+0x1c>
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8009538:	639a      	str	r2, [r3, #56]	; 0x38
 800953a:	2300      	movs	r3, #0
 800953c:	4618      	mov	r0, r3
 800953e:	3708      	adds	r7, #8
 8009540:	46bd      	mov	sp, r7
 8009542:	bc90      	pop	{r4, r7}
 8009544:	4770      	bx	lr
 8009546:	bf00      	nop
 8009548:	20000014 	.word	0x20000014
 800954c:	10624dd3 	.word	0x10624dd3

08009550 <SDMMC_GetCmdResp1>:
 8009550:	b590      	push	{r4, r7, lr}
 8009552:	b087      	sub	sp, #28
 8009554:	af00      	add	r7, sp, #0
 8009556:	60f8      	str	r0, [r7, #12]
 8009558:	460b      	mov	r3, r1
 800955a:	607a      	str	r2, [r7, #4]
 800955c:	72fb      	strb	r3, [r7, #11]
 800955e:	4b6c      	ldr	r3, [pc, #432]	; (8009710 <SDMMC_GetCmdResp1+0x1c0>)
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	4a6c      	ldr	r2, [pc, #432]	; (8009714 <SDMMC_GetCmdResp1+0x1c4>)
 8009564:	fba2 2303 	umull	r2, r3, r2, r3
 8009568:	0a5b      	lsrs	r3, r3, #9
 800956a:	687a      	ldr	r2, [r7, #4]
 800956c:	fb02 f403 	mul.w	r4, r2, r3
 8009570:	4623      	mov	r3, r4
 8009572:	1e5c      	subs	r4, r3, #1
 8009574:	2b00      	cmp	r3, #0
 8009576:	d102      	bne.n	800957e <SDMMC_GetCmdResp1+0x2e>
 8009578:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800957c:	e0c3      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 800957e:	68fb      	ldr	r3, [r7, #12]
 8009580:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009582:	f003 0345 	and.w	r3, r3, #69	; 0x45
 8009586:	2b00      	cmp	r3, #0
 8009588:	d0f2      	beq.n	8009570 <SDMMC_GetCmdResp1+0x20>
 800958a:	68fb      	ldr	r3, [r7, #12]
 800958c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800958e:	f003 0304 	and.w	r3, r3, #4
 8009592:	2b00      	cmp	r3, #0
 8009594:	d004      	beq.n	80095a0 <SDMMC_GetCmdResp1+0x50>
 8009596:	68fb      	ldr	r3, [r7, #12]
 8009598:	2204      	movs	r2, #4
 800959a:	639a      	str	r2, [r3, #56]	; 0x38
 800959c:	2304      	movs	r3, #4
 800959e:	e0b2      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80095a4:	f003 0301 	and.w	r3, r3, #1
 80095a8:	2b00      	cmp	r3, #0
 80095aa:	d004      	beq.n	80095b6 <SDMMC_GetCmdResp1+0x66>
 80095ac:	68fb      	ldr	r3, [r7, #12]
 80095ae:	2201      	movs	r2, #1
 80095b0:	639a      	str	r2, [r3, #56]	; 0x38
 80095b2:	2301      	movs	r3, #1
 80095b4:	e0a7      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80095b6:	68f8      	ldr	r0, [r7, #12]
 80095b8:	f7ff fcfb 	bl	8008fb2 <SDIO_GetCommandResponse>
 80095bc:	4603      	mov	r3, r0
 80095be:	461a      	mov	r2, r3
 80095c0:	7afb      	ldrb	r3, [r7, #11]
 80095c2:	4293      	cmp	r3, r2
 80095c4:	d001      	beq.n	80095ca <SDMMC_GetCmdResp1+0x7a>
 80095c6:	2301      	movs	r3, #1
 80095c8:	e09d      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80095ca:	68fb      	ldr	r3, [r7, #12]
 80095cc:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80095d0:	639a      	str	r2, [r3, #56]	; 0x38
 80095d2:	2100      	movs	r1, #0
 80095d4:	68f8      	ldr	r0, [r7, #12]
 80095d6:	f7ff fcf9 	bl	8008fcc <SDIO_GetResponse>
 80095da:	6178      	str	r0, [r7, #20]
 80095dc:	697a      	ldr	r2, [r7, #20]
 80095de:	4b4e      	ldr	r3, [pc, #312]	; (8009718 <SDMMC_GetCmdResp1+0x1c8>)
 80095e0:	4013      	ands	r3, r2
 80095e2:	2b00      	cmp	r3, #0
 80095e4:	d101      	bne.n	80095ea <SDMMC_GetCmdResp1+0x9a>
 80095e6:	2300      	movs	r3, #0
 80095e8:	e08d      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80095ea:	697b      	ldr	r3, [r7, #20]
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	da02      	bge.n	80095f6 <SDMMC_GetCmdResp1+0xa6>
 80095f0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80095f4:	e087      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80095f6:	697b      	ldr	r3, [r7, #20]
 80095f8:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 80095fc:	2b00      	cmp	r3, #0
 80095fe:	d001      	beq.n	8009604 <SDMMC_GetCmdResp1+0xb4>
 8009600:	2340      	movs	r3, #64	; 0x40
 8009602:	e080      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009604:	697b      	ldr	r3, [r7, #20]
 8009606:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800960a:	2b00      	cmp	r3, #0
 800960c:	d001      	beq.n	8009612 <SDMMC_GetCmdResp1+0xc2>
 800960e:	2380      	movs	r3, #128	; 0x80
 8009610:	e079      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009612:	697b      	ldr	r3, [r7, #20]
 8009614:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009618:	2b00      	cmp	r3, #0
 800961a:	d002      	beq.n	8009622 <SDMMC_GetCmdResp1+0xd2>
 800961c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009620:	e071      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009622:	697b      	ldr	r3, [r7, #20]
 8009624:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009628:	2b00      	cmp	r3, #0
 800962a:	d002      	beq.n	8009632 <SDMMC_GetCmdResp1+0xe2>
 800962c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009630:	e069      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009632:	697b      	ldr	r3, [r7, #20]
 8009634:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8009638:	2b00      	cmp	r3, #0
 800963a:	d002      	beq.n	8009642 <SDMMC_GetCmdResp1+0xf2>
 800963c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009640:	e061      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009642:	697b      	ldr	r3, [r7, #20]
 8009644:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8009648:	2b00      	cmp	r3, #0
 800964a:	d002      	beq.n	8009652 <SDMMC_GetCmdResp1+0x102>
 800964c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009650:	e059      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009652:	697b      	ldr	r3, [r7, #20]
 8009654:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009658:	2b00      	cmp	r3, #0
 800965a:	d002      	beq.n	8009662 <SDMMC_GetCmdResp1+0x112>
 800965c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009660:	e051      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009662:	697b      	ldr	r3, [r7, #20]
 8009664:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8009668:	2b00      	cmp	r3, #0
 800966a:	d002      	beq.n	8009672 <SDMMC_GetCmdResp1+0x122>
 800966c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009670:	e049      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009672:	697b      	ldr	r3, [r7, #20]
 8009674:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009678:	2b00      	cmp	r3, #0
 800967a:	d002      	beq.n	8009682 <SDMMC_GetCmdResp1+0x132>
 800967c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8009680:	e041      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009682:	697b      	ldr	r3, [r7, #20]
 8009684:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009688:	2b00      	cmp	r3, #0
 800968a:	d002      	beq.n	8009692 <SDMMC_GetCmdResp1+0x142>
 800968c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009690:	e039      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009692:	697b      	ldr	r3, [r7, #20]
 8009694:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009698:	2b00      	cmp	r3, #0
 800969a:	d002      	beq.n	80096a2 <SDMMC_GetCmdResp1+0x152>
 800969c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80096a0:	e031      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096a2:	697b      	ldr	r3, [r7, #20]
 80096a4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	d002      	beq.n	80096b2 <SDMMC_GetCmdResp1+0x162>
 80096ac:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 80096b0:	e029      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096b2:	697b      	ldr	r3, [r7, #20]
 80096b4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80096b8:	2b00      	cmp	r3, #0
 80096ba:	d002      	beq.n	80096c2 <SDMMC_GetCmdResp1+0x172>
 80096bc:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80096c0:	e021      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096c2:	697b      	ldr	r3, [r7, #20]
 80096c4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80096c8:	2b00      	cmp	r3, #0
 80096ca:	d002      	beq.n	80096d2 <SDMMC_GetCmdResp1+0x182>
 80096cc:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80096d0:	e019      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096d2:	697b      	ldr	r3, [r7, #20]
 80096d4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80096d8:	2b00      	cmp	r3, #0
 80096da:	d002      	beq.n	80096e2 <SDMMC_GetCmdResp1+0x192>
 80096dc:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 80096e0:	e011      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096e2:	697b      	ldr	r3, [r7, #20]
 80096e4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80096e8:	2b00      	cmp	r3, #0
 80096ea:	d002      	beq.n	80096f2 <SDMMC_GetCmdResp1+0x1a2>
 80096ec:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80096f0:	e009      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 80096f2:	697b      	ldr	r3, [r7, #20]
 80096f4:	f003 0308 	and.w	r3, r3, #8
 80096f8:	2b00      	cmp	r3, #0
 80096fa:	d002      	beq.n	8009702 <SDMMC_GetCmdResp1+0x1b2>
 80096fc:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8009700:	e001      	b.n	8009706 <SDMMC_GetCmdResp1+0x1b6>
 8009702:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8009706:	4618      	mov	r0, r3
 8009708:	371c      	adds	r7, #28
 800970a:	46bd      	mov	sp, r7
 800970c:	bd90      	pop	{r4, r7, pc}
 800970e:	bf00      	nop
 8009710:	20000014 	.word	0x20000014
 8009714:	10624dd3 	.word	0x10624dd3
 8009718:	fdffe008 	.word	0xfdffe008

0800971c <SDMMC_GetCmdResp2>:
 800971c:	b490      	push	{r4, r7}
 800971e:	b082      	sub	sp, #8
 8009720:	af00      	add	r7, sp, #0
 8009722:	6078      	str	r0, [r7, #4]
 8009724:	4b1b      	ldr	r3, [pc, #108]	; (8009794 <SDMMC_GetCmdResp2+0x78>)
 8009726:	681b      	ldr	r3, [r3, #0]
 8009728:	4a1b      	ldr	r2, [pc, #108]	; (8009798 <SDMMC_GetCmdResp2+0x7c>)
 800972a:	fba2 2303 	umull	r2, r3, r2, r3
 800972e:	0a5b      	lsrs	r3, r3, #9
 8009730:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009734:	fb02 f403 	mul.w	r4, r2, r3
 8009738:	4623      	mov	r3, r4
 800973a:	1e5c      	subs	r4, r3, #1
 800973c:	2b00      	cmp	r3, #0
 800973e:	d102      	bne.n	8009746 <SDMMC_GetCmdResp2+0x2a>
 8009740:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009744:	e020      	b.n	8009788 <SDMMC_GetCmdResp2+0x6c>
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800974a:	f003 0345 	and.w	r3, r3, #69	; 0x45
 800974e:	2b00      	cmp	r3, #0
 8009750:	d0f2      	beq.n	8009738 <SDMMC_GetCmdResp2+0x1c>
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009756:	f003 0304 	and.w	r3, r3, #4
 800975a:	2b00      	cmp	r3, #0
 800975c:	d004      	beq.n	8009768 <SDMMC_GetCmdResp2+0x4c>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	2204      	movs	r2, #4
 8009762:	639a      	str	r2, [r3, #56]	; 0x38
 8009764:	2304      	movs	r3, #4
 8009766:	e00f      	b.n	8009788 <SDMMC_GetCmdResp2+0x6c>
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800976c:	f003 0301 	and.w	r3, r3, #1
 8009770:	2b00      	cmp	r3, #0
 8009772:	d004      	beq.n	800977e <SDMMC_GetCmdResp2+0x62>
 8009774:	687b      	ldr	r3, [r7, #4]
 8009776:	2201      	movs	r2, #1
 8009778:	639a      	str	r2, [r3, #56]	; 0x38
 800977a:	2301      	movs	r3, #1
 800977c:	e004      	b.n	8009788 <SDMMC_GetCmdResp2+0x6c>
 800977e:	687b      	ldr	r3, [r7, #4]
 8009780:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8009784:	639a      	str	r2, [r3, #56]	; 0x38
 8009786:	2300      	movs	r3, #0
 8009788:	4618      	mov	r0, r3
 800978a:	3708      	adds	r7, #8
 800978c:	46bd      	mov	sp, r7
 800978e:	bc90      	pop	{r4, r7}
 8009790:	4770      	bx	lr
 8009792:	bf00      	nop
 8009794:	20000014 	.word	0x20000014
 8009798:	10624dd3 	.word	0x10624dd3

0800979c <SDMMC_GetCmdResp3>:
 800979c:	b490      	push	{r4, r7}
 800979e:	b082      	sub	sp, #8
 80097a0:	af00      	add	r7, sp, #0
 80097a2:	6078      	str	r0, [r7, #4]
 80097a4:	4b15      	ldr	r3, [pc, #84]	; (80097fc <SDMMC_GetCmdResp3+0x60>)
 80097a6:	681b      	ldr	r3, [r3, #0]
 80097a8:	4a15      	ldr	r2, [pc, #84]	; (8009800 <SDMMC_GetCmdResp3+0x64>)
 80097aa:	fba2 2303 	umull	r2, r3, r2, r3
 80097ae:	0a5b      	lsrs	r3, r3, #9
 80097b0:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80097b4:	fb02 f403 	mul.w	r4, r2, r3
 80097b8:	4623      	mov	r3, r4
 80097ba:	1e5c      	subs	r4, r3, #1
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d102      	bne.n	80097c6 <SDMMC_GetCmdResp3+0x2a>
 80097c0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80097c4:	e015      	b.n	80097f2 <SDMMC_GetCmdResp3+0x56>
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80097ca:	f003 0345 	and.w	r3, r3, #69	; 0x45
 80097ce:	2b00      	cmp	r3, #0
 80097d0:	d0f2      	beq.n	80097b8 <SDMMC_GetCmdResp3+0x1c>
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80097d6:	f003 0304 	and.w	r3, r3, #4
 80097da:	2b00      	cmp	r3, #0
 80097dc:	d004      	beq.n	80097e8 <SDMMC_GetCmdResp3+0x4c>
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	2204      	movs	r2, #4
 80097e2:	639a      	str	r2, [r3, #56]	; 0x38
 80097e4:	2304      	movs	r3, #4
 80097e6:	e004      	b.n	80097f2 <SDMMC_GetCmdResp3+0x56>
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	f240 52ff 	movw	r2, #1535	; 0x5ff
 80097ee:	639a      	str	r2, [r3, #56]	; 0x38
 80097f0:	2300      	movs	r3, #0
 80097f2:	4618      	mov	r0, r3
 80097f4:	3708      	adds	r7, #8
 80097f6:	46bd      	mov	sp, r7
 80097f8:	bc90      	pop	{r4, r7}
 80097fa:	4770      	bx	lr
 80097fc:	20000014 	.word	0x20000014
 8009800:	10624dd3 	.word	0x10624dd3

08009804 <SDMMC_GetCmdResp6>:
 8009804:	b590      	push	{r4, r7, lr}
 8009806:	b087      	sub	sp, #28
 8009808:	af00      	add	r7, sp, #0
 800980a:	60f8      	str	r0, [r7, #12]
 800980c:	460b      	mov	r3, r1
 800980e:	607a      	str	r2, [r7, #4]
 8009810:	72fb      	strb	r3, [r7, #11]
 8009812:	4b31      	ldr	r3, [pc, #196]	; (80098d8 <SDMMC_GetCmdResp6+0xd4>)
 8009814:	681b      	ldr	r3, [r3, #0]
 8009816:	4a31      	ldr	r2, [pc, #196]	; (80098dc <SDMMC_GetCmdResp6+0xd8>)
 8009818:	fba2 2303 	umull	r2, r3, r2, r3
 800981c:	0a5b      	lsrs	r3, r3, #9
 800981e:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8009822:	fb02 f403 	mul.w	r4, r2, r3
 8009826:	4623      	mov	r3, r4
 8009828:	1e5c      	subs	r4, r3, #1
 800982a:	2b00      	cmp	r3, #0
 800982c:	d102      	bne.n	8009834 <SDMMC_GetCmdResp6+0x30>
 800982e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009832:	e04c      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 8009834:	68fb      	ldr	r3, [r7, #12]
 8009836:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009838:	f003 0345 	and.w	r3, r3, #69	; 0x45
 800983c:	2b00      	cmp	r3, #0
 800983e:	d0f2      	beq.n	8009826 <SDMMC_GetCmdResp6+0x22>
 8009840:	68fb      	ldr	r3, [r7, #12]
 8009842:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009844:	f003 0304 	and.w	r3, r3, #4
 8009848:	2b00      	cmp	r3, #0
 800984a:	d004      	beq.n	8009856 <SDMMC_GetCmdResp6+0x52>
 800984c:	68fb      	ldr	r3, [r7, #12]
 800984e:	2204      	movs	r2, #4
 8009850:	639a      	str	r2, [r3, #56]	; 0x38
 8009852:	2304      	movs	r3, #4
 8009854:	e03b      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 8009856:	68fb      	ldr	r3, [r7, #12]
 8009858:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800985a:	f003 0301 	and.w	r3, r3, #1
 800985e:	2b00      	cmp	r3, #0
 8009860:	d004      	beq.n	800986c <SDMMC_GetCmdResp6+0x68>
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	2201      	movs	r2, #1
 8009866:	639a      	str	r2, [r3, #56]	; 0x38
 8009868:	2301      	movs	r3, #1
 800986a:	e030      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 800986c:	68f8      	ldr	r0, [r7, #12]
 800986e:	f7ff fba0 	bl	8008fb2 <SDIO_GetCommandResponse>
 8009872:	4603      	mov	r3, r0
 8009874:	461a      	mov	r2, r3
 8009876:	7afb      	ldrb	r3, [r7, #11]
 8009878:	4293      	cmp	r3, r2
 800987a:	d001      	beq.n	8009880 <SDMMC_GetCmdResp6+0x7c>
 800987c:	2301      	movs	r3, #1
 800987e:	e026      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 8009880:	68fb      	ldr	r3, [r7, #12]
 8009882:	f240 52ff 	movw	r2, #1535	; 0x5ff
 8009886:	639a      	str	r2, [r3, #56]	; 0x38
 8009888:	2100      	movs	r1, #0
 800988a:	68f8      	ldr	r0, [r7, #12]
 800988c:	f7ff fb9e 	bl	8008fcc <SDIO_GetResponse>
 8009890:	6178      	str	r0, [r7, #20]
 8009892:	697b      	ldr	r3, [r7, #20]
 8009894:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8009898:	2b00      	cmp	r3, #0
 800989a:	d106      	bne.n	80098aa <SDMMC_GetCmdResp6+0xa6>
 800989c:	697b      	ldr	r3, [r7, #20]
 800989e:	0c1b      	lsrs	r3, r3, #16
 80098a0:	b29a      	uxth	r2, r3
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	801a      	strh	r2, [r3, #0]
 80098a6:	2300      	movs	r3, #0
 80098a8:	e011      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 80098aa:	697b      	ldr	r3, [r7, #20]
 80098ac:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80098b0:	2b00      	cmp	r3, #0
 80098b2:	d002      	beq.n	80098ba <SDMMC_GetCmdResp6+0xb6>
 80098b4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80098b8:	e009      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 80098ba:	697b      	ldr	r3, [r7, #20]
 80098bc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80098c0:	2b00      	cmp	r3, #0
 80098c2:	d002      	beq.n	80098ca <SDMMC_GetCmdResp6+0xc6>
 80098c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80098c8:	e001      	b.n	80098ce <SDMMC_GetCmdResp6+0xca>
 80098ca:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80098ce:	4618      	mov	r0, r3
 80098d0:	371c      	adds	r7, #28
 80098d2:	46bd      	mov	sp, r7
 80098d4:	bd90      	pop	{r4, r7, pc}
 80098d6:	bf00      	nop
 80098d8:	20000014 	.word	0x20000014
 80098dc:	10624dd3 	.word	0x10624dd3

080098e0 <SDMMC_GetCmdResp7>:
 80098e0:	b490      	push	{r4, r7}
 80098e2:	b082      	sub	sp, #8
 80098e4:	af00      	add	r7, sp, #0
 80098e6:	6078      	str	r0, [r7, #4]
 80098e8:	4b18      	ldr	r3, [pc, #96]	; (800994c <SDMMC_GetCmdResp7+0x6c>)
 80098ea:	681b      	ldr	r3, [r3, #0]
 80098ec:	4a18      	ldr	r2, [pc, #96]	; (8009950 <SDMMC_GetCmdResp7+0x70>)
 80098ee:	fba2 2303 	umull	r2, r3, r2, r3
 80098f2:	0a5b      	lsrs	r3, r3, #9
 80098f4:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80098f8:	fb02 f403 	mul.w	r4, r2, r3
 80098fc:	4623      	mov	r3, r4
 80098fe:	1e5c      	subs	r4, r3, #1
 8009900:	2b00      	cmp	r3, #0
 8009902:	d102      	bne.n	800990a <SDMMC_GetCmdResp7+0x2a>
 8009904:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009908:	e01a      	b.n	8009940 <SDMMC_GetCmdResp7+0x60>
 800990a:	687b      	ldr	r3, [r7, #4]
 800990c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800990e:	f003 0345 	and.w	r3, r3, #69	; 0x45
 8009912:	2b00      	cmp	r3, #0
 8009914:	d0f2      	beq.n	80098fc <SDMMC_GetCmdResp7+0x1c>
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800991a:	f003 0304 	and.w	r3, r3, #4
 800991e:	2b00      	cmp	r3, #0
 8009920:	d004      	beq.n	800992c <SDMMC_GetCmdResp7+0x4c>
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	2240      	movs	r2, #64	; 0x40
 8009926:	639a      	str	r2, [r3, #56]	; 0x38
 8009928:	2304      	movs	r3, #4
 800992a:	e009      	b.n	8009940 <SDMMC_GetCmdResp7+0x60>
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009930:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009934:	2b00      	cmp	r3, #0
 8009936:	d002      	beq.n	800993e <SDMMC_GetCmdResp7+0x5e>
 8009938:	687b      	ldr	r3, [r7, #4]
 800993a:	2240      	movs	r2, #64	; 0x40
 800993c:	639a      	str	r2, [r3, #56]	; 0x38
 800993e:	2300      	movs	r3, #0
 8009940:	4618      	mov	r0, r3
 8009942:	3708      	adds	r7, #8
 8009944:	46bd      	mov	sp, r7
 8009946:	bc90      	pop	{r4, r7}
 8009948:	4770      	bx	lr
 800994a:	bf00      	nop
 800994c:	20000014 	.word	0x20000014
 8009950:	10624dd3 	.word	0x10624dd3

08009954 <_write>:
 8009954:	b580      	push	{r7, lr}
 8009956:	b086      	sub	sp, #24
 8009958:	af00      	add	r7, sp, #0
 800995a:	60f8      	str	r0, [r7, #12]
 800995c:	60b9      	str	r1, [r7, #8]
 800995e:	607a      	str	r2, [r7, #4]
 8009960:	68fb      	ldr	r3, [r7, #12]
 8009962:	2b01      	cmp	r3, #1
 8009964:	d00a      	beq.n	800997c <_write+0x28>
 8009966:	68fb      	ldr	r3, [r7, #12]
 8009968:	2b02      	cmp	r3, #2
 800996a:	d007      	beq.n	800997c <_write+0x28>
 800996c:	f003 fe68 	bl	800d640 <__errno>
 8009970:	4603      	mov	r3, r0
 8009972:	2209      	movs	r2, #9
 8009974:	601a      	str	r2, [r3, #0]
 8009976:	f04f 33ff 	mov.w	r3, #4294967295
 800997a:	e010      	b.n	800999e <_write+0x4a>
 800997c:	4b0a      	ldr	r3, [pc, #40]	; (80099a8 <_write+0x54>)
 800997e:	6818      	ldr	r0, [r3, #0]
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	b29a      	uxth	r2, r3
 8009984:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009988:	68b9      	ldr	r1, [r7, #8]
 800998a:	f7fe fc20 	bl	80081ce <HAL_UART_Transmit>
 800998e:	4603      	mov	r3, r0
 8009990:	75fb      	strb	r3, [r7, #23]
 8009992:	7dfb      	ldrb	r3, [r7, #23]
 8009994:	2b00      	cmp	r3, #0
 8009996:	d101      	bne.n	800999c <_write+0x48>
 8009998:	687b      	ldr	r3, [r7, #4]
 800999a:	e000      	b.n	800999e <_write+0x4a>
 800999c:	2300      	movs	r3, #0
 800999e:	4618      	mov	r0, r3
 80099a0:	3718      	adds	r7, #24
 80099a2:	46bd      	mov	sp, r7
 80099a4:	bd80      	pop	{r7, pc}
 80099a6:	bf00      	nop
 80099a8:	20000004 	.word	0x20000004

080099ac <SystemClock_Config>:
 80099ac:	b580      	push	{r7, lr}
 80099ae:	b0a0      	sub	sp, #128	; 0x80
 80099b0:	af00      	add	r7, sp, #0
 80099b2:	2300      	movs	r3, #0
 80099b4:	60bb      	str	r3, [r7, #8]
 80099b6:	4b3b      	ldr	r3, [pc, #236]	; (8009aa4 <SystemClock_Config+0xf8>)
 80099b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80099ba:	4a3a      	ldr	r2, [pc, #232]	; (8009aa4 <SystemClock_Config+0xf8>)
 80099bc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80099c0:	6413      	str	r3, [r2, #64]	; 0x40
 80099c2:	4b38      	ldr	r3, [pc, #224]	; (8009aa4 <SystemClock_Config+0xf8>)
 80099c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80099c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80099ca:	60bb      	str	r3, [r7, #8]
 80099cc:	68bb      	ldr	r3, [r7, #8]
 80099ce:	2300      	movs	r3, #0
 80099d0:	607b      	str	r3, [r7, #4]
 80099d2:	4b35      	ldr	r3, [pc, #212]	; (8009aa8 <SystemClock_Config+0xfc>)
 80099d4:	681b      	ldr	r3, [r3, #0]
 80099d6:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80099da:	4a33      	ldr	r2, [pc, #204]	; (8009aa8 <SystemClock_Config+0xfc>)
 80099dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80099e0:	6013      	str	r3, [r2, #0]
 80099e2:	4b31      	ldr	r3, [pc, #196]	; (8009aa8 <SystemClock_Config+0xfc>)
 80099e4:	681b      	ldr	r3, [r3, #0]
 80099e6:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80099ea:	607b      	str	r3, [r7, #4]
 80099ec:	687b      	ldr	r3, [r7, #4]
 80099ee:	2305      	movs	r3, #5
 80099f0:	653b      	str	r3, [r7, #80]	; 0x50
 80099f2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80099f6:	657b      	str	r3, [r7, #84]	; 0x54
 80099f8:	2301      	movs	r3, #1
 80099fa:	65bb      	str	r3, [r7, #88]	; 0x58
 80099fc:	2302      	movs	r3, #2
 80099fe:	66bb      	str	r3, [r7, #104]	; 0x68
 8009a00:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8009a04:	66fb      	str	r3, [r7, #108]	; 0x6c
 8009a06:	2310      	movs	r3, #16
 8009a08:	673b      	str	r3, [r7, #112]	; 0x70
 8009a0a:	23c0      	movs	r3, #192	; 0xc0
 8009a0c:	677b      	str	r3, [r7, #116]	; 0x74
 8009a0e:	2302      	movs	r3, #2
 8009a10:	67bb      	str	r3, [r7, #120]	; 0x78
 8009a12:	2304      	movs	r3, #4
 8009a14:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009a16:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8009a1a:	4618      	mov	r0, r3
 8009a1c:	f7fb fede 	bl	80057dc <HAL_RCC_OscConfig>
 8009a20:	4603      	mov	r3, r0
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	d001      	beq.n	8009a2a <SystemClock_Config+0x7e>
 8009a26:	f7fa fa75 	bl	8003f14 <Error_Handler>
 8009a2a:	230f      	movs	r3, #15
 8009a2c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009a2e:	2302      	movs	r3, #2
 8009a30:	643b      	str	r3, [r7, #64]	; 0x40
 8009a32:	2300      	movs	r3, #0
 8009a34:	647b      	str	r3, [r7, #68]	; 0x44
 8009a36:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8009a3a:	64bb      	str	r3, [r7, #72]	; 0x48
 8009a3c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009a40:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009a42:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8009a46:	2103      	movs	r1, #3
 8009a48:	4618      	mov	r0, r3
 8009a4a:	f7fc f91f 	bl	8005c8c <HAL_RCC_ClockConfig>
 8009a4e:	4603      	mov	r3, r0
 8009a50:	2b00      	cmp	r3, #0
 8009a52:	d001      	beq.n	8009a58 <SystemClock_Config+0xac>
 8009a54:	f7fa fa5e 	bl	8003f14 <Error_Handler>
 8009a58:	2320      	movs	r3, #32
 8009a5a:	60fb      	str	r3, [r7, #12]
 8009a5c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009a60:	637b      	str	r3, [r7, #52]	; 0x34
 8009a62:	f107 030c 	add.w	r3, r7, #12
 8009a66:	4618      	mov	r0, r3
 8009a68:	f7fc fb24 	bl	80060b4 <HAL_RCCEx_PeriphCLKConfig>
 8009a6c:	4603      	mov	r3, r0
 8009a6e:	2b00      	cmp	r3, #0
 8009a70:	d001      	beq.n	8009a76 <SystemClock_Config+0xca>
 8009a72:	f7fa fa4f 	bl	8003f14 <Error_Handler>
 8009a76:	f7fc fa9b 	bl	8005fb0 <HAL_RCC_GetHCLKFreq>
 8009a7a:	4603      	mov	r3, r0
 8009a7c:	4a0b      	ldr	r2, [pc, #44]	; (8009aac <SystemClock_Config+0x100>)
 8009a7e:	fba2 2303 	umull	r2, r3, r2, r3
 8009a82:	099b      	lsrs	r3, r3, #6
 8009a84:	4618      	mov	r0, r3
 8009a86:	f7fa fbf2 	bl	800426e <HAL_SYSTICK_Config>
 8009a8a:	2004      	movs	r0, #4
 8009a8c:	f7fa fbfc 	bl	8004288 <HAL_SYSTICK_CLKSourceConfig>
 8009a90:	2200      	movs	r2, #0
 8009a92:	210f      	movs	r1, #15
 8009a94:	f04f 30ff 	mov.w	r0, #4294967295
 8009a98:	f7fa fbbf 	bl	800421a <HAL_NVIC_SetPriority>
 8009a9c:	bf00      	nop
 8009a9e:	3780      	adds	r7, #128	; 0x80
 8009aa0:	46bd      	mov	sp, r7
 8009aa2:	bd80      	pop	{r7, pc}
 8009aa4:	40023800 	.word	0x40023800
 8009aa8:	40007000 	.word	0x40007000
 8009aac:	10624dd3 	.word	0x10624dd3

08009ab0 <MX_GPIO_Init>:
 8009ab0:	b580      	push	{r7, lr}
 8009ab2:	b08e      	sub	sp, #56	; 0x38
 8009ab4:	af00      	add	r7, sp, #0
 8009ab6:	2300      	movs	r3, #0
 8009ab8:	623b      	str	r3, [r7, #32]
 8009aba:	4bb2      	ldr	r3, [pc, #712]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009abc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009abe:	4ab1      	ldr	r2, [pc, #708]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ac0:	f043 0310 	orr.w	r3, r3, #16
 8009ac4:	6313      	str	r3, [r2, #48]	; 0x30
 8009ac6:	4baf      	ldr	r3, [pc, #700]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009aca:	f003 0310 	and.w	r3, r3, #16
 8009ace:	623b      	str	r3, [r7, #32]
 8009ad0:	6a3b      	ldr	r3, [r7, #32]
 8009ad2:	2300      	movs	r3, #0
 8009ad4:	61fb      	str	r3, [r7, #28]
 8009ad6:	4bab      	ldr	r3, [pc, #684]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ad8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ada:	4aaa      	ldr	r2, [pc, #680]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009adc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009ae0:	6313      	str	r3, [r2, #48]	; 0x30
 8009ae2:	4ba8      	ldr	r3, [pc, #672]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ae6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009aea:	61fb      	str	r3, [r7, #28]
 8009aec:	69fb      	ldr	r3, [r7, #28]
 8009aee:	2300      	movs	r3, #0
 8009af0:	61bb      	str	r3, [r7, #24]
 8009af2:	4ba4      	ldr	r3, [pc, #656]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009af4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009af6:	4aa3      	ldr	r2, [pc, #652]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009af8:	f043 0304 	orr.w	r3, r3, #4
 8009afc:	6313      	str	r3, [r2, #48]	; 0x30
 8009afe:	4ba1      	ldr	r3, [pc, #644]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b02:	f003 0304 	and.w	r3, r3, #4
 8009b06:	61bb      	str	r3, [r7, #24]
 8009b08:	69bb      	ldr	r3, [r7, #24]
 8009b0a:	2300      	movs	r3, #0
 8009b0c:	617b      	str	r3, [r7, #20]
 8009b0e:	4b9d      	ldr	r3, [pc, #628]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b12:	4a9c      	ldr	r2, [pc, #624]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b14:	f043 0320 	orr.w	r3, r3, #32
 8009b18:	6313      	str	r3, [r2, #48]	; 0x30
 8009b1a:	4b9a      	ldr	r3, [pc, #616]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b1e:	f003 0320 	and.w	r3, r3, #32
 8009b22:	617b      	str	r3, [r7, #20]
 8009b24:	697b      	ldr	r3, [r7, #20]
 8009b26:	2300      	movs	r3, #0
 8009b28:	613b      	str	r3, [r7, #16]
 8009b2a:	4b96      	ldr	r3, [pc, #600]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b2e:	4a95      	ldr	r2, [pc, #596]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b30:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009b34:	6313      	str	r3, [r2, #48]	; 0x30
 8009b36:	4b93      	ldr	r3, [pc, #588]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b3a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009b3e:	613b      	str	r3, [r7, #16]
 8009b40:	693b      	ldr	r3, [r7, #16]
 8009b42:	2300      	movs	r3, #0
 8009b44:	60fb      	str	r3, [r7, #12]
 8009b46:	4b8f      	ldr	r3, [pc, #572]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b4a:	4a8e      	ldr	r2, [pc, #568]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b4c:	f043 0301 	orr.w	r3, r3, #1
 8009b50:	6313      	str	r3, [r2, #48]	; 0x30
 8009b52:	4b8c      	ldr	r3, [pc, #560]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b56:	f003 0301 	and.w	r3, r3, #1
 8009b5a:	60fb      	str	r3, [r7, #12]
 8009b5c:	68fb      	ldr	r3, [r7, #12]
 8009b5e:	2300      	movs	r3, #0
 8009b60:	60bb      	str	r3, [r7, #8]
 8009b62:	4b88      	ldr	r3, [pc, #544]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b66:	4a87      	ldr	r2, [pc, #540]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b68:	f043 0302 	orr.w	r3, r3, #2
 8009b6c:	6313      	str	r3, [r2, #48]	; 0x30
 8009b6e:	4b85      	ldr	r3, [pc, #532]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b72:	f003 0302 	and.w	r3, r3, #2
 8009b76:	60bb      	str	r3, [r7, #8]
 8009b78:	68bb      	ldr	r3, [r7, #8]
 8009b7a:	2300      	movs	r3, #0
 8009b7c:	607b      	str	r3, [r7, #4]
 8009b7e:	4b81      	ldr	r3, [pc, #516]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b82:	4a80      	ldr	r2, [pc, #512]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009b88:	6313      	str	r3, [r2, #48]	; 0x30
 8009b8a:	4b7e      	ldr	r3, [pc, #504]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009b92:	607b      	str	r3, [r7, #4]
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	2300      	movs	r3, #0
 8009b98:	603b      	str	r3, [r7, #0]
 8009b9a:	4b7a      	ldr	r3, [pc, #488]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009b9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b9e:	4a79      	ldr	r2, [pc, #484]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ba0:	f043 0308 	orr.w	r3, r3, #8
 8009ba4:	6313      	str	r3, [r2, #48]	; 0x30
 8009ba6:	4b77      	ldr	r3, [pc, #476]	; (8009d84 <MX_GPIO_Init+0x2d4>)
 8009ba8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009baa:	f003 0308 	and.w	r3, r3, #8
 8009bae:	603b      	str	r3, [r7, #0]
 8009bb0:	683b      	ldr	r3, [r7, #0]
 8009bb2:	2200      	movs	r2, #0
 8009bb4:	2104      	movs	r1, #4
 8009bb6:	4874      	ldr	r0, [pc, #464]	; (8009d88 <MX_GPIO_Init+0x2d8>)
 8009bb8:	f7fa fede 	bl	8004978 <HAL_GPIO_WritePin>
 8009bbc:	2201      	movs	r2, #1
 8009bbe:	f242 0130 	movw	r1, #8240	; 0x2030
 8009bc2:	4872      	ldr	r0, [pc, #456]	; (8009d8c <MX_GPIO_Init+0x2dc>)
 8009bc4:	f7fa fed8 	bl	8004978 <HAL_GPIO_WritePin>
 8009bc8:	2201      	movs	r2, #1
 8009bca:	f640 61ff 	movw	r1, #3839	; 0xeff
 8009bce:	4870      	ldr	r0, [pc, #448]	; (8009d90 <MX_GPIO_Init+0x2e0>)
 8009bd0:	f7fa fed2 	bl	8004978 <HAL_GPIO_WritePin>
 8009bd4:	2200      	movs	r2, #0
 8009bd6:	2140      	movs	r1, #64	; 0x40
 8009bd8:	486e      	ldr	r0, [pc, #440]	; (8009d94 <MX_GPIO_Init+0x2e4>)
 8009bda:	f7fa fecd 	bl	8004978 <HAL_GPIO_WritePin>
 8009bde:	2200      	movs	r2, #0
 8009be0:	f24e 217c 	movw	r1, #57980	; 0xe27c
 8009be4:	486c      	ldr	r0, [pc, #432]	; (8009d98 <MX_GPIO_Init+0x2e8>)
 8009be6:	f7fa fec7 	bl	8004978 <HAL_GPIO_WritePin>
 8009bea:	2201      	movs	r2, #1
 8009bec:	2110      	movs	r1, #16
 8009bee:	486b      	ldr	r0, [pc, #428]	; (8009d9c <MX_GPIO_Init+0x2ec>)
 8009bf0:	f7fa fec2 	bl	8004978 <HAL_GPIO_WritePin>
 8009bf4:	2200      	movs	r2, #0
 8009bf6:	21e6      	movs	r1, #230	; 0xe6
 8009bf8:	4869      	ldr	r0, [pc, #420]	; (8009da0 <MX_GPIO_Init+0x2f0>)
 8009bfa:	f7fa febd 	bl	8004978 <HAL_GPIO_WritePin>
 8009bfe:	2200      	movs	r2, #0
 8009c00:	f44f 617c 	mov.w	r1, #4032	; 0xfc0
 8009c04:	4867      	ldr	r0, [pc, #412]	; (8009da4 <MX_GPIO_Init+0x2f4>)
 8009c06:	f7fa feb7 	bl	8004978 <HAL_GPIO_WritePin>
 8009c0a:	2200      	movs	r2, #0
 8009c0c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8009c10:	4864      	ldr	r0, [pc, #400]	; (8009da4 <MX_GPIO_Init+0x2f4>)
 8009c12:	f7fa feb1 	bl	8004978 <HAL_GPIO_WritePin>
 8009c16:	2200      	movs	r2, #0
 8009c18:	2148      	movs	r1, #72	; 0x48
 8009c1a:	4863      	ldr	r0, [pc, #396]	; (8009da8 <MX_GPIO_Init+0x2f8>)
 8009c1c:	f7fa feac 	bl	8004978 <HAL_GPIO_WritePin>
 8009c20:	2304      	movs	r3, #4
 8009c22:	627b      	str	r3, [r7, #36]	; 0x24
 8009c24:	2311      	movs	r3, #17
 8009c26:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c28:	2300      	movs	r3, #0
 8009c2a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c2c:	2300      	movs	r3, #0
 8009c2e:	633b      	str	r3, [r7, #48]	; 0x30
 8009c30:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009c34:	4619      	mov	r1, r3
 8009c36:	4854      	ldr	r0, [pc, #336]	; (8009d88 <MX_GPIO_Init+0x2d8>)
 8009c38:	f7fa fcf2 	bl	8004620 <HAL_GPIO_Init>
 8009c3c:	2340      	movs	r3, #64	; 0x40
 8009c3e:	627b      	str	r3, [r7, #36]	; 0x24
 8009c40:	4b5a      	ldr	r3, [pc, #360]	; (8009dac <MX_GPIO_Init+0x2fc>)
 8009c42:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c44:	2300      	movs	r3, #0
 8009c46:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c48:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009c4c:	4619      	mov	r1, r3
 8009c4e:	484e      	ldr	r0, [pc, #312]	; (8009d88 <MX_GPIO_Init+0x2d8>)
 8009c50:	f7fa fce6 	bl	8004620 <HAL_GPIO_Init>
 8009c54:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009c58:	627b      	str	r3, [r7, #36]	; 0x24
 8009c5a:	4b54      	ldr	r3, [pc, #336]	; (8009dac <MX_GPIO_Init+0x2fc>)
 8009c5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c5e:	2300      	movs	r3, #0
 8009c60:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c62:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009c66:	4619      	mov	r1, r3
 8009c68:	4849      	ldr	r0, [pc, #292]	; (8009d90 <MX_GPIO_Init+0x2e0>)
 8009c6a:	f7fa fcd9 	bl	8004620 <HAL_GPIO_Init>
 8009c6e:	f242 0330 	movw	r3, #8240	; 0x2030
 8009c72:	627b      	str	r3, [r7, #36]	; 0x24
 8009c74:	2301      	movs	r3, #1
 8009c76:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c78:	2300      	movs	r3, #0
 8009c7a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c7c:	2300      	movs	r3, #0
 8009c7e:	633b      	str	r3, [r7, #48]	; 0x30
 8009c80:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009c84:	4619      	mov	r1, r3
 8009c86:	4841      	ldr	r0, [pc, #260]	; (8009d8c <MX_GPIO_Init+0x2dc>)
 8009c88:	f7fa fcca 	bl	8004620 <HAL_GPIO_Init>
 8009c8c:	f640 63ff 	movw	r3, #3839	; 0xeff
 8009c90:	627b      	str	r3, [r7, #36]	; 0x24
 8009c92:	2301      	movs	r3, #1
 8009c94:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c96:	2300      	movs	r3, #0
 8009c98:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009c9a:	2300      	movs	r3, #0
 8009c9c:	633b      	str	r3, [r7, #48]	; 0x30
 8009c9e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009ca2:	4619      	mov	r1, r3
 8009ca4:	483a      	ldr	r0, [pc, #232]	; (8009d90 <MX_GPIO_Init+0x2e0>)
 8009ca6:	f7fa fcbb 	bl	8004620 <HAL_GPIO_Init>
 8009caa:	2340      	movs	r3, #64	; 0x40
 8009cac:	627b      	str	r3, [r7, #36]	; 0x24
 8009cae:	2301      	movs	r3, #1
 8009cb0:	62bb      	str	r3, [r7, #40]	; 0x28
 8009cb2:	2300      	movs	r3, #0
 8009cb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009cb6:	2300      	movs	r3, #0
 8009cb8:	633b      	str	r3, [r7, #48]	; 0x30
 8009cba:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009cbe:	4619      	mov	r1, r3
 8009cc0:	4834      	ldr	r0, [pc, #208]	; (8009d94 <MX_GPIO_Init+0x2e4>)
 8009cc2:	f7fa fcad 	bl	8004620 <HAL_GPIO_Init>
 8009cc6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8009cca:	627b      	str	r3, [r7, #36]	; 0x24
 8009ccc:	4b37      	ldr	r3, [pc, #220]	; (8009dac <MX_GPIO_Init+0x2fc>)
 8009cce:	62bb      	str	r3, [r7, #40]	; 0x28
 8009cd0:	2300      	movs	r3, #0
 8009cd2:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009cd4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009cd8:	4619      	mov	r1, r3
 8009cda:	482e      	ldr	r0, [pc, #184]	; (8009d94 <MX_GPIO_Init+0x2e4>)
 8009cdc:	f7fa fca0 	bl	8004620 <HAL_GPIO_Init>
 8009ce0:	f24e 033c 	movw	r3, #57404	; 0xe03c
 8009ce4:	627b      	str	r3, [r7, #36]	; 0x24
 8009ce6:	2301      	movs	r3, #1
 8009ce8:	62bb      	str	r3, [r7, #40]	; 0x28
 8009cea:	2300      	movs	r3, #0
 8009cec:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009cee:	2300      	movs	r3, #0
 8009cf0:	633b      	str	r3, [r7, #48]	; 0x30
 8009cf2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009cf6:	4619      	mov	r1, r3
 8009cf8:	4827      	ldr	r0, [pc, #156]	; (8009d98 <MX_GPIO_Init+0x2e8>)
 8009cfa:	f7fa fc91 	bl	8004620 <HAL_GPIO_Init>
 8009cfe:	f44f 7310 	mov.w	r3, #576	; 0x240
 8009d02:	627b      	str	r3, [r7, #36]	; 0x24
 8009d04:	2311      	movs	r3, #17
 8009d06:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d08:	2300      	movs	r3, #0
 8009d0a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d0c:	2300      	movs	r3, #0
 8009d0e:	633b      	str	r3, [r7, #48]	; 0x30
 8009d10:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009d14:	4619      	mov	r1, r3
 8009d16:	4820      	ldr	r0, [pc, #128]	; (8009d98 <MX_GPIO_Init+0x2e8>)
 8009d18:	f7fa fc82 	bl	8004620 <HAL_GPIO_Init>
 8009d1c:	2310      	movs	r3, #16
 8009d1e:	627b      	str	r3, [r7, #36]	; 0x24
 8009d20:	2301      	movs	r3, #1
 8009d22:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d24:	2300      	movs	r3, #0
 8009d26:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d28:	2300      	movs	r3, #0
 8009d2a:	633b      	str	r3, [r7, #48]	; 0x30
 8009d2c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009d30:	4619      	mov	r1, r3
 8009d32:	481a      	ldr	r0, [pc, #104]	; (8009d9c <MX_GPIO_Init+0x2ec>)
 8009d34:	f7fa fc74 	bl	8004620 <HAL_GPIO_Init>
 8009d38:	23e6      	movs	r3, #230	; 0xe6
 8009d3a:	627b      	str	r3, [r7, #36]	; 0x24
 8009d3c:	2311      	movs	r3, #17
 8009d3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d40:	2300      	movs	r3, #0
 8009d42:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d44:	2300      	movs	r3, #0
 8009d46:	633b      	str	r3, [r7, #48]	; 0x30
 8009d48:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009d4c:	4619      	mov	r1, r3
 8009d4e:	4814      	ldr	r0, [pc, #80]	; (8009da0 <MX_GPIO_Init+0x2f0>)
 8009d50:	f7fa fc66 	bl	8004620 <HAL_GPIO_Init>
 8009d54:	f44f 637c 	mov.w	r3, #4032	; 0xfc0
 8009d58:	627b      	str	r3, [r7, #36]	; 0x24
 8009d5a:	2301      	movs	r3, #1
 8009d5c:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d5e:	2300      	movs	r3, #0
 8009d60:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d62:	2300      	movs	r3, #0
 8009d64:	633b      	str	r3, [r7, #48]	; 0x30
 8009d66:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009d6a:	4619      	mov	r1, r3
 8009d6c:	480d      	ldr	r0, [pc, #52]	; (8009da4 <MX_GPIO_Init+0x2f4>)
 8009d6e:	f7fa fc57 	bl	8004620 <HAL_GPIO_Init>
 8009d72:	2348      	movs	r3, #72	; 0x48
 8009d74:	627b      	str	r3, [r7, #36]	; 0x24
 8009d76:	2301      	movs	r3, #1
 8009d78:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d7a:	2300      	movs	r3, #0
 8009d7c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d7e:	2300      	movs	r3, #0
 8009d80:	e016      	b.n	8009db0 <MX_GPIO_Init+0x300>
 8009d82:	bf00      	nop
 8009d84:	40023800 	.word	0x40023800
 8009d88:	40021000 	.word	0x40021000
 8009d8c:	40020800 	.word	0x40020800
 8009d90:	40022000 	.word	0x40022000
 8009d94:	40021400 	.word	0x40021400
 8009d98:	40021c00 	.word	0x40021c00
 8009d9c:	40020000 	.word	0x40020000
 8009da0:	40020400 	.word	0x40020400
 8009da4:	40021800 	.word	0x40021800
 8009da8:	40020c00 	.word	0x40020c00
 8009dac:	10110000 	.word	0x10110000
 8009db0:	633b      	str	r3, [r7, #48]	; 0x30
 8009db2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009db6:	4619      	mov	r1, r3
 8009db8:	4809      	ldr	r0, [pc, #36]	; (8009de0 <MX_GPIO_Init+0x330>)
 8009dba:	f7fa fc31 	bl	8004620 <HAL_GPIO_Init>
 8009dbe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009dc2:	627b      	str	r3, [r7, #36]	; 0x24
 8009dc4:	2300      	movs	r3, #0
 8009dc6:	62bb      	str	r3, [r7, #40]	; 0x28
 8009dc8:	2300      	movs	r3, #0
 8009dca:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009dcc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8009dd0:	4619      	mov	r1, r3
 8009dd2:	4804      	ldr	r0, [pc, #16]	; (8009de4 <MX_GPIO_Init+0x334>)
 8009dd4:	f7fa fc24 	bl	8004620 <HAL_GPIO_Init>
 8009dd8:	bf00      	nop
 8009dda:	3738      	adds	r7, #56	; 0x38
 8009ddc:	46bd      	mov	sp, r7
 8009dde:	bd80      	pop	{r7, pc}
 8009de0:	40020c00 	.word	0x40020c00
 8009de4:	40021800 	.word	0x40021800

08009de8 <MX_I2C1_Init>:
 8009de8:	b580      	push	{r7, lr}
 8009dea:	af00      	add	r7, sp, #0
 8009dec:	4b12      	ldr	r3, [pc, #72]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009dee:	4a13      	ldr	r2, [pc, #76]	; (8009e3c <MX_I2C1_Init+0x54>)
 8009df0:	601a      	str	r2, [r3, #0]
 8009df2:	4b11      	ldr	r3, [pc, #68]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009df4:	4a12      	ldr	r2, [pc, #72]	; (8009e40 <MX_I2C1_Init+0x58>)
 8009df6:	605a      	str	r2, [r3, #4]
 8009df8:	4b0f      	ldr	r3, [pc, #60]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009dfa:	2200      	movs	r2, #0
 8009dfc:	609a      	str	r2, [r3, #8]
 8009dfe:	4b0e      	ldr	r3, [pc, #56]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e00:	2200      	movs	r2, #0
 8009e02:	60da      	str	r2, [r3, #12]
 8009e04:	4b0c      	ldr	r3, [pc, #48]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e06:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8009e0a:	611a      	str	r2, [r3, #16]
 8009e0c:	4b0a      	ldr	r3, [pc, #40]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e0e:	2200      	movs	r2, #0
 8009e10:	615a      	str	r2, [r3, #20]
 8009e12:	4b09      	ldr	r3, [pc, #36]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e14:	2200      	movs	r2, #0
 8009e16:	619a      	str	r2, [r3, #24]
 8009e18:	4b07      	ldr	r3, [pc, #28]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e1a:	2200      	movs	r2, #0
 8009e1c:	61da      	str	r2, [r3, #28]
 8009e1e:	4b06      	ldr	r3, [pc, #24]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e20:	2200      	movs	r2, #0
 8009e22:	621a      	str	r2, [r3, #32]
 8009e24:	4804      	ldr	r0, [pc, #16]	; (8009e38 <MX_I2C1_Init+0x50>)
 8009e26:	f7fa fdc1 	bl	80049ac <HAL_I2C_Init>
 8009e2a:	4603      	mov	r3, r0
 8009e2c:	2b00      	cmp	r3, #0
 8009e2e:	d001      	beq.n	8009e34 <MX_I2C1_Init+0x4c>
 8009e30:	f7fa f870 	bl	8003f14 <Error_Handler>
 8009e34:	bf00      	nop
 8009e36:	bd80      	pop	{r7, pc}
 8009e38:	200002a0 	.word	0x200002a0
 8009e3c:	40005400 	.word	0x40005400
 8009e40:	00061a80 	.word	0x00061a80

08009e44 <MX_SDIO_SD_Init>:
 8009e44:	b480      	push	{r7}
 8009e46:	af00      	add	r7, sp, #0
 8009e48:	4b0c      	ldr	r3, [pc, #48]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e4a:	4a0d      	ldr	r2, [pc, #52]	; (8009e80 <MX_SDIO_SD_Init+0x3c>)
 8009e4c:	601a      	str	r2, [r3, #0]
 8009e4e:	4b0b      	ldr	r3, [pc, #44]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e50:	2200      	movs	r2, #0
 8009e52:	605a      	str	r2, [r3, #4]
 8009e54:	4b09      	ldr	r3, [pc, #36]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e56:	2200      	movs	r2, #0
 8009e58:	609a      	str	r2, [r3, #8]
 8009e5a:	4b08      	ldr	r3, [pc, #32]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e5c:	2200      	movs	r2, #0
 8009e5e:	60da      	str	r2, [r3, #12]
 8009e60:	4b06      	ldr	r3, [pc, #24]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e62:	2200      	movs	r2, #0
 8009e64:	611a      	str	r2, [r3, #16]
 8009e66:	4b05      	ldr	r3, [pc, #20]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e68:	2200      	movs	r2, #0
 8009e6a:	615a      	str	r2, [r3, #20]
 8009e6c:	4b03      	ldr	r3, [pc, #12]	; (8009e7c <MX_SDIO_SD_Init+0x38>)
 8009e6e:	2203      	movs	r2, #3
 8009e70:	619a      	str	r2, [r3, #24]
 8009e72:	bf00      	nop
 8009e74:	46bd      	mov	sp, r7
 8009e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e7a:	4770      	bx	lr
 8009e7c:	2000039c 	.word	0x2000039c
 8009e80:	40012c00 	.word	0x40012c00

08009e84 <MX_UART4_Init>:
 8009e84:	b580      	push	{r7, lr}
 8009e86:	af00      	add	r7, sp, #0
 8009e88:	4b11      	ldr	r3, [pc, #68]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009e8a:	4a12      	ldr	r2, [pc, #72]	; (8009ed4 <MX_UART4_Init+0x50>)
 8009e8c:	601a      	str	r2, [r3, #0]
 8009e8e:	4b10      	ldr	r3, [pc, #64]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009e90:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8009e94:	605a      	str	r2, [r3, #4]
 8009e96:	4b0e      	ldr	r3, [pc, #56]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009e98:	2200      	movs	r2, #0
 8009e9a:	609a      	str	r2, [r3, #8]
 8009e9c:	4b0c      	ldr	r3, [pc, #48]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009e9e:	2200      	movs	r2, #0
 8009ea0:	60da      	str	r2, [r3, #12]
 8009ea2:	4b0b      	ldr	r3, [pc, #44]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009ea4:	2200      	movs	r2, #0
 8009ea6:	611a      	str	r2, [r3, #16]
 8009ea8:	4b09      	ldr	r3, [pc, #36]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009eaa:	220c      	movs	r2, #12
 8009eac:	615a      	str	r2, [r3, #20]
 8009eae:	4b08      	ldr	r3, [pc, #32]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009eb0:	2200      	movs	r2, #0
 8009eb2:	619a      	str	r2, [r3, #24]
 8009eb4:	4b06      	ldr	r3, [pc, #24]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009eb6:	2200      	movs	r2, #0
 8009eb8:	61da      	str	r2, [r3, #28]
 8009eba:	4805      	ldr	r0, [pc, #20]	; (8009ed0 <MX_UART4_Init+0x4c>)
 8009ebc:	f7fe f93a 	bl	8008134 <HAL_UART_Init>
 8009ec0:	4603      	mov	r3, r0
 8009ec2:	2b00      	cmp	r3, #0
 8009ec4:	d001      	beq.n	8009eca <MX_UART4_Init+0x46>
 8009ec6:	f7fa f825 	bl	8003f14 <Error_Handler>
 8009eca:	bf00      	nop
 8009ecc:	bd80      	pop	{r7, pc}
 8009ece:	bf00      	nop
 8009ed0:	2000067c 	.word	0x2000067c
 8009ed4:	40004c00 	.word	0x40004c00

08009ed8 <MX_USART1_UART_Init>:
 8009ed8:	b580      	push	{r7, lr}
 8009eda:	af00      	add	r7, sp, #0
 8009edc:	4b11      	ldr	r3, [pc, #68]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009ede:	4a12      	ldr	r2, [pc, #72]	; (8009f28 <MX_USART1_UART_Init+0x50>)
 8009ee0:	601a      	str	r2, [r3, #0]
 8009ee2:	4b10      	ldr	r3, [pc, #64]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009ee4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8009ee8:	605a      	str	r2, [r3, #4]
 8009eea:	4b0e      	ldr	r3, [pc, #56]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009eec:	2200      	movs	r2, #0
 8009eee:	609a      	str	r2, [r3, #8]
 8009ef0:	4b0c      	ldr	r3, [pc, #48]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009ef2:	2200      	movs	r2, #0
 8009ef4:	60da      	str	r2, [r3, #12]
 8009ef6:	4b0b      	ldr	r3, [pc, #44]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009ef8:	2200      	movs	r2, #0
 8009efa:	611a      	str	r2, [r3, #16]
 8009efc:	4b09      	ldr	r3, [pc, #36]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009efe:	220c      	movs	r2, #12
 8009f00:	615a      	str	r2, [r3, #20]
 8009f02:	4b08      	ldr	r3, [pc, #32]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009f04:	2200      	movs	r2, #0
 8009f06:	619a      	str	r2, [r3, #24]
 8009f08:	4b06      	ldr	r3, [pc, #24]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009f0a:	2200      	movs	r2, #0
 8009f0c:	61da      	str	r2, [r3, #28]
 8009f0e:	4805      	ldr	r0, [pc, #20]	; (8009f24 <MX_USART1_UART_Init+0x4c>)
 8009f10:	f7fe f910 	bl	8008134 <HAL_UART_Init>
 8009f14:	4603      	mov	r3, r0
 8009f16:	2b00      	cmp	r3, #0
 8009f18:	d001      	beq.n	8009f1e <MX_USART1_UART_Init+0x46>
 8009f1a:	f7f9 fffb 	bl	8003f14 <Error_Handler>
 8009f1e:	bf00      	nop
 8009f20:	bd80      	pop	{r7, pc}
 8009f22:	bf00      	nop
 8009f24:	200006bc 	.word	0x200006bc
 8009f28:	40011000 	.word	0x40011000

08009f2c <MX_USART6_UART_Init>:
 8009f2c:	b580      	push	{r7, lr}
 8009f2e:	af00      	add	r7, sp, #0
 8009f30:	4b15      	ldr	r3, [pc, #84]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f32:	4a16      	ldr	r2, [pc, #88]	; (8009f8c <MX_USART6_UART_Init+0x60>)
 8009f34:	601a      	str	r2, [r3, #0]
 8009f36:	4b14      	ldr	r3, [pc, #80]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f38:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8009f3c:	605a      	str	r2, [r3, #4]
 8009f3e:	4b12      	ldr	r3, [pc, #72]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f40:	2200      	movs	r2, #0
 8009f42:	609a      	str	r2, [r3, #8]
 8009f44:	4b10      	ldr	r3, [pc, #64]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f46:	2200      	movs	r2, #0
 8009f48:	60da      	str	r2, [r3, #12]
 8009f4a:	4b0f      	ldr	r3, [pc, #60]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f4c:	2200      	movs	r2, #0
 8009f4e:	611a      	str	r2, [r3, #16]
 8009f50:	4b0d      	ldr	r3, [pc, #52]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f52:	220c      	movs	r2, #12
 8009f54:	615a      	str	r2, [r3, #20]
 8009f56:	4b0c      	ldr	r3, [pc, #48]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f58:	2200      	movs	r2, #0
 8009f5a:	619a      	str	r2, [r3, #24]
 8009f5c:	4b0a      	ldr	r3, [pc, #40]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f5e:	2200      	movs	r2, #0
 8009f60:	61da      	str	r2, [r3, #28]
 8009f62:	4809      	ldr	r0, [pc, #36]	; (8009f88 <MX_USART6_UART_Init+0x5c>)
 8009f64:	f7fe f8e6 	bl	8008134 <HAL_UART_Init>
 8009f68:	4603      	mov	r3, r0
 8009f6a:	2b00      	cmp	r3, #0
 8009f6c:	d001      	beq.n	8009f72 <MX_USART6_UART_Init+0x46>
 8009f6e:	f7f9 ffd1 	bl	8003f14 <Error_Handler>
 8009f72:	2200      	movs	r2, #0
 8009f74:	2100      	movs	r1, #0
 8009f76:	2047      	movs	r0, #71	; 0x47
 8009f78:	f7fa f94f 	bl	800421a <HAL_NVIC_SetPriority>
 8009f7c:	2047      	movs	r0, #71	; 0x47
 8009f7e:	f7fa f968 	bl	8004252 <HAL_NVIC_EnableIRQ>
 8009f82:	bf00      	nop
 8009f84:	bd80      	pop	{r7, pc}
 8009f86:	bf00      	nop
 8009f88:	200006fc 	.word	0x200006fc
 8009f8c:	40011400 	.word	0x40011400

08009f90 <MX_WWDG_Init>:
 8009f90:	b580      	push	{r7, lr}
 8009f92:	af00      	add	r7, sp, #0
 8009f94:	4b0d      	ldr	r3, [pc, #52]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009f96:	4a0e      	ldr	r2, [pc, #56]	; (8009fd0 <MX_WWDG_Init+0x40>)
 8009f98:	601a      	str	r2, [r3, #0]
 8009f9a:	4b0c      	ldr	r3, [pc, #48]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009f9c:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8009fa0:	605a      	str	r2, [r3, #4]
 8009fa2:	4b0a      	ldr	r3, [pc, #40]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009fa4:	2240      	movs	r2, #64	; 0x40
 8009fa6:	609a      	str	r2, [r3, #8]
 8009fa8:	4b08      	ldr	r3, [pc, #32]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009faa:	2240      	movs	r2, #64	; 0x40
 8009fac:	60da      	str	r2, [r3, #12]
 8009fae:	4b07      	ldr	r3, [pc, #28]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009fb0:	f44f 7200 	mov.w	r2, #512	; 0x200
 8009fb4:	611a      	str	r2, [r3, #16]
 8009fb6:	4805      	ldr	r0, [pc, #20]	; (8009fcc <MX_WWDG_Init+0x3c>)
 8009fb8:	f7fe ff48 	bl	8008e4c <HAL_WWDG_Init>
 8009fbc:	4603      	mov	r3, r0
 8009fbe:	2b00      	cmp	r3, #0
 8009fc0:	d001      	beq.n	8009fc6 <MX_WWDG_Init+0x36>
 8009fc2:	f7f9 ffa7 	bl	8003f14 <Error_Handler>
 8009fc6:	bf00      	nop
 8009fc8:	bd80      	pop	{r7, pc}
 8009fca:	bf00      	nop
 8009fcc:	2000073c 	.word	0x2000073c
 8009fd0:	40002c00 	.word	0x40002c00

08009fd4 <BSP_SD_Init>:
 8009fd4:	b580      	push	{r7, lr}
 8009fd6:	b082      	sub	sp, #8
 8009fd8:	af00      	add	r7, sp, #0
 8009fda:	2300      	movs	r3, #0
 8009fdc:	71fb      	strb	r3, [r7, #7]
 8009fde:	f000 f89d 	bl	800a11c <BSP_SD_IsDetected>
 8009fe2:	4603      	mov	r3, r0
 8009fe4:	2b01      	cmp	r3, #1
 8009fe6:	d001      	beq.n	8009fec <BSP_SD_Init+0x18>
 8009fe8:	2301      	movs	r3, #1
 8009fea:	e012      	b.n	800a012 <BSP_SD_Init+0x3e>
 8009fec:	480b      	ldr	r0, [pc, #44]	; (800a01c <BSP_SD_Init+0x48>)
 8009fee:	f7fc fa7f 	bl	80064f0 <HAL_SD_Init>
 8009ff2:	4603      	mov	r3, r0
 8009ff4:	71fb      	strb	r3, [r7, #7]
 8009ff6:	79fb      	ldrb	r3, [r7, #7]
 8009ff8:	2b00      	cmp	r3, #0
 8009ffa:	d109      	bne.n	800a010 <BSP_SD_Init+0x3c>
 8009ffc:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800a000:	4806      	ldr	r0, [pc, #24]	; (800a01c <BSP_SD_Init+0x48>)
 800a002:	f7fd f9f8 	bl	80073f6 <HAL_SD_ConfigWideBusOperation>
 800a006:	4603      	mov	r3, r0
 800a008:	2b00      	cmp	r3, #0
 800a00a:	d001      	beq.n	800a010 <BSP_SD_Init+0x3c>
 800a00c:	2301      	movs	r3, #1
 800a00e:	71fb      	strb	r3, [r7, #7]
 800a010:	79fb      	ldrb	r3, [r7, #7]
 800a012:	4618      	mov	r0, r3
 800a014:	3708      	adds	r7, #8
 800a016:	46bd      	mov	sp, r7
 800a018:	bd80      	pop	{r7, pc}
 800a01a:	bf00      	nop
 800a01c:	2000039c 	.word	0x2000039c

0800a020 <BSP_SD_ReadBlocks>:
 800a020:	b580      	push	{r7, lr}
 800a022:	b088      	sub	sp, #32
 800a024:	af02      	add	r7, sp, #8
 800a026:	60f8      	str	r0, [r7, #12]
 800a028:	60b9      	str	r1, [r7, #8]
 800a02a:	607a      	str	r2, [r7, #4]
 800a02c:	603b      	str	r3, [r7, #0]
 800a02e:	4b0d      	ldr	r3, [pc, #52]	; (800a064 <BSP_SD_ReadBlocks+0x44>)
 800a030:	7f1b      	ldrb	r3, [r3, #28]
 800a032:	2b01      	cmp	r3, #1
 800a034:	d101      	bne.n	800a03a <BSP_SD_ReadBlocks+0x1a>
 800a036:	2302      	movs	r3, #2
 800a038:	e010      	b.n	800a05c <BSP_SD_ReadBlocks+0x3c>
 800a03a:	4b0a      	ldr	r3, [pc, #40]	; (800a064 <BSP_SD_ReadBlocks+0x44>)
 800a03c:	2201      	movs	r2, #1
 800a03e:	771a      	strb	r2, [r3, #28]
 800a040:	683b      	ldr	r3, [r7, #0]
 800a042:	9300      	str	r3, [sp, #0]
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	68ba      	ldr	r2, [r7, #8]
 800a048:	68f9      	ldr	r1, [r7, #12]
 800a04a:	4806      	ldr	r0, [pc, #24]	; (800a064 <BSP_SD_ReadBlocks+0x44>)
 800a04c:	f7fc fad8 	bl	8006600 <HAL_SD_ReadBlocks>
 800a050:	4603      	mov	r3, r0
 800a052:	75fb      	strb	r3, [r7, #23]
 800a054:	4b03      	ldr	r3, [pc, #12]	; (800a064 <BSP_SD_ReadBlocks+0x44>)
 800a056:	2200      	movs	r2, #0
 800a058:	771a      	strb	r2, [r3, #28]
 800a05a:	7dfb      	ldrb	r3, [r7, #23]
 800a05c:	4618      	mov	r0, r3
 800a05e:	3718      	adds	r7, #24
 800a060:	46bd      	mov	sp, r7
 800a062:	bd80      	pop	{r7, pc}
 800a064:	2000039c 	.word	0x2000039c

0800a068 <BSP_SD_WriteBlocks>:
 800a068:	b580      	push	{r7, lr}
 800a06a:	b088      	sub	sp, #32
 800a06c:	af02      	add	r7, sp, #8
 800a06e:	60f8      	str	r0, [r7, #12]
 800a070:	60b9      	str	r1, [r7, #8]
 800a072:	607a      	str	r2, [r7, #4]
 800a074:	603b      	str	r3, [r7, #0]
 800a076:	2300      	movs	r3, #0
 800a078:	75fb      	strb	r3, [r7, #23]
 800a07a:	4b0d      	ldr	r3, [pc, #52]	; (800a0b0 <BSP_SD_WriteBlocks+0x48>)
 800a07c:	7f1b      	ldrb	r3, [r3, #28]
 800a07e:	2b01      	cmp	r3, #1
 800a080:	d101      	bne.n	800a086 <BSP_SD_WriteBlocks+0x1e>
 800a082:	2302      	movs	r3, #2
 800a084:	e010      	b.n	800a0a8 <BSP_SD_WriteBlocks+0x40>
 800a086:	4b0a      	ldr	r3, [pc, #40]	; (800a0b0 <BSP_SD_WriteBlocks+0x48>)
 800a088:	2201      	movs	r2, #1
 800a08a:	771a      	strb	r2, [r3, #28]
 800a08c:	683b      	ldr	r3, [r7, #0]
 800a08e:	9300      	str	r3, [sp, #0]
 800a090:	687b      	ldr	r3, [r7, #4]
 800a092:	68ba      	ldr	r2, [r7, #8]
 800a094:	68f9      	ldr	r1, [r7, #12]
 800a096:	4806      	ldr	r0, [pc, #24]	; (800a0b0 <BSP_SD_WriteBlocks+0x48>)
 800a098:	f7fc fc49 	bl	800692e <HAL_SD_WriteBlocks>
 800a09c:	4603      	mov	r3, r0
 800a09e:	75fb      	strb	r3, [r7, #23]
 800a0a0:	4b03      	ldr	r3, [pc, #12]	; (800a0b0 <BSP_SD_WriteBlocks+0x48>)
 800a0a2:	2200      	movs	r2, #0
 800a0a4:	771a      	strb	r2, [r3, #28]
 800a0a6:	7dfb      	ldrb	r3, [r7, #23]
 800a0a8:	4618      	mov	r0, r3
 800a0aa:	3718      	adds	r7, #24
 800a0ac:	46bd      	mov	sp, r7
 800a0ae:	bd80      	pop	{r7, pc}
 800a0b0:	2000039c 	.word	0x2000039c

0800a0b4 <BSP_SD_GetCardState>:
 800a0b4:	b580      	push	{r7, lr}
 800a0b6:	b082      	sub	sp, #8
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	4b0e      	ldr	r3, [pc, #56]	; (800a0f4 <BSP_SD_GetCardState+0x40>)
 800a0bc:	7f1b      	ldrb	r3, [r3, #28]
 800a0be:	2b01      	cmp	r3, #1
 800a0c0:	d101      	bne.n	800a0c6 <BSP_SD_GetCardState+0x12>
 800a0c2:	2302      	movs	r3, #2
 800a0c4:	e011      	b.n	800a0ea <BSP_SD_GetCardState+0x36>
 800a0c6:	4b0b      	ldr	r3, [pc, #44]	; (800a0f4 <BSP_SD_GetCardState+0x40>)
 800a0c8:	2201      	movs	r2, #1
 800a0ca:	771a      	strb	r2, [r3, #28]
 800a0cc:	4809      	ldr	r0, [pc, #36]	; (800a0f4 <BSP_SD_GetCardState+0x40>)
 800a0ce:	f7fd fa0e 	bl	80074ee <HAL_SD_GetCardState>
 800a0d2:	4603      	mov	r3, r0
 800a0d4:	2b04      	cmp	r3, #4
 800a0d6:	d102      	bne.n	800a0de <BSP_SD_GetCardState+0x2a>
 800a0d8:	2300      	movs	r3, #0
 800a0da:	71fb      	strb	r3, [r7, #7]
 800a0dc:	e001      	b.n	800a0e2 <BSP_SD_GetCardState+0x2e>
 800a0de:	2301      	movs	r3, #1
 800a0e0:	71fb      	strb	r3, [r7, #7]
 800a0e2:	4b04      	ldr	r3, [pc, #16]	; (800a0f4 <BSP_SD_GetCardState+0x40>)
 800a0e4:	2200      	movs	r2, #0
 800a0e6:	771a      	strb	r2, [r3, #28]
 800a0e8:	79fb      	ldrb	r3, [r7, #7]
 800a0ea:	4618      	mov	r0, r3
 800a0ec:	3708      	adds	r7, #8
 800a0ee:	46bd      	mov	sp, r7
 800a0f0:	bd80      	pop	{r7, pc}
 800a0f2:	bf00      	nop
 800a0f4:	2000039c 	.word	0x2000039c

0800a0f8 <BSP_SD_GetCardInfo>:
 800a0f8:	b580      	push	{r7, lr}
 800a0fa:	b082      	sub	sp, #8
 800a0fc:	af00      	add	r7, sp, #0
 800a0fe:	6078      	str	r0, [r7, #4]
 800a100:	b672      	cpsid	i
 800a102:	bf00      	nop
 800a104:	6879      	ldr	r1, [r7, #4]
 800a106:	4804      	ldr	r0, [pc, #16]	; (800a118 <BSP_SD_GetCardInfo+0x20>)
 800a108:	f7fd f949 	bl	800739e <HAL_SD_GetCardInfo>
 800a10c:	b662      	cpsie	i
 800a10e:	bf00      	nop
 800a110:	bf00      	nop
 800a112:	3708      	adds	r7, #8
 800a114:	46bd      	mov	sp, r7
 800a116:	bd80      	pop	{r7, pc}
 800a118:	2000039c 	.word	0x2000039c

0800a11c <BSP_SD_IsDetected>:
 800a11c:	b480      	push	{r7}
 800a11e:	b083      	sub	sp, #12
 800a120:	af00      	add	r7, sp, #0
 800a122:	2301      	movs	r3, #1
 800a124:	71fb      	strb	r3, [r7, #7]
 800a126:	79fb      	ldrb	r3, [r7, #7]
 800a128:	b2db      	uxtb	r3, r3
 800a12a:	4618      	mov	r0, r3
 800a12c:	370c      	adds	r7, #12
 800a12e:	46bd      	mov	sp, r7
 800a130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a134:	4770      	bx	lr
	...

0800a138 <MX_FATFS_Init>:
 800a138:	b580      	push	{r7, lr}
 800a13a:	af00      	add	r7, sp, #0
 800a13c:	4904      	ldr	r1, [pc, #16]	; (800a150 <MX_FATFS_Init+0x18>)
 800a13e:	4805      	ldr	r0, [pc, #20]	; (800a154 <MX_FATFS_Init+0x1c>)
 800a140:	f000 fc3c 	bl	800a9bc <FATFS_LinkDriver>
 800a144:	4603      	mov	r3, r0
 800a146:	461a      	mov	r2, r3
 800a148:	4b03      	ldr	r3, [pc, #12]	; (800a158 <MX_FATFS_Init+0x20>)
 800a14a:	701a      	strb	r2, [r3, #0]
 800a14c:	bf00      	nop
 800a14e:	bd80      	pop	{r7, pc}
 800a150:	200007dc 	.word	0x200007dc
 800a154:	08010d0c 	.word	0x08010d0c
 800a158:	200007d8 	.word	0x200007d8

0800a15c <SD_initialize>:
 800a15c:	b580      	push	{r7, lr}
 800a15e:	b082      	sub	sp, #8
 800a160:	af00      	add	r7, sp, #0
 800a162:	4603      	mov	r3, r0
 800a164:	71fb      	strb	r3, [r7, #7]
 800a166:	4b0b      	ldr	r3, [pc, #44]	; (800a194 <SD_initialize+0x38>)
 800a168:	2201      	movs	r2, #1
 800a16a:	701a      	strb	r2, [r3, #0]
 800a16c:	f7ff ff32 	bl	8009fd4 <BSP_SD_Init>
 800a170:	4603      	mov	r3, r0
 800a172:	2b00      	cmp	r3, #0
 800a174:	d107      	bne.n	800a186 <SD_initialize+0x2a>
 800a176:	4b07      	ldr	r3, [pc, #28]	; (800a194 <SD_initialize+0x38>)
 800a178:	781b      	ldrb	r3, [r3, #0]
 800a17a:	b2db      	uxtb	r3, r3
 800a17c:	f023 0301 	bic.w	r3, r3, #1
 800a180:	b2da      	uxtb	r2, r3
 800a182:	4b04      	ldr	r3, [pc, #16]	; (800a194 <SD_initialize+0x38>)
 800a184:	701a      	strb	r2, [r3, #0]
 800a186:	4b03      	ldr	r3, [pc, #12]	; (800a194 <SD_initialize+0x38>)
 800a188:	781b      	ldrb	r3, [r3, #0]
 800a18a:	b2db      	uxtb	r3, r3
 800a18c:	4618      	mov	r0, r3
 800a18e:	3708      	adds	r7, #8
 800a190:	46bd      	mov	sp, r7
 800a192:	bd80      	pop	{r7, pc}
 800a194:	20000010 	.word	0x20000010

0800a198 <SD_status>:
 800a198:	b580      	push	{r7, lr}
 800a19a:	b082      	sub	sp, #8
 800a19c:	af00      	add	r7, sp, #0
 800a19e:	4603      	mov	r3, r0
 800a1a0:	71fb      	strb	r3, [r7, #7]
 800a1a2:	f7ff ff87 	bl	800a0b4 <BSP_SD_GetCardState>
 800a1a6:	4603      	mov	r3, r0
 800a1a8:	2b01      	cmp	r3, #1
 800a1aa:	d008      	beq.n	800a1be <SD_status+0x26>
 800a1ac:	4b0b      	ldr	r3, [pc, #44]	; (800a1dc <SD_status+0x44>)
 800a1ae:	781b      	ldrb	r3, [r3, #0]
 800a1b0:	b2db      	uxtb	r3, r3
 800a1b2:	f023 0308 	bic.w	r3, r3, #8
 800a1b6:	b2da      	uxtb	r2, r3
 800a1b8:	4b08      	ldr	r3, [pc, #32]	; (800a1dc <SD_status+0x44>)
 800a1ba:	701a      	strb	r2, [r3, #0]
 800a1bc:	e007      	b.n	800a1ce <SD_status+0x36>
 800a1be:	4b07      	ldr	r3, [pc, #28]	; (800a1dc <SD_status+0x44>)
 800a1c0:	781b      	ldrb	r3, [r3, #0]
 800a1c2:	b2db      	uxtb	r3, r3
 800a1c4:	f043 0308 	orr.w	r3, r3, #8
 800a1c8:	b2da      	uxtb	r2, r3
 800a1ca:	4b04      	ldr	r3, [pc, #16]	; (800a1dc <SD_status+0x44>)
 800a1cc:	701a      	strb	r2, [r3, #0]
 800a1ce:	4b03      	ldr	r3, [pc, #12]	; (800a1dc <SD_status+0x44>)
 800a1d0:	781b      	ldrb	r3, [r3, #0]
 800a1d2:	b2db      	uxtb	r3, r3
 800a1d4:	4618      	mov	r0, r3
 800a1d6:	3708      	adds	r7, #8
 800a1d8:	46bd      	mov	sp, r7
 800a1da:	bd80      	pop	{r7, pc}
 800a1dc:	20000010 	.word	0x20000010

0800a1e0 <SD_read>:
 800a1e0:	b580      	push	{r7, lr}
 800a1e2:	b086      	sub	sp, #24
 800a1e4:	af00      	add	r7, sp, #0
 800a1e6:	60b9      	str	r1, [r7, #8]
 800a1e8:	607a      	str	r2, [r7, #4]
 800a1ea:	603b      	str	r3, [r7, #0]
 800a1ec:	4603      	mov	r3, r0
 800a1ee:	73fb      	strb	r3, [r7, #15]
 800a1f0:	2314      	movs	r3, #20
 800a1f2:	617b      	str	r3, [r7, #20]
 800a1f4:	e009      	b.n	800a20a <SD_read+0x2a>
 800a1f6:	697b      	ldr	r3, [r7, #20]
 800a1f8:	1e5a      	subs	r2, r3, #1
 800a1fa:	617a      	str	r2, [r7, #20]
 800a1fc:	2b00      	cmp	r3, #0
 800a1fe:	d101      	bne.n	800a204 <SD_read+0x24>
 800a200:	2301      	movs	r3, #1
 800a202:	e020      	b.n	800a246 <SD_read+0x66>
 800a204:	2001      	movs	r0, #1
 800a206:	f000 fc50 	bl	800aaaa <osDelay>
 800a20a:	f241 3388 	movw	r3, #5000	; 0x1388
 800a20e:	683a      	ldr	r2, [r7, #0]
 800a210:	6879      	ldr	r1, [r7, #4]
 800a212:	68b8      	ldr	r0, [r7, #8]
 800a214:	f7ff ff04 	bl	800a020 <BSP_SD_ReadBlocks>
 800a218:	4603      	mov	r3, r0
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	d1eb      	bne.n	800a1f6 <SD_read+0x16>
 800a21e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800a222:	617b      	str	r3, [r7, #20]
 800a224:	e009      	b.n	800a23a <SD_read+0x5a>
 800a226:	697b      	ldr	r3, [r7, #20]
 800a228:	1e5a      	subs	r2, r3, #1
 800a22a:	617a      	str	r2, [r7, #20]
 800a22c:	2b00      	cmp	r3, #0
 800a22e:	d101      	bne.n	800a234 <SD_read+0x54>
 800a230:	2301      	movs	r3, #1
 800a232:	e008      	b.n	800a246 <SD_read+0x66>
 800a234:	2001      	movs	r0, #1
 800a236:	f000 fc38 	bl	800aaaa <osDelay>
 800a23a:	f7ff ff3b 	bl	800a0b4 <BSP_SD_GetCardState>
 800a23e:	4603      	mov	r3, r0
 800a240:	2b00      	cmp	r3, #0
 800a242:	d1f0      	bne.n	800a226 <SD_read+0x46>
 800a244:	2300      	movs	r3, #0
 800a246:	4618      	mov	r0, r3
 800a248:	3718      	adds	r7, #24
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}

0800a24e <SD_write>:
 800a24e:	b580      	push	{r7, lr}
 800a250:	b086      	sub	sp, #24
 800a252:	af00      	add	r7, sp, #0
 800a254:	60b9      	str	r1, [r7, #8]
 800a256:	607a      	str	r2, [r7, #4]
 800a258:	603b      	str	r3, [r7, #0]
 800a25a:	4603      	mov	r3, r0
 800a25c:	73fb      	strb	r3, [r7, #15]
 800a25e:	2314      	movs	r3, #20
 800a260:	617b      	str	r3, [r7, #20]
 800a262:	e009      	b.n	800a278 <SD_write+0x2a>
 800a264:	697b      	ldr	r3, [r7, #20]
 800a266:	1e5a      	subs	r2, r3, #1
 800a268:	617a      	str	r2, [r7, #20]
 800a26a:	2b00      	cmp	r3, #0
 800a26c:	d101      	bne.n	800a272 <SD_write+0x24>
 800a26e:	2301      	movs	r3, #1
 800a270:	e020      	b.n	800a2b4 <SD_write+0x66>
 800a272:	2001      	movs	r0, #1
 800a274:	f000 fc19 	bl	800aaaa <osDelay>
 800a278:	f241 3388 	movw	r3, #5000	; 0x1388
 800a27c:	683a      	ldr	r2, [r7, #0]
 800a27e:	6879      	ldr	r1, [r7, #4]
 800a280:	68b8      	ldr	r0, [r7, #8]
 800a282:	f7ff fef1 	bl	800a068 <BSP_SD_WriteBlocks>
 800a286:	4603      	mov	r3, r0
 800a288:	2b00      	cmp	r3, #0
 800a28a:	d1eb      	bne.n	800a264 <SD_write+0x16>
 800a28c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 800a290:	617b      	str	r3, [r7, #20]
 800a292:	e009      	b.n	800a2a8 <SD_write+0x5a>
 800a294:	697b      	ldr	r3, [r7, #20]
 800a296:	1e5a      	subs	r2, r3, #1
 800a298:	617a      	str	r2, [r7, #20]
 800a29a:	2b00      	cmp	r3, #0
 800a29c:	d101      	bne.n	800a2a2 <SD_write+0x54>
 800a29e:	2301      	movs	r3, #1
 800a2a0:	e008      	b.n	800a2b4 <SD_write+0x66>
 800a2a2:	2001      	movs	r0, #1
 800a2a4:	f000 fc01 	bl	800aaaa <osDelay>
 800a2a8:	f7ff ff04 	bl	800a0b4 <BSP_SD_GetCardState>
 800a2ac:	4603      	mov	r3, r0
 800a2ae:	2b00      	cmp	r3, #0
 800a2b0:	d1f0      	bne.n	800a294 <SD_write+0x46>
 800a2b2:	2300      	movs	r3, #0
 800a2b4:	4618      	mov	r0, r3
 800a2b6:	3718      	adds	r7, #24
 800a2b8:	46bd      	mov	sp, r7
 800a2ba:	bd80      	pop	{r7, pc}

0800a2bc <SD_ioctl>:
 800a2bc:	b580      	push	{r7, lr}
 800a2be:	b08c      	sub	sp, #48	; 0x30
 800a2c0:	af00      	add	r7, sp, #0
 800a2c2:	4603      	mov	r3, r0
 800a2c4:	603a      	str	r2, [r7, #0]
 800a2c6:	71fb      	strb	r3, [r7, #7]
 800a2c8:	460b      	mov	r3, r1
 800a2ca:	71bb      	strb	r3, [r7, #6]
 800a2cc:	2301      	movs	r3, #1
 800a2ce:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a2d2:	4b24      	ldr	r3, [pc, #144]	; (800a364 <SD_ioctl+0xa8>)
 800a2d4:	781b      	ldrb	r3, [r3, #0]
 800a2d6:	b2db      	uxtb	r3, r3
 800a2d8:	f003 0301 	and.w	r3, r3, #1
 800a2dc:	2b00      	cmp	r3, #0
 800a2de:	d001      	beq.n	800a2e4 <SD_ioctl+0x28>
 800a2e0:	2303      	movs	r3, #3
 800a2e2:	e03b      	b.n	800a35c <SD_ioctl+0xa0>
 800a2e4:	79bb      	ldrb	r3, [r7, #6]
 800a2e6:	2b03      	cmp	r3, #3
 800a2e8:	d833      	bhi.n	800a352 <SD_ioctl+0x96>
 800a2ea:	a201      	add	r2, pc, #4	; (adr r2, 800a2f0 <SD_ioctl+0x34>)
 800a2ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a2f0:	0800a301 	.word	0x0800a301
 800a2f4:	0800a309 	.word	0x0800a309
 800a2f8:	0800a321 	.word	0x0800a321
 800a2fc:	0800a33b 	.word	0x0800a33b
 800a300:	2300      	movs	r3, #0
 800a302:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a306:	e027      	b.n	800a358 <SD_ioctl+0x9c>
 800a308:	f107 030c 	add.w	r3, r7, #12
 800a30c:	4618      	mov	r0, r3
 800a30e:	f7ff fef3 	bl	800a0f8 <BSP_SD_GetCardInfo>
 800a312:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a314:	683b      	ldr	r3, [r7, #0]
 800a316:	601a      	str	r2, [r3, #0]
 800a318:	2300      	movs	r3, #0
 800a31a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a31e:	e01b      	b.n	800a358 <SD_ioctl+0x9c>
 800a320:	f107 030c 	add.w	r3, r7, #12
 800a324:	4618      	mov	r0, r3
 800a326:	f7ff fee7 	bl	800a0f8 <BSP_SD_GetCardInfo>
 800a32a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a32c:	b29a      	uxth	r2, r3
 800a32e:	683b      	ldr	r3, [r7, #0]
 800a330:	801a      	strh	r2, [r3, #0]
 800a332:	2300      	movs	r3, #0
 800a334:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a338:	e00e      	b.n	800a358 <SD_ioctl+0x9c>
 800a33a:	f107 030c 	add.w	r3, r7, #12
 800a33e:	4618      	mov	r0, r3
 800a340:	f7ff feda 	bl	800a0f8 <BSP_SD_GetCardInfo>
 800a344:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a346:	683b      	ldr	r3, [r7, #0]
 800a348:	601a      	str	r2, [r3, #0]
 800a34a:	2300      	movs	r3, #0
 800a34c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a350:	e002      	b.n	800a358 <SD_ioctl+0x9c>
 800a352:	2304      	movs	r3, #4
 800a354:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 800a358:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 800a35c:	4618      	mov	r0, r3
 800a35e:	3730      	adds	r7, #48	; 0x30
 800a360:	46bd      	mov	sp, r7
 800a362:	bd80      	pop	{r7, pc}
 800a364:	20000010 	.word	0x20000010

0800a368 <HAL_MspInit>:
 800a368:	b580      	push	{r7, lr}
 800a36a:	af00      	add	r7, sp, #0
 800a36c:	2003      	movs	r0, #3
 800a36e:	f7f9 ff49 	bl	8004204 <HAL_NVIC_SetPriorityGrouping>
 800a372:	2200      	movs	r2, #0
 800a374:	2100      	movs	r1, #0
 800a376:	f06f 000b 	mvn.w	r0, #11
 800a37a:	f7f9 ff4e 	bl	800421a <HAL_NVIC_SetPriority>
 800a37e:	2200      	movs	r2, #0
 800a380:	2100      	movs	r1, #0
 800a382:	f06f 000a 	mvn.w	r0, #10
 800a386:	f7f9 ff48 	bl	800421a <HAL_NVIC_SetPriority>
 800a38a:	2200      	movs	r2, #0
 800a38c:	2100      	movs	r1, #0
 800a38e:	f06f 0009 	mvn.w	r0, #9
 800a392:	f7f9 ff42 	bl	800421a <HAL_NVIC_SetPriority>
 800a396:	2200      	movs	r2, #0
 800a398:	2100      	movs	r1, #0
 800a39a:	f06f 0004 	mvn.w	r0, #4
 800a39e:	f7f9 ff3c 	bl	800421a <HAL_NVIC_SetPriority>
 800a3a2:	2200      	movs	r2, #0
 800a3a4:	2100      	movs	r1, #0
 800a3a6:	f06f 0003 	mvn.w	r0, #3
 800a3aa:	f7f9 ff36 	bl	800421a <HAL_NVIC_SetPriority>
 800a3ae:	2200      	movs	r2, #0
 800a3b0:	210f      	movs	r1, #15
 800a3b2:	f06f 0001 	mvn.w	r0, #1
 800a3b6:	f7f9 ff30 	bl	800421a <HAL_NVIC_SetPriority>
 800a3ba:	2200      	movs	r2, #0
 800a3bc:	210f      	movs	r1, #15
 800a3be:	f04f 30ff 	mov.w	r0, #4294967295
 800a3c2:	f7f9 ff2a 	bl	800421a <HAL_NVIC_SetPriority>
 800a3c6:	bf00      	nop
 800a3c8:	bd80      	pop	{r7, pc}
	...

0800a3cc <HAL_I2C_MspInit>:
 800a3cc:	b580      	push	{r7, lr}
 800a3ce:	b08a      	sub	sp, #40	; 0x28
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	6078      	str	r0, [r7, #4]
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	681b      	ldr	r3, [r3, #0]
 800a3d8:	4a37      	ldr	r2, [pc, #220]	; (800a4b8 <HAL_I2C_MspInit+0xec>)
 800a3da:	4293      	cmp	r3, r2
 800a3dc:	d11f      	bne.n	800a41e <HAL_I2C_MspInit+0x52>
 800a3de:	f44f 7340 	mov.w	r3, #768	; 0x300
 800a3e2:	617b      	str	r3, [r7, #20]
 800a3e4:	2312      	movs	r3, #18
 800a3e6:	61bb      	str	r3, [r7, #24]
 800a3e8:	2301      	movs	r3, #1
 800a3ea:	61fb      	str	r3, [r7, #28]
 800a3ec:	2303      	movs	r3, #3
 800a3ee:	623b      	str	r3, [r7, #32]
 800a3f0:	2304      	movs	r3, #4
 800a3f2:	627b      	str	r3, [r7, #36]	; 0x24
 800a3f4:	f107 0314 	add.w	r3, r7, #20
 800a3f8:	4619      	mov	r1, r3
 800a3fa:	4830      	ldr	r0, [pc, #192]	; (800a4bc <HAL_I2C_MspInit+0xf0>)
 800a3fc:	f7fa f910 	bl	8004620 <HAL_GPIO_Init>
 800a400:	2300      	movs	r3, #0
 800a402:	613b      	str	r3, [r7, #16]
 800a404:	4b2e      	ldr	r3, [pc, #184]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a406:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a408:	4a2d      	ldr	r2, [pc, #180]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a40a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800a40e:	6413      	str	r3, [r2, #64]	; 0x40
 800a410:	4b2b      	ldr	r3, [pc, #172]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a412:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a414:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a418:	613b      	str	r3, [r7, #16]
 800a41a:	693b      	ldr	r3, [r7, #16]
 800a41c:	e048      	b.n	800a4b0 <HAL_I2C_MspInit+0xe4>
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	681b      	ldr	r3, [r3, #0]
 800a422:	4a28      	ldr	r2, [pc, #160]	; (800a4c4 <HAL_I2C_MspInit+0xf8>)
 800a424:	4293      	cmp	r3, r2
 800a426:	d11f      	bne.n	800a468 <HAL_I2C_MspInit+0x9c>
 800a428:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800a42c:	617b      	str	r3, [r7, #20]
 800a42e:	2312      	movs	r3, #18
 800a430:	61bb      	str	r3, [r7, #24]
 800a432:	2301      	movs	r3, #1
 800a434:	61fb      	str	r3, [r7, #28]
 800a436:	2303      	movs	r3, #3
 800a438:	623b      	str	r3, [r7, #32]
 800a43a:	2304      	movs	r3, #4
 800a43c:	627b      	str	r3, [r7, #36]	; 0x24
 800a43e:	f107 0314 	add.w	r3, r7, #20
 800a442:	4619      	mov	r1, r3
 800a444:	481d      	ldr	r0, [pc, #116]	; (800a4bc <HAL_I2C_MspInit+0xf0>)
 800a446:	f7fa f8eb 	bl	8004620 <HAL_GPIO_Init>
 800a44a:	2300      	movs	r3, #0
 800a44c:	60fb      	str	r3, [r7, #12]
 800a44e:	4b1c      	ldr	r3, [pc, #112]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a450:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a452:	4a1b      	ldr	r2, [pc, #108]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a454:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a458:	6413      	str	r3, [r2, #64]	; 0x40
 800a45a:	4b19      	ldr	r3, [pc, #100]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a45c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a45e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a462:	60fb      	str	r3, [r7, #12]
 800a464:	68fb      	ldr	r3, [r7, #12]
 800a466:	e023      	b.n	800a4b0 <HAL_I2C_MspInit+0xe4>
 800a468:	687b      	ldr	r3, [r7, #4]
 800a46a:	681b      	ldr	r3, [r3, #0]
 800a46c:	4a16      	ldr	r2, [pc, #88]	; (800a4c8 <HAL_I2C_MspInit+0xfc>)
 800a46e:	4293      	cmp	r3, r2
 800a470:	d11e      	bne.n	800a4b0 <HAL_I2C_MspInit+0xe4>
 800a472:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800a476:	617b      	str	r3, [r7, #20]
 800a478:	2312      	movs	r3, #18
 800a47a:	61bb      	str	r3, [r7, #24]
 800a47c:	2301      	movs	r3, #1
 800a47e:	61fb      	str	r3, [r7, #28]
 800a480:	2303      	movs	r3, #3
 800a482:	623b      	str	r3, [r7, #32]
 800a484:	2304      	movs	r3, #4
 800a486:	627b      	str	r3, [r7, #36]	; 0x24
 800a488:	f107 0314 	add.w	r3, r7, #20
 800a48c:	4619      	mov	r1, r3
 800a48e:	480f      	ldr	r0, [pc, #60]	; (800a4cc <HAL_I2C_MspInit+0x100>)
 800a490:	f7fa f8c6 	bl	8004620 <HAL_GPIO_Init>
 800a494:	2300      	movs	r3, #0
 800a496:	60bb      	str	r3, [r7, #8]
 800a498:	4b09      	ldr	r3, [pc, #36]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a49a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a49c:	4a08      	ldr	r2, [pc, #32]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a49e:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a4a2:	6413      	str	r3, [r2, #64]	; 0x40
 800a4a4:	4b06      	ldr	r3, [pc, #24]	; (800a4c0 <HAL_I2C_MspInit+0xf4>)
 800a4a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a4a8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800a4ac:	60bb      	str	r3, [r7, #8]
 800a4ae:	68bb      	ldr	r3, [r7, #8]
 800a4b0:	bf00      	nop
 800a4b2:	3728      	adds	r7, #40	; 0x28
 800a4b4:	46bd      	mov	sp, r7
 800a4b6:	bd80      	pop	{r7, pc}
 800a4b8:	40005400 	.word	0x40005400
 800a4bc:	40020400 	.word	0x40020400
 800a4c0:	40023800 	.word	0x40023800
 800a4c4:	40005800 	.word	0x40005800
 800a4c8:	40005c00 	.word	0x40005c00
 800a4cc:	40021c00 	.word	0x40021c00

0800a4d0 <HAL_SD_MspInit>:
 800a4d0:	b580      	push	{r7, lr}
 800a4d2:	b088      	sub	sp, #32
 800a4d4:	af00      	add	r7, sp, #0
 800a4d6:	6078      	str	r0, [r7, #4]
 800a4d8:	687b      	ldr	r3, [r7, #4]
 800a4da:	681b      	ldr	r3, [r3, #0]
 800a4dc:	4a1e      	ldr	r2, [pc, #120]	; (800a558 <HAL_SD_MspInit+0x88>)
 800a4de:	4293      	cmp	r3, r2
 800a4e0:	d136      	bne.n	800a550 <HAL_SD_MspInit+0x80>
 800a4e2:	2300      	movs	r3, #0
 800a4e4:	60bb      	str	r3, [r7, #8]
 800a4e6:	4b1d      	ldr	r3, [pc, #116]	; (800a55c <HAL_SD_MspInit+0x8c>)
 800a4e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a4ea:	4a1c      	ldr	r2, [pc, #112]	; (800a55c <HAL_SD_MspInit+0x8c>)
 800a4ec:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800a4f0:	6453      	str	r3, [r2, #68]	; 0x44
 800a4f2:	4b1a      	ldr	r3, [pc, #104]	; (800a55c <HAL_SD_MspInit+0x8c>)
 800a4f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a4f6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800a4fa:	60bb      	str	r3, [r7, #8]
 800a4fc:	68bb      	ldr	r3, [r7, #8]
 800a4fe:	f44f 53f8 	mov.w	r3, #7936	; 0x1f00
 800a502:	60fb      	str	r3, [r7, #12]
 800a504:	2302      	movs	r3, #2
 800a506:	613b      	str	r3, [r7, #16]
 800a508:	2300      	movs	r3, #0
 800a50a:	617b      	str	r3, [r7, #20]
 800a50c:	2303      	movs	r3, #3
 800a50e:	61bb      	str	r3, [r7, #24]
 800a510:	230c      	movs	r3, #12
 800a512:	61fb      	str	r3, [r7, #28]
 800a514:	f107 030c 	add.w	r3, r7, #12
 800a518:	4619      	mov	r1, r3
 800a51a:	4811      	ldr	r0, [pc, #68]	; (800a560 <HAL_SD_MspInit+0x90>)
 800a51c:	f7fa f880 	bl	8004620 <HAL_GPIO_Init>
 800a520:	2304      	movs	r3, #4
 800a522:	60fb      	str	r3, [r7, #12]
 800a524:	2302      	movs	r3, #2
 800a526:	613b      	str	r3, [r7, #16]
 800a528:	2300      	movs	r3, #0
 800a52a:	617b      	str	r3, [r7, #20]
 800a52c:	2303      	movs	r3, #3
 800a52e:	61bb      	str	r3, [r7, #24]
 800a530:	230c      	movs	r3, #12
 800a532:	61fb      	str	r3, [r7, #28]
 800a534:	f107 030c 	add.w	r3, r7, #12
 800a538:	4619      	mov	r1, r3
 800a53a:	480a      	ldr	r0, [pc, #40]	; (800a564 <HAL_SD_MspInit+0x94>)
 800a53c:	f7fa f870 	bl	8004620 <HAL_GPIO_Init>
 800a540:	2200      	movs	r2, #0
 800a542:	2106      	movs	r1, #6
 800a544:	2031      	movs	r0, #49	; 0x31
 800a546:	f7f9 fe68 	bl	800421a <HAL_NVIC_SetPriority>
 800a54a:	2031      	movs	r0, #49	; 0x31
 800a54c:	f7f9 fe81 	bl	8004252 <HAL_NVIC_EnableIRQ>
 800a550:	bf00      	nop
 800a552:	3720      	adds	r7, #32
 800a554:	46bd      	mov	sp, r7
 800a556:	bd80      	pop	{r7, pc}
 800a558:	40012c00 	.word	0x40012c00
 800a55c:	40023800 	.word	0x40023800
 800a560:	40020800 	.word	0x40020800
 800a564:	40020c00 	.word	0x40020c00

0800a568 <HAL_TIM_Base_MspInit>:
 800a568:	b480      	push	{r7}
 800a56a:	b085      	sub	sp, #20
 800a56c:	af00      	add	r7, sp, #0
 800a56e:	6078      	str	r0, [r7, #4]
 800a570:	687b      	ldr	r3, [r7, #4]
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	4a0b      	ldr	r2, [pc, #44]	; (800a5a4 <HAL_TIM_Base_MspInit+0x3c>)
 800a576:	4293      	cmp	r3, r2
 800a578:	d10d      	bne.n	800a596 <HAL_TIM_Base_MspInit+0x2e>
 800a57a:	2300      	movs	r3, #0
 800a57c:	60fb      	str	r3, [r7, #12]
 800a57e:	4b0a      	ldr	r3, [pc, #40]	; (800a5a8 <HAL_TIM_Base_MspInit+0x40>)
 800a580:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a582:	4a09      	ldr	r2, [pc, #36]	; (800a5a8 <HAL_TIM_Base_MspInit+0x40>)
 800a584:	f043 0308 	orr.w	r3, r3, #8
 800a588:	6413      	str	r3, [r2, #64]	; 0x40
 800a58a:	4b07      	ldr	r3, [pc, #28]	; (800a5a8 <HAL_TIM_Base_MspInit+0x40>)
 800a58c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a58e:	f003 0308 	and.w	r3, r3, #8
 800a592:	60fb      	str	r3, [r7, #12]
 800a594:	68fb      	ldr	r3, [r7, #12]
 800a596:	bf00      	nop
 800a598:	3714      	adds	r7, #20
 800a59a:	46bd      	mov	sp, r7
 800a59c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5a0:	4770      	bx	lr
 800a5a2:	bf00      	nop
 800a5a4:	40000c00 	.word	0x40000c00
 800a5a8:	40023800 	.word	0x40023800

0800a5ac <HAL_UART_MspInit>:
 800a5ac:	b580      	push	{r7, lr}
 800a5ae:	b08a      	sub	sp, #40	; 0x28
 800a5b0:	af00      	add	r7, sp, #0
 800a5b2:	6078      	str	r0, [r7, #4]
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	681b      	ldr	r3, [r3, #0]
 800a5b8:	4a42      	ldr	r2, [pc, #264]	; (800a6c4 <HAL_UART_MspInit+0x118>)
 800a5ba:	4293      	cmp	r3, r2
 800a5bc:	d126      	bne.n	800a60c <HAL_UART_MspInit+0x60>
 800a5be:	2300      	movs	r3, #0
 800a5c0:	613b      	str	r3, [r7, #16]
 800a5c2:	4b41      	ldr	r3, [pc, #260]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a5c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a5c6:	4a40      	ldr	r2, [pc, #256]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a5c8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800a5cc:	6413      	str	r3, [r2, #64]	; 0x40
 800a5ce:	4b3e      	ldr	r3, [pc, #248]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a5d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a5d2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a5d6:	613b      	str	r3, [r7, #16]
 800a5d8:	693b      	ldr	r3, [r7, #16]
 800a5da:	2303      	movs	r3, #3
 800a5dc:	617b      	str	r3, [r7, #20]
 800a5de:	2302      	movs	r3, #2
 800a5e0:	61bb      	str	r3, [r7, #24]
 800a5e2:	2301      	movs	r3, #1
 800a5e4:	61fb      	str	r3, [r7, #28]
 800a5e6:	2303      	movs	r3, #3
 800a5e8:	623b      	str	r3, [r7, #32]
 800a5ea:	2308      	movs	r3, #8
 800a5ec:	627b      	str	r3, [r7, #36]	; 0x24
 800a5ee:	f107 0314 	add.w	r3, r7, #20
 800a5f2:	4619      	mov	r1, r3
 800a5f4:	4835      	ldr	r0, [pc, #212]	; (800a6cc <HAL_UART_MspInit+0x120>)
 800a5f6:	f7fa f813 	bl	8004620 <HAL_GPIO_Init>
 800a5fa:	2200      	movs	r2, #0
 800a5fc:	2106      	movs	r1, #6
 800a5fe:	2034      	movs	r0, #52	; 0x34
 800a600:	f7f9 fe0b 	bl	800421a <HAL_NVIC_SetPriority>
 800a604:	2034      	movs	r0, #52	; 0x34
 800a606:	f7f9 fe24 	bl	8004252 <HAL_NVIC_EnableIRQ>
 800a60a:	e057      	b.n	800a6bc <HAL_UART_MspInit+0x110>
 800a60c:	687b      	ldr	r3, [r7, #4]
 800a60e:	681b      	ldr	r3, [r3, #0]
 800a610:	4a2f      	ldr	r2, [pc, #188]	; (800a6d0 <HAL_UART_MspInit+0x124>)
 800a612:	4293      	cmp	r3, r2
 800a614:	d127      	bne.n	800a666 <HAL_UART_MspInit+0xba>
 800a616:	2300      	movs	r3, #0
 800a618:	60fb      	str	r3, [r7, #12]
 800a61a:	4b2b      	ldr	r3, [pc, #172]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a61c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a61e:	4a2a      	ldr	r2, [pc, #168]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a620:	f043 0310 	orr.w	r3, r3, #16
 800a624:	6453      	str	r3, [r2, #68]	; 0x44
 800a626:	4b28      	ldr	r3, [pc, #160]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a628:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a62a:	f003 0310 	and.w	r3, r3, #16
 800a62e:	60fb      	str	r3, [r7, #12]
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800a636:	617b      	str	r3, [r7, #20]
 800a638:	2302      	movs	r3, #2
 800a63a:	61bb      	str	r3, [r7, #24]
 800a63c:	2301      	movs	r3, #1
 800a63e:	61fb      	str	r3, [r7, #28]
 800a640:	2303      	movs	r3, #3
 800a642:	623b      	str	r3, [r7, #32]
 800a644:	2307      	movs	r3, #7
 800a646:	627b      	str	r3, [r7, #36]	; 0x24
 800a648:	f107 0314 	add.w	r3, r7, #20
 800a64c:	4619      	mov	r1, r3
 800a64e:	481f      	ldr	r0, [pc, #124]	; (800a6cc <HAL_UART_MspInit+0x120>)
 800a650:	f7f9 ffe6 	bl	8004620 <HAL_GPIO_Init>
 800a654:	2200      	movs	r2, #0
 800a656:	2106      	movs	r1, #6
 800a658:	2025      	movs	r0, #37	; 0x25
 800a65a:	f7f9 fdde 	bl	800421a <HAL_NVIC_SetPriority>
 800a65e:	2025      	movs	r0, #37	; 0x25
 800a660:	f7f9 fdf7 	bl	8004252 <HAL_NVIC_EnableIRQ>
 800a664:	e02a      	b.n	800a6bc <HAL_UART_MspInit+0x110>
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	681b      	ldr	r3, [r3, #0]
 800a66a:	4a1a      	ldr	r2, [pc, #104]	; (800a6d4 <HAL_UART_MspInit+0x128>)
 800a66c:	4293      	cmp	r3, r2
 800a66e:	d125      	bne.n	800a6bc <HAL_UART_MspInit+0x110>
 800a670:	2300      	movs	r3, #0
 800a672:	60bb      	str	r3, [r7, #8]
 800a674:	4b14      	ldr	r3, [pc, #80]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a676:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a678:	4a13      	ldr	r2, [pc, #76]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a67a:	f043 0320 	orr.w	r3, r3, #32
 800a67e:	6453      	str	r3, [r2, #68]	; 0x44
 800a680:	4b11      	ldr	r3, [pc, #68]	; (800a6c8 <HAL_UART_MspInit+0x11c>)
 800a682:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a684:	f003 0320 	and.w	r3, r3, #32
 800a688:	60bb      	str	r3, [r7, #8]
 800a68a:	68bb      	ldr	r3, [r7, #8]
 800a68c:	23c0      	movs	r3, #192	; 0xc0
 800a68e:	617b      	str	r3, [r7, #20]
 800a690:	2302      	movs	r3, #2
 800a692:	61bb      	str	r3, [r7, #24]
 800a694:	2301      	movs	r3, #1
 800a696:	61fb      	str	r3, [r7, #28]
 800a698:	2303      	movs	r3, #3
 800a69a:	623b      	str	r3, [r7, #32]
 800a69c:	2308      	movs	r3, #8
 800a69e:	627b      	str	r3, [r7, #36]	; 0x24
 800a6a0:	f107 0314 	add.w	r3, r7, #20
 800a6a4:	4619      	mov	r1, r3
 800a6a6:	480c      	ldr	r0, [pc, #48]	; (800a6d8 <HAL_UART_MspInit+0x12c>)
 800a6a8:	f7f9 ffba 	bl	8004620 <HAL_GPIO_Init>
 800a6ac:	2200      	movs	r2, #0
 800a6ae:	2106      	movs	r1, #6
 800a6b0:	2047      	movs	r0, #71	; 0x47
 800a6b2:	f7f9 fdb2 	bl	800421a <HAL_NVIC_SetPriority>
 800a6b6:	2047      	movs	r0, #71	; 0x47
 800a6b8:	f7f9 fdcb 	bl	8004252 <HAL_NVIC_EnableIRQ>
 800a6bc:	bf00      	nop
 800a6be:	3728      	adds	r7, #40	; 0x28
 800a6c0:	46bd      	mov	sp, r7
 800a6c2:	bd80      	pop	{r7, pc}
 800a6c4:	40004c00 	.word	0x40004c00
 800a6c8:	40023800 	.word	0x40023800
 800a6cc:	40020000 	.word	0x40020000
 800a6d0:	40011000 	.word	0x40011000
 800a6d4:	40011400 	.word	0x40011400
 800a6d8:	40020800 	.word	0x40020800

0800a6dc <HAL_WWDG_MspInit>:
 800a6dc:	b480      	push	{r7}
 800a6de:	b085      	sub	sp, #20
 800a6e0:	af00      	add	r7, sp, #0
 800a6e2:	6078      	str	r0, [r7, #4]
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	681b      	ldr	r3, [r3, #0]
 800a6e8:	4a0b      	ldr	r2, [pc, #44]	; (800a718 <HAL_WWDG_MspInit+0x3c>)
 800a6ea:	4293      	cmp	r3, r2
 800a6ec:	d10d      	bne.n	800a70a <HAL_WWDG_MspInit+0x2e>
 800a6ee:	2300      	movs	r3, #0
 800a6f0:	60fb      	str	r3, [r7, #12]
 800a6f2:	4b0a      	ldr	r3, [pc, #40]	; (800a71c <HAL_WWDG_MspInit+0x40>)
 800a6f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a6f6:	4a09      	ldr	r2, [pc, #36]	; (800a71c <HAL_WWDG_MspInit+0x40>)
 800a6f8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800a6fc:	6413      	str	r3, [r2, #64]	; 0x40
 800a6fe:	4b07      	ldr	r3, [pc, #28]	; (800a71c <HAL_WWDG_MspInit+0x40>)
 800a700:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a702:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800a706:	60fb      	str	r3, [r7, #12]
 800a708:	68fb      	ldr	r3, [r7, #12]
 800a70a:	bf00      	nop
 800a70c:	3714      	adds	r7, #20
 800a70e:	46bd      	mov	sp, r7
 800a710:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a714:	4770      	bx	lr
 800a716:	bf00      	nop
 800a718:	40002c00 	.word	0x40002c00
 800a71c:	40023800 	.word	0x40023800

0800a720 <HAL_InitTick>:
 800a720:	b580      	push	{r7, lr}
 800a722:	b08c      	sub	sp, #48	; 0x30
 800a724:	af00      	add	r7, sp, #0
 800a726:	6078      	str	r0, [r7, #4]
 800a728:	2300      	movs	r3, #0
 800a72a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a72c:	2300      	movs	r3, #0
 800a72e:	62bb      	str	r3, [r7, #40]	; 0x28
 800a730:	2200      	movs	r2, #0
 800a732:	6879      	ldr	r1, [r7, #4]
 800a734:	2019      	movs	r0, #25
 800a736:	f7f9 fd70 	bl	800421a <HAL_NVIC_SetPriority>
 800a73a:	2019      	movs	r0, #25
 800a73c:	f7f9 fd89 	bl	8004252 <HAL_NVIC_EnableIRQ>
 800a740:	2300      	movs	r3, #0
 800a742:	60fb      	str	r3, [r7, #12]
 800a744:	4b1f      	ldr	r3, [pc, #124]	; (800a7c4 <HAL_InitTick+0xa4>)
 800a746:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a748:	4a1e      	ldr	r2, [pc, #120]	; (800a7c4 <HAL_InitTick+0xa4>)
 800a74a:	f043 0301 	orr.w	r3, r3, #1
 800a74e:	6453      	str	r3, [r2, #68]	; 0x44
 800a750:	4b1c      	ldr	r3, [pc, #112]	; (800a7c4 <HAL_InitTick+0xa4>)
 800a752:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a754:	f003 0301 	and.w	r3, r3, #1
 800a758:	60fb      	str	r3, [r7, #12]
 800a75a:	68fb      	ldr	r3, [r7, #12]
 800a75c:	f107 0210 	add.w	r2, r7, #16
 800a760:	f107 0314 	add.w	r3, r7, #20
 800a764:	4611      	mov	r1, r2
 800a766:	4618      	mov	r0, r3
 800a768:	f7fb fc72 	bl	8006050 <HAL_RCC_GetClockConfig>
 800a76c:	f7fb fc4e 	bl	800600c <HAL_RCC_GetPCLK2Freq>
 800a770:	4603      	mov	r3, r0
 800a772:	005b      	lsls	r3, r3, #1
 800a774:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a776:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a778:	4a13      	ldr	r2, [pc, #76]	; (800a7c8 <HAL_InitTick+0xa8>)
 800a77a:	fba2 2303 	umull	r2, r3, r2, r3
 800a77e:	0c9b      	lsrs	r3, r3, #18
 800a780:	3b01      	subs	r3, #1
 800a782:	62bb      	str	r3, [r7, #40]	; 0x28
 800a784:	4b11      	ldr	r3, [pc, #68]	; (800a7cc <HAL_InitTick+0xac>)
 800a786:	4a12      	ldr	r2, [pc, #72]	; (800a7d0 <HAL_InitTick+0xb0>)
 800a788:	601a      	str	r2, [r3, #0]
 800a78a:	4b10      	ldr	r3, [pc, #64]	; (800a7cc <HAL_InitTick+0xac>)
 800a78c:	f240 32e7 	movw	r2, #999	; 0x3e7
 800a790:	60da      	str	r2, [r3, #12]
 800a792:	4a0e      	ldr	r2, [pc, #56]	; (800a7cc <HAL_InitTick+0xac>)
 800a794:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a796:	6053      	str	r3, [r2, #4]
 800a798:	4b0c      	ldr	r3, [pc, #48]	; (800a7cc <HAL_InitTick+0xac>)
 800a79a:	2200      	movs	r2, #0
 800a79c:	611a      	str	r2, [r3, #16]
 800a79e:	4b0b      	ldr	r3, [pc, #44]	; (800a7cc <HAL_InitTick+0xac>)
 800a7a0:	2200      	movs	r2, #0
 800a7a2:	609a      	str	r2, [r3, #8]
 800a7a4:	4809      	ldr	r0, [pc, #36]	; (800a7cc <HAL_InitTick+0xac>)
 800a7a6:	f7fd fa90 	bl	8007cca <HAL_TIM_Base_Init>
 800a7aa:	4603      	mov	r3, r0
 800a7ac:	2b00      	cmp	r3, #0
 800a7ae:	d104      	bne.n	800a7ba <HAL_InitTick+0x9a>
 800a7b0:	4806      	ldr	r0, [pc, #24]	; (800a7cc <HAL_InitTick+0xac>)
 800a7b2:	f7fd fab5 	bl	8007d20 <HAL_TIM_Base_Start_IT>
 800a7b6:	4603      	mov	r3, r0
 800a7b8:	e000      	b.n	800a7bc <HAL_InitTick+0x9c>
 800a7ba:	2301      	movs	r3, #1
 800a7bc:	4618      	mov	r0, r3
 800a7be:	3730      	adds	r7, #48	; 0x30
 800a7c0:	46bd      	mov	sp, r7
 800a7c2:	bd80      	pop	{r7, pc}
 800a7c4:	40023800 	.word	0x40023800
 800a7c8:	431bde83 	.word	0x431bde83
 800a7cc:	200007e0 	.word	0x200007e0
 800a7d0:	40010000 	.word	0x40010000

0800a7d4 <NMI_Handler>:
 800a7d4:	b480      	push	{r7}
 800a7d6:	af00      	add	r7, sp, #0
 800a7d8:	bf00      	nop
 800a7da:	46bd      	mov	sp, r7
 800a7dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7e0:	4770      	bx	lr
	...

0800a7e4 <HardFault_Handler>:
 800a7e4:	b580      	push	{r7, lr}
 800a7e6:	af00      	add	r7, sp, #0
 800a7e8:	4b03      	ldr	r3, [pc, #12]	; (800a7f8 <HardFault_Handler+0x14>)
 800a7ea:	4a04      	ldr	r2, [pc, #16]	; (800a7fc <HardFault_Handler+0x18>)
 800a7ec:	601a      	str	r2, [r3, #0]
 800a7ee:	f7ff fbcf 	bl	8009f90 <MX_WWDG_Init>
 800a7f2:	f7f9 fb8f 	bl	8003f14 <Error_Handler>
 800a7f6:	e7fc      	b.n	800a7f2 <HardFault_Handler+0xe>
 800a7f8:	40002854 	.word	0x40002854
 800a7fc:	0bad0bad 	.word	0x0bad0bad

0800a800 <MemManage_Handler>:
 800a800:	b480      	push	{r7}
 800a802:	af00      	add	r7, sp, #0
 800a804:	e7fe      	b.n	800a804 <MemManage_Handler+0x4>

0800a806 <BusFault_Handler>:
 800a806:	b480      	push	{r7}
 800a808:	af00      	add	r7, sp, #0
 800a80a:	e7fe      	b.n	800a80a <BusFault_Handler+0x4>

0800a80c <UsageFault_Handler>:
 800a80c:	b480      	push	{r7}
 800a80e:	af00      	add	r7, sp, #0
 800a810:	e7fe      	b.n	800a810 <UsageFault_Handler+0x4>

0800a812 <DebugMon_Handler>:
 800a812:	b480      	push	{r7}
 800a814:	af00      	add	r7, sp, #0
 800a816:	bf00      	nop
 800a818:	46bd      	mov	sp, r7
 800a81a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a81e:	4770      	bx	lr

0800a820 <SysTick_Handler>:
 800a820:	b580      	push	{r7, lr}
 800a822:	af00      	add	r7, sp, #0
 800a824:	f000 f9e8 	bl	800abf8 <osSystickHandler>
 800a828:	bf00      	nop
 800a82a:	bd80      	pop	{r7, pc}

0800a82c <SDIO_IRQHandler>:
 800a82c:	b580      	push	{r7, lr}
 800a82e:	af00      	add	r7, sp, #0
 800a830:	4802      	ldr	r0, [pc, #8]	; (800a83c <SDIO_IRQHandler+0x10>)
 800a832:	f7fc f9fd 	bl	8006c30 <HAL_SD_IRQHandler>
 800a836:	bf00      	nop
 800a838:	bd80      	pop	{r7, pc}
 800a83a:	bf00      	nop
 800a83c:	2000039c 	.word	0x2000039c

0800a840 <USART1_IRQHandler>:
 800a840:	b580      	push	{r7, lr}
 800a842:	af00      	add	r7, sp, #0
 800a844:	4802      	ldr	r0, [pc, #8]	; (800a850 <USART1_IRQHandler+0x10>)
 800a846:	f7fd fe55 	bl	80084f4 <HAL_UART_IRQHandler>
 800a84a:	bf00      	nop
 800a84c:	bd80      	pop	{r7, pc}
 800a84e:	bf00      	nop
 800a850:	200006bc 	.word	0x200006bc

0800a854 <UART4_IRQHandler>:
 800a854:	b580      	push	{r7, lr}
 800a856:	af00      	add	r7, sp, #0
 800a858:	4802      	ldr	r0, [pc, #8]	; (800a864 <UART4_IRQHandler+0x10>)
 800a85a:	f7fd fe4b 	bl	80084f4 <HAL_UART_IRQHandler>
 800a85e:	bf00      	nop
 800a860:	bd80      	pop	{r7, pc}
 800a862:	bf00      	nop
 800a864:	2000067c 	.word	0x2000067c

0800a868 <USART6_IRQHandler>:
 800a868:	b580      	push	{r7, lr}
 800a86a:	af00      	add	r7, sp, #0
 800a86c:	4802      	ldr	r0, [pc, #8]	; (800a878 <USART6_IRQHandler+0x10>)
 800a86e:	f7fd fe41 	bl	80084f4 <HAL_UART_IRQHandler>
 800a872:	bf00      	nop
 800a874:	bd80      	pop	{r7, pc}
 800a876:	bf00      	nop
 800a878:	200006fc 	.word	0x200006fc

0800a87c <TIM1_UP_TIM10_IRQHandler>:
 800a87c:	b580      	push	{r7, lr}
 800a87e:	af00      	add	r7, sp, #0
 800a880:	4802      	ldr	r0, [pc, #8]	; (800a88c <TIM1_UP_TIM10_IRQHandler+0x10>)
 800a882:	f7fd fa68 	bl	8007d56 <HAL_TIM_IRQHandler>
 800a886:	bf00      	nop
 800a888:	bd80      	pop	{r7, pc}
 800a88a:	bf00      	nop
 800a88c:	200007e0 	.word	0x200007e0

0800a890 <DMA2_Stream3_IRQHandler>:
 800a890:	b580      	push	{r7, lr}
 800a892:	af00      	add	r7, sp, #0
 800a894:	4802      	ldr	r0, [pc, #8]	; (800a8a0 <DMA2_Stream3_IRQHandler+0x10>)
 800a896:	f7f9 fd35 	bl	8004304 <HAL_DMA_IRQHandler>
 800a89a:	bf00      	nop
 800a89c:	bd80      	pop	{r7, pc}
 800a89e:	bf00      	nop
 800a8a0:	20000420 	.word	0x20000420

0800a8a4 <DMA2_Stream6_IRQHandler>:
 800a8a4:	b580      	push	{r7, lr}
 800a8a6:	af00      	add	r7, sp, #0
 800a8a8:	4802      	ldr	r0, [pc, #8]	; (800a8b4 <DMA2_Stream6_IRQHandler+0x10>)
 800a8aa:	f7f9 fd2b 	bl	8004304 <HAL_DMA_IRQHandler>
 800a8ae:	bf00      	nop
 800a8b0:	bd80      	pop	{r7, pc}
 800a8b2:	bf00      	nop
 800a8b4:	20000480 	.word	0x20000480

0800a8b8 <SystemInit>:
 800a8b8:	b480      	push	{r7}
 800a8ba:	af00      	add	r7, sp, #0
 800a8bc:	4b16      	ldr	r3, [pc, #88]	; (800a918 <SystemInit+0x60>)
 800a8be:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a8c2:	4a15      	ldr	r2, [pc, #84]	; (800a918 <SystemInit+0x60>)
 800a8c4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a8c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 800a8cc:	4b13      	ldr	r3, [pc, #76]	; (800a91c <SystemInit+0x64>)
 800a8ce:	681b      	ldr	r3, [r3, #0]
 800a8d0:	4a12      	ldr	r2, [pc, #72]	; (800a91c <SystemInit+0x64>)
 800a8d2:	f043 0301 	orr.w	r3, r3, #1
 800a8d6:	6013      	str	r3, [r2, #0]
 800a8d8:	4b10      	ldr	r3, [pc, #64]	; (800a91c <SystemInit+0x64>)
 800a8da:	2200      	movs	r2, #0
 800a8dc:	609a      	str	r2, [r3, #8]
 800a8de:	4b0f      	ldr	r3, [pc, #60]	; (800a91c <SystemInit+0x64>)
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	4a0e      	ldr	r2, [pc, #56]	; (800a91c <SystemInit+0x64>)
 800a8e4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 800a8e8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800a8ec:	6013      	str	r3, [r2, #0]
 800a8ee:	4b0b      	ldr	r3, [pc, #44]	; (800a91c <SystemInit+0x64>)
 800a8f0:	4a0b      	ldr	r2, [pc, #44]	; (800a920 <SystemInit+0x68>)
 800a8f2:	605a      	str	r2, [r3, #4]
 800a8f4:	4b09      	ldr	r3, [pc, #36]	; (800a91c <SystemInit+0x64>)
 800a8f6:	681b      	ldr	r3, [r3, #0]
 800a8f8:	4a08      	ldr	r2, [pc, #32]	; (800a91c <SystemInit+0x64>)
 800a8fa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800a8fe:	6013      	str	r3, [r2, #0]
 800a900:	4b06      	ldr	r3, [pc, #24]	; (800a91c <SystemInit+0x64>)
 800a902:	2200      	movs	r2, #0
 800a904:	60da      	str	r2, [r3, #12]
 800a906:	4b04      	ldr	r3, [pc, #16]	; (800a918 <SystemInit+0x60>)
 800a908:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800a90c:	609a      	str	r2, [r3, #8]
 800a90e:	bf00      	nop
 800a910:	46bd      	mov	sp, r7
 800a912:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a916:	4770      	bx	lr
 800a918:	e000ed00 	.word	0xe000ed00
 800a91c:	40023800 	.word	0x40023800
 800a920:	24003010 	.word	0x24003010

0800a924 <FATFS_LinkDriverEx>:
 800a924:	b480      	push	{r7}
 800a926:	b087      	sub	sp, #28
 800a928:	af00      	add	r7, sp, #0
 800a92a:	60f8      	str	r0, [r7, #12]
 800a92c:	60b9      	str	r1, [r7, #8]
 800a92e:	4613      	mov	r3, r2
 800a930:	71fb      	strb	r3, [r7, #7]
 800a932:	2301      	movs	r3, #1
 800a934:	75fb      	strb	r3, [r7, #23]
 800a936:	2300      	movs	r3, #0
 800a938:	75bb      	strb	r3, [r7, #22]
 800a93a:	4b1f      	ldr	r3, [pc, #124]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a93c:	7a5b      	ldrb	r3, [r3, #9]
 800a93e:	b2db      	uxtb	r3, r3
 800a940:	2b01      	cmp	r3, #1
 800a942:	d831      	bhi.n	800a9a8 <FATFS_LinkDriverEx+0x84>
 800a944:	4b1c      	ldr	r3, [pc, #112]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a946:	7a5b      	ldrb	r3, [r3, #9]
 800a948:	b2db      	uxtb	r3, r3
 800a94a:	461a      	mov	r2, r3
 800a94c:	4b1a      	ldr	r3, [pc, #104]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a94e:	2100      	movs	r1, #0
 800a950:	5499      	strb	r1, [r3, r2]
 800a952:	4b19      	ldr	r3, [pc, #100]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a954:	7a5b      	ldrb	r3, [r3, #9]
 800a956:	b2db      	uxtb	r3, r3
 800a958:	4a17      	ldr	r2, [pc, #92]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a95a:	009b      	lsls	r3, r3, #2
 800a95c:	4413      	add	r3, r2
 800a95e:	68fa      	ldr	r2, [r7, #12]
 800a960:	605a      	str	r2, [r3, #4]
 800a962:	4b15      	ldr	r3, [pc, #84]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a964:	7a5b      	ldrb	r3, [r3, #9]
 800a966:	b2db      	uxtb	r3, r3
 800a968:	461a      	mov	r2, r3
 800a96a:	4b13      	ldr	r3, [pc, #76]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a96c:	4413      	add	r3, r2
 800a96e:	79fa      	ldrb	r2, [r7, #7]
 800a970:	721a      	strb	r2, [r3, #8]
 800a972:	4b11      	ldr	r3, [pc, #68]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a974:	7a5b      	ldrb	r3, [r3, #9]
 800a976:	b2db      	uxtb	r3, r3
 800a978:	1c5a      	adds	r2, r3, #1
 800a97a:	b2d1      	uxtb	r1, r2
 800a97c:	4a0e      	ldr	r2, [pc, #56]	; (800a9b8 <FATFS_LinkDriverEx+0x94>)
 800a97e:	7251      	strb	r1, [r2, #9]
 800a980:	75bb      	strb	r3, [r7, #22]
 800a982:	7dbb      	ldrb	r3, [r7, #22]
 800a984:	3330      	adds	r3, #48	; 0x30
 800a986:	b2da      	uxtb	r2, r3
 800a988:	68bb      	ldr	r3, [r7, #8]
 800a98a:	701a      	strb	r2, [r3, #0]
 800a98c:	68bb      	ldr	r3, [r7, #8]
 800a98e:	3301      	adds	r3, #1
 800a990:	223a      	movs	r2, #58	; 0x3a
 800a992:	701a      	strb	r2, [r3, #0]
 800a994:	68bb      	ldr	r3, [r7, #8]
 800a996:	3302      	adds	r3, #2
 800a998:	222f      	movs	r2, #47	; 0x2f
 800a99a:	701a      	strb	r2, [r3, #0]
 800a99c:	68bb      	ldr	r3, [r7, #8]
 800a99e:	3303      	adds	r3, #3
 800a9a0:	2200      	movs	r2, #0
 800a9a2:	701a      	strb	r2, [r3, #0]
 800a9a4:	2300      	movs	r3, #0
 800a9a6:	75fb      	strb	r3, [r7, #23]
 800a9a8:	7dfb      	ldrb	r3, [r7, #23]
 800a9aa:	4618      	mov	r0, r3
 800a9ac:	371c      	adds	r7, #28
 800a9ae:	46bd      	mov	sp, r7
 800a9b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b4:	4770      	bx	lr
 800a9b6:	bf00      	nop
 800a9b8:	20000820 	.word	0x20000820

0800a9bc <FATFS_LinkDriver>:
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b082      	sub	sp, #8
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	6039      	str	r1, [r7, #0]
 800a9c6:	2200      	movs	r2, #0
 800a9c8:	6839      	ldr	r1, [r7, #0]
 800a9ca:	6878      	ldr	r0, [r7, #4]
 800a9cc:	f7ff ffaa 	bl	800a924 <FATFS_LinkDriverEx>
 800a9d0:	4603      	mov	r3, r0
 800a9d2:	4618      	mov	r0, r3
 800a9d4:	3708      	adds	r7, #8
 800a9d6:	46bd      	mov	sp, r7
 800a9d8:	bd80      	pop	{r7, pc}

0800a9da <makeFreeRtosPriority>:
 800a9da:	b480      	push	{r7}
 800a9dc:	b085      	sub	sp, #20
 800a9de:	af00      	add	r7, sp, #0
 800a9e0:	4603      	mov	r3, r0
 800a9e2:	80fb      	strh	r3, [r7, #6]
 800a9e4:	2300      	movs	r3, #0
 800a9e6:	60fb      	str	r3, [r7, #12]
 800a9e8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800a9ec:	2b84      	cmp	r3, #132	; 0x84
 800a9ee:	d005      	beq.n	800a9fc <makeFreeRtosPriority+0x22>
 800a9f0:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800a9f4:	68fb      	ldr	r3, [r7, #12]
 800a9f6:	4413      	add	r3, r2
 800a9f8:	3303      	adds	r3, #3
 800a9fa:	60fb      	str	r3, [r7, #12]
 800a9fc:	68fb      	ldr	r3, [r7, #12]
 800a9fe:	4618      	mov	r0, r3
 800aa00:	3714      	adds	r7, #20
 800aa02:	46bd      	mov	sp, r7
 800aa04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa08:	4770      	bx	lr

0800aa0a <inHandlerMode>:
 800aa0a:	b480      	push	{r7}
 800aa0c:	b083      	sub	sp, #12
 800aa0e:	af00      	add	r7, sp, #0
 800aa10:	f3ef 8305 	mrs	r3, IPSR
 800aa14:	607b      	str	r3, [r7, #4]
 800aa16:	687b      	ldr	r3, [r7, #4]
 800aa18:	2b00      	cmp	r3, #0
 800aa1a:	bf14      	ite	ne
 800aa1c:	2301      	movne	r3, #1
 800aa1e:	2300      	moveq	r3, #0
 800aa20:	b2db      	uxtb	r3, r3
 800aa22:	4618      	mov	r0, r3
 800aa24:	370c      	adds	r7, #12
 800aa26:	46bd      	mov	sp, r7
 800aa28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa2c:	4770      	bx	lr

0800aa2e <osKernelStart>:
 800aa2e:	b580      	push	{r7, lr}
 800aa30:	af00      	add	r7, sp, #0
 800aa32:	f001 f937 	bl	800bca4 <vTaskStartScheduler>
 800aa36:	2300      	movs	r3, #0
 800aa38:	4618      	mov	r0, r3
 800aa3a:	bd80      	pop	{r7, pc}

0800aa3c <osKernelSysTick>:
 800aa3c:	b580      	push	{r7, lr}
 800aa3e:	af00      	add	r7, sp, #0
 800aa40:	f7ff ffe3 	bl	800aa0a <inHandlerMode>
 800aa44:	4603      	mov	r3, r0
 800aa46:	2b00      	cmp	r3, #0
 800aa48:	d003      	beq.n	800aa52 <osKernelSysTick+0x16>
 800aa4a:	f001 fa33 	bl	800beb4 <xTaskGetTickCountFromISR>
 800aa4e:	4603      	mov	r3, r0
 800aa50:	e002      	b.n	800aa58 <osKernelSysTick+0x1c>
 800aa52:	f001 fa1f 	bl	800be94 <xTaskGetTickCount>
 800aa56:	4603      	mov	r3, r0
 800aa58:	4618      	mov	r0, r3
 800aa5a:	bd80      	pop	{r7, pc}

0800aa5c <osThreadCreate>:
 800aa5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aa5e:	b087      	sub	sp, #28
 800aa60:	af02      	add	r7, sp, #8
 800aa62:	6078      	str	r0, [r7, #4]
 800aa64:	6039      	str	r1, [r7, #0]
 800aa66:	687b      	ldr	r3, [r7, #4]
 800aa68:	685c      	ldr	r4, [r3, #4]
 800aa6a:	687b      	ldr	r3, [r7, #4]
 800aa6c:	681d      	ldr	r5, [r3, #0]
 800aa6e:	687b      	ldr	r3, [r7, #4]
 800aa70:	691b      	ldr	r3, [r3, #16]
 800aa72:	b29e      	uxth	r6, r3
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800aa7a:	4618      	mov	r0, r3
 800aa7c:	f7ff ffad 	bl	800a9da <makeFreeRtosPriority>
 800aa80:	4602      	mov	r2, r0
 800aa82:	f107 030c 	add.w	r3, r7, #12
 800aa86:	9301      	str	r3, [sp, #4]
 800aa88:	9200      	str	r2, [sp, #0]
 800aa8a:	683b      	ldr	r3, [r7, #0]
 800aa8c:	4632      	mov	r2, r6
 800aa8e:	4629      	mov	r1, r5
 800aa90:	4620      	mov	r0, r4
 800aa92:	f000 ff9d 	bl	800b9d0 <xTaskCreate>
 800aa96:	4603      	mov	r3, r0
 800aa98:	2b01      	cmp	r3, #1
 800aa9a:	d001      	beq.n	800aaa0 <osThreadCreate+0x44>
 800aa9c:	2300      	movs	r3, #0
 800aa9e:	e000      	b.n	800aaa2 <osThreadCreate+0x46>
 800aaa0:	68fb      	ldr	r3, [r7, #12]
 800aaa2:	4618      	mov	r0, r3
 800aaa4:	3714      	adds	r7, #20
 800aaa6:	46bd      	mov	sp, r7
 800aaa8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800aaaa <osDelay>:
 800aaaa:	b580      	push	{r7, lr}
 800aaac:	b084      	sub	sp, #16
 800aaae:	af00      	add	r7, sp, #0
 800aab0:	6078      	str	r0, [r7, #4]
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	60fb      	str	r3, [r7, #12]
 800aab6:	68fb      	ldr	r3, [r7, #12]
 800aab8:	2b00      	cmp	r3, #0
 800aaba:	d001      	beq.n	800aac0 <osDelay+0x16>
 800aabc:	68fb      	ldr	r3, [r7, #12]
 800aabe:	e000      	b.n	800aac2 <osDelay+0x18>
 800aac0:	2301      	movs	r3, #1
 800aac2:	4618      	mov	r0, r3
 800aac4:	f001 f8ba 	bl	800bc3c <vTaskDelay>
 800aac8:	2300      	movs	r3, #0
 800aaca:	4618      	mov	r0, r3
 800aacc:	3710      	adds	r7, #16
 800aace:	46bd      	mov	sp, r7
 800aad0:	bd80      	pop	{r7, pc}

0800aad2 <osMutexCreate>:
 800aad2:	b580      	push	{r7, lr}
 800aad4:	b082      	sub	sp, #8
 800aad6:	af00      	add	r7, sp, #0
 800aad8:	6078      	str	r0, [r7, #4]
 800aada:	2001      	movs	r0, #1
 800aadc:	f000 fa37 	bl	800af4e <xQueueCreateMutex>
 800aae0:	4603      	mov	r3, r0
 800aae2:	4618      	mov	r0, r3
 800aae4:	3708      	adds	r7, #8
 800aae6:	46bd      	mov	sp, r7
 800aae8:	bd80      	pop	{r7, pc}
	...

0800aaec <osMutexWait>:
 800aaec:	b580      	push	{r7, lr}
 800aaee:	b084      	sub	sp, #16
 800aaf0:	af00      	add	r7, sp, #0
 800aaf2:	6078      	str	r0, [r7, #4]
 800aaf4:	6039      	str	r1, [r7, #0]
 800aaf6:	2300      	movs	r3, #0
 800aaf8:	60bb      	str	r3, [r7, #8]
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	2b00      	cmp	r3, #0
 800aafe:	d101      	bne.n	800ab04 <osMutexWait+0x18>
 800ab00:	2380      	movs	r3, #128	; 0x80
 800ab02:	e03c      	b.n	800ab7e <osMutexWait+0x92>
 800ab04:	2300      	movs	r3, #0
 800ab06:	60fb      	str	r3, [r7, #12]
 800ab08:	683b      	ldr	r3, [r7, #0]
 800ab0a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ab0e:	d103      	bne.n	800ab18 <osMutexWait+0x2c>
 800ab10:	f04f 33ff 	mov.w	r3, #4294967295
 800ab14:	60fb      	str	r3, [r7, #12]
 800ab16:	e009      	b.n	800ab2c <osMutexWait+0x40>
 800ab18:	683b      	ldr	r3, [r7, #0]
 800ab1a:	2b00      	cmp	r3, #0
 800ab1c:	d006      	beq.n	800ab2c <osMutexWait+0x40>
 800ab1e:	683b      	ldr	r3, [r7, #0]
 800ab20:	60fb      	str	r3, [r7, #12]
 800ab22:	68fb      	ldr	r3, [r7, #12]
 800ab24:	2b00      	cmp	r3, #0
 800ab26:	d101      	bne.n	800ab2c <osMutexWait+0x40>
 800ab28:	2301      	movs	r3, #1
 800ab2a:	60fb      	str	r3, [r7, #12]
 800ab2c:	f7ff ff6d 	bl	800aa0a <inHandlerMode>
 800ab30:	4603      	mov	r3, r0
 800ab32:	2b00      	cmp	r3, #0
 800ab34:	d017      	beq.n	800ab66 <osMutexWait+0x7a>
 800ab36:	f107 0308 	add.w	r3, r7, #8
 800ab3a:	461a      	mov	r2, r3
 800ab3c:	2100      	movs	r1, #0
 800ab3e:	6878      	ldr	r0, [r7, #4]
 800ab40:	f000 fd58 	bl	800b5f4 <xQueueReceiveFromISR>
 800ab44:	4603      	mov	r3, r0
 800ab46:	2b01      	cmp	r3, #1
 800ab48:	d001      	beq.n	800ab4e <osMutexWait+0x62>
 800ab4a:	23ff      	movs	r3, #255	; 0xff
 800ab4c:	e017      	b.n	800ab7e <osMutexWait+0x92>
 800ab4e:	68bb      	ldr	r3, [r7, #8]
 800ab50:	2b00      	cmp	r3, #0
 800ab52:	d013      	beq.n	800ab7c <osMutexWait+0x90>
 800ab54:	4b0c      	ldr	r3, [pc, #48]	; (800ab88 <osMutexWait+0x9c>)
 800ab56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab5a:	601a      	str	r2, [r3, #0]
 800ab5c:	f3bf 8f4f 	dsb	sy
 800ab60:	f3bf 8f6f 	isb	sy
 800ab64:	e00a      	b.n	800ab7c <osMutexWait+0x90>
 800ab66:	2300      	movs	r3, #0
 800ab68:	68fa      	ldr	r2, [r7, #12]
 800ab6a:	2100      	movs	r1, #0
 800ab6c:	6878      	ldr	r0, [r7, #4]
 800ab6e:	f000 fc2b 	bl	800b3c8 <xQueueGenericReceive>
 800ab72:	4603      	mov	r3, r0
 800ab74:	2b01      	cmp	r3, #1
 800ab76:	d001      	beq.n	800ab7c <osMutexWait+0x90>
 800ab78:	23ff      	movs	r3, #255	; 0xff
 800ab7a:	e000      	b.n	800ab7e <osMutexWait+0x92>
 800ab7c:	2300      	movs	r3, #0
 800ab7e:	4618      	mov	r0, r3
 800ab80:	3710      	adds	r7, #16
 800ab82:	46bd      	mov	sp, r7
 800ab84:	bd80      	pop	{r7, pc}
 800ab86:	bf00      	nop
 800ab88:	e000ed04 	.word	0xe000ed04

0800ab8c <osMutexRelease>:
 800ab8c:	b580      	push	{r7, lr}
 800ab8e:	b084      	sub	sp, #16
 800ab90:	af00      	add	r7, sp, #0
 800ab92:	6078      	str	r0, [r7, #4]
 800ab94:	2300      	movs	r3, #0
 800ab96:	60fb      	str	r3, [r7, #12]
 800ab98:	2300      	movs	r3, #0
 800ab9a:	60bb      	str	r3, [r7, #8]
 800ab9c:	f7ff ff35 	bl	800aa0a <inHandlerMode>
 800aba0:	4603      	mov	r3, r0
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d016      	beq.n	800abd4 <osMutexRelease+0x48>
 800aba6:	f107 0308 	add.w	r3, r7, #8
 800abaa:	4619      	mov	r1, r3
 800abac:	6878      	ldr	r0, [r7, #4]
 800abae:	f000 fb7d 	bl	800b2ac <xQueueGiveFromISR>
 800abb2:	4603      	mov	r3, r0
 800abb4:	2b01      	cmp	r3, #1
 800abb6:	d001      	beq.n	800abbc <osMutexRelease+0x30>
 800abb8:	23ff      	movs	r3, #255	; 0xff
 800abba:	e017      	b.n	800abec <osMutexRelease+0x60>
 800abbc:	68bb      	ldr	r3, [r7, #8]
 800abbe:	2b00      	cmp	r3, #0
 800abc0:	d013      	beq.n	800abea <osMutexRelease+0x5e>
 800abc2:	4b0c      	ldr	r3, [pc, #48]	; (800abf4 <osMutexRelease+0x68>)
 800abc4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800abc8:	601a      	str	r2, [r3, #0]
 800abca:	f3bf 8f4f 	dsb	sy
 800abce:	f3bf 8f6f 	isb	sy
 800abd2:	e00a      	b.n	800abea <osMutexRelease+0x5e>
 800abd4:	2300      	movs	r3, #0
 800abd6:	2200      	movs	r2, #0
 800abd8:	2100      	movs	r1, #0
 800abda:	6878      	ldr	r0, [r7, #4]
 800abdc:	f000 f9d0 	bl	800af80 <xQueueGenericSend>
 800abe0:	4603      	mov	r3, r0
 800abe2:	2b01      	cmp	r3, #1
 800abe4:	d001      	beq.n	800abea <osMutexRelease+0x5e>
 800abe6:	23ff      	movs	r3, #255	; 0xff
 800abe8:	60fb      	str	r3, [r7, #12]
 800abea:	68fb      	ldr	r3, [r7, #12]
 800abec:	4618      	mov	r0, r3
 800abee:	3710      	adds	r7, #16
 800abf0:	46bd      	mov	sp, r7
 800abf2:	bd80      	pop	{r7, pc}
 800abf4:	e000ed04 	.word	0xe000ed04

0800abf8 <osSystickHandler>:
 800abf8:	b580      	push	{r7, lr}
 800abfa:	af00      	add	r7, sp, #0
 800abfc:	f001 fc92 	bl	800c524 <xTaskGetSchedulerState>
 800ac00:	4603      	mov	r3, r0
 800ac02:	2b01      	cmp	r3, #1
 800ac04:	d001      	beq.n	800ac0a <osSystickHandler+0x12>
 800ac06:	f002 fa8f 	bl	800d128 <xPortSysTickHandler>
 800ac0a:	bf00      	nop
 800ac0c:	bd80      	pop	{r7, pc}

0800ac0e <osDelayUntil>:
 800ac0e:	b480      	push	{r7}
 800ac10:	b083      	sub	sp, #12
 800ac12:	af00      	add	r7, sp, #0
 800ac14:	6078      	str	r0, [r7, #4]
 800ac16:	6039      	str	r1, [r7, #0]
 800ac18:	2381      	movs	r3, #129	; 0x81
 800ac1a:	4618      	mov	r0, r3
 800ac1c:	370c      	adds	r7, #12
 800ac1e:	46bd      	mov	sp, r7
 800ac20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac24:	4770      	bx	lr

0800ac26 <vListInitialise>:
 800ac26:	b480      	push	{r7}
 800ac28:	b083      	sub	sp, #12
 800ac2a:	af00      	add	r7, sp, #0
 800ac2c:	6078      	str	r0, [r7, #4]
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	f103 0208 	add.w	r2, r3, #8
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	605a      	str	r2, [r3, #4]
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	f04f 32ff 	mov.w	r2, #4294967295
 800ac3e:	609a      	str	r2, [r3, #8]
 800ac40:	687b      	ldr	r3, [r7, #4]
 800ac42:	f103 0208 	add.w	r2, r3, #8
 800ac46:	687b      	ldr	r3, [r7, #4]
 800ac48:	60da      	str	r2, [r3, #12]
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	f103 0208 	add.w	r2, r3, #8
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	611a      	str	r2, [r3, #16]
 800ac54:	687b      	ldr	r3, [r7, #4]
 800ac56:	2200      	movs	r2, #0
 800ac58:	601a      	str	r2, [r3, #0]
 800ac5a:	bf00      	nop
 800ac5c:	370c      	adds	r7, #12
 800ac5e:	46bd      	mov	sp, r7
 800ac60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac64:	4770      	bx	lr

0800ac66 <vListInitialiseItem>:
 800ac66:	b480      	push	{r7}
 800ac68:	b083      	sub	sp, #12
 800ac6a:	af00      	add	r7, sp, #0
 800ac6c:	6078      	str	r0, [r7, #4]
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	2200      	movs	r2, #0
 800ac72:	611a      	str	r2, [r3, #16]
 800ac74:	bf00      	nop
 800ac76:	370c      	adds	r7, #12
 800ac78:	46bd      	mov	sp, r7
 800ac7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac7e:	4770      	bx	lr

0800ac80 <vListInsertEnd>:
 800ac80:	b480      	push	{r7}
 800ac82:	b085      	sub	sp, #20
 800ac84:	af00      	add	r7, sp, #0
 800ac86:	6078      	str	r0, [r7, #4]
 800ac88:	6039      	str	r1, [r7, #0]
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	685b      	ldr	r3, [r3, #4]
 800ac8e:	60fb      	str	r3, [r7, #12]
 800ac90:	683b      	ldr	r3, [r7, #0]
 800ac92:	68fa      	ldr	r2, [r7, #12]
 800ac94:	605a      	str	r2, [r3, #4]
 800ac96:	68fb      	ldr	r3, [r7, #12]
 800ac98:	689a      	ldr	r2, [r3, #8]
 800ac9a:	683b      	ldr	r3, [r7, #0]
 800ac9c:	609a      	str	r2, [r3, #8]
 800ac9e:	68fb      	ldr	r3, [r7, #12]
 800aca0:	689b      	ldr	r3, [r3, #8]
 800aca2:	683a      	ldr	r2, [r7, #0]
 800aca4:	605a      	str	r2, [r3, #4]
 800aca6:	68fb      	ldr	r3, [r7, #12]
 800aca8:	683a      	ldr	r2, [r7, #0]
 800acaa:	609a      	str	r2, [r3, #8]
 800acac:	683b      	ldr	r3, [r7, #0]
 800acae:	687a      	ldr	r2, [r7, #4]
 800acb0:	611a      	str	r2, [r3, #16]
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	681b      	ldr	r3, [r3, #0]
 800acb6:	1c5a      	adds	r2, r3, #1
 800acb8:	687b      	ldr	r3, [r7, #4]
 800acba:	601a      	str	r2, [r3, #0]
 800acbc:	bf00      	nop
 800acbe:	3714      	adds	r7, #20
 800acc0:	46bd      	mov	sp, r7
 800acc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acc6:	4770      	bx	lr

0800acc8 <vListInsert>:
 800acc8:	b480      	push	{r7}
 800acca:	b085      	sub	sp, #20
 800accc:	af00      	add	r7, sp, #0
 800acce:	6078      	str	r0, [r7, #4]
 800acd0:	6039      	str	r1, [r7, #0]
 800acd2:	683b      	ldr	r3, [r7, #0]
 800acd4:	681b      	ldr	r3, [r3, #0]
 800acd6:	60bb      	str	r3, [r7, #8]
 800acd8:	68bb      	ldr	r3, [r7, #8]
 800acda:	f1b3 3fff 	cmp.w	r3, #4294967295
 800acde:	d103      	bne.n	800ace8 <vListInsert+0x20>
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	691b      	ldr	r3, [r3, #16]
 800ace4:	60fb      	str	r3, [r7, #12]
 800ace6:	e00c      	b.n	800ad02 <vListInsert+0x3a>
 800ace8:	687b      	ldr	r3, [r7, #4]
 800acea:	3308      	adds	r3, #8
 800acec:	60fb      	str	r3, [r7, #12]
 800acee:	e002      	b.n	800acf6 <vListInsert+0x2e>
 800acf0:	68fb      	ldr	r3, [r7, #12]
 800acf2:	685b      	ldr	r3, [r3, #4]
 800acf4:	60fb      	str	r3, [r7, #12]
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	685b      	ldr	r3, [r3, #4]
 800acfa:	681b      	ldr	r3, [r3, #0]
 800acfc:	68ba      	ldr	r2, [r7, #8]
 800acfe:	429a      	cmp	r2, r3
 800ad00:	d2f6      	bcs.n	800acf0 <vListInsert+0x28>
 800ad02:	68fb      	ldr	r3, [r7, #12]
 800ad04:	685a      	ldr	r2, [r3, #4]
 800ad06:	683b      	ldr	r3, [r7, #0]
 800ad08:	605a      	str	r2, [r3, #4]
 800ad0a:	683b      	ldr	r3, [r7, #0]
 800ad0c:	685b      	ldr	r3, [r3, #4]
 800ad0e:	683a      	ldr	r2, [r7, #0]
 800ad10:	609a      	str	r2, [r3, #8]
 800ad12:	683b      	ldr	r3, [r7, #0]
 800ad14:	68fa      	ldr	r2, [r7, #12]
 800ad16:	609a      	str	r2, [r3, #8]
 800ad18:	68fb      	ldr	r3, [r7, #12]
 800ad1a:	683a      	ldr	r2, [r7, #0]
 800ad1c:	605a      	str	r2, [r3, #4]
 800ad1e:	683b      	ldr	r3, [r7, #0]
 800ad20:	687a      	ldr	r2, [r7, #4]
 800ad22:	611a      	str	r2, [r3, #16]
 800ad24:	687b      	ldr	r3, [r7, #4]
 800ad26:	681b      	ldr	r3, [r3, #0]
 800ad28:	1c5a      	adds	r2, r3, #1
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	601a      	str	r2, [r3, #0]
 800ad2e:	bf00      	nop
 800ad30:	3714      	adds	r7, #20
 800ad32:	46bd      	mov	sp, r7
 800ad34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad38:	4770      	bx	lr

0800ad3a <uxListRemove>:
 800ad3a:	b480      	push	{r7}
 800ad3c:	b085      	sub	sp, #20
 800ad3e:	af00      	add	r7, sp, #0
 800ad40:	6078      	str	r0, [r7, #4]
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	691b      	ldr	r3, [r3, #16]
 800ad46:	60fb      	str	r3, [r7, #12]
 800ad48:	687b      	ldr	r3, [r7, #4]
 800ad4a:	685b      	ldr	r3, [r3, #4]
 800ad4c:	687a      	ldr	r2, [r7, #4]
 800ad4e:	6892      	ldr	r2, [r2, #8]
 800ad50:	609a      	str	r2, [r3, #8]
 800ad52:	687b      	ldr	r3, [r7, #4]
 800ad54:	689b      	ldr	r3, [r3, #8]
 800ad56:	687a      	ldr	r2, [r7, #4]
 800ad58:	6852      	ldr	r2, [r2, #4]
 800ad5a:	605a      	str	r2, [r3, #4]
 800ad5c:	68fb      	ldr	r3, [r7, #12]
 800ad5e:	685b      	ldr	r3, [r3, #4]
 800ad60:	687a      	ldr	r2, [r7, #4]
 800ad62:	429a      	cmp	r2, r3
 800ad64:	d103      	bne.n	800ad6e <uxListRemove+0x34>
 800ad66:	687b      	ldr	r3, [r7, #4]
 800ad68:	689a      	ldr	r2, [r3, #8]
 800ad6a:	68fb      	ldr	r3, [r7, #12]
 800ad6c:	605a      	str	r2, [r3, #4]
 800ad6e:	687b      	ldr	r3, [r7, #4]
 800ad70:	2200      	movs	r2, #0
 800ad72:	611a      	str	r2, [r3, #16]
 800ad74:	68fb      	ldr	r3, [r7, #12]
 800ad76:	681b      	ldr	r3, [r3, #0]
 800ad78:	1e5a      	subs	r2, r3, #1
 800ad7a:	68fb      	ldr	r3, [r7, #12]
 800ad7c:	601a      	str	r2, [r3, #0]
 800ad7e:	68fb      	ldr	r3, [r7, #12]
 800ad80:	681b      	ldr	r3, [r3, #0]
 800ad82:	4618      	mov	r0, r3
 800ad84:	3714      	adds	r7, #20
 800ad86:	46bd      	mov	sp, r7
 800ad88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad8c:	4770      	bx	lr
	...

0800ad90 <xQueueGenericReset>:
 800ad90:	b580      	push	{r7, lr}
 800ad92:	b084      	sub	sp, #16
 800ad94:	af00      	add	r7, sp, #0
 800ad96:	6078      	str	r0, [r7, #4]
 800ad98:	6039      	str	r1, [r7, #0]
 800ad9a:	687b      	ldr	r3, [r7, #4]
 800ad9c:	60fb      	str	r3, [r7, #12]
 800ad9e:	68fb      	ldr	r3, [r7, #12]
 800ada0:	2b00      	cmp	r3, #0
 800ada2:	d10a      	bne.n	800adba <xQueueGenericReset+0x2a>
 800ada4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ada8:	f383 8811 	msr	BASEPRI, r3
 800adac:	f3bf 8f6f 	isb	sy
 800adb0:	f3bf 8f4f 	dsb	sy
 800adb4:	60bb      	str	r3, [r7, #8]
 800adb6:	bf00      	nop
 800adb8:	e7fe      	b.n	800adb8 <xQueueGenericReset+0x28>
 800adba:	f002 f923 	bl	800d004 <vPortEnterCritical>
 800adbe:	68fb      	ldr	r3, [r7, #12]
 800adc0:	681a      	ldr	r2, [r3, #0]
 800adc2:	68fb      	ldr	r3, [r7, #12]
 800adc4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800adc6:	68f9      	ldr	r1, [r7, #12]
 800adc8:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800adca:	fb01 f303 	mul.w	r3, r1, r3
 800adce:	441a      	add	r2, r3
 800add0:	68fb      	ldr	r3, [r7, #12]
 800add2:	605a      	str	r2, [r3, #4]
 800add4:	68fb      	ldr	r3, [r7, #12]
 800add6:	2200      	movs	r2, #0
 800add8:	639a      	str	r2, [r3, #56]	; 0x38
 800adda:	68fb      	ldr	r3, [r7, #12]
 800addc:	681a      	ldr	r2, [r3, #0]
 800adde:	68fb      	ldr	r3, [r7, #12]
 800ade0:	609a      	str	r2, [r3, #8]
 800ade2:	68fb      	ldr	r3, [r7, #12]
 800ade4:	681a      	ldr	r2, [r3, #0]
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800adea:	3b01      	subs	r3, #1
 800adec:	68f9      	ldr	r1, [r7, #12]
 800adee:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800adf0:	fb01 f303 	mul.w	r3, r1, r3
 800adf4:	441a      	add	r2, r3
 800adf6:	68fb      	ldr	r3, [r7, #12]
 800adf8:	60da      	str	r2, [r3, #12]
 800adfa:	68fb      	ldr	r3, [r7, #12]
 800adfc:	22ff      	movs	r2, #255	; 0xff
 800adfe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800ae02:	68fb      	ldr	r3, [r7, #12]
 800ae04:	22ff      	movs	r2, #255	; 0xff
 800ae06:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800ae0a:	683b      	ldr	r3, [r7, #0]
 800ae0c:	2b00      	cmp	r3, #0
 800ae0e:	d114      	bne.n	800ae3a <xQueueGenericReset+0xaa>
 800ae10:	68fb      	ldr	r3, [r7, #12]
 800ae12:	691b      	ldr	r3, [r3, #16]
 800ae14:	2b00      	cmp	r3, #0
 800ae16:	d01a      	beq.n	800ae4e <xQueueGenericReset+0xbe>
 800ae18:	68fb      	ldr	r3, [r7, #12]
 800ae1a:	3310      	adds	r3, #16
 800ae1c:	4618      	mov	r0, r3
 800ae1e:	f001 f9c5 	bl	800c1ac <xTaskRemoveFromEventList>
 800ae22:	4603      	mov	r3, r0
 800ae24:	2b00      	cmp	r3, #0
 800ae26:	d012      	beq.n	800ae4e <xQueueGenericReset+0xbe>
 800ae28:	4b0c      	ldr	r3, [pc, #48]	; (800ae5c <xQueueGenericReset+0xcc>)
 800ae2a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ae2e:	601a      	str	r2, [r3, #0]
 800ae30:	f3bf 8f4f 	dsb	sy
 800ae34:	f3bf 8f6f 	isb	sy
 800ae38:	e009      	b.n	800ae4e <xQueueGenericReset+0xbe>
 800ae3a:	68fb      	ldr	r3, [r7, #12]
 800ae3c:	3310      	adds	r3, #16
 800ae3e:	4618      	mov	r0, r3
 800ae40:	f7ff fef1 	bl	800ac26 <vListInitialise>
 800ae44:	68fb      	ldr	r3, [r7, #12]
 800ae46:	3324      	adds	r3, #36	; 0x24
 800ae48:	4618      	mov	r0, r3
 800ae4a:	f7ff feec 	bl	800ac26 <vListInitialise>
 800ae4e:	f002 f909 	bl	800d064 <vPortExitCritical>
 800ae52:	2301      	movs	r3, #1
 800ae54:	4618      	mov	r0, r3
 800ae56:	3710      	adds	r7, #16
 800ae58:	46bd      	mov	sp, r7
 800ae5a:	bd80      	pop	{r7, pc}
 800ae5c:	e000ed04 	.word	0xe000ed04

0800ae60 <xQueueGenericCreate>:
 800ae60:	b580      	push	{r7, lr}
 800ae62:	b08a      	sub	sp, #40	; 0x28
 800ae64:	af02      	add	r7, sp, #8
 800ae66:	60f8      	str	r0, [r7, #12]
 800ae68:	60b9      	str	r1, [r7, #8]
 800ae6a:	4613      	mov	r3, r2
 800ae6c:	71fb      	strb	r3, [r7, #7]
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	2b00      	cmp	r3, #0
 800ae72:	d10a      	bne.n	800ae8a <xQueueGenericCreate+0x2a>
 800ae74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae78:	f383 8811 	msr	BASEPRI, r3
 800ae7c:	f3bf 8f6f 	isb	sy
 800ae80:	f3bf 8f4f 	dsb	sy
 800ae84:	613b      	str	r3, [r7, #16]
 800ae86:	bf00      	nop
 800ae88:	e7fe      	b.n	800ae88 <xQueueGenericCreate+0x28>
 800ae8a:	68bb      	ldr	r3, [r7, #8]
 800ae8c:	2b00      	cmp	r3, #0
 800ae8e:	d102      	bne.n	800ae96 <xQueueGenericCreate+0x36>
 800ae90:	2300      	movs	r3, #0
 800ae92:	61fb      	str	r3, [r7, #28]
 800ae94:	e004      	b.n	800aea0 <xQueueGenericCreate+0x40>
 800ae96:	68fb      	ldr	r3, [r7, #12]
 800ae98:	68ba      	ldr	r2, [r7, #8]
 800ae9a:	fb02 f303 	mul.w	r3, r2, r3
 800ae9e:	61fb      	str	r3, [r7, #28]
 800aea0:	69fb      	ldr	r3, [r7, #28]
 800aea2:	3350      	adds	r3, #80	; 0x50
 800aea4:	4618      	mov	r0, r3
 800aea6:	f002 f9c7 	bl	800d238 <pvPortMalloc>
 800aeaa:	61b8      	str	r0, [r7, #24]
 800aeac:	69bb      	ldr	r3, [r7, #24]
 800aeae:	2b00      	cmp	r3, #0
 800aeb0:	d00b      	beq.n	800aeca <xQueueGenericCreate+0x6a>
 800aeb2:	69bb      	ldr	r3, [r7, #24]
 800aeb4:	3350      	adds	r3, #80	; 0x50
 800aeb6:	617b      	str	r3, [r7, #20]
 800aeb8:	79fa      	ldrb	r2, [r7, #7]
 800aeba:	69bb      	ldr	r3, [r7, #24]
 800aebc:	9300      	str	r3, [sp, #0]
 800aebe:	4613      	mov	r3, r2
 800aec0:	697a      	ldr	r2, [r7, #20]
 800aec2:	68b9      	ldr	r1, [r7, #8]
 800aec4:	68f8      	ldr	r0, [r7, #12]
 800aec6:	f000 f805 	bl	800aed4 <prvInitialiseNewQueue>
 800aeca:	69bb      	ldr	r3, [r7, #24]
 800aecc:	4618      	mov	r0, r3
 800aece:	3720      	adds	r7, #32
 800aed0:	46bd      	mov	sp, r7
 800aed2:	bd80      	pop	{r7, pc}

0800aed4 <prvInitialiseNewQueue>:
 800aed4:	b580      	push	{r7, lr}
 800aed6:	b084      	sub	sp, #16
 800aed8:	af00      	add	r7, sp, #0
 800aeda:	60f8      	str	r0, [r7, #12]
 800aedc:	60b9      	str	r1, [r7, #8]
 800aede:	607a      	str	r2, [r7, #4]
 800aee0:	70fb      	strb	r3, [r7, #3]
 800aee2:	68bb      	ldr	r3, [r7, #8]
 800aee4:	2b00      	cmp	r3, #0
 800aee6:	d103      	bne.n	800aef0 <prvInitialiseNewQueue+0x1c>
 800aee8:	69bb      	ldr	r3, [r7, #24]
 800aeea:	69ba      	ldr	r2, [r7, #24]
 800aeec:	601a      	str	r2, [r3, #0]
 800aeee:	e002      	b.n	800aef6 <prvInitialiseNewQueue+0x22>
 800aef0:	69bb      	ldr	r3, [r7, #24]
 800aef2:	687a      	ldr	r2, [r7, #4]
 800aef4:	601a      	str	r2, [r3, #0]
 800aef6:	69bb      	ldr	r3, [r7, #24]
 800aef8:	68fa      	ldr	r2, [r7, #12]
 800aefa:	63da      	str	r2, [r3, #60]	; 0x3c
 800aefc:	69bb      	ldr	r3, [r7, #24]
 800aefe:	68ba      	ldr	r2, [r7, #8]
 800af00:	641a      	str	r2, [r3, #64]	; 0x40
 800af02:	2101      	movs	r1, #1
 800af04:	69b8      	ldr	r0, [r7, #24]
 800af06:	f7ff ff43 	bl	800ad90 <xQueueGenericReset>
 800af0a:	69bb      	ldr	r3, [r7, #24]
 800af0c:	78fa      	ldrb	r2, [r7, #3]
 800af0e:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800af12:	bf00      	nop
 800af14:	3710      	adds	r7, #16
 800af16:	46bd      	mov	sp, r7
 800af18:	bd80      	pop	{r7, pc}

0800af1a <prvInitialiseMutex>:
 800af1a:	b580      	push	{r7, lr}
 800af1c:	b082      	sub	sp, #8
 800af1e:	af00      	add	r7, sp, #0
 800af20:	6078      	str	r0, [r7, #4]
 800af22:	687b      	ldr	r3, [r7, #4]
 800af24:	2b00      	cmp	r3, #0
 800af26:	d00e      	beq.n	800af46 <prvInitialiseMutex+0x2c>
 800af28:	687b      	ldr	r3, [r7, #4]
 800af2a:	2200      	movs	r2, #0
 800af2c:	605a      	str	r2, [r3, #4]
 800af2e:	687b      	ldr	r3, [r7, #4]
 800af30:	2200      	movs	r2, #0
 800af32:	601a      	str	r2, [r3, #0]
 800af34:	687b      	ldr	r3, [r7, #4]
 800af36:	2200      	movs	r2, #0
 800af38:	60da      	str	r2, [r3, #12]
 800af3a:	2300      	movs	r3, #0
 800af3c:	2200      	movs	r2, #0
 800af3e:	2100      	movs	r1, #0
 800af40:	6878      	ldr	r0, [r7, #4]
 800af42:	f000 f81d 	bl	800af80 <xQueueGenericSend>
 800af46:	bf00      	nop
 800af48:	3708      	adds	r7, #8
 800af4a:	46bd      	mov	sp, r7
 800af4c:	bd80      	pop	{r7, pc}

0800af4e <xQueueCreateMutex>:
 800af4e:	b580      	push	{r7, lr}
 800af50:	b086      	sub	sp, #24
 800af52:	af00      	add	r7, sp, #0
 800af54:	4603      	mov	r3, r0
 800af56:	71fb      	strb	r3, [r7, #7]
 800af58:	2301      	movs	r3, #1
 800af5a:	617b      	str	r3, [r7, #20]
 800af5c:	2300      	movs	r3, #0
 800af5e:	613b      	str	r3, [r7, #16]
 800af60:	79fb      	ldrb	r3, [r7, #7]
 800af62:	461a      	mov	r2, r3
 800af64:	6939      	ldr	r1, [r7, #16]
 800af66:	6978      	ldr	r0, [r7, #20]
 800af68:	f7ff ff7a 	bl	800ae60 <xQueueGenericCreate>
 800af6c:	60f8      	str	r0, [r7, #12]
 800af6e:	68f8      	ldr	r0, [r7, #12]
 800af70:	f7ff ffd3 	bl	800af1a <prvInitialiseMutex>
 800af74:	68fb      	ldr	r3, [r7, #12]
 800af76:	4618      	mov	r0, r3
 800af78:	3718      	adds	r7, #24
 800af7a:	46bd      	mov	sp, r7
 800af7c:	bd80      	pop	{r7, pc}
	...

0800af80 <xQueueGenericSend>:
 800af80:	b580      	push	{r7, lr}
 800af82:	b08e      	sub	sp, #56	; 0x38
 800af84:	af00      	add	r7, sp, #0
 800af86:	60f8      	str	r0, [r7, #12]
 800af88:	60b9      	str	r1, [r7, #8]
 800af8a:	607a      	str	r2, [r7, #4]
 800af8c:	603b      	str	r3, [r7, #0]
 800af8e:	2300      	movs	r3, #0
 800af90:	637b      	str	r3, [r7, #52]	; 0x34
 800af92:	68fb      	ldr	r3, [r7, #12]
 800af94:	633b      	str	r3, [r7, #48]	; 0x30
 800af96:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800af98:	2b00      	cmp	r3, #0
 800af9a:	d10a      	bne.n	800afb2 <xQueueGenericSend+0x32>
 800af9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afa0:	f383 8811 	msr	BASEPRI, r3
 800afa4:	f3bf 8f6f 	isb	sy
 800afa8:	f3bf 8f4f 	dsb	sy
 800afac:	62bb      	str	r3, [r7, #40]	; 0x28
 800afae:	bf00      	nop
 800afb0:	e7fe      	b.n	800afb0 <xQueueGenericSend+0x30>
 800afb2:	68bb      	ldr	r3, [r7, #8]
 800afb4:	2b00      	cmp	r3, #0
 800afb6:	d103      	bne.n	800afc0 <xQueueGenericSend+0x40>
 800afb8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800afba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800afbc:	2b00      	cmp	r3, #0
 800afbe:	d101      	bne.n	800afc4 <xQueueGenericSend+0x44>
 800afc0:	2301      	movs	r3, #1
 800afc2:	e000      	b.n	800afc6 <xQueueGenericSend+0x46>
 800afc4:	2300      	movs	r3, #0
 800afc6:	2b00      	cmp	r3, #0
 800afc8:	d10a      	bne.n	800afe0 <xQueueGenericSend+0x60>
 800afca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afce:	f383 8811 	msr	BASEPRI, r3
 800afd2:	f3bf 8f6f 	isb	sy
 800afd6:	f3bf 8f4f 	dsb	sy
 800afda:	627b      	str	r3, [r7, #36]	; 0x24
 800afdc:	bf00      	nop
 800afde:	e7fe      	b.n	800afde <xQueueGenericSend+0x5e>
 800afe0:	683b      	ldr	r3, [r7, #0]
 800afe2:	2b02      	cmp	r3, #2
 800afe4:	d103      	bne.n	800afee <xQueueGenericSend+0x6e>
 800afe6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800afe8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800afea:	2b01      	cmp	r3, #1
 800afec:	d101      	bne.n	800aff2 <xQueueGenericSend+0x72>
 800afee:	2301      	movs	r3, #1
 800aff0:	e000      	b.n	800aff4 <xQueueGenericSend+0x74>
 800aff2:	2300      	movs	r3, #0
 800aff4:	2b00      	cmp	r3, #0
 800aff6:	d10a      	bne.n	800b00e <xQueueGenericSend+0x8e>
 800aff8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800affc:	f383 8811 	msr	BASEPRI, r3
 800b000:	f3bf 8f6f 	isb	sy
 800b004:	f3bf 8f4f 	dsb	sy
 800b008:	623b      	str	r3, [r7, #32]
 800b00a:	bf00      	nop
 800b00c:	e7fe      	b.n	800b00c <xQueueGenericSend+0x8c>
 800b00e:	f001 fa89 	bl	800c524 <xTaskGetSchedulerState>
 800b012:	4603      	mov	r3, r0
 800b014:	2b00      	cmp	r3, #0
 800b016:	d102      	bne.n	800b01e <xQueueGenericSend+0x9e>
 800b018:	687b      	ldr	r3, [r7, #4]
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d101      	bne.n	800b022 <xQueueGenericSend+0xa2>
 800b01e:	2301      	movs	r3, #1
 800b020:	e000      	b.n	800b024 <xQueueGenericSend+0xa4>
 800b022:	2300      	movs	r3, #0
 800b024:	2b00      	cmp	r3, #0
 800b026:	d10a      	bne.n	800b03e <xQueueGenericSend+0xbe>
 800b028:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b02c:	f383 8811 	msr	BASEPRI, r3
 800b030:	f3bf 8f6f 	isb	sy
 800b034:	f3bf 8f4f 	dsb	sy
 800b038:	61fb      	str	r3, [r7, #28]
 800b03a:	bf00      	nop
 800b03c:	e7fe      	b.n	800b03c <xQueueGenericSend+0xbc>
 800b03e:	f001 ffe1 	bl	800d004 <vPortEnterCritical>
 800b042:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b044:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b046:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b048:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b04a:	429a      	cmp	r2, r3
 800b04c:	d302      	bcc.n	800b054 <xQueueGenericSend+0xd4>
 800b04e:	683b      	ldr	r3, [r7, #0]
 800b050:	2b02      	cmp	r3, #2
 800b052:	d129      	bne.n	800b0a8 <xQueueGenericSend+0x128>
 800b054:	683a      	ldr	r2, [r7, #0]
 800b056:	68b9      	ldr	r1, [r7, #8]
 800b058:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b05a:	f000 fb4b 	bl	800b6f4 <prvCopyDataToQueue>
 800b05e:	62f8      	str	r0, [r7, #44]	; 0x2c
 800b060:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b062:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b064:	2b00      	cmp	r3, #0
 800b066:	d010      	beq.n	800b08a <xQueueGenericSend+0x10a>
 800b068:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b06a:	3324      	adds	r3, #36	; 0x24
 800b06c:	4618      	mov	r0, r3
 800b06e:	f001 f89d 	bl	800c1ac <xTaskRemoveFromEventList>
 800b072:	4603      	mov	r3, r0
 800b074:	2b00      	cmp	r3, #0
 800b076:	d013      	beq.n	800b0a0 <xQueueGenericSend+0x120>
 800b078:	4b3f      	ldr	r3, [pc, #252]	; (800b178 <xQueueGenericSend+0x1f8>)
 800b07a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b07e:	601a      	str	r2, [r3, #0]
 800b080:	f3bf 8f4f 	dsb	sy
 800b084:	f3bf 8f6f 	isb	sy
 800b088:	e00a      	b.n	800b0a0 <xQueueGenericSend+0x120>
 800b08a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b08c:	2b00      	cmp	r3, #0
 800b08e:	d007      	beq.n	800b0a0 <xQueueGenericSend+0x120>
 800b090:	4b39      	ldr	r3, [pc, #228]	; (800b178 <xQueueGenericSend+0x1f8>)
 800b092:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b096:	601a      	str	r2, [r3, #0]
 800b098:	f3bf 8f4f 	dsb	sy
 800b09c:	f3bf 8f6f 	isb	sy
 800b0a0:	f001 ffe0 	bl	800d064 <vPortExitCritical>
 800b0a4:	2301      	movs	r3, #1
 800b0a6:	e063      	b.n	800b170 <xQueueGenericSend+0x1f0>
 800b0a8:	687b      	ldr	r3, [r7, #4]
 800b0aa:	2b00      	cmp	r3, #0
 800b0ac:	d103      	bne.n	800b0b6 <xQueueGenericSend+0x136>
 800b0ae:	f001 ffd9 	bl	800d064 <vPortExitCritical>
 800b0b2:	2300      	movs	r3, #0
 800b0b4:	e05c      	b.n	800b170 <xQueueGenericSend+0x1f0>
 800b0b6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b0b8:	2b00      	cmp	r3, #0
 800b0ba:	d106      	bne.n	800b0ca <xQueueGenericSend+0x14a>
 800b0bc:	f107 0314 	add.w	r3, r7, #20
 800b0c0:	4618      	mov	r0, r3
 800b0c2:	f001 f8d5 	bl	800c270 <vTaskSetTimeOutState>
 800b0c6:	2301      	movs	r3, #1
 800b0c8:	637b      	str	r3, [r7, #52]	; 0x34
 800b0ca:	f001 ffcb 	bl	800d064 <vPortExitCritical>
 800b0ce:	f000 fe37 	bl	800bd40 <vTaskSuspendAll>
 800b0d2:	f001 ff97 	bl	800d004 <vPortEnterCritical>
 800b0d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b0d8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b0dc:	b25b      	sxtb	r3, r3
 800b0de:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b0e2:	d103      	bne.n	800b0ec <xQueueGenericSend+0x16c>
 800b0e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b0e6:	2200      	movs	r2, #0
 800b0e8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b0ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b0ee:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b0f2:	b25b      	sxtb	r3, r3
 800b0f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b0f8:	d103      	bne.n	800b102 <xQueueGenericSend+0x182>
 800b0fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b0fc:	2200      	movs	r2, #0
 800b0fe:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b102:	f001 ffaf 	bl	800d064 <vPortExitCritical>
 800b106:	1d3a      	adds	r2, r7, #4
 800b108:	f107 0314 	add.w	r3, r7, #20
 800b10c:	4611      	mov	r1, r2
 800b10e:	4618      	mov	r0, r3
 800b110:	f001 f8d2 	bl	800c2b8 <xTaskCheckForTimeOut>
 800b114:	4603      	mov	r3, r0
 800b116:	2b00      	cmp	r3, #0
 800b118:	d124      	bne.n	800b164 <xQueueGenericSend+0x1e4>
 800b11a:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b11c:	f000 fbe2 	bl	800b8e4 <prvIsQueueFull>
 800b120:	4603      	mov	r3, r0
 800b122:	2b00      	cmp	r3, #0
 800b124:	d018      	beq.n	800b158 <xQueueGenericSend+0x1d8>
 800b126:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b128:	3310      	adds	r3, #16
 800b12a:	687a      	ldr	r2, [r7, #4]
 800b12c:	4611      	mov	r1, r2
 800b12e:	4618      	mov	r0, r3
 800b130:	f000 ffec 	bl	800c10c <vTaskPlaceOnEventList>
 800b134:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b136:	f000 fb6d 	bl	800b814 <prvUnlockQueue>
 800b13a:	f000 fe0f 	bl	800bd5c <xTaskResumeAll>
 800b13e:	4603      	mov	r3, r0
 800b140:	2b00      	cmp	r3, #0
 800b142:	f47f af7c 	bne.w	800b03e <xQueueGenericSend+0xbe>
 800b146:	4b0c      	ldr	r3, [pc, #48]	; (800b178 <xQueueGenericSend+0x1f8>)
 800b148:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b14c:	601a      	str	r2, [r3, #0]
 800b14e:	f3bf 8f4f 	dsb	sy
 800b152:	f3bf 8f6f 	isb	sy
 800b156:	e772      	b.n	800b03e <xQueueGenericSend+0xbe>
 800b158:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b15a:	f000 fb5b 	bl	800b814 <prvUnlockQueue>
 800b15e:	f000 fdfd 	bl	800bd5c <xTaskResumeAll>
 800b162:	e76c      	b.n	800b03e <xQueueGenericSend+0xbe>
 800b164:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b166:	f000 fb55 	bl	800b814 <prvUnlockQueue>
 800b16a:	f000 fdf7 	bl	800bd5c <xTaskResumeAll>
 800b16e:	2300      	movs	r3, #0
 800b170:	4618      	mov	r0, r3
 800b172:	3738      	adds	r7, #56	; 0x38
 800b174:	46bd      	mov	sp, r7
 800b176:	bd80      	pop	{r7, pc}
 800b178:	e000ed04 	.word	0xe000ed04

0800b17c <xQueueGenericSendFromISR>:
 800b17c:	b580      	push	{r7, lr}
 800b17e:	b08e      	sub	sp, #56	; 0x38
 800b180:	af00      	add	r7, sp, #0
 800b182:	60f8      	str	r0, [r7, #12]
 800b184:	60b9      	str	r1, [r7, #8]
 800b186:	607a      	str	r2, [r7, #4]
 800b188:	603b      	str	r3, [r7, #0]
 800b18a:	68fb      	ldr	r3, [r7, #12]
 800b18c:	633b      	str	r3, [r7, #48]	; 0x30
 800b18e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b190:	2b00      	cmp	r3, #0
 800b192:	d10a      	bne.n	800b1aa <xQueueGenericSendFromISR+0x2e>
 800b194:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b198:	f383 8811 	msr	BASEPRI, r3
 800b19c:	f3bf 8f6f 	isb	sy
 800b1a0:	f3bf 8f4f 	dsb	sy
 800b1a4:	627b      	str	r3, [r7, #36]	; 0x24
 800b1a6:	bf00      	nop
 800b1a8:	e7fe      	b.n	800b1a8 <xQueueGenericSendFromISR+0x2c>
 800b1aa:	68bb      	ldr	r3, [r7, #8]
 800b1ac:	2b00      	cmp	r3, #0
 800b1ae:	d103      	bne.n	800b1b8 <xQueueGenericSendFromISR+0x3c>
 800b1b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b1b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	d101      	bne.n	800b1bc <xQueueGenericSendFromISR+0x40>
 800b1b8:	2301      	movs	r3, #1
 800b1ba:	e000      	b.n	800b1be <xQueueGenericSendFromISR+0x42>
 800b1bc:	2300      	movs	r3, #0
 800b1be:	2b00      	cmp	r3, #0
 800b1c0:	d10a      	bne.n	800b1d8 <xQueueGenericSendFromISR+0x5c>
 800b1c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1c6:	f383 8811 	msr	BASEPRI, r3
 800b1ca:	f3bf 8f6f 	isb	sy
 800b1ce:	f3bf 8f4f 	dsb	sy
 800b1d2:	623b      	str	r3, [r7, #32]
 800b1d4:	bf00      	nop
 800b1d6:	e7fe      	b.n	800b1d6 <xQueueGenericSendFromISR+0x5a>
 800b1d8:	683b      	ldr	r3, [r7, #0]
 800b1da:	2b02      	cmp	r3, #2
 800b1dc:	d103      	bne.n	800b1e6 <xQueueGenericSendFromISR+0x6a>
 800b1de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b1e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b1e2:	2b01      	cmp	r3, #1
 800b1e4:	d101      	bne.n	800b1ea <xQueueGenericSendFromISR+0x6e>
 800b1e6:	2301      	movs	r3, #1
 800b1e8:	e000      	b.n	800b1ec <xQueueGenericSendFromISR+0x70>
 800b1ea:	2300      	movs	r3, #0
 800b1ec:	2b00      	cmp	r3, #0
 800b1ee:	d10a      	bne.n	800b206 <xQueueGenericSendFromISR+0x8a>
 800b1f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b1f4:	f383 8811 	msr	BASEPRI, r3
 800b1f8:	f3bf 8f6f 	isb	sy
 800b1fc:	f3bf 8f4f 	dsb	sy
 800b200:	61fb      	str	r3, [r7, #28]
 800b202:	bf00      	nop
 800b204:	e7fe      	b.n	800b204 <xQueueGenericSendFromISR+0x88>
 800b206:	f001 ffd7 	bl	800d1b8 <vPortValidateInterruptPriority>
 800b20a:	f3ef 8211 	mrs	r2, BASEPRI
 800b20e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b212:	f383 8811 	msr	BASEPRI, r3
 800b216:	f3bf 8f6f 	isb	sy
 800b21a:	f3bf 8f4f 	dsb	sy
 800b21e:	61ba      	str	r2, [r7, #24]
 800b220:	617b      	str	r3, [r7, #20]
 800b222:	69bb      	ldr	r3, [r7, #24]
 800b224:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b226:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b228:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b22a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b22c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b22e:	429a      	cmp	r2, r3
 800b230:	d302      	bcc.n	800b238 <xQueueGenericSendFromISR+0xbc>
 800b232:	683b      	ldr	r3, [r7, #0]
 800b234:	2b02      	cmp	r3, #2
 800b236:	d12c      	bne.n	800b292 <xQueueGenericSendFromISR+0x116>
 800b238:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b23a:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b23e:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b242:	683a      	ldr	r2, [r7, #0]
 800b244:	68b9      	ldr	r1, [r7, #8]
 800b246:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b248:	f000 fa54 	bl	800b6f4 <prvCopyDataToQueue>
 800b24c:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 800b250:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b254:	d112      	bne.n	800b27c <xQueueGenericSendFromISR+0x100>
 800b256:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b258:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b25a:	2b00      	cmp	r3, #0
 800b25c:	d016      	beq.n	800b28c <xQueueGenericSendFromISR+0x110>
 800b25e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b260:	3324      	adds	r3, #36	; 0x24
 800b262:	4618      	mov	r0, r3
 800b264:	f000 ffa2 	bl	800c1ac <xTaskRemoveFromEventList>
 800b268:	4603      	mov	r3, r0
 800b26a:	2b00      	cmp	r3, #0
 800b26c:	d00e      	beq.n	800b28c <xQueueGenericSendFromISR+0x110>
 800b26e:	687b      	ldr	r3, [r7, #4]
 800b270:	2b00      	cmp	r3, #0
 800b272:	d00b      	beq.n	800b28c <xQueueGenericSendFromISR+0x110>
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	2201      	movs	r2, #1
 800b278:	601a      	str	r2, [r3, #0]
 800b27a:	e007      	b.n	800b28c <xQueueGenericSendFromISR+0x110>
 800b27c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800b280:	3301      	adds	r3, #1
 800b282:	b2db      	uxtb	r3, r3
 800b284:	b25a      	sxtb	r2, r3
 800b286:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b288:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b28c:	2301      	movs	r3, #1
 800b28e:	637b      	str	r3, [r7, #52]	; 0x34
 800b290:	e001      	b.n	800b296 <xQueueGenericSendFromISR+0x11a>
 800b292:	2300      	movs	r3, #0
 800b294:	637b      	str	r3, [r7, #52]	; 0x34
 800b296:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b298:	613b      	str	r3, [r7, #16]
 800b29a:	693b      	ldr	r3, [r7, #16]
 800b29c:	f383 8811 	msr	BASEPRI, r3
 800b2a0:	bf00      	nop
 800b2a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b2a4:	4618      	mov	r0, r3
 800b2a6:	3738      	adds	r7, #56	; 0x38
 800b2a8:	46bd      	mov	sp, r7
 800b2aa:	bd80      	pop	{r7, pc}

0800b2ac <xQueueGiveFromISR>:
 800b2ac:	b580      	push	{r7, lr}
 800b2ae:	b08e      	sub	sp, #56	; 0x38
 800b2b0:	af00      	add	r7, sp, #0
 800b2b2:	6078      	str	r0, [r7, #4]
 800b2b4:	6039      	str	r1, [r7, #0]
 800b2b6:	687b      	ldr	r3, [r7, #4]
 800b2b8:	633b      	str	r3, [r7, #48]	; 0x30
 800b2ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b2bc:	2b00      	cmp	r3, #0
 800b2be:	d10a      	bne.n	800b2d6 <xQueueGiveFromISR+0x2a>
 800b2c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2c4:	f383 8811 	msr	BASEPRI, r3
 800b2c8:	f3bf 8f6f 	isb	sy
 800b2cc:	f3bf 8f4f 	dsb	sy
 800b2d0:	623b      	str	r3, [r7, #32]
 800b2d2:	bf00      	nop
 800b2d4:	e7fe      	b.n	800b2d4 <xQueueGiveFromISR+0x28>
 800b2d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b2d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b2da:	2b00      	cmp	r3, #0
 800b2dc:	d00a      	beq.n	800b2f4 <xQueueGiveFromISR+0x48>
 800b2de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2e2:	f383 8811 	msr	BASEPRI, r3
 800b2e6:	f3bf 8f6f 	isb	sy
 800b2ea:	f3bf 8f4f 	dsb	sy
 800b2ee:	61fb      	str	r3, [r7, #28]
 800b2f0:	bf00      	nop
 800b2f2:	e7fe      	b.n	800b2f2 <xQueueGiveFromISR+0x46>
 800b2f4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b2f6:	681b      	ldr	r3, [r3, #0]
 800b2f8:	2b00      	cmp	r3, #0
 800b2fa:	d103      	bne.n	800b304 <xQueueGiveFromISR+0x58>
 800b2fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b2fe:	685b      	ldr	r3, [r3, #4]
 800b300:	2b00      	cmp	r3, #0
 800b302:	d101      	bne.n	800b308 <xQueueGiveFromISR+0x5c>
 800b304:	2301      	movs	r3, #1
 800b306:	e000      	b.n	800b30a <xQueueGiveFromISR+0x5e>
 800b308:	2300      	movs	r3, #0
 800b30a:	2b00      	cmp	r3, #0
 800b30c:	d10a      	bne.n	800b324 <xQueueGiveFromISR+0x78>
 800b30e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b312:	f383 8811 	msr	BASEPRI, r3
 800b316:	f3bf 8f6f 	isb	sy
 800b31a:	f3bf 8f4f 	dsb	sy
 800b31e:	61bb      	str	r3, [r7, #24]
 800b320:	bf00      	nop
 800b322:	e7fe      	b.n	800b322 <xQueueGiveFromISR+0x76>
 800b324:	f001 ff48 	bl	800d1b8 <vPortValidateInterruptPriority>
 800b328:	f3ef 8211 	mrs	r2, BASEPRI
 800b32c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b330:	f383 8811 	msr	BASEPRI, r3
 800b334:	f3bf 8f6f 	isb	sy
 800b338:	f3bf 8f4f 	dsb	sy
 800b33c:	617a      	str	r2, [r7, #20]
 800b33e:	613b      	str	r3, [r7, #16]
 800b340:	697b      	ldr	r3, [r7, #20]
 800b342:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b344:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b346:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b348:	62bb      	str	r3, [r7, #40]	; 0x28
 800b34a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b34c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b34e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b350:	429a      	cmp	r2, r3
 800b352:	d22b      	bcs.n	800b3ac <xQueueGiveFromISR+0x100>
 800b354:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b356:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b35a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800b35e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b360:	1c5a      	adds	r2, r3, #1
 800b362:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b364:	639a      	str	r2, [r3, #56]	; 0x38
 800b366:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 800b36a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b36e:	d112      	bne.n	800b396 <xQueueGiveFromISR+0xea>
 800b370:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b372:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b374:	2b00      	cmp	r3, #0
 800b376:	d016      	beq.n	800b3a6 <xQueueGiveFromISR+0xfa>
 800b378:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b37a:	3324      	adds	r3, #36	; 0x24
 800b37c:	4618      	mov	r0, r3
 800b37e:	f000 ff15 	bl	800c1ac <xTaskRemoveFromEventList>
 800b382:	4603      	mov	r3, r0
 800b384:	2b00      	cmp	r3, #0
 800b386:	d00e      	beq.n	800b3a6 <xQueueGiveFromISR+0xfa>
 800b388:	683b      	ldr	r3, [r7, #0]
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	d00b      	beq.n	800b3a6 <xQueueGiveFromISR+0xfa>
 800b38e:	683b      	ldr	r3, [r7, #0]
 800b390:	2201      	movs	r2, #1
 800b392:	601a      	str	r2, [r3, #0]
 800b394:	e007      	b.n	800b3a6 <xQueueGiveFromISR+0xfa>
 800b396:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800b39a:	3301      	adds	r3, #1
 800b39c:	b2db      	uxtb	r3, r3
 800b39e:	b25a      	sxtb	r2, r3
 800b3a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b3a2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b3a6:	2301      	movs	r3, #1
 800b3a8:	637b      	str	r3, [r7, #52]	; 0x34
 800b3aa:	e001      	b.n	800b3b0 <xQueueGiveFromISR+0x104>
 800b3ac:	2300      	movs	r3, #0
 800b3ae:	637b      	str	r3, [r7, #52]	; 0x34
 800b3b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3b2:	60fb      	str	r3, [r7, #12]
 800b3b4:	68fb      	ldr	r3, [r7, #12]
 800b3b6:	f383 8811 	msr	BASEPRI, r3
 800b3ba:	bf00      	nop
 800b3bc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b3be:	4618      	mov	r0, r3
 800b3c0:	3738      	adds	r7, #56	; 0x38
 800b3c2:	46bd      	mov	sp, r7
 800b3c4:	bd80      	pop	{r7, pc}
	...

0800b3c8 <xQueueGenericReceive>:
 800b3c8:	b580      	push	{r7, lr}
 800b3ca:	b08e      	sub	sp, #56	; 0x38
 800b3cc:	af00      	add	r7, sp, #0
 800b3ce:	60f8      	str	r0, [r7, #12]
 800b3d0:	60b9      	str	r1, [r7, #8]
 800b3d2:	607a      	str	r2, [r7, #4]
 800b3d4:	603b      	str	r3, [r7, #0]
 800b3d6:	2300      	movs	r3, #0
 800b3d8:	637b      	str	r3, [r7, #52]	; 0x34
 800b3da:	68fb      	ldr	r3, [r7, #12]
 800b3dc:	633b      	str	r3, [r7, #48]	; 0x30
 800b3de:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b3e0:	2b00      	cmp	r3, #0
 800b3e2:	d10a      	bne.n	800b3fa <xQueueGenericReceive+0x32>
 800b3e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3e8:	f383 8811 	msr	BASEPRI, r3
 800b3ec:	f3bf 8f6f 	isb	sy
 800b3f0:	f3bf 8f4f 	dsb	sy
 800b3f4:	627b      	str	r3, [r7, #36]	; 0x24
 800b3f6:	bf00      	nop
 800b3f8:	e7fe      	b.n	800b3f8 <xQueueGenericReceive+0x30>
 800b3fa:	68bb      	ldr	r3, [r7, #8]
 800b3fc:	2b00      	cmp	r3, #0
 800b3fe:	d103      	bne.n	800b408 <xQueueGenericReceive+0x40>
 800b400:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b402:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b404:	2b00      	cmp	r3, #0
 800b406:	d101      	bne.n	800b40c <xQueueGenericReceive+0x44>
 800b408:	2301      	movs	r3, #1
 800b40a:	e000      	b.n	800b40e <xQueueGenericReceive+0x46>
 800b40c:	2300      	movs	r3, #0
 800b40e:	2b00      	cmp	r3, #0
 800b410:	d10a      	bne.n	800b428 <xQueueGenericReceive+0x60>
 800b412:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b416:	f383 8811 	msr	BASEPRI, r3
 800b41a:	f3bf 8f6f 	isb	sy
 800b41e:	f3bf 8f4f 	dsb	sy
 800b422:	623b      	str	r3, [r7, #32]
 800b424:	bf00      	nop
 800b426:	e7fe      	b.n	800b426 <xQueueGenericReceive+0x5e>
 800b428:	f001 f87c 	bl	800c524 <xTaskGetSchedulerState>
 800b42c:	4603      	mov	r3, r0
 800b42e:	2b00      	cmp	r3, #0
 800b430:	d102      	bne.n	800b438 <xQueueGenericReceive+0x70>
 800b432:	687b      	ldr	r3, [r7, #4]
 800b434:	2b00      	cmp	r3, #0
 800b436:	d101      	bne.n	800b43c <xQueueGenericReceive+0x74>
 800b438:	2301      	movs	r3, #1
 800b43a:	e000      	b.n	800b43e <xQueueGenericReceive+0x76>
 800b43c:	2300      	movs	r3, #0
 800b43e:	2b00      	cmp	r3, #0
 800b440:	d10a      	bne.n	800b458 <xQueueGenericReceive+0x90>
 800b442:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b446:	f383 8811 	msr	BASEPRI, r3
 800b44a:	f3bf 8f6f 	isb	sy
 800b44e:	f3bf 8f4f 	dsb	sy
 800b452:	61fb      	str	r3, [r7, #28]
 800b454:	bf00      	nop
 800b456:	e7fe      	b.n	800b456 <xQueueGenericReceive+0x8e>
 800b458:	f001 fdd4 	bl	800d004 <vPortEnterCritical>
 800b45c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b45e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b460:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b462:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b464:	2b00      	cmp	r3, #0
 800b466:	d046      	beq.n	800b4f6 <xQueueGenericReceive+0x12e>
 800b468:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b46a:	68db      	ldr	r3, [r3, #12]
 800b46c:	62bb      	str	r3, [r7, #40]	; 0x28
 800b46e:	68b9      	ldr	r1, [r7, #8]
 800b470:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b472:	f000 f9a9 	bl	800b7c8 <prvCopyDataFromQueue>
 800b476:	683b      	ldr	r3, [r7, #0]
 800b478:	2b00      	cmp	r3, #0
 800b47a:	d121      	bne.n	800b4c0 <xQueueGenericReceive+0xf8>
 800b47c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b47e:	1e5a      	subs	r2, r3, #1
 800b480:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b482:	639a      	str	r2, [r3, #56]	; 0x38
 800b484:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	2b00      	cmp	r3, #0
 800b48a:	d104      	bne.n	800b496 <xQueueGenericReceive+0xce>
 800b48c:	f001 f964 	bl	800c758 <pvTaskIncrementMutexHeldCount>
 800b490:	4602      	mov	r2, r0
 800b492:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b494:	605a      	str	r2, [r3, #4]
 800b496:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b498:	691b      	ldr	r3, [r3, #16]
 800b49a:	2b00      	cmp	r3, #0
 800b49c:	d027      	beq.n	800b4ee <xQueueGenericReceive+0x126>
 800b49e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b4a0:	3310      	adds	r3, #16
 800b4a2:	4618      	mov	r0, r3
 800b4a4:	f000 fe82 	bl	800c1ac <xTaskRemoveFromEventList>
 800b4a8:	4603      	mov	r3, r0
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d01f      	beq.n	800b4ee <xQueueGenericReceive+0x126>
 800b4ae:	4b50      	ldr	r3, [pc, #320]	; (800b5f0 <xQueueGenericReceive+0x228>)
 800b4b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4b4:	601a      	str	r2, [r3, #0]
 800b4b6:	f3bf 8f4f 	dsb	sy
 800b4ba:	f3bf 8f6f 	isb	sy
 800b4be:	e016      	b.n	800b4ee <xQueueGenericReceive+0x126>
 800b4c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b4c2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800b4c4:	60da      	str	r2, [r3, #12]
 800b4c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b4c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b4ca:	2b00      	cmp	r3, #0
 800b4cc:	d00f      	beq.n	800b4ee <xQueueGenericReceive+0x126>
 800b4ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b4d0:	3324      	adds	r3, #36	; 0x24
 800b4d2:	4618      	mov	r0, r3
 800b4d4:	f000 fe6a 	bl	800c1ac <xTaskRemoveFromEventList>
 800b4d8:	4603      	mov	r3, r0
 800b4da:	2b00      	cmp	r3, #0
 800b4dc:	d007      	beq.n	800b4ee <xQueueGenericReceive+0x126>
 800b4de:	4b44      	ldr	r3, [pc, #272]	; (800b5f0 <xQueueGenericReceive+0x228>)
 800b4e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b4e4:	601a      	str	r2, [r3, #0]
 800b4e6:	f3bf 8f4f 	dsb	sy
 800b4ea:	f3bf 8f6f 	isb	sy
 800b4ee:	f001 fdb9 	bl	800d064 <vPortExitCritical>
 800b4f2:	2301      	movs	r3, #1
 800b4f4:	e077      	b.n	800b5e6 <xQueueGenericReceive+0x21e>
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	2b00      	cmp	r3, #0
 800b4fa:	d103      	bne.n	800b504 <xQueueGenericReceive+0x13c>
 800b4fc:	f001 fdb2 	bl	800d064 <vPortExitCritical>
 800b500:	2300      	movs	r3, #0
 800b502:	e070      	b.n	800b5e6 <xQueueGenericReceive+0x21e>
 800b504:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b506:	2b00      	cmp	r3, #0
 800b508:	d106      	bne.n	800b518 <xQueueGenericReceive+0x150>
 800b50a:	f107 0314 	add.w	r3, r7, #20
 800b50e:	4618      	mov	r0, r3
 800b510:	f000 feae 	bl	800c270 <vTaskSetTimeOutState>
 800b514:	2301      	movs	r3, #1
 800b516:	637b      	str	r3, [r7, #52]	; 0x34
 800b518:	f001 fda4 	bl	800d064 <vPortExitCritical>
 800b51c:	f000 fc10 	bl	800bd40 <vTaskSuspendAll>
 800b520:	f001 fd70 	bl	800d004 <vPortEnterCritical>
 800b524:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b526:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b52a:	b25b      	sxtb	r3, r3
 800b52c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b530:	d103      	bne.n	800b53a <xQueueGenericReceive+0x172>
 800b532:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b534:	2200      	movs	r2, #0
 800b536:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b53a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b53c:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b540:	b25b      	sxtb	r3, r3
 800b542:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b546:	d103      	bne.n	800b550 <xQueueGenericReceive+0x188>
 800b548:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b54a:	2200      	movs	r2, #0
 800b54c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b550:	f001 fd88 	bl	800d064 <vPortExitCritical>
 800b554:	1d3a      	adds	r2, r7, #4
 800b556:	f107 0314 	add.w	r3, r7, #20
 800b55a:	4611      	mov	r1, r2
 800b55c:	4618      	mov	r0, r3
 800b55e:	f000 feab 	bl	800c2b8 <xTaskCheckForTimeOut>
 800b562:	4603      	mov	r3, r0
 800b564:	2b00      	cmp	r3, #0
 800b566:	d131      	bne.n	800b5cc <xQueueGenericReceive+0x204>
 800b568:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b56a:	f000 f9a5 	bl	800b8b8 <prvIsQueueEmpty>
 800b56e:	4603      	mov	r3, r0
 800b570:	2b00      	cmp	r3, #0
 800b572:	d025      	beq.n	800b5c0 <xQueueGenericReceive+0x1f8>
 800b574:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b576:	681b      	ldr	r3, [r3, #0]
 800b578:	2b00      	cmp	r3, #0
 800b57a:	d108      	bne.n	800b58e <xQueueGenericReceive+0x1c6>
 800b57c:	f001 fd42 	bl	800d004 <vPortEnterCritical>
 800b580:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b582:	685b      	ldr	r3, [r3, #4]
 800b584:	4618      	mov	r0, r3
 800b586:	f000 ffeb 	bl	800c560 <vTaskPriorityInherit>
 800b58a:	f001 fd6b 	bl	800d064 <vPortExitCritical>
 800b58e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b590:	3324      	adds	r3, #36	; 0x24
 800b592:	687a      	ldr	r2, [r7, #4]
 800b594:	4611      	mov	r1, r2
 800b596:	4618      	mov	r0, r3
 800b598:	f000 fdb8 	bl	800c10c <vTaskPlaceOnEventList>
 800b59c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b59e:	f000 f939 	bl	800b814 <prvUnlockQueue>
 800b5a2:	f000 fbdb 	bl	800bd5c <xTaskResumeAll>
 800b5a6:	4603      	mov	r3, r0
 800b5a8:	2b00      	cmp	r3, #0
 800b5aa:	f47f af55 	bne.w	800b458 <xQueueGenericReceive+0x90>
 800b5ae:	4b10      	ldr	r3, [pc, #64]	; (800b5f0 <xQueueGenericReceive+0x228>)
 800b5b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b5b4:	601a      	str	r2, [r3, #0]
 800b5b6:	f3bf 8f4f 	dsb	sy
 800b5ba:	f3bf 8f6f 	isb	sy
 800b5be:	e74b      	b.n	800b458 <xQueueGenericReceive+0x90>
 800b5c0:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b5c2:	f000 f927 	bl	800b814 <prvUnlockQueue>
 800b5c6:	f000 fbc9 	bl	800bd5c <xTaskResumeAll>
 800b5ca:	e745      	b.n	800b458 <xQueueGenericReceive+0x90>
 800b5cc:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b5ce:	f000 f921 	bl	800b814 <prvUnlockQueue>
 800b5d2:	f000 fbc3 	bl	800bd5c <xTaskResumeAll>
 800b5d6:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b5d8:	f000 f96e 	bl	800b8b8 <prvIsQueueEmpty>
 800b5dc:	4603      	mov	r3, r0
 800b5de:	2b00      	cmp	r3, #0
 800b5e0:	f43f af3a 	beq.w	800b458 <xQueueGenericReceive+0x90>
 800b5e4:	2300      	movs	r3, #0
 800b5e6:	4618      	mov	r0, r3
 800b5e8:	3738      	adds	r7, #56	; 0x38
 800b5ea:	46bd      	mov	sp, r7
 800b5ec:	bd80      	pop	{r7, pc}
 800b5ee:	bf00      	nop
 800b5f0:	e000ed04 	.word	0xe000ed04

0800b5f4 <xQueueReceiveFromISR>:
 800b5f4:	b580      	push	{r7, lr}
 800b5f6:	b08e      	sub	sp, #56	; 0x38
 800b5f8:	af00      	add	r7, sp, #0
 800b5fa:	60f8      	str	r0, [r7, #12]
 800b5fc:	60b9      	str	r1, [r7, #8]
 800b5fe:	607a      	str	r2, [r7, #4]
 800b600:	68fb      	ldr	r3, [r7, #12]
 800b602:	633b      	str	r3, [r7, #48]	; 0x30
 800b604:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b606:	2b00      	cmp	r3, #0
 800b608:	d10a      	bne.n	800b620 <xQueueReceiveFromISR+0x2c>
 800b60a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b60e:	f383 8811 	msr	BASEPRI, r3
 800b612:	f3bf 8f6f 	isb	sy
 800b616:	f3bf 8f4f 	dsb	sy
 800b61a:	623b      	str	r3, [r7, #32]
 800b61c:	bf00      	nop
 800b61e:	e7fe      	b.n	800b61e <xQueueReceiveFromISR+0x2a>
 800b620:	68bb      	ldr	r3, [r7, #8]
 800b622:	2b00      	cmp	r3, #0
 800b624:	d103      	bne.n	800b62e <xQueueReceiveFromISR+0x3a>
 800b626:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b628:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b62a:	2b00      	cmp	r3, #0
 800b62c:	d101      	bne.n	800b632 <xQueueReceiveFromISR+0x3e>
 800b62e:	2301      	movs	r3, #1
 800b630:	e000      	b.n	800b634 <xQueueReceiveFromISR+0x40>
 800b632:	2300      	movs	r3, #0
 800b634:	2b00      	cmp	r3, #0
 800b636:	d10a      	bne.n	800b64e <xQueueReceiveFromISR+0x5a>
 800b638:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b63c:	f383 8811 	msr	BASEPRI, r3
 800b640:	f3bf 8f6f 	isb	sy
 800b644:	f3bf 8f4f 	dsb	sy
 800b648:	61fb      	str	r3, [r7, #28]
 800b64a:	bf00      	nop
 800b64c:	e7fe      	b.n	800b64c <xQueueReceiveFromISR+0x58>
 800b64e:	f001 fdb3 	bl	800d1b8 <vPortValidateInterruptPriority>
 800b652:	f3ef 8211 	mrs	r2, BASEPRI
 800b656:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b65a:	f383 8811 	msr	BASEPRI, r3
 800b65e:	f3bf 8f6f 	isb	sy
 800b662:	f3bf 8f4f 	dsb	sy
 800b666:	61ba      	str	r2, [r7, #24]
 800b668:	617b      	str	r3, [r7, #20]
 800b66a:	69bb      	ldr	r3, [r7, #24]
 800b66c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b66e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b670:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b672:	62bb      	str	r3, [r7, #40]	; 0x28
 800b674:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b676:	2b00      	cmp	r3, #0
 800b678:	d02f      	beq.n	800b6da <xQueueReceiveFromISR+0xe6>
 800b67a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b67c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b680:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 800b684:	68b9      	ldr	r1, [r7, #8]
 800b686:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800b688:	f000 f89e 	bl	800b7c8 <prvCopyDataFromQueue>
 800b68c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b68e:	1e5a      	subs	r2, r3, #1
 800b690:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b692:	639a      	str	r2, [r3, #56]	; 0x38
 800b694:	f997 3027 	ldrsb.w	r3, [r7, #39]	; 0x27
 800b698:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b69c:	d112      	bne.n	800b6c4 <xQueueReceiveFromISR+0xd0>
 800b69e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b6a0:	691b      	ldr	r3, [r3, #16]
 800b6a2:	2b00      	cmp	r3, #0
 800b6a4:	d016      	beq.n	800b6d4 <xQueueReceiveFromISR+0xe0>
 800b6a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b6a8:	3310      	adds	r3, #16
 800b6aa:	4618      	mov	r0, r3
 800b6ac:	f000 fd7e 	bl	800c1ac <xTaskRemoveFromEventList>
 800b6b0:	4603      	mov	r3, r0
 800b6b2:	2b00      	cmp	r3, #0
 800b6b4:	d00e      	beq.n	800b6d4 <xQueueReceiveFromISR+0xe0>
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	2b00      	cmp	r3, #0
 800b6ba:	d00b      	beq.n	800b6d4 <xQueueReceiveFromISR+0xe0>
 800b6bc:	687b      	ldr	r3, [r7, #4]
 800b6be:	2201      	movs	r2, #1
 800b6c0:	601a      	str	r2, [r3, #0]
 800b6c2:	e007      	b.n	800b6d4 <xQueueReceiveFromISR+0xe0>
 800b6c4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800b6c8:	3301      	adds	r3, #1
 800b6ca:	b2db      	uxtb	r3, r3
 800b6cc:	b25a      	sxtb	r2, r3
 800b6ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b6d0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b6d4:	2301      	movs	r3, #1
 800b6d6:	637b      	str	r3, [r7, #52]	; 0x34
 800b6d8:	e001      	b.n	800b6de <xQueueReceiveFromISR+0xea>
 800b6da:	2300      	movs	r3, #0
 800b6dc:	637b      	str	r3, [r7, #52]	; 0x34
 800b6de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b6e0:	613b      	str	r3, [r7, #16]
 800b6e2:	693b      	ldr	r3, [r7, #16]
 800b6e4:	f383 8811 	msr	BASEPRI, r3
 800b6e8:	bf00      	nop
 800b6ea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	3738      	adds	r7, #56	; 0x38
 800b6f0:	46bd      	mov	sp, r7
 800b6f2:	bd80      	pop	{r7, pc}

0800b6f4 <prvCopyDataToQueue>:
 800b6f4:	b580      	push	{r7, lr}
 800b6f6:	b086      	sub	sp, #24
 800b6f8:	af00      	add	r7, sp, #0
 800b6fa:	60f8      	str	r0, [r7, #12]
 800b6fc:	60b9      	str	r1, [r7, #8]
 800b6fe:	607a      	str	r2, [r7, #4]
 800b700:	2300      	movs	r3, #0
 800b702:	617b      	str	r3, [r7, #20]
 800b704:	68fb      	ldr	r3, [r7, #12]
 800b706:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b708:	613b      	str	r3, [r7, #16]
 800b70a:	68fb      	ldr	r3, [r7, #12]
 800b70c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b70e:	2b00      	cmp	r3, #0
 800b710:	d10d      	bne.n	800b72e <prvCopyDataToQueue+0x3a>
 800b712:	68fb      	ldr	r3, [r7, #12]
 800b714:	681b      	ldr	r3, [r3, #0]
 800b716:	2b00      	cmp	r3, #0
 800b718:	d14d      	bne.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b71a:	68fb      	ldr	r3, [r7, #12]
 800b71c:	685b      	ldr	r3, [r3, #4]
 800b71e:	4618      	mov	r0, r3
 800b720:	f000 ff94 	bl	800c64c <xTaskPriorityDisinherit>
 800b724:	6178      	str	r0, [r7, #20]
 800b726:	68fb      	ldr	r3, [r7, #12]
 800b728:	2200      	movs	r2, #0
 800b72a:	605a      	str	r2, [r3, #4]
 800b72c:	e043      	b.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	2b00      	cmp	r3, #0
 800b732:	d119      	bne.n	800b768 <prvCopyDataToQueue+0x74>
 800b734:	68fb      	ldr	r3, [r7, #12]
 800b736:	6898      	ldr	r0, [r3, #8]
 800b738:	68fb      	ldr	r3, [r7, #12]
 800b73a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b73c:	461a      	mov	r2, r3
 800b73e:	68b9      	ldr	r1, [r7, #8]
 800b740:	f001 ffb8 	bl	800d6b4 <memcpy>
 800b744:	68fb      	ldr	r3, [r7, #12]
 800b746:	689a      	ldr	r2, [r3, #8]
 800b748:	68fb      	ldr	r3, [r7, #12]
 800b74a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b74c:	441a      	add	r2, r3
 800b74e:	68fb      	ldr	r3, [r7, #12]
 800b750:	609a      	str	r2, [r3, #8]
 800b752:	68fb      	ldr	r3, [r7, #12]
 800b754:	689a      	ldr	r2, [r3, #8]
 800b756:	68fb      	ldr	r3, [r7, #12]
 800b758:	685b      	ldr	r3, [r3, #4]
 800b75a:	429a      	cmp	r2, r3
 800b75c:	d32b      	bcc.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b75e:	68fb      	ldr	r3, [r7, #12]
 800b760:	681a      	ldr	r2, [r3, #0]
 800b762:	68fb      	ldr	r3, [r7, #12]
 800b764:	609a      	str	r2, [r3, #8]
 800b766:	e026      	b.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b768:	68fb      	ldr	r3, [r7, #12]
 800b76a:	68d8      	ldr	r0, [r3, #12]
 800b76c:	68fb      	ldr	r3, [r7, #12]
 800b76e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b770:	461a      	mov	r2, r3
 800b772:	68b9      	ldr	r1, [r7, #8]
 800b774:	f001 ff9e 	bl	800d6b4 <memcpy>
 800b778:	68fb      	ldr	r3, [r7, #12]
 800b77a:	68da      	ldr	r2, [r3, #12]
 800b77c:	68fb      	ldr	r3, [r7, #12]
 800b77e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b780:	425b      	negs	r3, r3
 800b782:	441a      	add	r2, r3
 800b784:	68fb      	ldr	r3, [r7, #12]
 800b786:	60da      	str	r2, [r3, #12]
 800b788:	68fb      	ldr	r3, [r7, #12]
 800b78a:	68da      	ldr	r2, [r3, #12]
 800b78c:	68fb      	ldr	r3, [r7, #12]
 800b78e:	681b      	ldr	r3, [r3, #0]
 800b790:	429a      	cmp	r2, r3
 800b792:	d207      	bcs.n	800b7a4 <prvCopyDataToQueue+0xb0>
 800b794:	68fb      	ldr	r3, [r7, #12]
 800b796:	685a      	ldr	r2, [r3, #4]
 800b798:	68fb      	ldr	r3, [r7, #12]
 800b79a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b79c:	425b      	negs	r3, r3
 800b79e:	441a      	add	r2, r3
 800b7a0:	68fb      	ldr	r3, [r7, #12]
 800b7a2:	60da      	str	r2, [r3, #12]
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	2b02      	cmp	r3, #2
 800b7a8:	d105      	bne.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b7aa:	693b      	ldr	r3, [r7, #16]
 800b7ac:	2b00      	cmp	r3, #0
 800b7ae:	d002      	beq.n	800b7b6 <prvCopyDataToQueue+0xc2>
 800b7b0:	693b      	ldr	r3, [r7, #16]
 800b7b2:	3b01      	subs	r3, #1
 800b7b4:	613b      	str	r3, [r7, #16]
 800b7b6:	693b      	ldr	r3, [r7, #16]
 800b7b8:	1c5a      	adds	r2, r3, #1
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	639a      	str	r2, [r3, #56]	; 0x38
 800b7be:	697b      	ldr	r3, [r7, #20]
 800b7c0:	4618      	mov	r0, r3
 800b7c2:	3718      	adds	r7, #24
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	bd80      	pop	{r7, pc}

0800b7c8 <prvCopyDataFromQueue>:
 800b7c8:	b580      	push	{r7, lr}
 800b7ca:	b082      	sub	sp, #8
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	6078      	str	r0, [r7, #4]
 800b7d0:	6039      	str	r1, [r7, #0]
 800b7d2:	687b      	ldr	r3, [r7, #4]
 800b7d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b7d6:	2b00      	cmp	r3, #0
 800b7d8:	d018      	beq.n	800b80c <prvCopyDataFromQueue+0x44>
 800b7da:	687b      	ldr	r3, [r7, #4]
 800b7dc:	68da      	ldr	r2, [r3, #12]
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b7e2:	441a      	add	r2, r3
 800b7e4:	687b      	ldr	r3, [r7, #4]
 800b7e6:	60da      	str	r2, [r3, #12]
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	68da      	ldr	r2, [r3, #12]
 800b7ec:	687b      	ldr	r3, [r7, #4]
 800b7ee:	685b      	ldr	r3, [r3, #4]
 800b7f0:	429a      	cmp	r2, r3
 800b7f2:	d303      	bcc.n	800b7fc <prvCopyDataFromQueue+0x34>
 800b7f4:	687b      	ldr	r3, [r7, #4]
 800b7f6:	681a      	ldr	r2, [r3, #0]
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	60da      	str	r2, [r3, #12]
 800b7fc:	687b      	ldr	r3, [r7, #4]
 800b7fe:	68d9      	ldr	r1, [r3, #12]
 800b800:	687b      	ldr	r3, [r7, #4]
 800b802:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b804:	461a      	mov	r2, r3
 800b806:	6838      	ldr	r0, [r7, #0]
 800b808:	f001 ff54 	bl	800d6b4 <memcpy>
 800b80c:	bf00      	nop
 800b80e:	3708      	adds	r7, #8
 800b810:	46bd      	mov	sp, r7
 800b812:	bd80      	pop	{r7, pc}

0800b814 <prvUnlockQueue>:
 800b814:	b580      	push	{r7, lr}
 800b816:	b084      	sub	sp, #16
 800b818:	af00      	add	r7, sp, #0
 800b81a:	6078      	str	r0, [r7, #4]
 800b81c:	f001 fbf2 	bl	800d004 <vPortEnterCritical>
 800b820:	687b      	ldr	r3, [r7, #4]
 800b822:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b826:	73fb      	strb	r3, [r7, #15]
 800b828:	e011      	b.n	800b84e <prvUnlockQueue+0x3a>
 800b82a:	687b      	ldr	r3, [r7, #4]
 800b82c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b82e:	2b00      	cmp	r3, #0
 800b830:	d012      	beq.n	800b858 <prvUnlockQueue+0x44>
 800b832:	687b      	ldr	r3, [r7, #4]
 800b834:	3324      	adds	r3, #36	; 0x24
 800b836:	4618      	mov	r0, r3
 800b838:	f000 fcb8 	bl	800c1ac <xTaskRemoveFromEventList>
 800b83c:	4603      	mov	r3, r0
 800b83e:	2b00      	cmp	r3, #0
 800b840:	d001      	beq.n	800b846 <prvUnlockQueue+0x32>
 800b842:	f000 fd99 	bl	800c378 <vTaskMissedYield>
 800b846:	7bfb      	ldrb	r3, [r7, #15]
 800b848:	3b01      	subs	r3, #1
 800b84a:	b2db      	uxtb	r3, r3
 800b84c:	73fb      	strb	r3, [r7, #15]
 800b84e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800b852:	2b00      	cmp	r3, #0
 800b854:	dce9      	bgt.n	800b82a <prvUnlockQueue+0x16>
 800b856:	e000      	b.n	800b85a <prvUnlockQueue+0x46>
 800b858:	bf00      	nop
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	22ff      	movs	r2, #255	; 0xff
 800b85e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b862:	f001 fbff 	bl	800d064 <vPortExitCritical>
 800b866:	f001 fbcd 	bl	800d004 <vPortEnterCritical>
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b870:	73bb      	strb	r3, [r7, #14]
 800b872:	e011      	b.n	800b898 <prvUnlockQueue+0x84>
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	691b      	ldr	r3, [r3, #16]
 800b878:	2b00      	cmp	r3, #0
 800b87a:	d012      	beq.n	800b8a2 <prvUnlockQueue+0x8e>
 800b87c:	687b      	ldr	r3, [r7, #4]
 800b87e:	3310      	adds	r3, #16
 800b880:	4618      	mov	r0, r3
 800b882:	f000 fc93 	bl	800c1ac <xTaskRemoveFromEventList>
 800b886:	4603      	mov	r3, r0
 800b888:	2b00      	cmp	r3, #0
 800b88a:	d001      	beq.n	800b890 <prvUnlockQueue+0x7c>
 800b88c:	f000 fd74 	bl	800c378 <vTaskMissedYield>
 800b890:	7bbb      	ldrb	r3, [r7, #14]
 800b892:	3b01      	subs	r3, #1
 800b894:	b2db      	uxtb	r3, r3
 800b896:	73bb      	strb	r3, [r7, #14]
 800b898:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800b89c:	2b00      	cmp	r3, #0
 800b89e:	dce9      	bgt.n	800b874 <prvUnlockQueue+0x60>
 800b8a0:	e000      	b.n	800b8a4 <prvUnlockQueue+0x90>
 800b8a2:	bf00      	nop
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	22ff      	movs	r2, #255	; 0xff
 800b8a8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b8ac:	f001 fbda 	bl	800d064 <vPortExitCritical>
 800b8b0:	bf00      	nop
 800b8b2:	3710      	adds	r7, #16
 800b8b4:	46bd      	mov	sp, r7
 800b8b6:	bd80      	pop	{r7, pc}

0800b8b8 <prvIsQueueEmpty>:
 800b8b8:	b580      	push	{r7, lr}
 800b8ba:	b084      	sub	sp, #16
 800b8bc:	af00      	add	r7, sp, #0
 800b8be:	6078      	str	r0, [r7, #4]
 800b8c0:	f001 fba0 	bl	800d004 <vPortEnterCritical>
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b8c8:	2b00      	cmp	r3, #0
 800b8ca:	d102      	bne.n	800b8d2 <prvIsQueueEmpty+0x1a>
 800b8cc:	2301      	movs	r3, #1
 800b8ce:	60fb      	str	r3, [r7, #12]
 800b8d0:	e001      	b.n	800b8d6 <prvIsQueueEmpty+0x1e>
 800b8d2:	2300      	movs	r3, #0
 800b8d4:	60fb      	str	r3, [r7, #12]
 800b8d6:	f001 fbc5 	bl	800d064 <vPortExitCritical>
 800b8da:	68fb      	ldr	r3, [r7, #12]
 800b8dc:	4618      	mov	r0, r3
 800b8de:	3710      	adds	r7, #16
 800b8e0:	46bd      	mov	sp, r7
 800b8e2:	bd80      	pop	{r7, pc}

0800b8e4 <prvIsQueueFull>:
 800b8e4:	b580      	push	{r7, lr}
 800b8e6:	b084      	sub	sp, #16
 800b8e8:	af00      	add	r7, sp, #0
 800b8ea:	6078      	str	r0, [r7, #4]
 800b8ec:	f001 fb8a 	bl	800d004 <vPortEnterCritical>
 800b8f0:	687b      	ldr	r3, [r7, #4]
 800b8f2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800b8f4:	687b      	ldr	r3, [r7, #4]
 800b8f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b8f8:	429a      	cmp	r2, r3
 800b8fa:	d102      	bne.n	800b902 <prvIsQueueFull+0x1e>
 800b8fc:	2301      	movs	r3, #1
 800b8fe:	60fb      	str	r3, [r7, #12]
 800b900:	e001      	b.n	800b906 <prvIsQueueFull+0x22>
 800b902:	2300      	movs	r3, #0
 800b904:	60fb      	str	r3, [r7, #12]
 800b906:	f001 fbad 	bl	800d064 <vPortExitCritical>
 800b90a:	68fb      	ldr	r3, [r7, #12]
 800b90c:	4618      	mov	r0, r3
 800b90e:	3710      	adds	r7, #16
 800b910:	46bd      	mov	sp, r7
 800b912:	bd80      	pop	{r7, pc}

0800b914 <vQueueAddToRegistry>:
 800b914:	b480      	push	{r7}
 800b916:	b085      	sub	sp, #20
 800b918:	af00      	add	r7, sp, #0
 800b91a:	6078      	str	r0, [r7, #4]
 800b91c:	6039      	str	r1, [r7, #0]
 800b91e:	2300      	movs	r3, #0
 800b920:	60fb      	str	r3, [r7, #12]
 800b922:	e014      	b.n	800b94e <vQueueAddToRegistry+0x3a>
 800b924:	4a0f      	ldr	r2, [pc, #60]	; (800b964 <vQueueAddToRegistry+0x50>)
 800b926:	68fb      	ldr	r3, [r7, #12]
 800b928:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800b92c:	2b00      	cmp	r3, #0
 800b92e:	d10b      	bne.n	800b948 <vQueueAddToRegistry+0x34>
 800b930:	490c      	ldr	r1, [pc, #48]	; (800b964 <vQueueAddToRegistry+0x50>)
 800b932:	68fb      	ldr	r3, [r7, #12]
 800b934:	683a      	ldr	r2, [r7, #0]
 800b936:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800b93a:	4a0a      	ldr	r2, [pc, #40]	; (800b964 <vQueueAddToRegistry+0x50>)
 800b93c:	68fb      	ldr	r3, [r7, #12]
 800b93e:	00db      	lsls	r3, r3, #3
 800b940:	4413      	add	r3, r2
 800b942:	687a      	ldr	r2, [r7, #4]
 800b944:	605a      	str	r2, [r3, #4]
 800b946:	e006      	b.n	800b956 <vQueueAddToRegistry+0x42>
 800b948:	68fb      	ldr	r3, [r7, #12]
 800b94a:	3301      	adds	r3, #1
 800b94c:	60fb      	str	r3, [r7, #12]
 800b94e:	68fb      	ldr	r3, [r7, #12]
 800b950:	2b07      	cmp	r3, #7
 800b952:	d9e7      	bls.n	800b924 <vQueueAddToRegistry+0x10>
 800b954:	bf00      	nop
 800b956:	bf00      	nop
 800b958:	3714      	adds	r7, #20
 800b95a:	46bd      	mov	sp, r7
 800b95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b960:	4770      	bx	lr
 800b962:	bf00      	nop
 800b964:	2000082c 	.word	0x2000082c

0800b968 <vQueueWaitForMessageRestricted>:
 800b968:	b580      	push	{r7, lr}
 800b96a:	b086      	sub	sp, #24
 800b96c:	af00      	add	r7, sp, #0
 800b96e:	60f8      	str	r0, [r7, #12]
 800b970:	60b9      	str	r1, [r7, #8]
 800b972:	607a      	str	r2, [r7, #4]
 800b974:	68fb      	ldr	r3, [r7, #12]
 800b976:	617b      	str	r3, [r7, #20]
 800b978:	f001 fb44 	bl	800d004 <vPortEnterCritical>
 800b97c:	697b      	ldr	r3, [r7, #20]
 800b97e:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800b982:	b25b      	sxtb	r3, r3
 800b984:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b988:	d103      	bne.n	800b992 <vQueueWaitForMessageRestricted+0x2a>
 800b98a:	697b      	ldr	r3, [r7, #20]
 800b98c:	2200      	movs	r2, #0
 800b98e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800b992:	697b      	ldr	r3, [r7, #20]
 800b994:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800b998:	b25b      	sxtb	r3, r3
 800b99a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b99e:	d103      	bne.n	800b9a8 <vQueueWaitForMessageRestricted+0x40>
 800b9a0:	697b      	ldr	r3, [r7, #20]
 800b9a2:	2200      	movs	r2, #0
 800b9a4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800b9a8:	f001 fb5c 	bl	800d064 <vPortExitCritical>
 800b9ac:	697b      	ldr	r3, [r7, #20]
 800b9ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b9b0:	2b00      	cmp	r3, #0
 800b9b2:	d106      	bne.n	800b9c2 <vQueueWaitForMessageRestricted+0x5a>
 800b9b4:	697b      	ldr	r3, [r7, #20]
 800b9b6:	3324      	adds	r3, #36	; 0x24
 800b9b8:	687a      	ldr	r2, [r7, #4]
 800b9ba:	68b9      	ldr	r1, [r7, #8]
 800b9bc:	4618      	mov	r0, r3
 800b9be:	f000 fbc9 	bl	800c154 <vTaskPlaceOnEventListRestricted>
 800b9c2:	6978      	ldr	r0, [r7, #20]
 800b9c4:	f7ff ff26 	bl	800b814 <prvUnlockQueue>
 800b9c8:	bf00      	nop
 800b9ca:	3718      	adds	r7, #24
 800b9cc:	46bd      	mov	sp, r7
 800b9ce:	bd80      	pop	{r7, pc}

0800b9d0 <xTaskCreate>:
 800b9d0:	b580      	push	{r7, lr}
 800b9d2:	b08c      	sub	sp, #48	; 0x30
 800b9d4:	af04      	add	r7, sp, #16
 800b9d6:	60f8      	str	r0, [r7, #12]
 800b9d8:	60b9      	str	r1, [r7, #8]
 800b9da:	603b      	str	r3, [r7, #0]
 800b9dc:	4613      	mov	r3, r2
 800b9de:	80fb      	strh	r3, [r7, #6]
 800b9e0:	88fb      	ldrh	r3, [r7, #6]
 800b9e2:	009b      	lsls	r3, r3, #2
 800b9e4:	4618      	mov	r0, r3
 800b9e6:	f001 fc27 	bl	800d238 <pvPortMalloc>
 800b9ea:	6178      	str	r0, [r7, #20]
 800b9ec:	697b      	ldr	r3, [r7, #20]
 800b9ee:	2b00      	cmp	r3, #0
 800b9f0:	d00e      	beq.n	800ba10 <xTaskCreate+0x40>
 800b9f2:	205c      	movs	r0, #92	; 0x5c
 800b9f4:	f001 fc20 	bl	800d238 <pvPortMalloc>
 800b9f8:	61f8      	str	r0, [r7, #28]
 800b9fa:	69fb      	ldr	r3, [r7, #28]
 800b9fc:	2b00      	cmp	r3, #0
 800b9fe:	d003      	beq.n	800ba08 <xTaskCreate+0x38>
 800ba00:	69fb      	ldr	r3, [r7, #28]
 800ba02:	697a      	ldr	r2, [r7, #20]
 800ba04:	631a      	str	r2, [r3, #48]	; 0x30
 800ba06:	e005      	b.n	800ba14 <xTaskCreate+0x44>
 800ba08:	6978      	ldr	r0, [r7, #20]
 800ba0a:	f001 fcd9 	bl	800d3c0 <vPortFree>
 800ba0e:	e001      	b.n	800ba14 <xTaskCreate+0x44>
 800ba10:	2300      	movs	r3, #0
 800ba12:	61fb      	str	r3, [r7, #28]
 800ba14:	69fb      	ldr	r3, [r7, #28]
 800ba16:	2b00      	cmp	r3, #0
 800ba18:	d013      	beq.n	800ba42 <xTaskCreate+0x72>
 800ba1a:	88fa      	ldrh	r2, [r7, #6]
 800ba1c:	2300      	movs	r3, #0
 800ba1e:	9303      	str	r3, [sp, #12]
 800ba20:	69fb      	ldr	r3, [r7, #28]
 800ba22:	9302      	str	r3, [sp, #8]
 800ba24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ba26:	9301      	str	r3, [sp, #4]
 800ba28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ba2a:	9300      	str	r3, [sp, #0]
 800ba2c:	683b      	ldr	r3, [r7, #0]
 800ba2e:	68b9      	ldr	r1, [r7, #8]
 800ba30:	68f8      	ldr	r0, [r7, #12]
 800ba32:	f000 f80e 	bl	800ba52 <prvInitialiseNewTask>
 800ba36:	69f8      	ldr	r0, [r7, #28]
 800ba38:	f000 f892 	bl	800bb60 <prvAddNewTaskToReadyList>
 800ba3c:	2301      	movs	r3, #1
 800ba3e:	61bb      	str	r3, [r7, #24]
 800ba40:	e002      	b.n	800ba48 <xTaskCreate+0x78>
 800ba42:	f04f 33ff 	mov.w	r3, #4294967295
 800ba46:	61bb      	str	r3, [r7, #24]
 800ba48:	69bb      	ldr	r3, [r7, #24]
 800ba4a:	4618      	mov	r0, r3
 800ba4c:	3720      	adds	r7, #32
 800ba4e:	46bd      	mov	sp, r7
 800ba50:	bd80      	pop	{r7, pc}

0800ba52 <prvInitialiseNewTask>:
 800ba52:	b580      	push	{r7, lr}
 800ba54:	b088      	sub	sp, #32
 800ba56:	af00      	add	r7, sp, #0
 800ba58:	60f8      	str	r0, [r7, #12]
 800ba5a:	60b9      	str	r1, [r7, #8]
 800ba5c:	607a      	str	r2, [r7, #4]
 800ba5e:	603b      	str	r3, [r7, #0]
 800ba60:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba62:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	009b      	lsls	r3, r3, #2
 800ba68:	461a      	mov	r2, r3
 800ba6a:	21a5      	movs	r1, #165	; 0xa5
 800ba6c:	f001 fe30 	bl	800d6d0 <memset>
 800ba70:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ba72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ba74:	687b      	ldr	r3, [r7, #4]
 800ba76:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800ba7a:	3b01      	subs	r3, #1
 800ba7c:	009b      	lsls	r3, r3, #2
 800ba7e:	4413      	add	r3, r2
 800ba80:	61bb      	str	r3, [r7, #24]
 800ba82:	69bb      	ldr	r3, [r7, #24]
 800ba84:	f023 0307 	bic.w	r3, r3, #7
 800ba88:	61bb      	str	r3, [r7, #24]
 800ba8a:	69bb      	ldr	r3, [r7, #24]
 800ba8c:	f003 0307 	and.w	r3, r3, #7
 800ba90:	2b00      	cmp	r3, #0
 800ba92:	d00a      	beq.n	800baaa <prvInitialiseNewTask+0x58>
 800ba94:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ba98:	f383 8811 	msr	BASEPRI, r3
 800ba9c:	f3bf 8f6f 	isb	sy
 800baa0:	f3bf 8f4f 	dsb	sy
 800baa4:	617b      	str	r3, [r7, #20]
 800baa6:	bf00      	nop
 800baa8:	e7fe      	b.n	800baa8 <prvInitialiseNewTask+0x56>
 800baaa:	2300      	movs	r3, #0
 800baac:	61fb      	str	r3, [r7, #28]
 800baae:	e012      	b.n	800bad6 <prvInitialiseNewTask+0x84>
 800bab0:	68ba      	ldr	r2, [r7, #8]
 800bab2:	69fb      	ldr	r3, [r7, #28]
 800bab4:	4413      	add	r3, r2
 800bab6:	7819      	ldrb	r1, [r3, #0]
 800bab8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800baba:	69fb      	ldr	r3, [r7, #28]
 800babc:	4413      	add	r3, r2
 800babe:	3334      	adds	r3, #52	; 0x34
 800bac0:	460a      	mov	r2, r1
 800bac2:	701a      	strb	r2, [r3, #0]
 800bac4:	68ba      	ldr	r2, [r7, #8]
 800bac6:	69fb      	ldr	r3, [r7, #28]
 800bac8:	4413      	add	r3, r2
 800baca:	781b      	ldrb	r3, [r3, #0]
 800bacc:	2b00      	cmp	r3, #0
 800bace:	d006      	beq.n	800bade <prvInitialiseNewTask+0x8c>
 800bad0:	69fb      	ldr	r3, [r7, #28]
 800bad2:	3301      	adds	r3, #1
 800bad4:	61fb      	str	r3, [r7, #28]
 800bad6:	69fb      	ldr	r3, [r7, #28]
 800bad8:	2b0f      	cmp	r3, #15
 800bada:	d9e9      	bls.n	800bab0 <prvInitialiseNewTask+0x5e>
 800badc:	e000      	b.n	800bae0 <prvInitialiseNewTask+0x8e>
 800bade:	bf00      	nop
 800bae0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bae2:	2200      	movs	r2, #0
 800bae4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800bae8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800baea:	2b06      	cmp	r3, #6
 800baec:	d901      	bls.n	800baf2 <prvInitialiseNewTask+0xa0>
 800baee:	2306      	movs	r3, #6
 800baf0:	62bb      	str	r3, [r7, #40]	; 0x28
 800baf2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800baf4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800baf6:	62da      	str	r2, [r3, #44]	; 0x2c
 800baf8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bafa:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800bafc:	64da      	str	r2, [r3, #76]	; 0x4c
 800bafe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb00:	2200      	movs	r2, #0
 800bb02:	651a      	str	r2, [r3, #80]	; 0x50
 800bb04:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb06:	3304      	adds	r3, #4
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f7ff f8ac 	bl	800ac66 <vListInitialiseItem>
 800bb0e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb10:	3318      	adds	r3, #24
 800bb12:	4618      	mov	r0, r3
 800bb14:	f7ff f8a7 	bl	800ac66 <vListInitialiseItem>
 800bb18:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb1a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bb1c:	611a      	str	r2, [r3, #16]
 800bb1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bb20:	f1c3 0207 	rsb	r2, r3, #7
 800bb24:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb26:	619a      	str	r2, [r3, #24]
 800bb28:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb2a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bb2c:	625a      	str	r2, [r3, #36]	; 0x24
 800bb2e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb30:	2200      	movs	r2, #0
 800bb32:	655a      	str	r2, [r3, #84]	; 0x54
 800bb34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb36:	2200      	movs	r2, #0
 800bb38:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 800bb3c:	683a      	ldr	r2, [r7, #0]
 800bb3e:	68f9      	ldr	r1, [r7, #12]
 800bb40:	69b8      	ldr	r0, [r7, #24]
 800bb42:	f001 f955 	bl	800cdf0 <pxPortInitialiseStack>
 800bb46:	4602      	mov	r2, r0
 800bb48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bb4a:	601a      	str	r2, [r3, #0]
 800bb4c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb4e:	2b00      	cmp	r3, #0
 800bb50:	d002      	beq.n	800bb58 <prvInitialiseNewTask+0x106>
 800bb52:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bb54:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bb56:	601a      	str	r2, [r3, #0]
 800bb58:	bf00      	nop
 800bb5a:	3720      	adds	r7, #32
 800bb5c:	46bd      	mov	sp, r7
 800bb5e:	bd80      	pop	{r7, pc}

0800bb60 <prvAddNewTaskToReadyList>:
 800bb60:	b580      	push	{r7, lr}
 800bb62:	b082      	sub	sp, #8
 800bb64:	af00      	add	r7, sp, #0
 800bb66:	6078      	str	r0, [r7, #4]
 800bb68:	f001 fa4c 	bl	800d004 <vPortEnterCritical>
 800bb6c:	4b2c      	ldr	r3, [pc, #176]	; (800bc20 <prvAddNewTaskToReadyList+0xc0>)
 800bb6e:	681b      	ldr	r3, [r3, #0]
 800bb70:	3301      	adds	r3, #1
 800bb72:	4a2b      	ldr	r2, [pc, #172]	; (800bc20 <prvAddNewTaskToReadyList+0xc0>)
 800bb74:	6013      	str	r3, [r2, #0]
 800bb76:	4b2b      	ldr	r3, [pc, #172]	; (800bc24 <prvAddNewTaskToReadyList+0xc4>)
 800bb78:	681b      	ldr	r3, [r3, #0]
 800bb7a:	2b00      	cmp	r3, #0
 800bb7c:	d109      	bne.n	800bb92 <prvAddNewTaskToReadyList+0x32>
 800bb7e:	4a29      	ldr	r2, [pc, #164]	; (800bc24 <prvAddNewTaskToReadyList+0xc4>)
 800bb80:	687b      	ldr	r3, [r7, #4]
 800bb82:	6013      	str	r3, [r2, #0]
 800bb84:	4b26      	ldr	r3, [pc, #152]	; (800bc20 <prvAddNewTaskToReadyList+0xc0>)
 800bb86:	681b      	ldr	r3, [r3, #0]
 800bb88:	2b01      	cmp	r3, #1
 800bb8a:	d110      	bne.n	800bbae <prvAddNewTaskToReadyList+0x4e>
 800bb8c:	f000 fc18 	bl	800c3c0 <prvInitialiseTaskLists>
 800bb90:	e00d      	b.n	800bbae <prvAddNewTaskToReadyList+0x4e>
 800bb92:	4b25      	ldr	r3, [pc, #148]	; (800bc28 <prvAddNewTaskToReadyList+0xc8>)
 800bb94:	681b      	ldr	r3, [r3, #0]
 800bb96:	2b00      	cmp	r3, #0
 800bb98:	d109      	bne.n	800bbae <prvAddNewTaskToReadyList+0x4e>
 800bb9a:	4b22      	ldr	r3, [pc, #136]	; (800bc24 <prvAddNewTaskToReadyList+0xc4>)
 800bb9c:	681b      	ldr	r3, [r3, #0]
 800bb9e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bba0:	687b      	ldr	r3, [r7, #4]
 800bba2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bba4:	429a      	cmp	r2, r3
 800bba6:	d802      	bhi.n	800bbae <prvAddNewTaskToReadyList+0x4e>
 800bba8:	4a1e      	ldr	r2, [pc, #120]	; (800bc24 <prvAddNewTaskToReadyList+0xc4>)
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	6013      	str	r3, [r2, #0]
 800bbae:	4b1f      	ldr	r3, [pc, #124]	; (800bc2c <prvAddNewTaskToReadyList+0xcc>)
 800bbb0:	681b      	ldr	r3, [r3, #0]
 800bbb2:	3301      	adds	r3, #1
 800bbb4:	4a1d      	ldr	r2, [pc, #116]	; (800bc2c <prvAddNewTaskToReadyList+0xcc>)
 800bbb6:	6013      	str	r3, [r2, #0]
 800bbb8:	4b1c      	ldr	r3, [pc, #112]	; (800bc2c <prvAddNewTaskToReadyList+0xcc>)
 800bbba:	681a      	ldr	r2, [r3, #0]
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	645a      	str	r2, [r3, #68]	; 0x44
 800bbc0:	687b      	ldr	r3, [r7, #4]
 800bbc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bbc4:	2201      	movs	r2, #1
 800bbc6:	409a      	lsls	r2, r3
 800bbc8:	4b19      	ldr	r3, [pc, #100]	; (800bc30 <prvAddNewTaskToReadyList+0xd0>)
 800bbca:	681b      	ldr	r3, [r3, #0]
 800bbcc:	4313      	orrs	r3, r2
 800bbce:	4a18      	ldr	r2, [pc, #96]	; (800bc30 <prvAddNewTaskToReadyList+0xd0>)
 800bbd0:	6013      	str	r3, [r2, #0]
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bbd6:	4613      	mov	r3, r2
 800bbd8:	009b      	lsls	r3, r3, #2
 800bbda:	4413      	add	r3, r2
 800bbdc:	009b      	lsls	r3, r3, #2
 800bbde:	4a15      	ldr	r2, [pc, #84]	; (800bc34 <prvAddNewTaskToReadyList+0xd4>)
 800bbe0:	441a      	add	r2, r3
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	3304      	adds	r3, #4
 800bbe6:	4619      	mov	r1, r3
 800bbe8:	4610      	mov	r0, r2
 800bbea:	f7ff f849 	bl	800ac80 <vListInsertEnd>
 800bbee:	f001 fa39 	bl	800d064 <vPortExitCritical>
 800bbf2:	4b0d      	ldr	r3, [pc, #52]	; (800bc28 <prvAddNewTaskToReadyList+0xc8>)
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	2b00      	cmp	r3, #0
 800bbf8:	d00e      	beq.n	800bc18 <prvAddNewTaskToReadyList+0xb8>
 800bbfa:	4b0a      	ldr	r3, [pc, #40]	; (800bc24 <prvAddNewTaskToReadyList+0xc4>)
 800bbfc:	681b      	ldr	r3, [r3, #0]
 800bbfe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc04:	429a      	cmp	r2, r3
 800bc06:	d207      	bcs.n	800bc18 <prvAddNewTaskToReadyList+0xb8>
 800bc08:	4b0b      	ldr	r3, [pc, #44]	; (800bc38 <prvAddNewTaskToReadyList+0xd8>)
 800bc0a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bc0e:	601a      	str	r2, [r3, #0]
 800bc10:	f3bf 8f4f 	dsb	sy
 800bc14:	f3bf 8f6f 	isb	sy
 800bc18:	bf00      	nop
 800bc1a:	3708      	adds	r7, #8
 800bc1c:	46bd      	mov	sp, r7
 800bc1e:	bd80      	pop	{r7, pc}
 800bc20:	2000096c 	.word	0x2000096c
 800bc24:	2000086c 	.word	0x2000086c
 800bc28:	20000978 	.word	0x20000978
 800bc2c:	20000988 	.word	0x20000988
 800bc30:	20000974 	.word	0x20000974
 800bc34:	20000870 	.word	0x20000870
 800bc38:	e000ed04 	.word	0xe000ed04

0800bc3c <vTaskDelay>:
 800bc3c:	b580      	push	{r7, lr}
 800bc3e:	b084      	sub	sp, #16
 800bc40:	af00      	add	r7, sp, #0
 800bc42:	6078      	str	r0, [r7, #4]
 800bc44:	2300      	movs	r3, #0
 800bc46:	60fb      	str	r3, [r7, #12]
 800bc48:	687b      	ldr	r3, [r7, #4]
 800bc4a:	2b00      	cmp	r3, #0
 800bc4c:	d017      	beq.n	800bc7e <vTaskDelay+0x42>
 800bc4e:	4b13      	ldr	r3, [pc, #76]	; (800bc9c <vTaskDelay+0x60>)
 800bc50:	681b      	ldr	r3, [r3, #0]
 800bc52:	2b00      	cmp	r3, #0
 800bc54:	d00a      	beq.n	800bc6c <vTaskDelay+0x30>
 800bc56:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bc5a:	f383 8811 	msr	BASEPRI, r3
 800bc5e:	f3bf 8f6f 	isb	sy
 800bc62:	f3bf 8f4f 	dsb	sy
 800bc66:	60bb      	str	r3, [r7, #8]
 800bc68:	bf00      	nop
 800bc6a:	e7fe      	b.n	800bc6a <vTaskDelay+0x2e>
 800bc6c:	f000 f868 	bl	800bd40 <vTaskSuspendAll>
 800bc70:	2100      	movs	r1, #0
 800bc72:	6878      	ldr	r0, [r7, #4]
 800bc74:	f000 fd84 	bl	800c780 <prvAddCurrentTaskToDelayedList>
 800bc78:	f000 f870 	bl	800bd5c <xTaskResumeAll>
 800bc7c:	60f8      	str	r0, [r7, #12]
 800bc7e:	68fb      	ldr	r3, [r7, #12]
 800bc80:	2b00      	cmp	r3, #0
 800bc82:	d107      	bne.n	800bc94 <vTaskDelay+0x58>
 800bc84:	4b06      	ldr	r3, [pc, #24]	; (800bca0 <vTaskDelay+0x64>)
 800bc86:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800bc8a:	601a      	str	r2, [r3, #0]
 800bc8c:	f3bf 8f4f 	dsb	sy
 800bc90:	f3bf 8f6f 	isb	sy
 800bc94:	bf00      	nop
 800bc96:	3710      	adds	r7, #16
 800bc98:	46bd      	mov	sp, r7
 800bc9a:	bd80      	pop	{r7, pc}
 800bc9c:	20000994 	.word	0x20000994
 800bca0:	e000ed04 	.word	0xe000ed04

0800bca4 <vTaskStartScheduler>:
 800bca4:	b580      	push	{r7, lr}
 800bca6:	b086      	sub	sp, #24
 800bca8:	af02      	add	r7, sp, #8
 800bcaa:	4b1f      	ldr	r3, [pc, #124]	; (800bd28 <vTaskStartScheduler+0x84>)
 800bcac:	9301      	str	r3, [sp, #4]
 800bcae:	2300      	movs	r3, #0
 800bcb0:	9300      	str	r3, [sp, #0]
 800bcb2:	2300      	movs	r3, #0
 800bcb4:	f44f 7280 	mov.w	r2, #256	; 0x100
 800bcb8:	491c      	ldr	r1, [pc, #112]	; (800bd2c <vTaskStartScheduler+0x88>)
 800bcba:	481d      	ldr	r0, [pc, #116]	; (800bd30 <vTaskStartScheduler+0x8c>)
 800bcbc:	f7ff fe88 	bl	800b9d0 <xTaskCreate>
 800bcc0:	60f8      	str	r0, [r7, #12]
 800bcc2:	68fb      	ldr	r3, [r7, #12]
 800bcc4:	2b01      	cmp	r3, #1
 800bcc6:	d102      	bne.n	800bcce <vTaskStartScheduler+0x2a>
 800bcc8:	f000 fdc0 	bl	800c84c <xTimerCreateTimerTask>
 800bccc:	60f8      	str	r0, [r7, #12]
 800bcce:	68fb      	ldr	r3, [r7, #12]
 800bcd0:	2b01      	cmp	r3, #1
 800bcd2:	d116      	bne.n	800bd02 <vTaskStartScheduler+0x5e>
 800bcd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bcd8:	f383 8811 	msr	BASEPRI, r3
 800bcdc:	f3bf 8f6f 	isb	sy
 800bce0:	f3bf 8f4f 	dsb	sy
 800bce4:	60bb      	str	r3, [r7, #8]
 800bce6:	bf00      	nop
 800bce8:	4b12      	ldr	r3, [pc, #72]	; (800bd34 <vTaskStartScheduler+0x90>)
 800bcea:	f04f 32ff 	mov.w	r2, #4294967295
 800bcee:	601a      	str	r2, [r3, #0]
 800bcf0:	4b11      	ldr	r3, [pc, #68]	; (800bd38 <vTaskStartScheduler+0x94>)
 800bcf2:	2201      	movs	r2, #1
 800bcf4:	601a      	str	r2, [r3, #0]
 800bcf6:	4b11      	ldr	r3, [pc, #68]	; (800bd3c <vTaskStartScheduler+0x98>)
 800bcf8:	2200      	movs	r2, #0
 800bcfa:	601a      	str	r2, [r3, #0]
 800bcfc:	f001 f8f4 	bl	800cee8 <xPortStartScheduler>
 800bd00:	e00e      	b.n	800bd20 <vTaskStartScheduler+0x7c>
 800bd02:	68fb      	ldr	r3, [r7, #12]
 800bd04:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bd08:	d10a      	bne.n	800bd20 <vTaskStartScheduler+0x7c>
 800bd0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd0e:	f383 8811 	msr	BASEPRI, r3
 800bd12:	f3bf 8f6f 	isb	sy
 800bd16:	f3bf 8f4f 	dsb	sy
 800bd1a:	607b      	str	r3, [r7, #4]
 800bd1c:	bf00      	nop
 800bd1e:	e7fe      	b.n	800bd1e <vTaskStartScheduler+0x7a>
 800bd20:	bf00      	nop
 800bd22:	3710      	adds	r7, #16
 800bd24:	46bd      	mov	sp, r7
 800bd26:	bd80      	pop	{r7, pc}
 800bd28:	20000990 	.word	0x20000990
 800bd2c:	08010d38 	.word	0x08010d38
 800bd30:	0800c391 	.word	0x0800c391
 800bd34:	2000098c 	.word	0x2000098c
 800bd38:	20000978 	.word	0x20000978
 800bd3c:	20000970 	.word	0x20000970

0800bd40 <vTaskSuspendAll>:
 800bd40:	b480      	push	{r7}
 800bd42:	af00      	add	r7, sp, #0
 800bd44:	4b04      	ldr	r3, [pc, #16]	; (800bd58 <vTaskSuspendAll+0x18>)
 800bd46:	681b      	ldr	r3, [r3, #0]
 800bd48:	3301      	adds	r3, #1
 800bd4a:	4a03      	ldr	r2, [pc, #12]	; (800bd58 <vTaskSuspendAll+0x18>)
 800bd4c:	6013      	str	r3, [r2, #0]
 800bd4e:	bf00      	nop
 800bd50:	46bd      	mov	sp, r7
 800bd52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd56:	4770      	bx	lr
 800bd58:	20000994 	.word	0x20000994

0800bd5c <xTaskResumeAll>:
 800bd5c:	b580      	push	{r7, lr}
 800bd5e:	b084      	sub	sp, #16
 800bd60:	af00      	add	r7, sp, #0
 800bd62:	2300      	movs	r3, #0
 800bd64:	60fb      	str	r3, [r7, #12]
 800bd66:	2300      	movs	r3, #0
 800bd68:	60bb      	str	r3, [r7, #8]
 800bd6a:	4b41      	ldr	r3, [pc, #260]	; (800be70 <xTaskResumeAll+0x114>)
 800bd6c:	681b      	ldr	r3, [r3, #0]
 800bd6e:	2b00      	cmp	r3, #0
 800bd70:	d10a      	bne.n	800bd88 <xTaskResumeAll+0x2c>
 800bd72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bd76:	f383 8811 	msr	BASEPRI, r3
 800bd7a:	f3bf 8f6f 	isb	sy
 800bd7e:	f3bf 8f4f 	dsb	sy
 800bd82:	603b      	str	r3, [r7, #0]
 800bd84:	bf00      	nop
 800bd86:	e7fe      	b.n	800bd86 <xTaskResumeAll+0x2a>
 800bd88:	f001 f93c 	bl	800d004 <vPortEnterCritical>
 800bd8c:	4b38      	ldr	r3, [pc, #224]	; (800be70 <xTaskResumeAll+0x114>)
 800bd8e:	681b      	ldr	r3, [r3, #0]
 800bd90:	3b01      	subs	r3, #1
 800bd92:	4a37      	ldr	r2, [pc, #220]	; (800be70 <xTaskResumeAll+0x114>)
 800bd94:	6013      	str	r3, [r2, #0]
 800bd96:	4b36      	ldr	r3, [pc, #216]	; (800be70 <xTaskResumeAll+0x114>)
 800bd98:	681b      	ldr	r3, [r3, #0]
 800bd9a:	2b00      	cmp	r3, #0
 800bd9c:	d161      	bne.n	800be62 <xTaskResumeAll+0x106>
 800bd9e:	4b35      	ldr	r3, [pc, #212]	; (800be74 <xTaskResumeAll+0x118>)
 800bda0:	681b      	ldr	r3, [r3, #0]
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	d05d      	beq.n	800be62 <xTaskResumeAll+0x106>
 800bda6:	e02e      	b.n	800be06 <xTaskResumeAll+0xaa>
 800bda8:	4b33      	ldr	r3, [pc, #204]	; (800be78 <xTaskResumeAll+0x11c>)
 800bdaa:	68db      	ldr	r3, [r3, #12]
 800bdac:	68db      	ldr	r3, [r3, #12]
 800bdae:	60fb      	str	r3, [r7, #12]
 800bdb0:	68fb      	ldr	r3, [r7, #12]
 800bdb2:	3318      	adds	r3, #24
 800bdb4:	4618      	mov	r0, r3
 800bdb6:	f7fe ffc0 	bl	800ad3a <uxListRemove>
 800bdba:	68fb      	ldr	r3, [r7, #12]
 800bdbc:	3304      	adds	r3, #4
 800bdbe:	4618      	mov	r0, r3
 800bdc0:	f7fe ffbb 	bl	800ad3a <uxListRemove>
 800bdc4:	68fb      	ldr	r3, [r7, #12]
 800bdc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdc8:	2201      	movs	r2, #1
 800bdca:	409a      	lsls	r2, r3
 800bdcc:	4b2b      	ldr	r3, [pc, #172]	; (800be7c <xTaskResumeAll+0x120>)
 800bdce:	681b      	ldr	r3, [r3, #0]
 800bdd0:	4313      	orrs	r3, r2
 800bdd2:	4a2a      	ldr	r2, [pc, #168]	; (800be7c <xTaskResumeAll+0x120>)
 800bdd4:	6013      	str	r3, [r2, #0]
 800bdd6:	68fb      	ldr	r3, [r7, #12]
 800bdd8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bdda:	4613      	mov	r3, r2
 800bddc:	009b      	lsls	r3, r3, #2
 800bdde:	4413      	add	r3, r2
 800bde0:	009b      	lsls	r3, r3, #2
 800bde2:	4a27      	ldr	r2, [pc, #156]	; (800be80 <xTaskResumeAll+0x124>)
 800bde4:	441a      	add	r2, r3
 800bde6:	68fb      	ldr	r3, [r7, #12]
 800bde8:	3304      	adds	r3, #4
 800bdea:	4619      	mov	r1, r3
 800bdec:	4610      	mov	r0, r2
 800bdee:	f7fe ff47 	bl	800ac80 <vListInsertEnd>
 800bdf2:	68fb      	ldr	r3, [r7, #12]
 800bdf4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bdf6:	4b23      	ldr	r3, [pc, #140]	; (800be84 <xTaskResumeAll+0x128>)
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdfc:	429a      	cmp	r2, r3
 800bdfe:	d302      	bcc.n	800be06 <xTaskResumeAll+0xaa>
 800be00:	4b21      	ldr	r3, [pc, #132]	; (800be88 <xTaskResumeAll+0x12c>)
 800be02:	2201      	movs	r2, #1
 800be04:	601a      	str	r2, [r3, #0]
 800be06:	4b1c      	ldr	r3, [pc, #112]	; (800be78 <xTaskResumeAll+0x11c>)
 800be08:	681b      	ldr	r3, [r3, #0]
 800be0a:	2b00      	cmp	r3, #0
 800be0c:	d1cc      	bne.n	800bda8 <xTaskResumeAll+0x4c>
 800be0e:	68fb      	ldr	r3, [r7, #12]
 800be10:	2b00      	cmp	r3, #0
 800be12:	d001      	beq.n	800be18 <xTaskResumeAll+0xbc>
 800be14:	f000 fb60 	bl	800c4d8 <prvResetNextTaskUnblockTime>
 800be18:	4b1c      	ldr	r3, [pc, #112]	; (800be8c <xTaskResumeAll+0x130>)
 800be1a:	681b      	ldr	r3, [r3, #0]
 800be1c:	607b      	str	r3, [r7, #4]
 800be1e:	687b      	ldr	r3, [r7, #4]
 800be20:	2b00      	cmp	r3, #0
 800be22:	d010      	beq.n	800be46 <xTaskResumeAll+0xea>
 800be24:	f000 f858 	bl	800bed8 <xTaskIncrementTick>
 800be28:	4603      	mov	r3, r0
 800be2a:	2b00      	cmp	r3, #0
 800be2c:	d002      	beq.n	800be34 <xTaskResumeAll+0xd8>
 800be2e:	4b16      	ldr	r3, [pc, #88]	; (800be88 <xTaskResumeAll+0x12c>)
 800be30:	2201      	movs	r2, #1
 800be32:	601a      	str	r2, [r3, #0]
 800be34:	687b      	ldr	r3, [r7, #4]
 800be36:	3b01      	subs	r3, #1
 800be38:	607b      	str	r3, [r7, #4]
 800be3a:	687b      	ldr	r3, [r7, #4]
 800be3c:	2b00      	cmp	r3, #0
 800be3e:	d1f1      	bne.n	800be24 <xTaskResumeAll+0xc8>
 800be40:	4b12      	ldr	r3, [pc, #72]	; (800be8c <xTaskResumeAll+0x130>)
 800be42:	2200      	movs	r2, #0
 800be44:	601a      	str	r2, [r3, #0]
 800be46:	4b10      	ldr	r3, [pc, #64]	; (800be88 <xTaskResumeAll+0x12c>)
 800be48:	681b      	ldr	r3, [r3, #0]
 800be4a:	2b00      	cmp	r3, #0
 800be4c:	d009      	beq.n	800be62 <xTaskResumeAll+0x106>
 800be4e:	2301      	movs	r3, #1
 800be50:	60bb      	str	r3, [r7, #8]
 800be52:	4b0f      	ldr	r3, [pc, #60]	; (800be90 <xTaskResumeAll+0x134>)
 800be54:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800be58:	601a      	str	r2, [r3, #0]
 800be5a:	f3bf 8f4f 	dsb	sy
 800be5e:	f3bf 8f6f 	isb	sy
 800be62:	f001 f8ff 	bl	800d064 <vPortExitCritical>
 800be66:	68bb      	ldr	r3, [r7, #8]
 800be68:	4618      	mov	r0, r3
 800be6a:	3710      	adds	r7, #16
 800be6c:	46bd      	mov	sp, r7
 800be6e:	bd80      	pop	{r7, pc}
 800be70:	20000994 	.word	0x20000994
 800be74:	2000096c 	.word	0x2000096c
 800be78:	2000092c 	.word	0x2000092c
 800be7c:	20000974 	.word	0x20000974
 800be80:	20000870 	.word	0x20000870
 800be84:	2000086c 	.word	0x2000086c
 800be88:	20000980 	.word	0x20000980
 800be8c:	2000097c 	.word	0x2000097c
 800be90:	e000ed04 	.word	0xe000ed04

0800be94 <xTaskGetTickCount>:
 800be94:	b480      	push	{r7}
 800be96:	b083      	sub	sp, #12
 800be98:	af00      	add	r7, sp, #0
 800be9a:	4b05      	ldr	r3, [pc, #20]	; (800beb0 <xTaskGetTickCount+0x1c>)
 800be9c:	681b      	ldr	r3, [r3, #0]
 800be9e:	607b      	str	r3, [r7, #4]
 800bea0:	687b      	ldr	r3, [r7, #4]
 800bea2:	4618      	mov	r0, r3
 800bea4:	370c      	adds	r7, #12
 800bea6:	46bd      	mov	sp, r7
 800bea8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800beac:	4770      	bx	lr
 800beae:	bf00      	nop
 800beb0:	20000970 	.word	0x20000970

0800beb4 <xTaskGetTickCountFromISR>:
 800beb4:	b580      	push	{r7, lr}
 800beb6:	b082      	sub	sp, #8
 800beb8:	af00      	add	r7, sp, #0
 800beba:	f001 f97d 	bl	800d1b8 <vPortValidateInterruptPriority>
 800bebe:	2300      	movs	r3, #0
 800bec0:	607b      	str	r3, [r7, #4]
 800bec2:	4b04      	ldr	r3, [pc, #16]	; (800bed4 <xTaskGetTickCountFromISR+0x20>)
 800bec4:	681b      	ldr	r3, [r3, #0]
 800bec6:	603b      	str	r3, [r7, #0]
 800bec8:	683b      	ldr	r3, [r7, #0]
 800beca:	4618      	mov	r0, r3
 800becc:	3708      	adds	r7, #8
 800bece:	46bd      	mov	sp, r7
 800bed0:	bd80      	pop	{r7, pc}
 800bed2:	bf00      	nop
 800bed4:	20000970 	.word	0x20000970

0800bed8 <xTaskIncrementTick>:
 800bed8:	b580      	push	{r7, lr}
 800beda:	b086      	sub	sp, #24
 800bedc:	af00      	add	r7, sp, #0
 800bede:	2300      	movs	r3, #0
 800bee0:	617b      	str	r3, [r7, #20]
 800bee2:	4b51      	ldr	r3, [pc, #324]	; (800c028 <xTaskIncrementTick+0x150>)
 800bee4:	681b      	ldr	r3, [r3, #0]
 800bee6:	2b00      	cmp	r3, #0
 800bee8:	f040 808d 	bne.w	800c006 <xTaskIncrementTick+0x12e>
 800beec:	4b4f      	ldr	r3, [pc, #316]	; (800c02c <xTaskIncrementTick+0x154>)
 800beee:	681b      	ldr	r3, [r3, #0]
 800bef0:	3301      	adds	r3, #1
 800bef2:	613b      	str	r3, [r7, #16]
 800bef4:	4a4d      	ldr	r2, [pc, #308]	; (800c02c <xTaskIncrementTick+0x154>)
 800bef6:	693b      	ldr	r3, [r7, #16]
 800bef8:	6013      	str	r3, [r2, #0]
 800befa:	693b      	ldr	r3, [r7, #16]
 800befc:	2b00      	cmp	r3, #0
 800befe:	d120      	bne.n	800bf42 <xTaskIncrementTick+0x6a>
 800bf00:	4b4b      	ldr	r3, [pc, #300]	; (800c030 <xTaskIncrementTick+0x158>)
 800bf02:	681b      	ldr	r3, [r3, #0]
 800bf04:	681b      	ldr	r3, [r3, #0]
 800bf06:	2b00      	cmp	r3, #0
 800bf08:	d00a      	beq.n	800bf20 <xTaskIncrementTick+0x48>
 800bf0a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800bf0e:	f383 8811 	msr	BASEPRI, r3
 800bf12:	f3bf 8f6f 	isb	sy
 800bf16:	f3bf 8f4f 	dsb	sy
 800bf1a:	603b      	str	r3, [r7, #0]
 800bf1c:	bf00      	nop
 800bf1e:	e7fe      	b.n	800bf1e <xTaskIncrementTick+0x46>
 800bf20:	4b43      	ldr	r3, [pc, #268]	; (800c030 <xTaskIncrementTick+0x158>)
 800bf22:	681b      	ldr	r3, [r3, #0]
 800bf24:	60fb      	str	r3, [r7, #12]
 800bf26:	4b43      	ldr	r3, [pc, #268]	; (800c034 <xTaskIncrementTick+0x15c>)
 800bf28:	681b      	ldr	r3, [r3, #0]
 800bf2a:	4a41      	ldr	r2, [pc, #260]	; (800c030 <xTaskIncrementTick+0x158>)
 800bf2c:	6013      	str	r3, [r2, #0]
 800bf2e:	4a41      	ldr	r2, [pc, #260]	; (800c034 <xTaskIncrementTick+0x15c>)
 800bf30:	68fb      	ldr	r3, [r7, #12]
 800bf32:	6013      	str	r3, [r2, #0]
 800bf34:	4b40      	ldr	r3, [pc, #256]	; (800c038 <xTaskIncrementTick+0x160>)
 800bf36:	681b      	ldr	r3, [r3, #0]
 800bf38:	3301      	adds	r3, #1
 800bf3a:	4a3f      	ldr	r2, [pc, #252]	; (800c038 <xTaskIncrementTick+0x160>)
 800bf3c:	6013      	str	r3, [r2, #0]
 800bf3e:	f000 facb 	bl	800c4d8 <prvResetNextTaskUnblockTime>
 800bf42:	4b3e      	ldr	r3, [pc, #248]	; (800c03c <xTaskIncrementTick+0x164>)
 800bf44:	681b      	ldr	r3, [r3, #0]
 800bf46:	693a      	ldr	r2, [r7, #16]
 800bf48:	429a      	cmp	r2, r3
 800bf4a:	d34d      	bcc.n	800bfe8 <xTaskIncrementTick+0x110>
 800bf4c:	4b38      	ldr	r3, [pc, #224]	; (800c030 <xTaskIncrementTick+0x158>)
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	681b      	ldr	r3, [r3, #0]
 800bf52:	2b00      	cmp	r3, #0
 800bf54:	d101      	bne.n	800bf5a <xTaskIncrementTick+0x82>
 800bf56:	2301      	movs	r3, #1
 800bf58:	e000      	b.n	800bf5c <xTaskIncrementTick+0x84>
 800bf5a:	2300      	movs	r3, #0
 800bf5c:	2b00      	cmp	r3, #0
 800bf5e:	d004      	beq.n	800bf6a <xTaskIncrementTick+0x92>
 800bf60:	4b36      	ldr	r3, [pc, #216]	; (800c03c <xTaskIncrementTick+0x164>)
 800bf62:	f04f 32ff 	mov.w	r2, #4294967295
 800bf66:	601a      	str	r2, [r3, #0]
 800bf68:	e03e      	b.n	800bfe8 <xTaskIncrementTick+0x110>
 800bf6a:	4b31      	ldr	r3, [pc, #196]	; (800c030 <xTaskIncrementTick+0x158>)
 800bf6c:	681b      	ldr	r3, [r3, #0]
 800bf6e:	68db      	ldr	r3, [r3, #12]
 800bf70:	68db      	ldr	r3, [r3, #12]
 800bf72:	60bb      	str	r3, [r7, #8]
 800bf74:	68bb      	ldr	r3, [r7, #8]
 800bf76:	685b      	ldr	r3, [r3, #4]
 800bf78:	607b      	str	r3, [r7, #4]
 800bf7a:	693a      	ldr	r2, [r7, #16]
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	429a      	cmp	r2, r3
 800bf80:	d203      	bcs.n	800bf8a <xTaskIncrementTick+0xb2>
 800bf82:	4a2e      	ldr	r2, [pc, #184]	; (800c03c <xTaskIncrementTick+0x164>)
 800bf84:	687b      	ldr	r3, [r7, #4]
 800bf86:	6013      	str	r3, [r2, #0]
 800bf88:	e02e      	b.n	800bfe8 <xTaskIncrementTick+0x110>
 800bf8a:	68bb      	ldr	r3, [r7, #8]
 800bf8c:	3304      	adds	r3, #4
 800bf8e:	4618      	mov	r0, r3
 800bf90:	f7fe fed3 	bl	800ad3a <uxListRemove>
 800bf94:	68bb      	ldr	r3, [r7, #8]
 800bf96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bf98:	2b00      	cmp	r3, #0
 800bf9a:	d004      	beq.n	800bfa6 <xTaskIncrementTick+0xce>
 800bf9c:	68bb      	ldr	r3, [r7, #8]
 800bf9e:	3318      	adds	r3, #24
 800bfa0:	4618      	mov	r0, r3
 800bfa2:	f7fe feca 	bl	800ad3a <uxListRemove>
 800bfa6:	68bb      	ldr	r3, [r7, #8]
 800bfa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bfaa:	2201      	movs	r2, #1
 800bfac:	409a      	lsls	r2, r3
 800bfae:	4b24      	ldr	r3, [pc, #144]	; (800c040 <xTaskIncrementTick+0x168>)
 800bfb0:	681b      	ldr	r3, [r3, #0]
 800bfb2:	4313      	orrs	r3, r2
 800bfb4:	4a22      	ldr	r2, [pc, #136]	; (800c040 <xTaskIncrementTick+0x168>)
 800bfb6:	6013      	str	r3, [r2, #0]
 800bfb8:	68bb      	ldr	r3, [r7, #8]
 800bfba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bfbc:	4613      	mov	r3, r2
 800bfbe:	009b      	lsls	r3, r3, #2
 800bfc0:	4413      	add	r3, r2
 800bfc2:	009b      	lsls	r3, r3, #2
 800bfc4:	4a1f      	ldr	r2, [pc, #124]	; (800c044 <xTaskIncrementTick+0x16c>)
 800bfc6:	441a      	add	r2, r3
 800bfc8:	68bb      	ldr	r3, [r7, #8]
 800bfca:	3304      	adds	r3, #4
 800bfcc:	4619      	mov	r1, r3
 800bfce:	4610      	mov	r0, r2
 800bfd0:	f7fe fe56 	bl	800ac80 <vListInsertEnd>
 800bfd4:	68bb      	ldr	r3, [r7, #8]
 800bfd6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bfd8:	4b1b      	ldr	r3, [pc, #108]	; (800c048 <xTaskIncrementTick+0x170>)
 800bfda:	681b      	ldr	r3, [r3, #0]
 800bfdc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bfde:	429a      	cmp	r2, r3
 800bfe0:	d3b4      	bcc.n	800bf4c <xTaskIncrementTick+0x74>
 800bfe2:	2301      	movs	r3, #1
 800bfe4:	617b      	str	r3, [r7, #20]
 800bfe6:	e7b1      	b.n	800bf4c <xTaskIncrementTick+0x74>
 800bfe8:	4b17      	ldr	r3, [pc, #92]	; (800c048 <xTaskIncrementTick+0x170>)
 800bfea:	681b      	ldr	r3, [r3, #0]
 800bfec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800bfee:	4915      	ldr	r1, [pc, #84]	; (800c044 <xTaskIncrementTick+0x16c>)
 800bff0:	4613      	mov	r3, r2
 800bff2:	009b      	lsls	r3, r3, #2
 800bff4:	4413      	add	r3, r2
 800bff6:	009b      	lsls	r3, r3, #2
 800bff8:	440b      	add	r3, r1
 800bffa:	681b      	ldr	r3, [r3, #0]
 800bffc:	2b01      	cmp	r3, #1
 800bffe:	d907      	bls.n	800c010 <xTaskIncrementTick+0x138>
 800c000:	2301      	movs	r3, #1
 800c002:	617b      	str	r3, [r7, #20]
 800c004:	e004      	b.n	800c010 <xTaskIncrementTick+0x138>
 800c006:	4b11      	ldr	r3, [pc, #68]	; (800c04c <xTaskIncrementTick+0x174>)
 800c008:	681b      	ldr	r3, [r3, #0]
 800c00a:	3301      	adds	r3, #1
 800c00c:	4a0f      	ldr	r2, [pc, #60]	; (800c04c <xTaskIncrementTick+0x174>)
 800c00e:	6013      	str	r3, [r2, #0]
 800c010:	4b0f      	ldr	r3, [pc, #60]	; (800c050 <xTaskIncrementTick+0x178>)
 800c012:	681b      	ldr	r3, [r3, #0]
 800c014:	2b00      	cmp	r3, #0
 800c016:	d001      	beq.n	800c01c <xTaskIncrementTick+0x144>
 800c018:	2301      	movs	r3, #1
 800c01a:	617b      	str	r3, [r7, #20]
 800c01c:	697b      	ldr	r3, [r7, #20]
 800c01e:	4618      	mov	r0, r3
 800c020:	3718      	adds	r7, #24
 800c022:	46bd      	mov	sp, r7
 800c024:	bd80      	pop	{r7, pc}
 800c026:	bf00      	nop
 800c028:	20000994 	.word	0x20000994
 800c02c:	20000970 	.word	0x20000970
 800c030:	20000924 	.word	0x20000924
 800c034:	20000928 	.word	0x20000928
 800c038:	20000984 	.word	0x20000984
 800c03c:	2000098c 	.word	0x2000098c
 800c040:	20000974 	.word	0x20000974
 800c044:	20000870 	.word	0x20000870
 800c048:	2000086c 	.word	0x2000086c
 800c04c:	2000097c 	.word	0x2000097c
 800c050:	20000980 	.word	0x20000980

0800c054 <vTaskSwitchContext>:
 800c054:	b480      	push	{r7}
 800c056:	b087      	sub	sp, #28
 800c058:	af00      	add	r7, sp, #0
 800c05a:	4b27      	ldr	r3, [pc, #156]	; (800c0f8 <vTaskSwitchContext+0xa4>)
 800c05c:	681b      	ldr	r3, [r3, #0]
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d003      	beq.n	800c06a <vTaskSwitchContext+0x16>
 800c062:	4b26      	ldr	r3, [pc, #152]	; (800c0fc <vTaskSwitchContext+0xa8>)
 800c064:	2201      	movs	r2, #1
 800c066:	601a      	str	r2, [r3, #0]
 800c068:	e03f      	b.n	800c0ea <vTaskSwitchContext+0x96>
 800c06a:	4b24      	ldr	r3, [pc, #144]	; (800c0fc <vTaskSwitchContext+0xa8>)
 800c06c:	2200      	movs	r2, #0
 800c06e:	601a      	str	r2, [r3, #0]
 800c070:	4b23      	ldr	r3, [pc, #140]	; (800c100 <vTaskSwitchContext+0xac>)
 800c072:	681b      	ldr	r3, [r3, #0]
 800c074:	60fb      	str	r3, [r7, #12]
 800c076:	68fb      	ldr	r3, [r7, #12]
 800c078:	fab3 f383 	clz	r3, r3
 800c07c:	72fb      	strb	r3, [r7, #11]
 800c07e:	7afb      	ldrb	r3, [r7, #11]
 800c080:	f1c3 031f 	rsb	r3, r3, #31
 800c084:	617b      	str	r3, [r7, #20]
 800c086:	491f      	ldr	r1, [pc, #124]	; (800c104 <vTaskSwitchContext+0xb0>)
 800c088:	697a      	ldr	r2, [r7, #20]
 800c08a:	4613      	mov	r3, r2
 800c08c:	009b      	lsls	r3, r3, #2
 800c08e:	4413      	add	r3, r2
 800c090:	009b      	lsls	r3, r3, #2
 800c092:	440b      	add	r3, r1
 800c094:	681b      	ldr	r3, [r3, #0]
 800c096:	2b00      	cmp	r3, #0
 800c098:	d10a      	bne.n	800c0b0 <vTaskSwitchContext+0x5c>
 800c09a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c09e:	f383 8811 	msr	BASEPRI, r3
 800c0a2:	f3bf 8f6f 	isb	sy
 800c0a6:	f3bf 8f4f 	dsb	sy
 800c0aa:	607b      	str	r3, [r7, #4]
 800c0ac:	bf00      	nop
 800c0ae:	e7fe      	b.n	800c0ae <vTaskSwitchContext+0x5a>
 800c0b0:	697a      	ldr	r2, [r7, #20]
 800c0b2:	4613      	mov	r3, r2
 800c0b4:	009b      	lsls	r3, r3, #2
 800c0b6:	4413      	add	r3, r2
 800c0b8:	009b      	lsls	r3, r3, #2
 800c0ba:	4a12      	ldr	r2, [pc, #72]	; (800c104 <vTaskSwitchContext+0xb0>)
 800c0bc:	4413      	add	r3, r2
 800c0be:	613b      	str	r3, [r7, #16]
 800c0c0:	693b      	ldr	r3, [r7, #16]
 800c0c2:	685b      	ldr	r3, [r3, #4]
 800c0c4:	685a      	ldr	r2, [r3, #4]
 800c0c6:	693b      	ldr	r3, [r7, #16]
 800c0c8:	605a      	str	r2, [r3, #4]
 800c0ca:	693b      	ldr	r3, [r7, #16]
 800c0cc:	685a      	ldr	r2, [r3, #4]
 800c0ce:	693b      	ldr	r3, [r7, #16]
 800c0d0:	3308      	adds	r3, #8
 800c0d2:	429a      	cmp	r2, r3
 800c0d4:	d104      	bne.n	800c0e0 <vTaskSwitchContext+0x8c>
 800c0d6:	693b      	ldr	r3, [r7, #16]
 800c0d8:	685b      	ldr	r3, [r3, #4]
 800c0da:	685a      	ldr	r2, [r3, #4]
 800c0dc:	693b      	ldr	r3, [r7, #16]
 800c0de:	605a      	str	r2, [r3, #4]
 800c0e0:	693b      	ldr	r3, [r7, #16]
 800c0e2:	685b      	ldr	r3, [r3, #4]
 800c0e4:	68db      	ldr	r3, [r3, #12]
 800c0e6:	4a08      	ldr	r2, [pc, #32]	; (800c108 <vTaskSwitchContext+0xb4>)
 800c0e8:	6013      	str	r3, [r2, #0]
 800c0ea:	bf00      	nop
 800c0ec:	371c      	adds	r7, #28
 800c0ee:	46bd      	mov	sp, r7
 800c0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0f4:	4770      	bx	lr
 800c0f6:	bf00      	nop
 800c0f8:	20000994 	.word	0x20000994
 800c0fc:	20000980 	.word	0x20000980
 800c100:	20000974 	.word	0x20000974
 800c104:	20000870 	.word	0x20000870
 800c108:	2000086c 	.word	0x2000086c

0800c10c <vTaskPlaceOnEventList>:
 800c10c:	b580      	push	{r7, lr}
 800c10e:	b084      	sub	sp, #16
 800c110:	af00      	add	r7, sp, #0
 800c112:	6078      	str	r0, [r7, #4]
 800c114:	6039      	str	r1, [r7, #0]
 800c116:	687b      	ldr	r3, [r7, #4]
 800c118:	2b00      	cmp	r3, #0
 800c11a:	d10a      	bne.n	800c132 <vTaskPlaceOnEventList+0x26>
 800c11c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c120:	f383 8811 	msr	BASEPRI, r3
 800c124:	f3bf 8f6f 	isb	sy
 800c128:	f3bf 8f4f 	dsb	sy
 800c12c:	60fb      	str	r3, [r7, #12]
 800c12e:	bf00      	nop
 800c130:	e7fe      	b.n	800c130 <vTaskPlaceOnEventList+0x24>
 800c132:	4b07      	ldr	r3, [pc, #28]	; (800c150 <vTaskPlaceOnEventList+0x44>)
 800c134:	681b      	ldr	r3, [r3, #0]
 800c136:	3318      	adds	r3, #24
 800c138:	4619      	mov	r1, r3
 800c13a:	6878      	ldr	r0, [r7, #4]
 800c13c:	f7fe fdc4 	bl	800acc8 <vListInsert>
 800c140:	2101      	movs	r1, #1
 800c142:	6838      	ldr	r0, [r7, #0]
 800c144:	f000 fb1c 	bl	800c780 <prvAddCurrentTaskToDelayedList>
 800c148:	bf00      	nop
 800c14a:	3710      	adds	r7, #16
 800c14c:	46bd      	mov	sp, r7
 800c14e:	bd80      	pop	{r7, pc}
 800c150:	2000086c 	.word	0x2000086c

0800c154 <vTaskPlaceOnEventListRestricted>:
 800c154:	b580      	push	{r7, lr}
 800c156:	b086      	sub	sp, #24
 800c158:	af00      	add	r7, sp, #0
 800c15a:	60f8      	str	r0, [r7, #12]
 800c15c:	60b9      	str	r1, [r7, #8]
 800c15e:	607a      	str	r2, [r7, #4]
 800c160:	68fb      	ldr	r3, [r7, #12]
 800c162:	2b00      	cmp	r3, #0
 800c164:	d10a      	bne.n	800c17c <vTaskPlaceOnEventListRestricted+0x28>
 800c166:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c16a:	f383 8811 	msr	BASEPRI, r3
 800c16e:	f3bf 8f6f 	isb	sy
 800c172:	f3bf 8f4f 	dsb	sy
 800c176:	617b      	str	r3, [r7, #20]
 800c178:	bf00      	nop
 800c17a:	e7fe      	b.n	800c17a <vTaskPlaceOnEventListRestricted+0x26>
 800c17c:	4b0a      	ldr	r3, [pc, #40]	; (800c1a8 <vTaskPlaceOnEventListRestricted+0x54>)
 800c17e:	681b      	ldr	r3, [r3, #0]
 800c180:	3318      	adds	r3, #24
 800c182:	4619      	mov	r1, r3
 800c184:	68f8      	ldr	r0, [r7, #12]
 800c186:	f7fe fd7b 	bl	800ac80 <vListInsertEnd>
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	2b00      	cmp	r3, #0
 800c18e:	d002      	beq.n	800c196 <vTaskPlaceOnEventListRestricted+0x42>
 800c190:	f04f 33ff 	mov.w	r3, #4294967295
 800c194:	60bb      	str	r3, [r7, #8]
 800c196:	6879      	ldr	r1, [r7, #4]
 800c198:	68b8      	ldr	r0, [r7, #8]
 800c19a:	f000 faf1 	bl	800c780 <prvAddCurrentTaskToDelayedList>
 800c19e:	bf00      	nop
 800c1a0:	3718      	adds	r7, #24
 800c1a2:	46bd      	mov	sp, r7
 800c1a4:	bd80      	pop	{r7, pc}
 800c1a6:	bf00      	nop
 800c1a8:	2000086c 	.word	0x2000086c

0800c1ac <xTaskRemoveFromEventList>:
 800c1ac:	b580      	push	{r7, lr}
 800c1ae:	b086      	sub	sp, #24
 800c1b0:	af00      	add	r7, sp, #0
 800c1b2:	6078      	str	r0, [r7, #4]
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	68db      	ldr	r3, [r3, #12]
 800c1b8:	68db      	ldr	r3, [r3, #12]
 800c1ba:	613b      	str	r3, [r7, #16]
 800c1bc:	693b      	ldr	r3, [r7, #16]
 800c1be:	2b00      	cmp	r3, #0
 800c1c0:	d10a      	bne.n	800c1d8 <xTaskRemoveFromEventList+0x2c>
 800c1c2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c1c6:	f383 8811 	msr	BASEPRI, r3
 800c1ca:	f3bf 8f6f 	isb	sy
 800c1ce:	f3bf 8f4f 	dsb	sy
 800c1d2:	60fb      	str	r3, [r7, #12]
 800c1d4:	bf00      	nop
 800c1d6:	e7fe      	b.n	800c1d6 <xTaskRemoveFromEventList+0x2a>
 800c1d8:	693b      	ldr	r3, [r7, #16]
 800c1da:	3318      	adds	r3, #24
 800c1dc:	4618      	mov	r0, r3
 800c1de:	f7fe fdac 	bl	800ad3a <uxListRemove>
 800c1e2:	4b1d      	ldr	r3, [pc, #116]	; (800c258 <xTaskRemoveFromEventList+0xac>)
 800c1e4:	681b      	ldr	r3, [r3, #0]
 800c1e6:	2b00      	cmp	r3, #0
 800c1e8:	d11c      	bne.n	800c224 <xTaskRemoveFromEventList+0x78>
 800c1ea:	693b      	ldr	r3, [r7, #16]
 800c1ec:	3304      	adds	r3, #4
 800c1ee:	4618      	mov	r0, r3
 800c1f0:	f7fe fda3 	bl	800ad3a <uxListRemove>
 800c1f4:	693b      	ldr	r3, [r7, #16]
 800c1f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c1f8:	2201      	movs	r2, #1
 800c1fa:	409a      	lsls	r2, r3
 800c1fc:	4b17      	ldr	r3, [pc, #92]	; (800c25c <xTaskRemoveFromEventList+0xb0>)
 800c1fe:	681b      	ldr	r3, [r3, #0]
 800c200:	4313      	orrs	r3, r2
 800c202:	4a16      	ldr	r2, [pc, #88]	; (800c25c <xTaskRemoveFromEventList+0xb0>)
 800c204:	6013      	str	r3, [r2, #0]
 800c206:	693b      	ldr	r3, [r7, #16]
 800c208:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c20a:	4613      	mov	r3, r2
 800c20c:	009b      	lsls	r3, r3, #2
 800c20e:	4413      	add	r3, r2
 800c210:	009b      	lsls	r3, r3, #2
 800c212:	4a13      	ldr	r2, [pc, #76]	; (800c260 <xTaskRemoveFromEventList+0xb4>)
 800c214:	441a      	add	r2, r3
 800c216:	693b      	ldr	r3, [r7, #16]
 800c218:	3304      	adds	r3, #4
 800c21a:	4619      	mov	r1, r3
 800c21c:	4610      	mov	r0, r2
 800c21e:	f7fe fd2f 	bl	800ac80 <vListInsertEnd>
 800c222:	e005      	b.n	800c230 <xTaskRemoveFromEventList+0x84>
 800c224:	693b      	ldr	r3, [r7, #16]
 800c226:	3318      	adds	r3, #24
 800c228:	4619      	mov	r1, r3
 800c22a:	480e      	ldr	r0, [pc, #56]	; (800c264 <xTaskRemoveFromEventList+0xb8>)
 800c22c:	f7fe fd28 	bl	800ac80 <vListInsertEnd>
 800c230:	693b      	ldr	r3, [r7, #16]
 800c232:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c234:	4b0c      	ldr	r3, [pc, #48]	; (800c268 <xTaskRemoveFromEventList+0xbc>)
 800c236:	681b      	ldr	r3, [r3, #0]
 800c238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c23a:	429a      	cmp	r2, r3
 800c23c:	d905      	bls.n	800c24a <xTaskRemoveFromEventList+0x9e>
 800c23e:	2301      	movs	r3, #1
 800c240:	617b      	str	r3, [r7, #20]
 800c242:	4b0a      	ldr	r3, [pc, #40]	; (800c26c <xTaskRemoveFromEventList+0xc0>)
 800c244:	2201      	movs	r2, #1
 800c246:	601a      	str	r2, [r3, #0]
 800c248:	e001      	b.n	800c24e <xTaskRemoveFromEventList+0xa2>
 800c24a:	2300      	movs	r3, #0
 800c24c:	617b      	str	r3, [r7, #20]
 800c24e:	697b      	ldr	r3, [r7, #20]
 800c250:	4618      	mov	r0, r3
 800c252:	3718      	adds	r7, #24
 800c254:	46bd      	mov	sp, r7
 800c256:	bd80      	pop	{r7, pc}
 800c258:	20000994 	.word	0x20000994
 800c25c:	20000974 	.word	0x20000974
 800c260:	20000870 	.word	0x20000870
 800c264:	2000092c 	.word	0x2000092c
 800c268:	2000086c 	.word	0x2000086c
 800c26c:	20000980 	.word	0x20000980

0800c270 <vTaskSetTimeOutState>:
 800c270:	b480      	push	{r7}
 800c272:	b085      	sub	sp, #20
 800c274:	af00      	add	r7, sp, #0
 800c276:	6078      	str	r0, [r7, #4]
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	2b00      	cmp	r3, #0
 800c27c:	d10a      	bne.n	800c294 <vTaskSetTimeOutState+0x24>
 800c27e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c282:	f383 8811 	msr	BASEPRI, r3
 800c286:	f3bf 8f6f 	isb	sy
 800c28a:	f3bf 8f4f 	dsb	sy
 800c28e:	60fb      	str	r3, [r7, #12]
 800c290:	bf00      	nop
 800c292:	e7fe      	b.n	800c292 <vTaskSetTimeOutState+0x22>
 800c294:	4b06      	ldr	r3, [pc, #24]	; (800c2b0 <vTaskSetTimeOutState+0x40>)
 800c296:	681a      	ldr	r2, [r3, #0]
 800c298:	687b      	ldr	r3, [r7, #4]
 800c29a:	601a      	str	r2, [r3, #0]
 800c29c:	4b05      	ldr	r3, [pc, #20]	; (800c2b4 <vTaskSetTimeOutState+0x44>)
 800c29e:	681a      	ldr	r2, [r3, #0]
 800c2a0:	687b      	ldr	r3, [r7, #4]
 800c2a2:	605a      	str	r2, [r3, #4]
 800c2a4:	bf00      	nop
 800c2a6:	3714      	adds	r7, #20
 800c2a8:	46bd      	mov	sp, r7
 800c2aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2ae:	4770      	bx	lr
 800c2b0:	20000984 	.word	0x20000984
 800c2b4:	20000970 	.word	0x20000970

0800c2b8 <xTaskCheckForTimeOut>:
 800c2b8:	b580      	push	{r7, lr}
 800c2ba:	b086      	sub	sp, #24
 800c2bc:	af00      	add	r7, sp, #0
 800c2be:	6078      	str	r0, [r7, #4]
 800c2c0:	6039      	str	r1, [r7, #0]
 800c2c2:	687b      	ldr	r3, [r7, #4]
 800c2c4:	2b00      	cmp	r3, #0
 800c2c6:	d10a      	bne.n	800c2de <xTaskCheckForTimeOut+0x26>
 800c2c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2cc:	f383 8811 	msr	BASEPRI, r3
 800c2d0:	f3bf 8f6f 	isb	sy
 800c2d4:	f3bf 8f4f 	dsb	sy
 800c2d8:	60fb      	str	r3, [r7, #12]
 800c2da:	bf00      	nop
 800c2dc:	e7fe      	b.n	800c2dc <xTaskCheckForTimeOut+0x24>
 800c2de:	683b      	ldr	r3, [r7, #0]
 800c2e0:	2b00      	cmp	r3, #0
 800c2e2:	d10a      	bne.n	800c2fa <xTaskCheckForTimeOut+0x42>
 800c2e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c2e8:	f383 8811 	msr	BASEPRI, r3
 800c2ec:	f3bf 8f6f 	isb	sy
 800c2f0:	f3bf 8f4f 	dsb	sy
 800c2f4:	60bb      	str	r3, [r7, #8]
 800c2f6:	bf00      	nop
 800c2f8:	e7fe      	b.n	800c2f8 <xTaskCheckForTimeOut+0x40>
 800c2fa:	f000 fe83 	bl	800d004 <vPortEnterCritical>
 800c2fe:	4b1c      	ldr	r3, [pc, #112]	; (800c370 <xTaskCheckForTimeOut+0xb8>)
 800c300:	681b      	ldr	r3, [r3, #0]
 800c302:	613b      	str	r3, [r7, #16]
 800c304:	683b      	ldr	r3, [r7, #0]
 800c306:	681b      	ldr	r3, [r3, #0]
 800c308:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c30c:	d102      	bne.n	800c314 <xTaskCheckForTimeOut+0x5c>
 800c30e:	2300      	movs	r3, #0
 800c310:	617b      	str	r3, [r7, #20]
 800c312:	e026      	b.n	800c362 <xTaskCheckForTimeOut+0xaa>
 800c314:	687b      	ldr	r3, [r7, #4]
 800c316:	681a      	ldr	r2, [r3, #0]
 800c318:	4b16      	ldr	r3, [pc, #88]	; (800c374 <xTaskCheckForTimeOut+0xbc>)
 800c31a:	681b      	ldr	r3, [r3, #0]
 800c31c:	429a      	cmp	r2, r3
 800c31e:	d007      	beq.n	800c330 <xTaskCheckForTimeOut+0x78>
 800c320:	687b      	ldr	r3, [r7, #4]
 800c322:	685b      	ldr	r3, [r3, #4]
 800c324:	693a      	ldr	r2, [r7, #16]
 800c326:	429a      	cmp	r2, r3
 800c328:	d302      	bcc.n	800c330 <xTaskCheckForTimeOut+0x78>
 800c32a:	2301      	movs	r3, #1
 800c32c:	617b      	str	r3, [r7, #20]
 800c32e:	e018      	b.n	800c362 <xTaskCheckForTimeOut+0xaa>
 800c330:	687b      	ldr	r3, [r7, #4]
 800c332:	685b      	ldr	r3, [r3, #4]
 800c334:	693a      	ldr	r2, [r7, #16]
 800c336:	1ad2      	subs	r2, r2, r3
 800c338:	683b      	ldr	r3, [r7, #0]
 800c33a:	681b      	ldr	r3, [r3, #0]
 800c33c:	429a      	cmp	r2, r3
 800c33e:	d20e      	bcs.n	800c35e <xTaskCheckForTimeOut+0xa6>
 800c340:	683b      	ldr	r3, [r7, #0]
 800c342:	681a      	ldr	r2, [r3, #0]
 800c344:	687b      	ldr	r3, [r7, #4]
 800c346:	6859      	ldr	r1, [r3, #4]
 800c348:	693b      	ldr	r3, [r7, #16]
 800c34a:	1acb      	subs	r3, r1, r3
 800c34c:	441a      	add	r2, r3
 800c34e:	683b      	ldr	r3, [r7, #0]
 800c350:	601a      	str	r2, [r3, #0]
 800c352:	6878      	ldr	r0, [r7, #4]
 800c354:	f7ff ff8c 	bl	800c270 <vTaskSetTimeOutState>
 800c358:	2300      	movs	r3, #0
 800c35a:	617b      	str	r3, [r7, #20]
 800c35c:	e001      	b.n	800c362 <xTaskCheckForTimeOut+0xaa>
 800c35e:	2301      	movs	r3, #1
 800c360:	617b      	str	r3, [r7, #20]
 800c362:	f000 fe7f 	bl	800d064 <vPortExitCritical>
 800c366:	697b      	ldr	r3, [r7, #20]
 800c368:	4618      	mov	r0, r3
 800c36a:	3718      	adds	r7, #24
 800c36c:	46bd      	mov	sp, r7
 800c36e:	bd80      	pop	{r7, pc}
 800c370:	20000970 	.word	0x20000970
 800c374:	20000984 	.word	0x20000984

0800c378 <vTaskMissedYield>:
 800c378:	b480      	push	{r7}
 800c37a:	af00      	add	r7, sp, #0
 800c37c:	4b03      	ldr	r3, [pc, #12]	; (800c38c <vTaskMissedYield+0x14>)
 800c37e:	2201      	movs	r2, #1
 800c380:	601a      	str	r2, [r3, #0]
 800c382:	bf00      	nop
 800c384:	46bd      	mov	sp, r7
 800c386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c38a:	4770      	bx	lr
 800c38c:	20000980 	.word	0x20000980

0800c390 <prvIdleTask>:
 800c390:	b580      	push	{r7, lr}
 800c392:	b082      	sub	sp, #8
 800c394:	af00      	add	r7, sp, #0
 800c396:	6078      	str	r0, [r7, #4]
 800c398:	f000 f852 	bl	800c440 <prvCheckTasksWaitingTermination>
 800c39c:	4b06      	ldr	r3, [pc, #24]	; (800c3b8 <prvIdleTask+0x28>)
 800c39e:	681b      	ldr	r3, [r3, #0]
 800c3a0:	2b01      	cmp	r3, #1
 800c3a2:	d9f9      	bls.n	800c398 <prvIdleTask+0x8>
 800c3a4:	4b05      	ldr	r3, [pc, #20]	; (800c3bc <prvIdleTask+0x2c>)
 800c3a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c3aa:	601a      	str	r2, [r3, #0]
 800c3ac:	f3bf 8f4f 	dsb	sy
 800c3b0:	f3bf 8f6f 	isb	sy
 800c3b4:	e7f0      	b.n	800c398 <prvIdleTask+0x8>
 800c3b6:	bf00      	nop
 800c3b8:	20000870 	.word	0x20000870
 800c3bc:	e000ed04 	.word	0xe000ed04

0800c3c0 <prvInitialiseTaskLists>:
 800c3c0:	b580      	push	{r7, lr}
 800c3c2:	b082      	sub	sp, #8
 800c3c4:	af00      	add	r7, sp, #0
 800c3c6:	2300      	movs	r3, #0
 800c3c8:	607b      	str	r3, [r7, #4]
 800c3ca:	e00c      	b.n	800c3e6 <prvInitialiseTaskLists+0x26>
 800c3cc:	687a      	ldr	r2, [r7, #4]
 800c3ce:	4613      	mov	r3, r2
 800c3d0:	009b      	lsls	r3, r3, #2
 800c3d2:	4413      	add	r3, r2
 800c3d4:	009b      	lsls	r3, r3, #2
 800c3d6:	4a12      	ldr	r2, [pc, #72]	; (800c420 <prvInitialiseTaskLists+0x60>)
 800c3d8:	4413      	add	r3, r2
 800c3da:	4618      	mov	r0, r3
 800c3dc:	f7fe fc23 	bl	800ac26 <vListInitialise>
 800c3e0:	687b      	ldr	r3, [r7, #4]
 800c3e2:	3301      	adds	r3, #1
 800c3e4:	607b      	str	r3, [r7, #4]
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	2b06      	cmp	r3, #6
 800c3ea:	d9ef      	bls.n	800c3cc <prvInitialiseTaskLists+0xc>
 800c3ec:	480d      	ldr	r0, [pc, #52]	; (800c424 <prvInitialiseTaskLists+0x64>)
 800c3ee:	f7fe fc1a 	bl	800ac26 <vListInitialise>
 800c3f2:	480d      	ldr	r0, [pc, #52]	; (800c428 <prvInitialiseTaskLists+0x68>)
 800c3f4:	f7fe fc17 	bl	800ac26 <vListInitialise>
 800c3f8:	480c      	ldr	r0, [pc, #48]	; (800c42c <prvInitialiseTaskLists+0x6c>)
 800c3fa:	f7fe fc14 	bl	800ac26 <vListInitialise>
 800c3fe:	480c      	ldr	r0, [pc, #48]	; (800c430 <prvInitialiseTaskLists+0x70>)
 800c400:	f7fe fc11 	bl	800ac26 <vListInitialise>
 800c404:	480b      	ldr	r0, [pc, #44]	; (800c434 <prvInitialiseTaskLists+0x74>)
 800c406:	f7fe fc0e 	bl	800ac26 <vListInitialise>
 800c40a:	4b0b      	ldr	r3, [pc, #44]	; (800c438 <prvInitialiseTaskLists+0x78>)
 800c40c:	4a05      	ldr	r2, [pc, #20]	; (800c424 <prvInitialiseTaskLists+0x64>)
 800c40e:	601a      	str	r2, [r3, #0]
 800c410:	4b0a      	ldr	r3, [pc, #40]	; (800c43c <prvInitialiseTaskLists+0x7c>)
 800c412:	4a05      	ldr	r2, [pc, #20]	; (800c428 <prvInitialiseTaskLists+0x68>)
 800c414:	601a      	str	r2, [r3, #0]
 800c416:	bf00      	nop
 800c418:	3708      	adds	r7, #8
 800c41a:	46bd      	mov	sp, r7
 800c41c:	bd80      	pop	{r7, pc}
 800c41e:	bf00      	nop
 800c420:	20000870 	.word	0x20000870
 800c424:	200008fc 	.word	0x200008fc
 800c428:	20000910 	.word	0x20000910
 800c42c:	2000092c 	.word	0x2000092c
 800c430:	20000940 	.word	0x20000940
 800c434:	20000958 	.word	0x20000958
 800c438:	20000924 	.word	0x20000924
 800c43c:	20000928 	.word	0x20000928

0800c440 <prvCheckTasksWaitingTermination>:
 800c440:	b580      	push	{r7, lr}
 800c442:	b082      	sub	sp, #8
 800c444:	af00      	add	r7, sp, #0
 800c446:	e028      	b.n	800c49a <prvCheckTasksWaitingTermination+0x5a>
 800c448:	f7ff fc7a 	bl	800bd40 <vTaskSuspendAll>
 800c44c:	4b17      	ldr	r3, [pc, #92]	; (800c4ac <prvCheckTasksWaitingTermination+0x6c>)
 800c44e:	681b      	ldr	r3, [r3, #0]
 800c450:	2b00      	cmp	r3, #0
 800c452:	bf0c      	ite	eq
 800c454:	2301      	moveq	r3, #1
 800c456:	2300      	movne	r3, #0
 800c458:	b2db      	uxtb	r3, r3
 800c45a:	607b      	str	r3, [r7, #4]
 800c45c:	f7ff fc7e 	bl	800bd5c <xTaskResumeAll>
 800c460:	687b      	ldr	r3, [r7, #4]
 800c462:	2b00      	cmp	r3, #0
 800c464:	d119      	bne.n	800c49a <prvCheckTasksWaitingTermination+0x5a>
 800c466:	f000 fdcd 	bl	800d004 <vPortEnterCritical>
 800c46a:	4b10      	ldr	r3, [pc, #64]	; (800c4ac <prvCheckTasksWaitingTermination+0x6c>)
 800c46c:	68db      	ldr	r3, [r3, #12]
 800c46e:	68db      	ldr	r3, [r3, #12]
 800c470:	603b      	str	r3, [r7, #0]
 800c472:	683b      	ldr	r3, [r7, #0]
 800c474:	3304      	adds	r3, #4
 800c476:	4618      	mov	r0, r3
 800c478:	f7fe fc5f 	bl	800ad3a <uxListRemove>
 800c47c:	4b0c      	ldr	r3, [pc, #48]	; (800c4b0 <prvCheckTasksWaitingTermination+0x70>)
 800c47e:	681b      	ldr	r3, [r3, #0]
 800c480:	3b01      	subs	r3, #1
 800c482:	4a0b      	ldr	r2, [pc, #44]	; (800c4b0 <prvCheckTasksWaitingTermination+0x70>)
 800c484:	6013      	str	r3, [r2, #0]
 800c486:	4b0b      	ldr	r3, [pc, #44]	; (800c4b4 <prvCheckTasksWaitingTermination+0x74>)
 800c488:	681b      	ldr	r3, [r3, #0]
 800c48a:	3b01      	subs	r3, #1
 800c48c:	4a09      	ldr	r2, [pc, #36]	; (800c4b4 <prvCheckTasksWaitingTermination+0x74>)
 800c48e:	6013      	str	r3, [r2, #0]
 800c490:	f000 fde8 	bl	800d064 <vPortExitCritical>
 800c494:	6838      	ldr	r0, [r7, #0]
 800c496:	f000 f80f 	bl	800c4b8 <prvDeleteTCB>
 800c49a:	4b06      	ldr	r3, [pc, #24]	; (800c4b4 <prvCheckTasksWaitingTermination+0x74>)
 800c49c:	681b      	ldr	r3, [r3, #0]
 800c49e:	2b00      	cmp	r3, #0
 800c4a0:	d1d2      	bne.n	800c448 <prvCheckTasksWaitingTermination+0x8>
 800c4a2:	bf00      	nop
 800c4a4:	bf00      	nop
 800c4a6:	3708      	adds	r7, #8
 800c4a8:	46bd      	mov	sp, r7
 800c4aa:	bd80      	pop	{r7, pc}
 800c4ac:	20000940 	.word	0x20000940
 800c4b0:	2000096c 	.word	0x2000096c
 800c4b4:	20000954 	.word	0x20000954

0800c4b8 <prvDeleteTCB>:
 800c4b8:	b580      	push	{r7, lr}
 800c4ba:	b082      	sub	sp, #8
 800c4bc:	af00      	add	r7, sp, #0
 800c4be:	6078      	str	r0, [r7, #4]
 800c4c0:	687b      	ldr	r3, [r7, #4]
 800c4c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c4c4:	4618      	mov	r0, r3
 800c4c6:	f000 ff7b 	bl	800d3c0 <vPortFree>
 800c4ca:	6878      	ldr	r0, [r7, #4]
 800c4cc:	f000 ff78 	bl	800d3c0 <vPortFree>
 800c4d0:	bf00      	nop
 800c4d2:	3708      	adds	r7, #8
 800c4d4:	46bd      	mov	sp, r7
 800c4d6:	bd80      	pop	{r7, pc}

0800c4d8 <prvResetNextTaskUnblockTime>:
 800c4d8:	b480      	push	{r7}
 800c4da:	b083      	sub	sp, #12
 800c4dc:	af00      	add	r7, sp, #0
 800c4de:	4b0f      	ldr	r3, [pc, #60]	; (800c51c <prvResetNextTaskUnblockTime+0x44>)
 800c4e0:	681b      	ldr	r3, [r3, #0]
 800c4e2:	681b      	ldr	r3, [r3, #0]
 800c4e4:	2b00      	cmp	r3, #0
 800c4e6:	d101      	bne.n	800c4ec <prvResetNextTaskUnblockTime+0x14>
 800c4e8:	2301      	movs	r3, #1
 800c4ea:	e000      	b.n	800c4ee <prvResetNextTaskUnblockTime+0x16>
 800c4ec:	2300      	movs	r3, #0
 800c4ee:	2b00      	cmp	r3, #0
 800c4f0:	d004      	beq.n	800c4fc <prvResetNextTaskUnblockTime+0x24>
 800c4f2:	4b0b      	ldr	r3, [pc, #44]	; (800c520 <prvResetNextTaskUnblockTime+0x48>)
 800c4f4:	f04f 32ff 	mov.w	r2, #4294967295
 800c4f8:	601a      	str	r2, [r3, #0]
 800c4fa:	e008      	b.n	800c50e <prvResetNextTaskUnblockTime+0x36>
 800c4fc:	4b07      	ldr	r3, [pc, #28]	; (800c51c <prvResetNextTaskUnblockTime+0x44>)
 800c4fe:	681b      	ldr	r3, [r3, #0]
 800c500:	68db      	ldr	r3, [r3, #12]
 800c502:	68db      	ldr	r3, [r3, #12]
 800c504:	607b      	str	r3, [r7, #4]
 800c506:	687b      	ldr	r3, [r7, #4]
 800c508:	685b      	ldr	r3, [r3, #4]
 800c50a:	4a05      	ldr	r2, [pc, #20]	; (800c520 <prvResetNextTaskUnblockTime+0x48>)
 800c50c:	6013      	str	r3, [r2, #0]
 800c50e:	bf00      	nop
 800c510:	370c      	adds	r7, #12
 800c512:	46bd      	mov	sp, r7
 800c514:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c518:	4770      	bx	lr
 800c51a:	bf00      	nop
 800c51c:	20000924 	.word	0x20000924
 800c520:	2000098c 	.word	0x2000098c

0800c524 <xTaskGetSchedulerState>:
 800c524:	b480      	push	{r7}
 800c526:	b083      	sub	sp, #12
 800c528:	af00      	add	r7, sp, #0
 800c52a:	4b0b      	ldr	r3, [pc, #44]	; (800c558 <xTaskGetSchedulerState+0x34>)
 800c52c:	681b      	ldr	r3, [r3, #0]
 800c52e:	2b00      	cmp	r3, #0
 800c530:	d102      	bne.n	800c538 <xTaskGetSchedulerState+0x14>
 800c532:	2301      	movs	r3, #1
 800c534:	607b      	str	r3, [r7, #4]
 800c536:	e008      	b.n	800c54a <xTaskGetSchedulerState+0x26>
 800c538:	4b08      	ldr	r3, [pc, #32]	; (800c55c <xTaskGetSchedulerState+0x38>)
 800c53a:	681b      	ldr	r3, [r3, #0]
 800c53c:	2b00      	cmp	r3, #0
 800c53e:	d102      	bne.n	800c546 <xTaskGetSchedulerState+0x22>
 800c540:	2302      	movs	r3, #2
 800c542:	607b      	str	r3, [r7, #4]
 800c544:	e001      	b.n	800c54a <xTaskGetSchedulerState+0x26>
 800c546:	2300      	movs	r3, #0
 800c548:	607b      	str	r3, [r7, #4]
 800c54a:	687b      	ldr	r3, [r7, #4]
 800c54c:	4618      	mov	r0, r3
 800c54e:	370c      	adds	r7, #12
 800c550:	46bd      	mov	sp, r7
 800c552:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c556:	4770      	bx	lr
 800c558:	20000978 	.word	0x20000978
 800c55c:	20000994 	.word	0x20000994

0800c560 <vTaskPriorityInherit>:
 800c560:	b580      	push	{r7, lr}
 800c562:	b084      	sub	sp, #16
 800c564:	af00      	add	r7, sp, #0
 800c566:	6078      	str	r0, [r7, #4]
 800c568:	687b      	ldr	r3, [r7, #4]
 800c56a:	60fb      	str	r3, [r7, #12]
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	2b00      	cmp	r3, #0
 800c570:	d062      	beq.n	800c638 <vTaskPriorityInherit+0xd8>
 800c572:	68fb      	ldr	r3, [r7, #12]
 800c574:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c576:	4b32      	ldr	r3, [pc, #200]	; (800c640 <vTaskPriorityInherit+0xe0>)
 800c578:	681b      	ldr	r3, [r3, #0]
 800c57a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c57c:	429a      	cmp	r2, r3
 800c57e:	d25b      	bcs.n	800c638 <vTaskPriorityInherit+0xd8>
 800c580:	68fb      	ldr	r3, [r7, #12]
 800c582:	699b      	ldr	r3, [r3, #24]
 800c584:	2b00      	cmp	r3, #0
 800c586:	db06      	blt.n	800c596 <vTaskPriorityInherit+0x36>
 800c588:	4b2d      	ldr	r3, [pc, #180]	; (800c640 <vTaskPriorityInherit+0xe0>)
 800c58a:	681b      	ldr	r3, [r3, #0]
 800c58c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c58e:	f1c3 0207 	rsb	r2, r3, #7
 800c592:	68fb      	ldr	r3, [r7, #12]
 800c594:	619a      	str	r2, [r3, #24]
 800c596:	68fb      	ldr	r3, [r7, #12]
 800c598:	6959      	ldr	r1, [r3, #20]
 800c59a:	68fb      	ldr	r3, [r7, #12]
 800c59c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c59e:	4613      	mov	r3, r2
 800c5a0:	009b      	lsls	r3, r3, #2
 800c5a2:	4413      	add	r3, r2
 800c5a4:	009b      	lsls	r3, r3, #2
 800c5a6:	4a27      	ldr	r2, [pc, #156]	; (800c644 <vTaskPriorityInherit+0xe4>)
 800c5a8:	4413      	add	r3, r2
 800c5aa:	4299      	cmp	r1, r3
 800c5ac:	d101      	bne.n	800c5b2 <vTaskPriorityInherit+0x52>
 800c5ae:	2301      	movs	r3, #1
 800c5b0:	e000      	b.n	800c5b4 <vTaskPriorityInherit+0x54>
 800c5b2:	2300      	movs	r3, #0
 800c5b4:	2b00      	cmp	r3, #0
 800c5b6:	d03a      	beq.n	800c62e <vTaskPriorityInherit+0xce>
 800c5b8:	68fb      	ldr	r3, [r7, #12]
 800c5ba:	3304      	adds	r3, #4
 800c5bc:	4618      	mov	r0, r3
 800c5be:	f7fe fbbc 	bl	800ad3a <uxListRemove>
 800c5c2:	4603      	mov	r3, r0
 800c5c4:	2b00      	cmp	r3, #0
 800c5c6:	d115      	bne.n	800c5f4 <vTaskPriorityInherit+0x94>
 800c5c8:	68fb      	ldr	r3, [r7, #12]
 800c5ca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c5cc:	491d      	ldr	r1, [pc, #116]	; (800c644 <vTaskPriorityInherit+0xe4>)
 800c5ce:	4613      	mov	r3, r2
 800c5d0:	009b      	lsls	r3, r3, #2
 800c5d2:	4413      	add	r3, r2
 800c5d4:	009b      	lsls	r3, r3, #2
 800c5d6:	440b      	add	r3, r1
 800c5d8:	681b      	ldr	r3, [r3, #0]
 800c5da:	2b00      	cmp	r3, #0
 800c5dc:	d10a      	bne.n	800c5f4 <vTaskPriorityInherit+0x94>
 800c5de:	68fb      	ldr	r3, [r7, #12]
 800c5e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c5e2:	2201      	movs	r2, #1
 800c5e4:	fa02 f303 	lsl.w	r3, r2, r3
 800c5e8:	43da      	mvns	r2, r3
 800c5ea:	4b17      	ldr	r3, [pc, #92]	; (800c648 <vTaskPriorityInherit+0xe8>)
 800c5ec:	681b      	ldr	r3, [r3, #0]
 800c5ee:	4013      	ands	r3, r2
 800c5f0:	4a15      	ldr	r2, [pc, #84]	; (800c648 <vTaskPriorityInherit+0xe8>)
 800c5f2:	6013      	str	r3, [r2, #0]
 800c5f4:	4b12      	ldr	r3, [pc, #72]	; (800c640 <vTaskPriorityInherit+0xe0>)
 800c5f6:	681b      	ldr	r3, [r3, #0]
 800c5f8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c5fa:	68fb      	ldr	r3, [r7, #12]
 800c5fc:	62da      	str	r2, [r3, #44]	; 0x2c
 800c5fe:	68fb      	ldr	r3, [r7, #12]
 800c600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c602:	2201      	movs	r2, #1
 800c604:	409a      	lsls	r2, r3
 800c606:	4b10      	ldr	r3, [pc, #64]	; (800c648 <vTaskPriorityInherit+0xe8>)
 800c608:	681b      	ldr	r3, [r3, #0]
 800c60a:	4313      	orrs	r3, r2
 800c60c:	4a0e      	ldr	r2, [pc, #56]	; (800c648 <vTaskPriorityInherit+0xe8>)
 800c60e:	6013      	str	r3, [r2, #0]
 800c610:	68fb      	ldr	r3, [r7, #12]
 800c612:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c614:	4613      	mov	r3, r2
 800c616:	009b      	lsls	r3, r3, #2
 800c618:	4413      	add	r3, r2
 800c61a:	009b      	lsls	r3, r3, #2
 800c61c:	4a09      	ldr	r2, [pc, #36]	; (800c644 <vTaskPriorityInherit+0xe4>)
 800c61e:	441a      	add	r2, r3
 800c620:	68fb      	ldr	r3, [r7, #12]
 800c622:	3304      	adds	r3, #4
 800c624:	4619      	mov	r1, r3
 800c626:	4610      	mov	r0, r2
 800c628:	f7fe fb2a 	bl	800ac80 <vListInsertEnd>
 800c62c:	e004      	b.n	800c638 <vTaskPriorityInherit+0xd8>
 800c62e:	4b04      	ldr	r3, [pc, #16]	; (800c640 <vTaskPriorityInherit+0xe0>)
 800c630:	681b      	ldr	r3, [r3, #0]
 800c632:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c634:	68fb      	ldr	r3, [r7, #12]
 800c636:	62da      	str	r2, [r3, #44]	; 0x2c
 800c638:	bf00      	nop
 800c63a:	3710      	adds	r7, #16
 800c63c:	46bd      	mov	sp, r7
 800c63e:	bd80      	pop	{r7, pc}
 800c640:	2000086c 	.word	0x2000086c
 800c644:	20000870 	.word	0x20000870
 800c648:	20000974 	.word	0x20000974

0800c64c <xTaskPriorityDisinherit>:
 800c64c:	b580      	push	{r7, lr}
 800c64e:	b086      	sub	sp, #24
 800c650:	af00      	add	r7, sp, #0
 800c652:	6078      	str	r0, [r7, #4]
 800c654:	687b      	ldr	r3, [r7, #4]
 800c656:	613b      	str	r3, [r7, #16]
 800c658:	2300      	movs	r3, #0
 800c65a:	617b      	str	r3, [r7, #20]
 800c65c:	687b      	ldr	r3, [r7, #4]
 800c65e:	2b00      	cmp	r3, #0
 800c660:	d06e      	beq.n	800c740 <xTaskPriorityDisinherit+0xf4>
 800c662:	4b3a      	ldr	r3, [pc, #232]	; (800c74c <xTaskPriorityDisinherit+0x100>)
 800c664:	681b      	ldr	r3, [r3, #0]
 800c666:	693a      	ldr	r2, [r7, #16]
 800c668:	429a      	cmp	r2, r3
 800c66a:	d00a      	beq.n	800c682 <xTaskPriorityDisinherit+0x36>
 800c66c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c670:	f383 8811 	msr	BASEPRI, r3
 800c674:	f3bf 8f6f 	isb	sy
 800c678:	f3bf 8f4f 	dsb	sy
 800c67c:	60fb      	str	r3, [r7, #12]
 800c67e:	bf00      	nop
 800c680:	e7fe      	b.n	800c680 <xTaskPriorityDisinherit+0x34>
 800c682:	693b      	ldr	r3, [r7, #16]
 800c684:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c686:	2b00      	cmp	r3, #0
 800c688:	d10a      	bne.n	800c6a0 <xTaskPriorityDisinherit+0x54>
 800c68a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c68e:	f383 8811 	msr	BASEPRI, r3
 800c692:	f3bf 8f6f 	isb	sy
 800c696:	f3bf 8f4f 	dsb	sy
 800c69a:	60bb      	str	r3, [r7, #8]
 800c69c:	bf00      	nop
 800c69e:	e7fe      	b.n	800c69e <xTaskPriorityDisinherit+0x52>
 800c6a0:	693b      	ldr	r3, [r7, #16]
 800c6a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c6a4:	1e5a      	subs	r2, r3, #1
 800c6a6:	693b      	ldr	r3, [r7, #16]
 800c6a8:	651a      	str	r2, [r3, #80]	; 0x50
 800c6aa:	693b      	ldr	r3, [r7, #16]
 800c6ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c6ae:	693b      	ldr	r3, [r7, #16]
 800c6b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800c6b2:	429a      	cmp	r2, r3
 800c6b4:	d044      	beq.n	800c740 <xTaskPriorityDisinherit+0xf4>
 800c6b6:	693b      	ldr	r3, [r7, #16]
 800c6b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800c6ba:	2b00      	cmp	r3, #0
 800c6bc:	d140      	bne.n	800c740 <xTaskPriorityDisinherit+0xf4>
 800c6be:	693b      	ldr	r3, [r7, #16]
 800c6c0:	3304      	adds	r3, #4
 800c6c2:	4618      	mov	r0, r3
 800c6c4:	f7fe fb39 	bl	800ad3a <uxListRemove>
 800c6c8:	4603      	mov	r3, r0
 800c6ca:	2b00      	cmp	r3, #0
 800c6cc:	d115      	bne.n	800c6fa <xTaskPriorityDisinherit+0xae>
 800c6ce:	693b      	ldr	r3, [r7, #16]
 800c6d0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c6d2:	491f      	ldr	r1, [pc, #124]	; (800c750 <xTaskPriorityDisinherit+0x104>)
 800c6d4:	4613      	mov	r3, r2
 800c6d6:	009b      	lsls	r3, r3, #2
 800c6d8:	4413      	add	r3, r2
 800c6da:	009b      	lsls	r3, r3, #2
 800c6dc:	440b      	add	r3, r1
 800c6de:	681b      	ldr	r3, [r3, #0]
 800c6e0:	2b00      	cmp	r3, #0
 800c6e2:	d10a      	bne.n	800c6fa <xTaskPriorityDisinherit+0xae>
 800c6e4:	693b      	ldr	r3, [r7, #16]
 800c6e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6e8:	2201      	movs	r2, #1
 800c6ea:	fa02 f303 	lsl.w	r3, r2, r3
 800c6ee:	43da      	mvns	r2, r3
 800c6f0:	4b18      	ldr	r3, [pc, #96]	; (800c754 <xTaskPriorityDisinherit+0x108>)
 800c6f2:	681b      	ldr	r3, [r3, #0]
 800c6f4:	4013      	ands	r3, r2
 800c6f6:	4a17      	ldr	r2, [pc, #92]	; (800c754 <xTaskPriorityDisinherit+0x108>)
 800c6f8:	6013      	str	r3, [r2, #0]
 800c6fa:	693b      	ldr	r3, [r7, #16]
 800c6fc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800c6fe:	693b      	ldr	r3, [r7, #16]
 800c700:	62da      	str	r2, [r3, #44]	; 0x2c
 800c702:	693b      	ldr	r3, [r7, #16]
 800c704:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c706:	f1c3 0207 	rsb	r2, r3, #7
 800c70a:	693b      	ldr	r3, [r7, #16]
 800c70c:	619a      	str	r2, [r3, #24]
 800c70e:	693b      	ldr	r3, [r7, #16]
 800c710:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c712:	2201      	movs	r2, #1
 800c714:	409a      	lsls	r2, r3
 800c716:	4b0f      	ldr	r3, [pc, #60]	; (800c754 <xTaskPriorityDisinherit+0x108>)
 800c718:	681b      	ldr	r3, [r3, #0]
 800c71a:	4313      	orrs	r3, r2
 800c71c:	4a0d      	ldr	r2, [pc, #52]	; (800c754 <xTaskPriorityDisinherit+0x108>)
 800c71e:	6013      	str	r3, [r2, #0]
 800c720:	693b      	ldr	r3, [r7, #16]
 800c722:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800c724:	4613      	mov	r3, r2
 800c726:	009b      	lsls	r3, r3, #2
 800c728:	4413      	add	r3, r2
 800c72a:	009b      	lsls	r3, r3, #2
 800c72c:	4a08      	ldr	r2, [pc, #32]	; (800c750 <xTaskPriorityDisinherit+0x104>)
 800c72e:	441a      	add	r2, r3
 800c730:	693b      	ldr	r3, [r7, #16]
 800c732:	3304      	adds	r3, #4
 800c734:	4619      	mov	r1, r3
 800c736:	4610      	mov	r0, r2
 800c738:	f7fe faa2 	bl	800ac80 <vListInsertEnd>
 800c73c:	2301      	movs	r3, #1
 800c73e:	617b      	str	r3, [r7, #20]
 800c740:	697b      	ldr	r3, [r7, #20]
 800c742:	4618      	mov	r0, r3
 800c744:	3718      	adds	r7, #24
 800c746:	46bd      	mov	sp, r7
 800c748:	bd80      	pop	{r7, pc}
 800c74a:	bf00      	nop
 800c74c:	2000086c 	.word	0x2000086c
 800c750:	20000870 	.word	0x20000870
 800c754:	20000974 	.word	0x20000974

0800c758 <pvTaskIncrementMutexHeldCount>:
 800c758:	b480      	push	{r7}
 800c75a:	af00      	add	r7, sp, #0
 800c75c:	4b07      	ldr	r3, [pc, #28]	; (800c77c <pvTaskIncrementMutexHeldCount+0x24>)
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	2b00      	cmp	r3, #0
 800c762:	d004      	beq.n	800c76e <pvTaskIncrementMutexHeldCount+0x16>
 800c764:	4b05      	ldr	r3, [pc, #20]	; (800c77c <pvTaskIncrementMutexHeldCount+0x24>)
 800c766:	681b      	ldr	r3, [r3, #0]
 800c768:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800c76a:	3201      	adds	r2, #1
 800c76c:	651a      	str	r2, [r3, #80]	; 0x50
 800c76e:	4b03      	ldr	r3, [pc, #12]	; (800c77c <pvTaskIncrementMutexHeldCount+0x24>)
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	4618      	mov	r0, r3
 800c774:	46bd      	mov	sp, r7
 800c776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c77a:	4770      	bx	lr
 800c77c:	2000086c 	.word	0x2000086c

0800c780 <prvAddCurrentTaskToDelayedList>:
 800c780:	b580      	push	{r7, lr}
 800c782:	b084      	sub	sp, #16
 800c784:	af00      	add	r7, sp, #0
 800c786:	6078      	str	r0, [r7, #4]
 800c788:	6039      	str	r1, [r7, #0]
 800c78a:	4b29      	ldr	r3, [pc, #164]	; (800c830 <prvAddCurrentTaskToDelayedList+0xb0>)
 800c78c:	681b      	ldr	r3, [r3, #0]
 800c78e:	60fb      	str	r3, [r7, #12]
 800c790:	4b28      	ldr	r3, [pc, #160]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c792:	681b      	ldr	r3, [r3, #0]
 800c794:	3304      	adds	r3, #4
 800c796:	4618      	mov	r0, r3
 800c798:	f7fe facf 	bl	800ad3a <uxListRemove>
 800c79c:	4603      	mov	r3, r0
 800c79e:	2b00      	cmp	r3, #0
 800c7a0:	d10b      	bne.n	800c7ba <prvAddCurrentTaskToDelayedList+0x3a>
 800c7a2:	4b24      	ldr	r3, [pc, #144]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c7a4:	681b      	ldr	r3, [r3, #0]
 800c7a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c7a8:	2201      	movs	r2, #1
 800c7aa:	fa02 f303 	lsl.w	r3, r2, r3
 800c7ae:	43da      	mvns	r2, r3
 800c7b0:	4b21      	ldr	r3, [pc, #132]	; (800c838 <prvAddCurrentTaskToDelayedList+0xb8>)
 800c7b2:	681b      	ldr	r3, [r3, #0]
 800c7b4:	4013      	ands	r3, r2
 800c7b6:	4a20      	ldr	r2, [pc, #128]	; (800c838 <prvAddCurrentTaskToDelayedList+0xb8>)
 800c7b8:	6013      	str	r3, [r2, #0]
 800c7ba:	687b      	ldr	r3, [r7, #4]
 800c7bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 800c7c0:	d10a      	bne.n	800c7d8 <prvAddCurrentTaskToDelayedList+0x58>
 800c7c2:	683b      	ldr	r3, [r7, #0]
 800c7c4:	2b00      	cmp	r3, #0
 800c7c6:	d007      	beq.n	800c7d8 <prvAddCurrentTaskToDelayedList+0x58>
 800c7c8:	4b1a      	ldr	r3, [pc, #104]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c7ca:	681b      	ldr	r3, [r3, #0]
 800c7cc:	3304      	adds	r3, #4
 800c7ce:	4619      	mov	r1, r3
 800c7d0:	481a      	ldr	r0, [pc, #104]	; (800c83c <prvAddCurrentTaskToDelayedList+0xbc>)
 800c7d2:	f7fe fa55 	bl	800ac80 <vListInsertEnd>
 800c7d6:	e026      	b.n	800c826 <prvAddCurrentTaskToDelayedList+0xa6>
 800c7d8:	68fa      	ldr	r2, [r7, #12]
 800c7da:	687b      	ldr	r3, [r7, #4]
 800c7dc:	4413      	add	r3, r2
 800c7de:	60bb      	str	r3, [r7, #8]
 800c7e0:	4b14      	ldr	r3, [pc, #80]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c7e2:	681b      	ldr	r3, [r3, #0]
 800c7e4:	68ba      	ldr	r2, [r7, #8]
 800c7e6:	605a      	str	r2, [r3, #4]
 800c7e8:	68ba      	ldr	r2, [r7, #8]
 800c7ea:	68fb      	ldr	r3, [r7, #12]
 800c7ec:	429a      	cmp	r2, r3
 800c7ee:	d209      	bcs.n	800c804 <prvAddCurrentTaskToDelayedList+0x84>
 800c7f0:	4b13      	ldr	r3, [pc, #76]	; (800c840 <prvAddCurrentTaskToDelayedList+0xc0>)
 800c7f2:	681a      	ldr	r2, [r3, #0]
 800c7f4:	4b0f      	ldr	r3, [pc, #60]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c7f6:	681b      	ldr	r3, [r3, #0]
 800c7f8:	3304      	adds	r3, #4
 800c7fa:	4619      	mov	r1, r3
 800c7fc:	4610      	mov	r0, r2
 800c7fe:	f7fe fa63 	bl	800acc8 <vListInsert>
 800c802:	e010      	b.n	800c826 <prvAddCurrentTaskToDelayedList+0xa6>
 800c804:	4b0f      	ldr	r3, [pc, #60]	; (800c844 <prvAddCurrentTaskToDelayedList+0xc4>)
 800c806:	681a      	ldr	r2, [r3, #0]
 800c808:	4b0a      	ldr	r3, [pc, #40]	; (800c834 <prvAddCurrentTaskToDelayedList+0xb4>)
 800c80a:	681b      	ldr	r3, [r3, #0]
 800c80c:	3304      	adds	r3, #4
 800c80e:	4619      	mov	r1, r3
 800c810:	4610      	mov	r0, r2
 800c812:	f7fe fa59 	bl	800acc8 <vListInsert>
 800c816:	4b0c      	ldr	r3, [pc, #48]	; (800c848 <prvAddCurrentTaskToDelayedList+0xc8>)
 800c818:	681b      	ldr	r3, [r3, #0]
 800c81a:	68ba      	ldr	r2, [r7, #8]
 800c81c:	429a      	cmp	r2, r3
 800c81e:	d202      	bcs.n	800c826 <prvAddCurrentTaskToDelayedList+0xa6>
 800c820:	4a09      	ldr	r2, [pc, #36]	; (800c848 <prvAddCurrentTaskToDelayedList+0xc8>)
 800c822:	68bb      	ldr	r3, [r7, #8]
 800c824:	6013      	str	r3, [r2, #0]
 800c826:	bf00      	nop
 800c828:	3710      	adds	r7, #16
 800c82a:	46bd      	mov	sp, r7
 800c82c:	bd80      	pop	{r7, pc}
 800c82e:	bf00      	nop
 800c830:	20000970 	.word	0x20000970
 800c834:	2000086c 	.word	0x2000086c
 800c838:	20000974 	.word	0x20000974
 800c83c:	20000958 	.word	0x20000958
 800c840:	20000928 	.word	0x20000928
 800c844:	20000924 	.word	0x20000924
 800c848:	2000098c 	.word	0x2000098c

0800c84c <xTimerCreateTimerTask>:
 800c84c:	b580      	push	{r7, lr}
 800c84e:	b084      	sub	sp, #16
 800c850:	af02      	add	r7, sp, #8
 800c852:	2300      	movs	r3, #0
 800c854:	607b      	str	r3, [r7, #4]
 800c856:	f000 fa95 	bl	800cd84 <prvCheckForValidListAndQueue>
 800c85a:	4b11      	ldr	r3, [pc, #68]	; (800c8a0 <xTimerCreateTimerTask+0x54>)
 800c85c:	681b      	ldr	r3, [r3, #0]
 800c85e:	2b00      	cmp	r3, #0
 800c860:	d00b      	beq.n	800c87a <xTimerCreateTimerTask+0x2e>
 800c862:	4b10      	ldr	r3, [pc, #64]	; (800c8a4 <xTimerCreateTimerTask+0x58>)
 800c864:	9301      	str	r3, [sp, #4]
 800c866:	2303      	movs	r3, #3
 800c868:	9300      	str	r3, [sp, #0]
 800c86a:	2300      	movs	r3, #0
 800c86c:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800c870:	490d      	ldr	r1, [pc, #52]	; (800c8a8 <xTimerCreateTimerTask+0x5c>)
 800c872:	480e      	ldr	r0, [pc, #56]	; (800c8ac <xTimerCreateTimerTask+0x60>)
 800c874:	f7ff f8ac 	bl	800b9d0 <xTaskCreate>
 800c878:	6078      	str	r0, [r7, #4]
 800c87a:	687b      	ldr	r3, [r7, #4]
 800c87c:	2b00      	cmp	r3, #0
 800c87e:	d10a      	bne.n	800c896 <xTimerCreateTimerTask+0x4a>
 800c880:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c884:	f383 8811 	msr	BASEPRI, r3
 800c888:	f3bf 8f6f 	isb	sy
 800c88c:	f3bf 8f4f 	dsb	sy
 800c890:	603b      	str	r3, [r7, #0]
 800c892:	bf00      	nop
 800c894:	e7fe      	b.n	800c894 <xTimerCreateTimerTask+0x48>
 800c896:	687b      	ldr	r3, [r7, #4]
 800c898:	4618      	mov	r0, r3
 800c89a:	3708      	adds	r7, #8
 800c89c:	46bd      	mov	sp, r7
 800c89e:	bd80      	pop	{r7, pc}
 800c8a0:	200009c8 	.word	0x200009c8
 800c8a4:	200009cc 	.word	0x200009cc
 800c8a8:	08010d40 	.word	0x08010d40
 800c8ac:	0800c9cd 	.word	0x0800c9cd

0800c8b0 <xTimerGenericCommand>:
 800c8b0:	b580      	push	{r7, lr}
 800c8b2:	b08a      	sub	sp, #40	; 0x28
 800c8b4:	af00      	add	r7, sp, #0
 800c8b6:	60f8      	str	r0, [r7, #12]
 800c8b8:	60b9      	str	r1, [r7, #8]
 800c8ba:	607a      	str	r2, [r7, #4]
 800c8bc:	603b      	str	r3, [r7, #0]
 800c8be:	2300      	movs	r3, #0
 800c8c0:	627b      	str	r3, [r7, #36]	; 0x24
 800c8c2:	68fb      	ldr	r3, [r7, #12]
 800c8c4:	2b00      	cmp	r3, #0
 800c8c6:	d10a      	bne.n	800c8de <xTimerGenericCommand+0x2e>
 800c8c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c8cc:	f383 8811 	msr	BASEPRI, r3
 800c8d0:	f3bf 8f6f 	isb	sy
 800c8d4:	f3bf 8f4f 	dsb	sy
 800c8d8:	623b      	str	r3, [r7, #32]
 800c8da:	bf00      	nop
 800c8dc:	e7fe      	b.n	800c8dc <xTimerGenericCommand+0x2c>
 800c8de:	4b1a      	ldr	r3, [pc, #104]	; (800c948 <xTimerGenericCommand+0x98>)
 800c8e0:	681b      	ldr	r3, [r3, #0]
 800c8e2:	2b00      	cmp	r3, #0
 800c8e4:	d02a      	beq.n	800c93c <xTimerGenericCommand+0x8c>
 800c8e6:	68bb      	ldr	r3, [r7, #8]
 800c8e8:	617b      	str	r3, [r7, #20]
 800c8ea:	687b      	ldr	r3, [r7, #4]
 800c8ec:	61bb      	str	r3, [r7, #24]
 800c8ee:	68fb      	ldr	r3, [r7, #12]
 800c8f0:	61fb      	str	r3, [r7, #28]
 800c8f2:	68bb      	ldr	r3, [r7, #8]
 800c8f4:	2b05      	cmp	r3, #5
 800c8f6:	dc18      	bgt.n	800c92a <xTimerGenericCommand+0x7a>
 800c8f8:	f7ff fe14 	bl	800c524 <xTaskGetSchedulerState>
 800c8fc:	4603      	mov	r3, r0
 800c8fe:	2b02      	cmp	r3, #2
 800c900:	d109      	bne.n	800c916 <xTimerGenericCommand+0x66>
 800c902:	4b11      	ldr	r3, [pc, #68]	; (800c948 <xTimerGenericCommand+0x98>)
 800c904:	6818      	ldr	r0, [r3, #0]
 800c906:	f107 0114 	add.w	r1, r7, #20
 800c90a:	2300      	movs	r3, #0
 800c90c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800c90e:	f7fe fb37 	bl	800af80 <xQueueGenericSend>
 800c912:	6278      	str	r0, [r7, #36]	; 0x24
 800c914:	e012      	b.n	800c93c <xTimerGenericCommand+0x8c>
 800c916:	4b0c      	ldr	r3, [pc, #48]	; (800c948 <xTimerGenericCommand+0x98>)
 800c918:	6818      	ldr	r0, [r3, #0]
 800c91a:	f107 0114 	add.w	r1, r7, #20
 800c91e:	2300      	movs	r3, #0
 800c920:	2200      	movs	r2, #0
 800c922:	f7fe fb2d 	bl	800af80 <xQueueGenericSend>
 800c926:	6278      	str	r0, [r7, #36]	; 0x24
 800c928:	e008      	b.n	800c93c <xTimerGenericCommand+0x8c>
 800c92a:	4b07      	ldr	r3, [pc, #28]	; (800c948 <xTimerGenericCommand+0x98>)
 800c92c:	6818      	ldr	r0, [r3, #0]
 800c92e:	f107 0114 	add.w	r1, r7, #20
 800c932:	2300      	movs	r3, #0
 800c934:	683a      	ldr	r2, [r7, #0]
 800c936:	f7fe fc21 	bl	800b17c <xQueueGenericSendFromISR>
 800c93a:	6278      	str	r0, [r7, #36]	; 0x24
 800c93c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800c93e:	4618      	mov	r0, r3
 800c940:	3728      	adds	r7, #40	; 0x28
 800c942:	46bd      	mov	sp, r7
 800c944:	bd80      	pop	{r7, pc}
 800c946:	bf00      	nop
 800c948:	200009c8 	.word	0x200009c8

0800c94c <prvProcessExpiredTimer>:
 800c94c:	b580      	push	{r7, lr}
 800c94e:	b088      	sub	sp, #32
 800c950:	af02      	add	r7, sp, #8
 800c952:	6078      	str	r0, [r7, #4]
 800c954:	6039      	str	r1, [r7, #0]
 800c956:	4b1c      	ldr	r3, [pc, #112]	; (800c9c8 <prvProcessExpiredTimer+0x7c>)
 800c958:	681b      	ldr	r3, [r3, #0]
 800c95a:	68db      	ldr	r3, [r3, #12]
 800c95c:	68db      	ldr	r3, [r3, #12]
 800c95e:	617b      	str	r3, [r7, #20]
 800c960:	697b      	ldr	r3, [r7, #20]
 800c962:	3304      	adds	r3, #4
 800c964:	4618      	mov	r0, r3
 800c966:	f7fe f9e8 	bl	800ad3a <uxListRemove>
 800c96a:	697b      	ldr	r3, [r7, #20]
 800c96c:	69db      	ldr	r3, [r3, #28]
 800c96e:	2b01      	cmp	r3, #1
 800c970:	d122      	bne.n	800c9b8 <prvProcessExpiredTimer+0x6c>
 800c972:	697b      	ldr	r3, [r7, #20]
 800c974:	699a      	ldr	r2, [r3, #24]
 800c976:	687b      	ldr	r3, [r7, #4]
 800c978:	18d1      	adds	r1, r2, r3
 800c97a:	687b      	ldr	r3, [r7, #4]
 800c97c:	683a      	ldr	r2, [r7, #0]
 800c97e:	6978      	ldr	r0, [r7, #20]
 800c980:	f000 f8c8 	bl	800cb14 <prvInsertTimerInActiveList>
 800c984:	4603      	mov	r3, r0
 800c986:	2b00      	cmp	r3, #0
 800c988:	d016      	beq.n	800c9b8 <prvProcessExpiredTimer+0x6c>
 800c98a:	2300      	movs	r3, #0
 800c98c:	9300      	str	r3, [sp, #0]
 800c98e:	2300      	movs	r3, #0
 800c990:	687a      	ldr	r2, [r7, #4]
 800c992:	2100      	movs	r1, #0
 800c994:	6978      	ldr	r0, [r7, #20]
 800c996:	f7ff ff8b 	bl	800c8b0 <xTimerGenericCommand>
 800c99a:	6138      	str	r0, [r7, #16]
 800c99c:	693b      	ldr	r3, [r7, #16]
 800c99e:	2b00      	cmp	r3, #0
 800c9a0:	d10a      	bne.n	800c9b8 <prvProcessExpiredTimer+0x6c>
 800c9a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800c9a6:	f383 8811 	msr	BASEPRI, r3
 800c9aa:	f3bf 8f6f 	isb	sy
 800c9ae:	f3bf 8f4f 	dsb	sy
 800c9b2:	60fb      	str	r3, [r7, #12]
 800c9b4:	bf00      	nop
 800c9b6:	e7fe      	b.n	800c9b6 <prvProcessExpiredTimer+0x6a>
 800c9b8:	697b      	ldr	r3, [r7, #20]
 800c9ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9bc:	6978      	ldr	r0, [r7, #20]
 800c9be:	4798      	blx	r3
 800c9c0:	bf00      	nop
 800c9c2:	3718      	adds	r7, #24
 800c9c4:	46bd      	mov	sp, r7
 800c9c6:	bd80      	pop	{r7, pc}
 800c9c8:	200009c0 	.word	0x200009c0

0800c9cc <prvTimerTask>:
 800c9cc:	b580      	push	{r7, lr}
 800c9ce:	b084      	sub	sp, #16
 800c9d0:	af00      	add	r7, sp, #0
 800c9d2:	6078      	str	r0, [r7, #4]
 800c9d4:	f107 0308 	add.w	r3, r7, #8
 800c9d8:	4618      	mov	r0, r3
 800c9da:	f000 f857 	bl	800ca8c <prvGetNextExpireTime>
 800c9de:	60f8      	str	r0, [r7, #12]
 800c9e0:	68bb      	ldr	r3, [r7, #8]
 800c9e2:	4619      	mov	r1, r3
 800c9e4:	68f8      	ldr	r0, [r7, #12]
 800c9e6:	f000 f803 	bl	800c9f0 <prvProcessTimerOrBlockTask>
 800c9ea:	f000 f8d5 	bl	800cb98 <prvProcessReceivedCommands>
 800c9ee:	e7f1      	b.n	800c9d4 <prvTimerTask+0x8>

0800c9f0 <prvProcessTimerOrBlockTask>:
 800c9f0:	b580      	push	{r7, lr}
 800c9f2:	b084      	sub	sp, #16
 800c9f4:	af00      	add	r7, sp, #0
 800c9f6:	6078      	str	r0, [r7, #4]
 800c9f8:	6039      	str	r1, [r7, #0]
 800c9fa:	f7ff f9a1 	bl	800bd40 <vTaskSuspendAll>
 800c9fe:	f107 0308 	add.w	r3, r7, #8
 800ca02:	4618      	mov	r0, r3
 800ca04:	f000 f866 	bl	800cad4 <prvSampleTimeNow>
 800ca08:	60f8      	str	r0, [r7, #12]
 800ca0a:	68bb      	ldr	r3, [r7, #8]
 800ca0c:	2b00      	cmp	r3, #0
 800ca0e:	d130      	bne.n	800ca72 <prvProcessTimerOrBlockTask+0x82>
 800ca10:	683b      	ldr	r3, [r7, #0]
 800ca12:	2b00      	cmp	r3, #0
 800ca14:	d10a      	bne.n	800ca2c <prvProcessTimerOrBlockTask+0x3c>
 800ca16:	687a      	ldr	r2, [r7, #4]
 800ca18:	68fb      	ldr	r3, [r7, #12]
 800ca1a:	429a      	cmp	r2, r3
 800ca1c:	d806      	bhi.n	800ca2c <prvProcessTimerOrBlockTask+0x3c>
 800ca1e:	f7ff f99d 	bl	800bd5c <xTaskResumeAll>
 800ca22:	68f9      	ldr	r1, [r7, #12]
 800ca24:	6878      	ldr	r0, [r7, #4]
 800ca26:	f7ff ff91 	bl	800c94c <prvProcessExpiredTimer>
 800ca2a:	e024      	b.n	800ca76 <prvProcessTimerOrBlockTask+0x86>
 800ca2c:	683b      	ldr	r3, [r7, #0]
 800ca2e:	2b00      	cmp	r3, #0
 800ca30:	d008      	beq.n	800ca44 <prvProcessTimerOrBlockTask+0x54>
 800ca32:	4b13      	ldr	r3, [pc, #76]	; (800ca80 <prvProcessTimerOrBlockTask+0x90>)
 800ca34:	681b      	ldr	r3, [r3, #0]
 800ca36:	681b      	ldr	r3, [r3, #0]
 800ca38:	2b00      	cmp	r3, #0
 800ca3a:	bf0c      	ite	eq
 800ca3c:	2301      	moveq	r3, #1
 800ca3e:	2300      	movne	r3, #0
 800ca40:	b2db      	uxtb	r3, r3
 800ca42:	603b      	str	r3, [r7, #0]
 800ca44:	4b0f      	ldr	r3, [pc, #60]	; (800ca84 <prvProcessTimerOrBlockTask+0x94>)
 800ca46:	6818      	ldr	r0, [r3, #0]
 800ca48:	687a      	ldr	r2, [r7, #4]
 800ca4a:	68fb      	ldr	r3, [r7, #12]
 800ca4c:	1ad3      	subs	r3, r2, r3
 800ca4e:	683a      	ldr	r2, [r7, #0]
 800ca50:	4619      	mov	r1, r3
 800ca52:	f7fe ff89 	bl	800b968 <vQueueWaitForMessageRestricted>
 800ca56:	f7ff f981 	bl	800bd5c <xTaskResumeAll>
 800ca5a:	4603      	mov	r3, r0
 800ca5c:	2b00      	cmp	r3, #0
 800ca5e:	d10a      	bne.n	800ca76 <prvProcessTimerOrBlockTask+0x86>
 800ca60:	4b09      	ldr	r3, [pc, #36]	; (800ca88 <prvProcessTimerOrBlockTask+0x98>)
 800ca62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ca66:	601a      	str	r2, [r3, #0]
 800ca68:	f3bf 8f4f 	dsb	sy
 800ca6c:	f3bf 8f6f 	isb	sy
 800ca70:	e001      	b.n	800ca76 <prvProcessTimerOrBlockTask+0x86>
 800ca72:	f7ff f973 	bl	800bd5c <xTaskResumeAll>
 800ca76:	bf00      	nop
 800ca78:	3710      	adds	r7, #16
 800ca7a:	46bd      	mov	sp, r7
 800ca7c:	bd80      	pop	{r7, pc}
 800ca7e:	bf00      	nop
 800ca80:	200009c4 	.word	0x200009c4
 800ca84:	200009c8 	.word	0x200009c8
 800ca88:	e000ed04 	.word	0xe000ed04

0800ca8c <prvGetNextExpireTime>:
 800ca8c:	b480      	push	{r7}
 800ca8e:	b085      	sub	sp, #20
 800ca90:	af00      	add	r7, sp, #0
 800ca92:	6078      	str	r0, [r7, #4]
 800ca94:	4b0e      	ldr	r3, [pc, #56]	; (800cad0 <prvGetNextExpireTime+0x44>)
 800ca96:	681b      	ldr	r3, [r3, #0]
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	2b00      	cmp	r3, #0
 800ca9c:	bf0c      	ite	eq
 800ca9e:	2301      	moveq	r3, #1
 800caa0:	2300      	movne	r3, #0
 800caa2:	b2db      	uxtb	r3, r3
 800caa4:	461a      	mov	r2, r3
 800caa6:	687b      	ldr	r3, [r7, #4]
 800caa8:	601a      	str	r2, [r3, #0]
 800caaa:	687b      	ldr	r3, [r7, #4]
 800caac:	681b      	ldr	r3, [r3, #0]
 800caae:	2b00      	cmp	r3, #0
 800cab0:	d105      	bne.n	800cabe <prvGetNextExpireTime+0x32>
 800cab2:	4b07      	ldr	r3, [pc, #28]	; (800cad0 <prvGetNextExpireTime+0x44>)
 800cab4:	681b      	ldr	r3, [r3, #0]
 800cab6:	68db      	ldr	r3, [r3, #12]
 800cab8:	681b      	ldr	r3, [r3, #0]
 800caba:	60fb      	str	r3, [r7, #12]
 800cabc:	e001      	b.n	800cac2 <prvGetNextExpireTime+0x36>
 800cabe:	2300      	movs	r3, #0
 800cac0:	60fb      	str	r3, [r7, #12]
 800cac2:	68fb      	ldr	r3, [r7, #12]
 800cac4:	4618      	mov	r0, r3
 800cac6:	3714      	adds	r7, #20
 800cac8:	46bd      	mov	sp, r7
 800caca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cace:	4770      	bx	lr
 800cad0:	200009c0 	.word	0x200009c0

0800cad4 <prvSampleTimeNow>:
 800cad4:	b580      	push	{r7, lr}
 800cad6:	b084      	sub	sp, #16
 800cad8:	af00      	add	r7, sp, #0
 800cada:	6078      	str	r0, [r7, #4]
 800cadc:	f7ff f9da 	bl	800be94 <xTaskGetTickCount>
 800cae0:	60f8      	str	r0, [r7, #12]
 800cae2:	4b0b      	ldr	r3, [pc, #44]	; (800cb10 <prvSampleTimeNow+0x3c>)
 800cae4:	681b      	ldr	r3, [r3, #0]
 800cae6:	68fa      	ldr	r2, [r7, #12]
 800cae8:	429a      	cmp	r2, r3
 800caea:	d205      	bcs.n	800caf8 <prvSampleTimeNow+0x24>
 800caec:	f000 f8e8 	bl	800ccc0 <prvSwitchTimerLists>
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	2201      	movs	r2, #1
 800caf4:	601a      	str	r2, [r3, #0]
 800caf6:	e002      	b.n	800cafe <prvSampleTimeNow+0x2a>
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	2200      	movs	r2, #0
 800cafc:	601a      	str	r2, [r3, #0]
 800cafe:	4a04      	ldr	r2, [pc, #16]	; (800cb10 <prvSampleTimeNow+0x3c>)
 800cb00:	68fb      	ldr	r3, [r7, #12]
 800cb02:	6013      	str	r3, [r2, #0]
 800cb04:	68fb      	ldr	r3, [r7, #12]
 800cb06:	4618      	mov	r0, r3
 800cb08:	3710      	adds	r7, #16
 800cb0a:	46bd      	mov	sp, r7
 800cb0c:	bd80      	pop	{r7, pc}
 800cb0e:	bf00      	nop
 800cb10:	200009d0 	.word	0x200009d0

0800cb14 <prvInsertTimerInActiveList>:
 800cb14:	b580      	push	{r7, lr}
 800cb16:	b086      	sub	sp, #24
 800cb18:	af00      	add	r7, sp, #0
 800cb1a:	60f8      	str	r0, [r7, #12]
 800cb1c:	60b9      	str	r1, [r7, #8]
 800cb1e:	607a      	str	r2, [r7, #4]
 800cb20:	603b      	str	r3, [r7, #0]
 800cb22:	2300      	movs	r3, #0
 800cb24:	617b      	str	r3, [r7, #20]
 800cb26:	68fb      	ldr	r3, [r7, #12]
 800cb28:	68ba      	ldr	r2, [r7, #8]
 800cb2a:	605a      	str	r2, [r3, #4]
 800cb2c:	68fb      	ldr	r3, [r7, #12]
 800cb2e:	68fa      	ldr	r2, [r7, #12]
 800cb30:	611a      	str	r2, [r3, #16]
 800cb32:	68ba      	ldr	r2, [r7, #8]
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	429a      	cmp	r2, r3
 800cb38:	d812      	bhi.n	800cb60 <prvInsertTimerInActiveList+0x4c>
 800cb3a:	687a      	ldr	r2, [r7, #4]
 800cb3c:	683b      	ldr	r3, [r7, #0]
 800cb3e:	1ad2      	subs	r2, r2, r3
 800cb40:	68fb      	ldr	r3, [r7, #12]
 800cb42:	699b      	ldr	r3, [r3, #24]
 800cb44:	429a      	cmp	r2, r3
 800cb46:	d302      	bcc.n	800cb4e <prvInsertTimerInActiveList+0x3a>
 800cb48:	2301      	movs	r3, #1
 800cb4a:	617b      	str	r3, [r7, #20]
 800cb4c:	e01b      	b.n	800cb86 <prvInsertTimerInActiveList+0x72>
 800cb4e:	4b10      	ldr	r3, [pc, #64]	; (800cb90 <prvInsertTimerInActiveList+0x7c>)
 800cb50:	681a      	ldr	r2, [r3, #0]
 800cb52:	68fb      	ldr	r3, [r7, #12]
 800cb54:	3304      	adds	r3, #4
 800cb56:	4619      	mov	r1, r3
 800cb58:	4610      	mov	r0, r2
 800cb5a:	f7fe f8b5 	bl	800acc8 <vListInsert>
 800cb5e:	e012      	b.n	800cb86 <prvInsertTimerInActiveList+0x72>
 800cb60:	687a      	ldr	r2, [r7, #4]
 800cb62:	683b      	ldr	r3, [r7, #0]
 800cb64:	429a      	cmp	r2, r3
 800cb66:	d206      	bcs.n	800cb76 <prvInsertTimerInActiveList+0x62>
 800cb68:	68ba      	ldr	r2, [r7, #8]
 800cb6a:	683b      	ldr	r3, [r7, #0]
 800cb6c:	429a      	cmp	r2, r3
 800cb6e:	d302      	bcc.n	800cb76 <prvInsertTimerInActiveList+0x62>
 800cb70:	2301      	movs	r3, #1
 800cb72:	617b      	str	r3, [r7, #20]
 800cb74:	e007      	b.n	800cb86 <prvInsertTimerInActiveList+0x72>
 800cb76:	4b07      	ldr	r3, [pc, #28]	; (800cb94 <prvInsertTimerInActiveList+0x80>)
 800cb78:	681a      	ldr	r2, [r3, #0]
 800cb7a:	68fb      	ldr	r3, [r7, #12]
 800cb7c:	3304      	adds	r3, #4
 800cb7e:	4619      	mov	r1, r3
 800cb80:	4610      	mov	r0, r2
 800cb82:	f7fe f8a1 	bl	800acc8 <vListInsert>
 800cb86:	697b      	ldr	r3, [r7, #20]
 800cb88:	4618      	mov	r0, r3
 800cb8a:	3718      	adds	r7, #24
 800cb8c:	46bd      	mov	sp, r7
 800cb8e:	bd80      	pop	{r7, pc}
 800cb90:	200009c4 	.word	0x200009c4
 800cb94:	200009c0 	.word	0x200009c0

0800cb98 <prvProcessReceivedCommands>:
 800cb98:	b580      	push	{r7, lr}
 800cb9a:	b08c      	sub	sp, #48	; 0x30
 800cb9c:	af02      	add	r7, sp, #8
 800cb9e:	e07c      	b.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cba0:	68bb      	ldr	r3, [r7, #8]
 800cba2:	2b00      	cmp	r3, #0
 800cba4:	db78      	blt.n	800cc98 <prvProcessReceivedCommands+0x100>
 800cba6:	693b      	ldr	r3, [r7, #16]
 800cba8:	627b      	str	r3, [r7, #36]	; 0x24
 800cbaa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbac:	695b      	ldr	r3, [r3, #20]
 800cbae:	2b00      	cmp	r3, #0
 800cbb0:	d004      	beq.n	800cbbc <prvProcessReceivedCommands+0x24>
 800cbb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbb4:	3304      	adds	r3, #4
 800cbb6:	4618      	mov	r0, r3
 800cbb8:	f7fe f8bf 	bl	800ad3a <uxListRemove>
 800cbbc:	1d3b      	adds	r3, r7, #4
 800cbbe:	4618      	mov	r0, r3
 800cbc0:	f7ff ff88 	bl	800cad4 <prvSampleTimeNow>
 800cbc4:	6238      	str	r0, [r7, #32]
 800cbc6:	68bb      	ldr	r3, [r7, #8]
 800cbc8:	2b09      	cmp	r3, #9
 800cbca:	d866      	bhi.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cbcc:	a201      	add	r2, pc, #4	; (adr r2, 800cbd4 <prvProcessReceivedCommands+0x3c>)
 800cbce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cbd2:	bf00      	nop
 800cbd4:	0800cbfd 	.word	0x0800cbfd
 800cbd8:	0800cbfd 	.word	0x0800cbfd
 800cbdc:	0800cbfd 	.word	0x0800cbfd
 800cbe0:	0800cc9b 	.word	0x0800cc9b
 800cbe4:	0800cc59 	.word	0x0800cc59
 800cbe8:	0800cc91 	.word	0x0800cc91
 800cbec:	0800cbfd 	.word	0x0800cbfd
 800cbf0:	0800cbfd 	.word	0x0800cbfd
 800cbf4:	0800cc9b 	.word	0x0800cc9b
 800cbf8:	0800cc59 	.word	0x0800cc59
 800cbfc:	68fa      	ldr	r2, [r7, #12]
 800cbfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc00:	699b      	ldr	r3, [r3, #24]
 800cc02:	18d1      	adds	r1, r2, r3
 800cc04:	68fb      	ldr	r3, [r7, #12]
 800cc06:	6a3a      	ldr	r2, [r7, #32]
 800cc08:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cc0a:	f7ff ff83 	bl	800cb14 <prvInsertTimerInActiveList>
 800cc0e:	4603      	mov	r3, r0
 800cc10:	2b00      	cmp	r3, #0
 800cc12:	d042      	beq.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cc14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc18:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cc1a:	4798      	blx	r3
 800cc1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc1e:	69db      	ldr	r3, [r3, #28]
 800cc20:	2b01      	cmp	r3, #1
 800cc22:	d13a      	bne.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cc24:	68fa      	ldr	r2, [r7, #12]
 800cc26:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc28:	699b      	ldr	r3, [r3, #24]
 800cc2a:	441a      	add	r2, r3
 800cc2c:	2300      	movs	r3, #0
 800cc2e:	9300      	str	r3, [sp, #0]
 800cc30:	2300      	movs	r3, #0
 800cc32:	2100      	movs	r1, #0
 800cc34:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cc36:	f7ff fe3b 	bl	800c8b0 <xTimerGenericCommand>
 800cc3a:	61f8      	str	r0, [r7, #28]
 800cc3c:	69fb      	ldr	r3, [r7, #28]
 800cc3e:	2b00      	cmp	r3, #0
 800cc40:	d12b      	bne.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cc42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc46:	f383 8811 	msr	BASEPRI, r3
 800cc4a:	f3bf 8f6f 	isb	sy
 800cc4e:	f3bf 8f4f 	dsb	sy
 800cc52:	61bb      	str	r3, [r7, #24]
 800cc54:	bf00      	nop
 800cc56:	e7fe      	b.n	800cc56 <prvProcessReceivedCommands+0xbe>
 800cc58:	68fa      	ldr	r2, [r7, #12]
 800cc5a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc5c:	619a      	str	r2, [r3, #24]
 800cc5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc60:	699b      	ldr	r3, [r3, #24]
 800cc62:	2b00      	cmp	r3, #0
 800cc64:	d10a      	bne.n	800cc7c <prvProcessReceivedCommands+0xe4>
 800cc66:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc6a:	f383 8811 	msr	BASEPRI, r3
 800cc6e:	f3bf 8f6f 	isb	sy
 800cc72:	f3bf 8f4f 	dsb	sy
 800cc76:	617b      	str	r3, [r7, #20]
 800cc78:	bf00      	nop
 800cc7a:	e7fe      	b.n	800cc7a <prvProcessReceivedCommands+0xe2>
 800cc7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cc7e:	699a      	ldr	r2, [r3, #24]
 800cc80:	6a3b      	ldr	r3, [r7, #32]
 800cc82:	18d1      	adds	r1, r2, r3
 800cc84:	6a3b      	ldr	r3, [r7, #32]
 800cc86:	6a3a      	ldr	r2, [r7, #32]
 800cc88:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cc8a:	f7ff ff43 	bl	800cb14 <prvInsertTimerInActiveList>
 800cc8e:	e004      	b.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cc90:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800cc92:	f000 fb95 	bl	800d3c0 <vPortFree>
 800cc96:	e000      	b.n	800cc9a <prvProcessReceivedCommands+0x102>
 800cc98:	bf00      	nop
 800cc9a:	4b08      	ldr	r3, [pc, #32]	; (800ccbc <prvProcessReceivedCommands+0x124>)
 800cc9c:	6818      	ldr	r0, [r3, #0]
 800cc9e:	f107 0108 	add.w	r1, r7, #8
 800cca2:	2300      	movs	r3, #0
 800cca4:	2200      	movs	r2, #0
 800cca6:	f7fe fb8f 	bl	800b3c8 <xQueueGenericReceive>
 800ccaa:	4603      	mov	r3, r0
 800ccac:	2b00      	cmp	r3, #0
 800ccae:	f47f af77 	bne.w	800cba0 <prvProcessReceivedCommands+0x8>
 800ccb2:	bf00      	nop
 800ccb4:	bf00      	nop
 800ccb6:	3728      	adds	r7, #40	; 0x28
 800ccb8:	46bd      	mov	sp, r7
 800ccba:	bd80      	pop	{r7, pc}
 800ccbc:	200009c8 	.word	0x200009c8

0800ccc0 <prvSwitchTimerLists>:
 800ccc0:	b580      	push	{r7, lr}
 800ccc2:	b088      	sub	sp, #32
 800ccc4:	af02      	add	r7, sp, #8
 800ccc6:	e045      	b.n	800cd54 <prvSwitchTimerLists+0x94>
 800ccc8:	4b2c      	ldr	r3, [pc, #176]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800ccca:	681b      	ldr	r3, [r3, #0]
 800cccc:	68db      	ldr	r3, [r3, #12]
 800ccce:	681b      	ldr	r3, [r3, #0]
 800ccd0:	613b      	str	r3, [r7, #16]
 800ccd2:	4b2a      	ldr	r3, [pc, #168]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800ccd4:	681b      	ldr	r3, [r3, #0]
 800ccd6:	68db      	ldr	r3, [r3, #12]
 800ccd8:	68db      	ldr	r3, [r3, #12]
 800ccda:	60fb      	str	r3, [r7, #12]
 800ccdc:	68fb      	ldr	r3, [r7, #12]
 800ccde:	3304      	adds	r3, #4
 800cce0:	4618      	mov	r0, r3
 800cce2:	f7fe f82a 	bl	800ad3a <uxListRemove>
 800cce6:	68fb      	ldr	r3, [r7, #12]
 800cce8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ccea:	68f8      	ldr	r0, [r7, #12]
 800ccec:	4798      	blx	r3
 800ccee:	68fb      	ldr	r3, [r7, #12]
 800ccf0:	69db      	ldr	r3, [r3, #28]
 800ccf2:	2b01      	cmp	r3, #1
 800ccf4:	d12e      	bne.n	800cd54 <prvSwitchTimerLists+0x94>
 800ccf6:	68fb      	ldr	r3, [r7, #12]
 800ccf8:	699b      	ldr	r3, [r3, #24]
 800ccfa:	693a      	ldr	r2, [r7, #16]
 800ccfc:	4413      	add	r3, r2
 800ccfe:	60bb      	str	r3, [r7, #8]
 800cd00:	68ba      	ldr	r2, [r7, #8]
 800cd02:	693b      	ldr	r3, [r7, #16]
 800cd04:	429a      	cmp	r2, r3
 800cd06:	d90e      	bls.n	800cd26 <prvSwitchTimerLists+0x66>
 800cd08:	68fb      	ldr	r3, [r7, #12]
 800cd0a:	68ba      	ldr	r2, [r7, #8]
 800cd0c:	605a      	str	r2, [r3, #4]
 800cd0e:	68fb      	ldr	r3, [r7, #12]
 800cd10:	68fa      	ldr	r2, [r7, #12]
 800cd12:	611a      	str	r2, [r3, #16]
 800cd14:	4b19      	ldr	r3, [pc, #100]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800cd16:	681a      	ldr	r2, [r3, #0]
 800cd18:	68fb      	ldr	r3, [r7, #12]
 800cd1a:	3304      	adds	r3, #4
 800cd1c:	4619      	mov	r1, r3
 800cd1e:	4610      	mov	r0, r2
 800cd20:	f7fd ffd2 	bl	800acc8 <vListInsert>
 800cd24:	e016      	b.n	800cd54 <prvSwitchTimerLists+0x94>
 800cd26:	2300      	movs	r3, #0
 800cd28:	9300      	str	r3, [sp, #0]
 800cd2a:	2300      	movs	r3, #0
 800cd2c:	693a      	ldr	r2, [r7, #16]
 800cd2e:	2100      	movs	r1, #0
 800cd30:	68f8      	ldr	r0, [r7, #12]
 800cd32:	f7ff fdbd 	bl	800c8b0 <xTimerGenericCommand>
 800cd36:	6078      	str	r0, [r7, #4]
 800cd38:	687b      	ldr	r3, [r7, #4]
 800cd3a:	2b00      	cmp	r3, #0
 800cd3c:	d10a      	bne.n	800cd54 <prvSwitchTimerLists+0x94>
 800cd3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cd42:	f383 8811 	msr	BASEPRI, r3
 800cd46:	f3bf 8f6f 	isb	sy
 800cd4a:	f3bf 8f4f 	dsb	sy
 800cd4e:	603b      	str	r3, [r7, #0]
 800cd50:	bf00      	nop
 800cd52:	e7fe      	b.n	800cd52 <prvSwitchTimerLists+0x92>
 800cd54:	4b09      	ldr	r3, [pc, #36]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	681b      	ldr	r3, [r3, #0]
 800cd5a:	2b00      	cmp	r3, #0
 800cd5c:	d1b4      	bne.n	800ccc8 <prvSwitchTimerLists+0x8>
 800cd5e:	4b07      	ldr	r3, [pc, #28]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800cd60:	681b      	ldr	r3, [r3, #0]
 800cd62:	617b      	str	r3, [r7, #20]
 800cd64:	4b06      	ldr	r3, [pc, #24]	; (800cd80 <prvSwitchTimerLists+0xc0>)
 800cd66:	681b      	ldr	r3, [r3, #0]
 800cd68:	4a04      	ldr	r2, [pc, #16]	; (800cd7c <prvSwitchTimerLists+0xbc>)
 800cd6a:	6013      	str	r3, [r2, #0]
 800cd6c:	4a04      	ldr	r2, [pc, #16]	; (800cd80 <prvSwitchTimerLists+0xc0>)
 800cd6e:	697b      	ldr	r3, [r7, #20]
 800cd70:	6013      	str	r3, [r2, #0]
 800cd72:	bf00      	nop
 800cd74:	3718      	adds	r7, #24
 800cd76:	46bd      	mov	sp, r7
 800cd78:	bd80      	pop	{r7, pc}
 800cd7a:	bf00      	nop
 800cd7c:	200009c0 	.word	0x200009c0
 800cd80:	200009c4 	.word	0x200009c4

0800cd84 <prvCheckForValidListAndQueue>:
 800cd84:	b580      	push	{r7, lr}
 800cd86:	af00      	add	r7, sp, #0
 800cd88:	f000 f93c 	bl	800d004 <vPortEnterCritical>
 800cd8c:	4b12      	ldr	r3, [pc, #72]	; (800cdd8 <prvCheckForValidListAndQueue+0x54>)
 800cd8e:	681b      	ldr	r3, [r3, #0]
 800cd90:	2b00      	cmp	r3, #0
 800cd92:	d11d      	bne.n	800cdd0 <prvCheckForValidListAndQueue+0x4c>
 800cd94:	4811      	ldr	r0, [pc, #68]	; (800cddc <prvCheckForValidListAndQueue+0x58>)
 800cd96:	f7fd ff46 	bl	800ac26 <vListInitialise>
 800cd9a:	4811      	ldr	r0, [pc, #68]	; (800cde0 <prvCheckForValidListAndQueue+0x5c>)
 800cd9c:	f7fd ff43 	bl	800ac26 <vListInitialise>
 800cda0:	4b10      	ldr	r3, [pc, #64]	; (800cde4 <prvCheckForValidListAndQueue+0x60>)
 800cda2:	4a0e      	ldr	r2, [pc, #56]	; (800cddc <prvCheckForValidListAndQueue+0x58>)
 800cda4:	601a      	str	r2, [r3, #0]
 800cda6:	4b10      	ldr	r3, [pc, #64]	; (800cde8 <prvCheckForValidListAndQueue+0x64>)
 800cda8:	4a0d      	ldr	r2, [pc, #52]	; (800cde0 <prvCheckForValidListAndQueue+0x5c>)
 800cdaa:	601a      	str	r2, [r3, #0]
 800cdac:	2200      	movs	r2, #0
 800cdae:	210c      	movs	r1, #12
 800cdb0:	200a      	movs	r0, #10
 800cdb2:	f7fe f855 	bl	800ae60 <xQueueGenericCreate>
 800cdb6:	4603      	mov	r3, r0
 800cdb8:	4a07      	ldr	r2, [pc, #28]	; (800cdd8 <prvCheckForValidListAndQueue+0x54>)
 800cdba:	6013      	str	r3, [r2, #0]
 800cdbc:	4b06      	ldr	r3, [pc, #24]	; (800cdd8 <prvCheckForValidListAndQueue+0x54>)
 800cdbe:	681b      	ldr	r3, [r3, #0]
 800cdc0:	2b00      	cmp	r3, #0
 800cdc2:	d005      	beq.n	800cdd0 <prvCheckForValidListAndQueue+0x4c>
 800cdc4:	4b04      	ldr	r3, [pc, #16]	; (800cdd8 <prvCheckForValidListAndQueue+0x54>)
 800cdc6:	681b      	ldr	r3, [r3, #0]
 800cdc8:	4908      	ldr	r1, [pc, #32]	; (800cdec <prvCheckForValidListAndQueue+0x68>)
 800cdca:	4618      	mov	r0, r3
 800cdcc:	f7fe fda2 	bl	800b914 <vQueueAddToRegistry>
 800cdd0:	f000 f948 	bl	800d064 <vPortExitCritical>
 800cdd4:	bf00      	nop
 800cdd6:	bd80      	pop	{r7, pc}
 800cdd8:	200009c8 	.word	0x200009c8
 800cddc:	20000998 	.word	0x20000998
 800cde0:	200009ac 	.word	0x200009ac
 800cde4:	200009c0 	.word	0x200009c0
 800cde8:	200009c4 	.word	0x200009c4
 800cdec:	08010d48 	.word	0x08010d48

0800cdf0 <pxPortInitialiseStack>:
 800cdf0:	b480      	push	{r7}
 800cdf2:	b085      	sub	sp, #20
 800cdf4:	af00      	add	r7, sp, #0
 800cdf6:	60f8      	str	r0, [r7, #12]
 800cdf8:	60b9      	str	r1, [r7, #8]
 800cdfa:	607a      	str	r2, [r7, #4]
 800cdfc:	68fb      	ldr	r3, [r7, #12]
 800cdfe:	3b04      	subs	r3, #4
 800ce00:	60fb      	str	r3, [r7, #12]
 800ce02:	68fb      	ldr	r3, [r7, #12]
 800ce04:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800ce08:	601a      	str	r2, [r3, #0]
 800ce0a:	68fb      	ldr	r3, [r7, #12]
 800ce0c:	3b04      	subs	r3, #4
 800ce0e:	60fb      	str	r3, [r7, #12]
 800ce10:	68bb      	ldr	r3, [r7, #8]
 800ce12:	f023 0201 	bic.w	r2, r3, #1
 800ce16:	68fb      	ldr	r3, [r7, #12]
 800ce18:	601a      	str	r2, [r3, #0]
 800ce1a:	68fb      	ldr	r3, [r7, #12]
 800ce1c:	3b04      	subs	r3, #4
 800ce1e:	60fb      	str	r3, [r7, #12]
 800ce20:	4a0c      	ldr	r2, [pc, #48]	; (800ce54 <pxPortInitialiseStack+0x64>)
 800ce22:	68fb      	ldr	r3, [r7, #12]
 800ce24:	601a      	str	r2, [r3, #0]
 800ce26:	68fb      	ldr	r3, [r7, #12]
 800ce28:	3b14      	subs	r3, #20
 800ce2a:	60fb      	str	r3, [r7, #12]
 800ce2c:	687a      	ldr	r2, [r7, #4]
 800ce2e:	68fb      	ldr	r3, [r7, #12]
 800ce30:	601a      	str	r2, [r3, #0]
 800ce32:	68fb      	ldr	r3, [r7, #12]
 800ce34:	3b04      	subs	r3, #4
 800ce36:	60fb      	str	r3, [r7, #12]
 800ce38:	68fb      	ldr	r3, [r7, #12]
 800ce3a:	f06f 0202 	mvn.w	r2, #2
 800ce3e:	601a      	str	r2, [r3, #0]
 800ce40:	68fb      	ldr	r3, [r7, #12]
 800ce42:	3b20      	subs	r3, #32
 800ce44:	60fb      	str	r3, [r7, #12]
 800ce46:	68fb      	ldr	r3, [r7, #12]
 800ce48:	4618      	mov	r0, r3
 800ce4a:	3714      	adds	r7, #20
 800ce4c:	46bd      	mov	sp, r7
 800ce4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce52:	4770      	bx	lr
 800ce54:	0800ce59 	.word	0x0800ce59

0800ce58 <prvTaskExitError>:
 800ce58:	b480      	push	{r7}
 800ce5a:	b083      	sub	sp, #12
 800ce5c:	af00      	add	r7, sp, #0
 800ce5e:	4b0d      	ldr	r3, [pc, #52]	; (800ce94 <prvTaskExitError+0x3c>)
 800ce60:	681b      	ldr	r3, [r3, #0]
 800ce62:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ce66:	d00a      	beq.n	800ce7e <prvTaskExitError+0x26>
 800ce68:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce6c:	f383 8811 	msr	BASEPRI, r3
 800ce70:	f3bf 8f6f 	isb	sy
 800ce74:	f3bf 8f4f 	dsb	sy
 800ce78:	607b      	str	r3, [r7, #4]
 800ce7a:	bf00      	nop
 800ce7c:	e7fe      	b.n	800ce7c <prvTaskExitError+0x24>
 800ce7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce82:	f383 8811 	msr	BASEPRI, r3
 800ce86:	f3bf 8f6f 	isb	sy
 800ce8a:	f3bf 8f4f 	dsb	sy
 800ce8e:	603b      	str	r3, [r7, #0]
 800ce90:	bf00      	nop
 800ce92:	e7fe      	b.n	800ce92 <prvTaskExitError+0x3a>
 800ce94:	20000018 	.word	0x20000018
	...

0800cea0 <SVC_Handler>:
 800cea0:	4b07      	ldr	r3, [pc, #28]	; (800cec0 <pxCurrentTCBConst2>)
 800cea2:	6819      	ldr	r1, [r3, #0]
 800cea4:	6808      	ldr	r0, [r1, #0]
 800cea6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceaa:	f380 8809 	msr	PSP, r0
 800ceae:	f3bf 8f6f 	isb	sy
 800ceb2:	f04f 0000 	mov.w	r0, #0
 800ceb6:	f380 8811 	msr	BASEPRI, r0
 800ceba:	4770      	bx	lr
 800cebc:	f3af 8000 	nop.w

0800cec0 <pxCurrentTCBConst2>:
 800cec0:	2000086c 	.word	0x2000086c
 800cec4:	bf00      	nop
 800cec6:	bf00      	nop

0800cec8 <prvPortStartFirstTask>:
 800cec8:	4806      	ldr	r0, [pc, #24]	; (800cee4 <prvPortStartFirstTask+0x1c>)
 800ceca:	6800      	ldr	r0, [r0, #0]
 800cecc:	6800      	ldr	r0, [r0, #0]
 800cece:	f380 8808 	msr	MSP, r0
 800ced2:	b662      	cpsie	i
 800ced4:	b661      	cpsie	f
 800ced6:	f3bf 8f4f 	dsb	sy
 800ceda:	f3bf 8f6f 	isb	sy
 800cede:	df00      	svc	0
 800cee0:	bf00      	nop
 800cee2:	bf00      	nop
 800cee4:	e000ed08 	.word	0xe000ed08

0800cee8 <xPortStartScheduler>:
 800cee8:	b580      	push	{r7, lr}
 800ceea:	b086      	sub	sp, #24
 800ceec:	af00      	add	r7, sp, #0
 800ceee:	4b3c      	ldr	r3, [pc, #240]	; (800cfe0 <xPortStartScheduler+0xf8>)
 800cef0:	681b      	ldr	r3, [r3, #0]
 800cef2:	4a3c      	ldr	r2, [pc, #240]	; (800cfe4 <xPortStartScheduler+0xfc>)
 800cef4:	4293      	cmp	r3, r2
 800cef6:	d10a      	bne.n	800cf0e <xPortStartScheduler+0x26>
 800cef8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cefc:	f383 8811 	msr	BASEPRI, r3
 800cf00:	f3bf 8f6f 	isb	sy
 800cf04:	f3bf 8f4f 	dsb	sy
 800cf08:	613b      	str	r3, [r7, #16]
 800cf0a:	bf00      	nop
 800cf0c:	e7fe      	b.n	800cf0c <xPortStartScheduler+0x24>
 800cf0e:	4b34      	ldr	r3, [pc, #208]	; (800cfe0 <xPortStartScheduler+0xf8>)
 800cf10:	681b      	ldr	r3, [r3, #0]
 800cf12:	4a35      	ldr	r2, [pc, #212]	; (800cfe8 <xPortStartScheduler+0x100>)
 800cf14:	4293      	cmp	r3, r2
 800cf16:	d10a      	bne.n	800cf2e <xPortStartScheduler+0x46>
 800cf18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf1c:	f383 8811 	msr	BASEPRI, r3
 800cf20:	f3bf 8f6f 	isb	sy
 800cf24:	f3bf 8f4f 	dsb	sy
 800cf28:	60fb      	str	r3, [r7, #12]
 800cf2a:	bf00      	nop
 800cf2c:	e7fe      	b.n	800cf2c <xPortStartScheduler+0x44>
 800cf2e:	4b2f      	ldr	r3, [pc, #188]	; (800cfec <xPortStartScheduler+0x104>)
 800cf30:	617b      	str	r3, [r7, #20]
 800cf32:	697b      	ldr	r3, [r7, #20]
 800cf34:	781b      	ldrb	r3, [r3, #0]
 800cf36:	b2db      	uxtb	r3, r3
 800cf38:	60bb      	str	r3, [r7, #8]
 800cf3a:	697b      	ldr	r3, [r7, #20]
 800cf3c:	22ff      	movs	r2, #255	; 0xff
 800cf3e:	701a      	strb	r2, [r3, #0]
 800cf40:	697b      	ldr	r3, [r7, #20]
 800cf42:	781b      	ldrb	r3, [r3, #0]
 800cf44:	b2db      	uxtb	r3, r3
 800cf46:	71fb      	strb	r3, [r7, #7]
 800cf48:	79fb      	ldrb	r3, [r7, #7]
 800cf4a:	b2db      	uxtb	r3, r3
 800cf4c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800cf50:	b2da      	uxtb	r2, r3
 800cf52:	4b27      	ldr	r3, [pc, #156]	; (800cff0 <xPortStartScheduler+0x108>)
 800cf54:	701a      	strb	r2, [r3, #0]
 800cf56:	4b27      	ldr	r3, [pc, #156]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf58:	2207      	movs	r2, #7
 800cf5a:	601a      	str	r2, [r3, #0]
 800cf5c:	e009      	b.n	800cf72 <xPortStartScheduler+0x8a>
 800cf5e:	4b25      	ldr	r3, [pc, #148]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf60:	681b      	ldr	r3, [r3, #0]
 800cf62:	3b01      	subs	r3, #1
 800cf64:	4a23      	ldr	r2, [pc, #140]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf66:	6013      	str	r3, [r2, #0]
 800cf68:	79fb      	ldrb	r3, [r7, #7]
 800cf6a:	b2db      	uxtb	r3, r3
 800cf6c:	005b      	lsls	r3, r3, #1
 800cf6e:	b2db      	uxtb	r3, r3
 800cf70:	71fb      	strb	r3, [r7, #7]
 800cf72:	79fb      	ldrb	r3, [r7, #7]
 800cf74:	b2db      	uxtb	r3, r3
 800cf76:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cf7a:	2b80      	cmp	r3, #128	; 0x80
 800cf7c:	d0ef      	beq.n	800cf5e <xPortStartScheduler+0x76>
 800cf7e:	4b1d      	ldr	r3, [pc, #116]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf80:	681b      	ldr	r3, [r3, #0]
 800cf82:	021b      	lsls	r3, r3, #8
 800cf84:	4a1b      	ldr	r2, [pc, #108]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf86:	6013      	str	r3, [r2, #0]
 800cf88:	4b1a      	ldr	r3, [pc, #104]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf8a:	681b      	ldr	r3, [r3, #0]
 800cf8c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800cf90:	4a18      	ldr	r2, [pc, #96]	; (800cff4 <xPortStartScheduler+0x10c>)
 800cf92:	6013      	str	r3, [r2, #0]
 800cf94:	68bb      	ldr	r3, [r7, #8]
 800cf96:	b2da      	uxtb	r2, r3
 800cf98:	697b      	ldr	r3, [r7, #20]
 800cf9a:	701a      	strb	r2, [r3, #0]
 800cf9c:	4b16      	ldr	r3, [pc, #88]	; (800cff8 <xPortStartScheduler+0x110>)
 800cf9e:	681b      	ldr	r3, [r3, #0]
 800cfa0:	4a15      	ldr	r2, [pc, #84]	; (800cff8 <xPortStartScheduler+0x110>)
 800cfa2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800cfa6:	6013      	str	r3, [r2, #0]
 800cfa8:	4b13      	ldr	r3, [pc, #76]	; (800cff8 <xPortStartScheduler+0x110>)
 800cfaa:	681b      	ldr	r3, [r3, #0]
 800cfac:	4a12      	ldr	r2, [pc, #72]	; (800cff8 <xPortStartScheduler+0x110>)
 800cfae:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800cfb2:	6013      	str	r3, [r2, #0]
 800cfb4:	f000 f8da 	bl	800d16c <vPortSetupTimerInterrupt>
 800cfb8:	4b10      	ldr	r3, [pc, #64]	; (800cffc <xPortStartScheduler+0x114>)
 800cfba:	2200      	movs	r2, #0
 800cfbc:	601a      	str	r2, [r3, #0]
 800cfbe:	f000 f8f1 	bl	800d1a4 <vPortEnableVFP>
 800cfc2:	4b0f      	ldr	r3, [pc, #60]	; (800d000 <xPortStartScheduler+0x118>)
 800cfc4:	681b      	ldr	r3, [r3, #0]
 800cfc6:	4a0e      	ldr	r2, [pc, #56]	; (800d000 <xPortStartScheduler+0x118>)
 800cfc8:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800cfcc:	6013      	str	r3, [r2, #0]
 800cfce:	f7ff ff7b 	bl	800cec8 <prvPortStartFirstTask>
 800cfd2:	f7ff ff41 	bl	800ce58 <prvTaskExitError>
 800cfd6:	2300      	movs	r3, #0
 800cfd8:	4618      	mov	r0, r3
 800cfda:	3718      	adds	r7, #24
 800cfdc:	46bd      	mov	sp, r7
 800cfde:	bd80      	pop	{r7, pc}
 800cfe0:	e000ed00 	.word	0xe000ed00
 800cfe4:	410fc271 	.word	0x410fc271
 800cfe8:	410fc270 	.word	0x410fc270
 800cfec:	e000e400 	.word	0xe000e400
 800cff0:	200009d4 	.word	0x200009d4
 800cff4:	200009d8 	.word	0x200009d8
 800cff8:	e000ed20 	.word	0xe000ed20
 800cffc:	20000018 	.word	0x20000018
 800d000:	e000ef34 	.word	0xe000ef34

0800d004 <vPortEnterCritical>:
 800d004:	b480      	push	{r7}
 800d006:	b083      	sub	sp, #12
 800d008:	af00      	add	r7, sp, #0
 800d00a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d00e:	f383 8811 	msr	BASEPRI, r3
 800d012:	f3bf 8f6f 	isb	sy
 800d016:	f3bf 8f4f 	dsb	sy
 800d01a:	607b      	str	r3, [r7, #4]
 800d01c:	bf00      	nop
 800d01e:	4b0f      	ldr	r3, [pc, #60]	; (800d05c <vPortEnterCritical+0x58>)
 800d020:	681b      	ldr	r3, [r3, #0]
 800d022:	3301      	adds	r3, #1
 800d024:	4a0d      	ldr	r2, [pc, #52]	; (800d05c <vPortEnterCritical+0x58>)
 800d026:	6013      	str	r3, [r2, #0]
 800d028:	4b0c      	ldr	r3, [pc, #48]	; (800d05c <vPortEnterCritical+0x58>)
 800d02a:	681b      	ldr	r3, [r3, #0]
 800d02c:	2b01      	cmp	r3, #1
 800d02e:	d10f      	bne.n	800d050 <vPortEnterCritical+0x4c>
 800d030:	4b0b      	ldr	r3, [pc, #44]	; (800d060 <vPortEnterCritical+0x5c>)
 800d032:	681b      	ldr	r3, [r3, #0]
 800d034:	b2db      	uxtb	r3, r3
 800d036:	2b00      	cmp	r3, #0
 800d038:	d00a      	beq.n	800d050 <vPortEnterCritical+0x4c>
 800d03a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d03e:	f383 8811 	msr	BASEPRI, r3
 800d042:	f3bf 8f6f 	isb	sy
 800d046:	f3bf 8f4f 	dsb	sy
 800d04a:	603b      	str	r3, [r7, #0]
 800d04c:	bf00      	nop
 800d04e:	e7fe      	b.n	800d04e <vPortEnterCritical+0x4a>
 800d050:	bf00      	nop
 800d052:	370c      	adds	r7, #12
 800d054:	46bd      	mov	sp, r7
 800d056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d05a:	4770      	bx	lr
 800d05c:	20000018 	.word	0x20000018
 800d060:	e000ed04 	.word	0xe000ed04

0800d064 <vPortExitCritical>:
 800d064:	b480      	push	{r7}
 800d066:	b083      	sub	sp, #12
 800d068:	af00      	add	r7, sp, #0
 800d06a:	4b12      	ldr	r3, [pc, #72]	; (800d0b4 <vPortExitCritical+0x50>)
 800d06c:	681b      	ldr	r3, [r3, #0]
 800d06e:	2b00      	cmp	r3, #0
 800d070:	d10a      	bne.n	800d088 <vPortExitCritical+0x24>
 800d072:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d076:	f383 8811 	msr	BASEPRI, r3
 800d07a:	f3bf 8f6f 	isb	sy
 800d07e:	f3bf 8f4f 	dsb	sy
 800d082:	607b      	str	r3, [r7, #4]
 800d084:	bf00      	nop
 800d086:	e7fe      	b.n	800d086 <vPortExitCritical+0x22>
 800d088:	4b0a      	ldr	r3, [pc, #40]	; (800d0b4 <vPortExitCritical+0x50>)
 800d08a:	681b      	ldr	r3, [r3, #0]
 800d08c:	3b01      	subs	r3, #1
 800d08e:	4a09      	ldr	r2, [pc, #36]	; (800d0b4 <vPortExitCritical+0x50>)
 800d090:	6013      	str	r3, [r2, #0]
 800d092:	4b08      	ldr	r3, [pc, #32]	; (800d0b4 <vPortExitCritical+0x50>)
 800d094:	681b      	ldr	r3, [r3, #0]
 800d096:	2b00      	cmp	r3, #0
 800d098:	d105      	bne.n	800d0a6 <vPortExitCritical+0x42>
 800d09a:	2300      	movs	r3, #0
 800d09c:	603b      	str	r3, [r7, #0]
 800d09e:	683b      	ldr	r3, [r7, #0]
 800d0a0:	f383 8811 	msr	BASEPRI, r3
 800d0a4:	bf00      	nop
 800d0a6:	bf00      	nop
 800d0a8:	370c      	adds	r7, #12
 800d0aa:	46bd      	mov	sp, r7
 800d0ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0b0:	4770      	bx	lr
 800d0b2:	bf00      	nop
 800d0b4:	20000018 	.word	0x20000018
	...

0800d0c0 <PendSV_Handler>:
 800d0c0:	f3ef 8009 	mrs	r0, PSP
 800d0c4:	f3bf 8f6f 	isb	sy
 800d0c8:	4b15      	ldr	r3, [pc, #84]	; (800d120 <pxCurrentTCBConst>)
 800d0ca:	681a      	ldr	r2, [r3, #0]
 800d0cc:	f01e 0f10 	tst.w	lr, #16
 800d0d0:	bf08      	it	eq
 800d0d2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d0d6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0da:	6010      	str	r0, [r2, #0]
 800d0dc:	f84d 3d04 	str.w	r3, [sp, #-4]!
 800d0e0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d0e4:	f380 8811 	msr	BASEPRI, r0
 800d0e8:	f3bf 8f4f 	dsb	sy
 800d0ec:	f3bf 8f6f 	isb	sy
 800d0f0:	f7fe ffb0 	bl	800c054 <vTaskSwitchContext>
 800d0f4:	f04f 0000 	mov.w	r0, #0
 800d0f8:	f380 8811 	msr	BASEPRI, r0
 800d0fc:	bc08      	pop	{r3}
 800d0fe:	6819      	ldr	r1, [r3, #0]
 800d100:	6808      	ldr	r0, [r1, #0]
 800d102:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d106:	f01e 0f10 	tst.w	lr, #16
 800d10a:	bf08      	it	eq
 800d10c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d110:	f380 8809 	msr	PSP, r0
 800d114:	f3bf 8f6f 	isb	sy
 800d118:	4770      	bx	lr
 800d11a:	bf00      	nop
 800d11c:	f3af 8000 	nop.w

0800d120 <pxCurrentTCBConst>:
 800d120:	2000086c 	.word	0x2000086c
 800d124:	bf00      	nop
 800d126:	bf00      	nop

0800d128 <xPortSysTickHandler>:
 800d128:	b580      	push	{r7, lr}
 800d12a:	b082      	sub	sp, #8
 800d12c:	af00      	add	r7, sp, #0
 800d12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d132:	f383 8811 	msr	BASEPRI, r3
 800d136:	f3bf 8f6f 	isb	sy
 800d13a:	f3bf 8f4f 	dsb	sy
 800d13e:	607b      	str	r3, [r7, #4]
 800d140:	bf00      	nop
 800d142:	f7fe fec9 	bl	800bed8 <xTaskIncrementTick>
 800d146:	4603      	mov	r3, r0
 800d148:	2b00      	cmp	r3, #0
 800d14a:	d003      	beq.n	800d154 <xPortSysTickHandler+0x2c>
 800d14c:	4b06      	ldr	r3, [pc, #24]	; (800d168 <xPortSysTickHandler+0x40>)
 800d14e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d152:	601a      	str	r2, [r3, #0]
 800d154:	2300      	movs	r3, #0
 800d156:	603b      	str	r3, [r7, #0]
 800d158:	683b      	ldr	r3, [r7, #0]
 800d15a:	f383 8811 	msr	BASEPRI, r3
 800d15e:	bf00      	nop
 800d160:	bf00      	nop
 800d162:	3708      	adds	r7, #8
 800d164:	46bd      	mov	sp, r7
 800d166:	bd80      	pop	{r7, pc}
 800d168:	e000ed04 	.word	0xe000ed04

0800d16c <vPortSetupTimerInterrupt>:
 800d16c:	b480      	push	{r7}
 800d16e:	af00      	add	r7, sp, #0
 800d170:	4b08      	ldr	r3, [pc, #32]	; (800d194 <vPortSetupTimerInterrupt+0x28>)
 800d172:	681b      	ldr	r3, [r3, #0]
 800d174:	4a08      	ldr	r2, [pc, #32]	; (800d198 <vPortSetupTimerInterrupt+0x2c>)
 800d176:	fba2 2303 	umull	r2, r3, r2, r3
 800d17a:	099b      	lsrs	r3, r3, #6
 800d17c:	4a07      	ldr	r2, [pc, #28]	; (800d19c <vPortSetupTimerInterrupt+0x30>)
 800d17e:	3b01      	subs	r3, #1
 800d180:	6013      	str	r3, [r2, #0]
 800d182:	4b07      	ldr	r3, [pc, #28]	; (800d1a0 <vPortSetupTimerInterrupt+0x34>)
 800d184:	2207      	movs	r2, #7
 800d186:	601a      	str	r2, [r3, #0]
 800d188:	bf00      	nop
 800d18a:	46bd      	mov	sp, r7
 800d18c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d190:	4770      	bx	lr
 800d192:	bf00      	nop
 800d194:	20000014 	.word	0x20000014
 800d198:	10624dd3 	.word	0x10624dd3
 800d19c:	e000e014 	.word	0xe000e014
 800d1a0:	e000e010 	.word	0xe000e010

0800d1a4 <vPortEnableVFP>:
 800d1a4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d1b4 <vPortEnableVFP+0x10>
 800d1a8:	6801      	ldr	r1, [r0, #0]
 800d1aa:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d1ae:	6001      	str	r1, [r0, #0]
 800d1b0:	4770      	bx	lr
 800d1b2:	bf00      	nop
 800d1b4:	e000ed88 	.word	0xe000ed88

0800d1b8 <vPortValidateInterruptPriority>:
 800d1b8:	b480      	push	{r7}
 800d1ba:	b085      	sub	sp, #20
 800d1bc:	af00      	add	r7, sp, #0
 800d1be:	f3ef 8305 	mrs	r3, IPSR
 800d1c2:	60fb      	str	r3, [r7, #12]
 800d1c4:	68fb      	ldr	r3, [r7, #12]
 800d1c6:	2b0f      	cmp	r3, #15
 800d1c8:	d914      	bls.n	800d1f4 <vPortValidateInterruptPriority+0x3c>
 800d1ca:	4a17      	ldr	r2, [pc, #92]	; (800d228 <vPortValidateInterruptPriority+0x70>)
 800d1cc:	68fb      	ldr	r3, [r7, #12]
 800d1ce:	4413      	add	r3, r2
 800d1d0:	781b      	ldrb	r3, [r3, #0]
 800d1d2:	72fb      	strb	r3, [r7, #11]
 800d1d4:	4b15      	ldr	r3, [pc, #84]	; (800d22c <vPortValidateInterruptPriority+0x74>)
 800d1d6:	781b      	ldrb	r3, [r3, #0]
 800d1d8:	7afa      	ldrb	r2, [r7, #11]
 800d1da:	429a      	cmp	r2, r3
 800d1dc:	d20a      	bcs.n	800d1f4 <vPortValidateInterruptPriority+0x3c>
 800d1de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1e2:	f383 8811 	msr	BASEPRI, r3
 800d1e6:	f3bf 8f6f 	isb	sy
 800d1ea:	f3bf 8f4f 	dsb	sy
 800d1ee:	607b      	str	r3, [r7, #4]
 800d1f0:	bf00      	nop
 800d1f2:	e7fe      	b.n	800d1f2 <vPortValidateInterruptPriority+0x3a>
 800d1f4:	4b0e      	ldr	r3, [pc, #56]	; (800d230 <vPortValidateInterruptPriority+0x78>)
 800d1f6:	681b      	ldr	r3, [r3, #0]
 800d1f8:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 800d1fc:	4b0d      	ldr	r3, [pc, #52]	; (800d234 <vPortValidateInterruptPriority+0x7c>)
 800d1fe:	681b      	ldr	r3, [r3, #0]
 800d200:	429a      	cmp	r2, r3
 800d202:	d90a      	bls.n	800d21a <vPortValidateInterruptPriority+0x62>
 800d204:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d208:	f383 8811 	msr	BASEPRI, r3
 800d20c:	f3bf 8f6f 	isb	sy
 800d210:	f3bf 8f4f 	dsb	sy
 800d214:	603b      	str	r3, [r7, #0]
 800d216:	bf00      	nop
 800d218:	e7fe      	b.n	800d218 <vPortValidateInterruptPriority+0x60>
 800d21a:	bf00      	nop
 800d21c:	3714      	adds	r7, #20
 800d21e:	46bd      	mov	sp, r7
 800d220:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d224:	4770      	bx	lr
 800d226:	bf00      	nop
 800d228:	e000e3f0 	.word	0xe000e3f0
 800d22c:	200009d4 	.word	0x200009d4
 800d230:	e000ed0c 	.word	0xe000ed0c
 800d234:	200009d8 	.word	0x200009d8

0800d238 <pvPortMalloc>:
 800d238:	b580      	push	{r7, lr}
 800d23a:	b08a      	sub	sp, #40	; 0x28
 800d23c:	af00      	add	r7, sp, #0
 800d23e:	6078      	str	r0, [r7, #4]
 800d240:	2300      	movs	r3, #0
 800d242:	61fb      	str	r3, [r7, #28]
 800d244:	f7fe fd7c 	bl	800bd40 <vTaskSuspendAll>
 800d248:	4b58      	ldr	r3, [pc, #352]	; (800d3ac <pvPortMalloc+0x174>)
 800d24a:	681b      	ldr	r3, [r3, #0]
 800d24c:	2b00      	cmp	r3, #0
 800d24e:	d101      	bne.n	800d254 <pvPortMalloc+0x1c>
 800d250:	f000 f910 	bl	800d474 <prvHeapInit>
 800d254:	4b56      	ldr	r3, [pc, #344]	; (800d3b0 <pvPortMalloc+0x178>)
 800d256:	681a      	ldr	r2, [r3, #0]
 800d258:	687b      	ldr	r3, [r7, #4]
 800d25a:	4013      	ands	r3, r2
 800d25c:	2b00      	cmp	r3, #0
 800d25e:	f040 808e 	bne.w	800d37e <pvPortMalloc+0x146>
 800d262:	687b      	ldr	r3, [r7, #4]
 800d264:	2b00      	cmp	r3, #0
 800d266:	d01d      	beq.n	800d2a4 <pvPortMalloc+0x6c>
 800d268:	2208      	movs	r2, #8
 800d26a:	687b      	ldr	r3, [r7, #4]
 800d26c:	4413      	add	r3, r2
 800d26e:	607b      	str	r3, [r7, #4]
 800d270:	687b      	ldr	r3, [r7, #4]
 800d272:	f003 0307 	and.w	r3, r3, #7
 800d276:	2b00      	cmp	r3, #0
 800d278:	d014      	beq.n	800d2a4 <pvPortMalloc+0x6c>
 800d27a:	687b      	ldr	r3, [r7, #4]
 800d27c:	f023 0307 	bic.w	r3, r3, #7
 800d280:	3308      	adds	r3, #8
 800d282:	607b      	str	r3, [r7, #4]
 800d284:	687b      	ldr	r3, [r7, #4]
 800d286:	f003 0307 	and.w	r3, r3, #7
 800d28a:	2b00      	cmp	r3, #0
 800d28c:	d00a      	beq.n	800d2a4 <pvPortMalloc+0x6c>
 800d28e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d292:	f383 8811 	msr	BASEPRI, r3
 800d296:	f3bf 8f6f 	isb	sy
 800d29a:	f3bf 8f4f 	dsb	sy
 800d29e:	617b      	str	r3, [r7, #20]
 800d2a0:	bf00      	nop
 800d2a2:	e7fe      	b.n	800d2a2 <pvPortMalloc+0x6a>
 800d2a4:	687b      	ldr	r3, [r7, #4]
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	d069      	beq.n	800d37e <pvPortMalloc+0x146>
 800d2aa:	4b42      	ldr	r3, [pc, #264]	; (800d3b4 <pvPortMalloc+0x17c>)
 800d2ac:	681b      	ldr	r3, [r3, #0]
 800d2ae:	687a      	ldr	r2, [r7, #4]
 800d2b0:	429a      	cmp	r2, r3
 800d2b2:	d864      	bhi.n	800d37e <pvPortMalloc+0x146>
 800d2b4:	4b40      	ldr	r3, [pc, #256]	; (800d3b8 <pvPortMalloc+0x180>)
 800d2b6:	623b      	str	r3, [r7, #32]
 800d2b8:	4b3f      	ldr	r3, [pc, #252]	; (800d3b8 <pvPortMalloc+0x180>)
 800d2ba:	681b      	ldr	r3, [r3, #0]
 800d2bc:	627b      	str	r3, [r7, #36]	; 0x24
 800d2be:	e004      	b.n	800d2ca <pvPortMalloc+0x92>
 800d2c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2c2:	623b      	str	r3, [r7, #32]
 800d2c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2c6:	681b      	ldr	r3, [r3, #0]
 800d2c8:	627b      	str	r3, [r7, #36]	; 0x24
 800d2ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2cc:	685b      	ldr	r3, [r3, #4]
 800d2ce:	687a      	ldr	r2, [r7, #4]
 800d2d0:	429a      	cmp	r2, r3
 800d2d2:	d903      	bls.n	800d2dc <pvPortMalloc+0xa4>
 800d2d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2d6:	681b      	ldr	r3, [r3, #0]
 800d2d8:	2b00      	cmp	r3, #0
 800d2da:	d1f1      	bne.n	800d2c0 <pvPortMalloc+0x88>
 800d2dc:	4b33      	ldr	r3, [pc, #204]	; (800d3ac <pvPortMalloc+0x174>)
 800d2de:	681b      	ldr	r3, [r3, #0]
 800d2e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800d2e2:	429a      	cmp	r2, r3
 800d2e4:	d04b      	beq.n	800d37e <pvPortMalloc+0x146>
 800d2e6:	6a3b      	ldr	r3, [r7, #32]
 800d2e8:	681b      	ldr	r3, [r3, #0]
 800d2ea:	2208      	movs	r2, #8
 800d2ec:	4413      	add	r3, r2
 800d2ee:	61fb      	str	r3, [r7, #28]
 800d2f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2f2:	681a      	ldr	r2, [r3, #0]
 800d2f4:	6a3b      	ldr	r3, [r7, #32]
 800d2f6:	601a      	str	r2, [r3, #0]
 800d2f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d2fa:	685a      	ldr	r2, [r3, #4]
 800d2fc:	687b      	ldr	r3, [r7, #4]
 800d2fe:	1ad2      	subs	r2, r2, r3
 800d300:	2308      	movs	r3, #8
 800d302:	005b      	lsls	r3, r3, #1
 800d304:	429a      	cmp	r2, r3
 800d306:	d91f      	bls.n	800d348 <pvPortMalloc+0x110>
 800d308:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800d30a:	687b      	ldr	r3, [r7, #4]
 800d30c:	4413      	add	r3, r2
 800d30e:	61bb      	str	r3, [r7, #24]
 800d310:	69bb      	ldr	r3, [r7, #24]
 800d312:	f003 0307 	and.w	r3, r3, #7
 800d316:	2b00      	cmp	r3, #0
 800d318:	d00a      	beq.n	800d330 <pvPortMalloc+0xf8>
 800d31a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d31e:	f383 8811 	msr	BASEPRI, r3
 800d322:	f3bf 8f6f 	isb	sy
 800d326:	f3bf 8f4f 	dsb	sy
 800d32a:	613b      	str	r3, [r7, #16]
 800d32c:	bf00      	nop
 800d32e:	e7fe      	b.n	800d32e <pvPortMalloc+0xf6>
 800d330:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d332:	685a      	ldr	r2, [r3, #4]
 800d334:	687b      	ldr	r3, [r7, #4]
 800d336:	1ad2      	subs	r2, r2, r3
 800d338:	69bb      	ldr	r3, [r7, #24]
 800d33a:	605a      	str	r2, [r3, #4]
 800d33c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d33e:	687a      	ldr	r2, [r7, #4]
 800d340:	605a      	str	r2, [r3, #4]
 800d342:	69b8      	ldr	r0, [r7, #24]
 800d344:	f000 f8f8 	bl	800d538 <prvInsertBlockIntoFreeList>
 800d348:	4b1a      	ldr	r3, [pc, #104]	; (800d3b4 <pvPortMalloc+0x17c>)
 800d34a:	681a      	ldr	r2, [r3, #0]
 800d34c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d34e:	685b      	ldr	r3, [r3, #4]
 800d350:	1ad3      	subs	r3, r2, r3
 800d352:	4a18      	ldr	r2, [pc, #96]	; (800d3b4 <pvPortMalloc+0x17c>)
 800d354:	6013      	str	r3, [r2, #0]
 800d356:	4b17      	ldr	r3, [pc, #92]	; (800d3b4 <pvPortMalloc+0x17c>)
 800d358:	681a      	ldr	r2, [r3, #0]
 800d35a:	4b18      	ldr	r3, [pc, #96]	; (800d3bc <pvPortMalloc+0x184>)
 800d35c:	681b      	ldr	r3, [r3, #0]
 800d35e:	429a      	cmp	r2, r3
 800d360:	d203      	bcs.n	800d36a <pvPortMalloc+0x132>
 800d362:	4b14      	ldr	r3, [pc, #80]	; (800d3b4 <pvPortMalloc+0x17c>)
 800d364:	681b      	ldr	r3, [r3, #0]
 800d366:	4a15      	ldr	r2, [pc, #84]	; (800d3bc <pvPortMalloc+0x184>)
 800d368:	6013      	str	r3, [r2, #0]
 800d36a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d36c:	685a      	ldr	r2, [r3, #4]
 800d36e:	4b10      	ldr	r3, [pc, #64]	; (800d3b0 <pvPortMalloc+0x178>)
 800d370:	681b      	ldr	r3, [r3, #0]
 800d372:	431a      	orrs	r2, r3
 800d374:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d376:	605a      	str	r2, [r3, #4]
 800d378:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d37a:	2200      	movs	r2, #0
 800d37c:	601a      	str	r2, [r3, #0]
 800d37e:	f7fe fced 	bl	800bd5c <xTaskResumeAll>
 800d382:	69fb      	ldr	r3, [r7, #28]
 800d384:	f003 0307 	and.w	r3, r3, #7
 800d388:	2b00      	cmp	r3, #0
 800d38a:	d00a      	beq.n	800d3a2 <pvPortMalloc+0x16a>
 800d38c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d390:	f383 8811 	msr	BASEPRI, r3
 800d394:	f3bf 8f6f 	isb	sy
 800d398:	f3bf 8f4f 	dsb	sy
 800d39c:	60fb      	str	r3, [r7, #12]
 800d39e:	bf00      	nop
 800d3a0:	e7fe      	b.n	800d3a0 <pvPortMalloc+0x168>
 800d3a2:	69fb      	ldr	r3, [r7, #28]
 800d3a4:	4618      	mov	r0, r3
 800d3a6:	3728      	adds	r7, #40	; 0x28
 800d3a8:	46bd      	mov	sp, r7
 800d3aa:	bd80      	pop	{r7, pc}
 800d3ac:	200081e4 	.word	0x200081e4
 800d3b0:	200081f0 	.word	0x200081f0
 800d3b4:	200081e8 	.word	0x200081e8
 800d3b8:	200081dc 	.word	0x200081dc
 800d3bc:	200081ec 	.word	0x200081ec

0800d3c0 <vPortFree>:
 800d3c0:	b580      	push	{r7, lr}
 800d3c2:	b086      	sub	sp, #24
 800d3c4:	af00      	add	r7, sp, #0
 800d3c6:	6078      	str	r0, [r7, #4]
 800d3c8:	687b      	ldr	r3, [r7, #4]
 800d3ca:	617b      	str	r3, [r7, #20]
 800d3cc:	687b      	ldr	r3, [r7, #4]
 800d3ce:	2b00      	cmp	r3, #0
 800d3d0:	d048      	beq.n	800d464 <vPortFree+0xa4>
 800d3d2:	2308      	movs	r3, #8
 800d3d4:	425b      	negs	r3, r3
 800d3d6:	697a      	ldr	r2, [r7, #20]
 800d3d8:	4413      	add	r3, r2
 800d3da:	617b      	str	r3, [r7, #20]
 800d3dc:	697b      	ldr	r3, [r7, #20]
 800d3de:	613b      	str	r3, [r7, #16]
 800d3e0:	693b      	ldr	r3, [r7, #16]
 800d3e2:	685a      	ldr	r2, [r3, #4]
 800d3e4:	4b21      	ldr	r3, [pc, #132]	; (800d46c <vPortFree+0xac>)
 800d3e6:	681b      	ldr	r3, [r3, #0]
 800d3e8:	4013      	ands	r3, r2
 800d3ea:	2b00      	cmp	r3, #0
 800d3ec:	d10a      	bne.n	800d404 <vPortFree+0x44>
 800d3ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3f2:	f383 8811 	msr	BASEPRI, r3
 800d3f6:	f3bf 8f6f 	isb	sy
 800d3fa:	f3bf 8f4f 	dsb	sy
 800d3fe:	60fb      	str	r3, [r7, #12]
 800d400:	bf00      	nop
 800d402:	e7fe      	b.n	800d402 <vPortFree+0x42>
 800d404:	693b      	ldr	r3, [r7, #16]
 800d406:	681b      	ldr	r3, [r3, #0]
 800d408:	2b00      	cmp	r3, #0
 800d40a:	d00a      	beq.n	800d422 <vPortFree+0x62>
 800d40c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d410:	f383 8811 	msr	BASEPRI, r3
 800d414:	f3bf 8f6f 	isb	sy
 800d418:	f3bf 8f4f 	dsb	sy
 800d41c:	60bb      	str	r3, [r7, #8]
 800d41e:	bf00      	nop
 800d420:	e7fe      	b.n	800d420 <vPortFree+0x60>
 800d422:	693b      	ldr	r3, [r7, #16]
 800d424:	685a      	ldr	r2, [r3, #4]
 800d426:	4b11      	ldr	r3, [pc, #68]	; (800d46c <vPortFree+0xac>)
 800d428:	681b      	ldr	r3, [r3, #0]
 800d42a:	4013      	ands	r3, r2
 800d42c:	2b00      	cmp	r3, #0
 800d42e:	d019      	beq.n	800d464 <vPortFree+0xa4>
 800d430:	693b      	ldr	r3, [r7, #16]
 800d432:	681b      	ldr	r3, [r3, #0]
 800d434:	2b00      	cmp	r3, #0
 800d436:	d115      	bne.n	800d464 <vPortFree+0xa4>
 800d438:	693b      	ldr	r3, [r7, #16]
 800d43a:	685a      	ldr	r2, [r3, #4]
 800d43c:	4b0b      	ldr	r3, [pc, #44]	; (800d46c <vPortFree+0xac>)
 800d43e:	681b      	ldr	r3, [r3, #0]
 800d440:	43db      	mvns	r3, r3
 800d442:	401a      	ands	r2, r3
 800d444:	693b      	ldr	r3, [r7, #16]
 800d446:	605a      	str	r2, [r3, #4]
 800d448:	f7fe fc7a 	bl	800bd40 <vTaskSuspendAll>
 800d44c:	693b      	ldr	r3, [r7, #16]
 800d44e:	685a      	ldr	r2, [r3, #4]
 800d450:	4b07      	ldr	r3, [pc, #28]	; (800d470 <vPortFree+0xb0>)
 800d452:	681b      	ldr	r3, [r3, #0]
 800d454:	4413      	add	r3, r2
 800d456:	4a06      	ldr	r2, [pc, #24]	; (800d470 <vPortFree+0xb0>)
 800d458:	6013      	str	r3, [r2, #0]
 800d45a:	6938      	ldr	r0, [r7, #16]
 800d45c:	f000 f86c 	bl	800d538 <prvInsertBlockIntoFreeList>
 800d460:	f7fe fc7c 	bl	800bd5c <xTaskResumeAll>
 800d464:	bf00      	nop
 800d466:	3718      	adds	r7, #24
 800d468:	46bd      	mov	sp, r7
 800d46a:	bd80      	pop	{r7, pc}
 800d46c:	200081f0 	.word	0x200081f0
 800d470:	200081e8 	.word	0x200081e8

0800d474 <prvHeapInit>:
 800d474:	b480      	push	{r7}
 800d476:	b085      	sub	sp, #20
 800d478:	af00      	add	r7, sp, #0
 800d47a:	f44f 43f0 	mov.w	r3, #30720	; 0x7800
 800d47e:	60bb      	str	r3, [r7, #8]
 800d480:	4b27      	ldr	r3, [pc, #156]	; (800d520 <prvHeapInit+0xac>)
 800d482:	60fb      	str	r3, [r7, #12]
 800d484:	68fb      	ldr	r3, [r7, #12]
 800d486:	f003 0307 	and.w	r3, r3, #7
 800d48a:	2b00      	cmp	r3, #0
 800d48c:	d00c      	beq.n	800d4a8 <prvHeapInit+0x34>
 800d48e:	68fb      	ldr	r3, [r7, #12]
 800d490:	3307      	adds	r3, #7
 800d492:	60fb      	str	r3, [r7, #12]
 800d494:	68fb      	ldr	r3, [r7, #12]
 800d496:	f023 0307 	bic.w	r3, r3, #7
 800d49a:	60fb      	str	r3, [r7, #12]
 800d49c:	68ba      	ldr	r2, [r7, #8]
 800d49e:	68fb      	ldr	r3, [r7, #12]
 800d4a0:	1ad3      	subs	r3, r2, r3
 800d4a2:	4a1f      	ldr	r2, [pc, #124]	; (800d520 <prvHeapInit+0xac>)
 800d4a4:	4413      	add	r3, r2
 800d4a6:	60bb      	str	r3, [r7, #8]
 800d4a8:	68fb      	ldr	r3, [r7, #12]
 800d4aa:	607b      	str	r3, [r7, #4]
 800d4ac:	4a1d      	ldr	r2, [pc, #116]	; (800d524 <prvHeapInit+0xb0>)
 800d4ae:	687b      	ldr	r3, [r7, #4]
 800d4b0:	6013      	str	r3, [r2, #0]
 800d4b2:	4b1c      	ldr	r3, [pc, #112]	; (800d524 <prvHeapInit+0xb0>)
 800d4b4:	2200      	movs	r2, #0
 800d4b6:	605a      	str	r2, [r3, #4]
 800d4b8:	687b      	ldr	r3, [r7, #4]
 800d4ba:	68ba      	ldr	r2, [r7, #8]
 800d4bc:	4413      	add	r3, r2
 800d4be:	60fb      	str	r3, [r7, #12]
 800d4c0:	2208      	movs	r2, #8
 800d4c2:	68fb      	ldr	r3, [r7, #12]
 800d4c4:	1a9b      	subs	r3, r3, r2
 800d4c6:	60fb      	str	r3, [r7, #12]
 800d4c8:	68fb      	ldr	r3, [r7, #12]
 800d4ca:	f023 0307 	bic.w	r3, r3, #7
 800d4ce:	60fb      	str	r3, [r7, #12]
 800d4d0:	68fb      	ldr	r3, [r7, #12]
 800d4d2:	4a15      	ldr	r2, [pc, #84]	; (800d528 <prvHeapInit+0xb4>)
 800d4d4:	6013      	str	r3, [r2, #0]
 800d4d6:	4b14      	ldr	r3, [pc, #80]	; (800d528 <prvHeapInit+0xb4>)
 800d4d8:	681b      	ldr	r3, [r3, #0]
 800d4da:	2200      	movs	r2, #0
 800d4dc:	605a      	str	r2, [r3, #4]
 800d4de:	4b12      	ldr	r3, [pc, #72]	; (800d528 <prvHeapInit+0xb4>)
 800d4e0:	681b      	ldr	r3, [r3, #0]
 800d4e2:	2200      	movs	r2, #0
 800d4e4:	601a      	str	r2, [r3, #0]
 800d4e6:	687b      	ldr	r3, [r7, #4]
 800d4e8:	603b      	str	r3, [r7, #0]
 800d4ea:	683b      	ldr	r3, [r7, #0]
 800d4ec:	68fa      	ldr	r2, [r7, #12]
 800d4ee:	1ad2      	subs	r2, r2, r3
 800d4f0:	683b      	ldr	r3, [r7, #0]
 800d4f2:	605a      	str	r2, [r3, #4]
 800d4f4:	4b0c      	ldr	r3, [pc, #48]	; (800d528 <prvHeapInit+0xb4>)
 800d4f6:	681a      	ldr	r2, [r3, #0]
 800d4f8:	683b      	ldr	r3, [r7, #0]
 800d4fa:	601a      	str	r2, [r3, #0]
 800d4fc:	683b      	ldr	r3, [r7, #0]
 800d4fe:	685b      	ldr	r3, [r3, #4]
 800d500:	4a0a      	ldr	r2, [pc, #40]	; (800d52c <prvHeapInit+0xb8>)
 800d502:	6013      	str	r3, [r2, #0]
 800d504:	683b      	ldr	r3, [r7, #0]
 800d506:	685b      	ldr	r3, [r3, #4]
 800d508:	4a09      	ldr	r2, [pc, #36]	; (800d530 <prvHeapInit+0xbc>)
 800d50a:	6013      	str	r3, [r2, #0]
 800d50c:	4b09      	ldr	r3, [pc, #36]	; (800d534 <prvHeapInit+0xc0>)
 800d50e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 800d512:	601a      	str	r2, [r3, #0]
 800d514:	bf00      	nop
 800d516:	3714      	adds	r7, #20
 800d518:	46bd      	mov	sp, r7
 800d51a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d51e:	4770      	bx	lr
 800d520:	200009dc 	.word	0x200009dc
 800d524:	200081dc 	.word	0x200081dc
 800d528:	200081e4 	.word	0x200081e4
 800d52c:	200081ec 	.word	0x200081ec
 800d530:	200081e8 	.word	0x200081e8
 800d534:	200081f0 	.word	0x200081f0

0800d538 <prvInsertBlockIntoFreeList>:
 800d538:	b480      	push	{r7}
 800d53a:	b085      	sub	sp, #20
 800d53c:	af00      	add	r7, sp, #0
 800d53e:	6078      	str	r0, [r7, #4]
 800d540:	4b28      	ldr	r3, [pc, #160]	; (800d5e4 <prvInsertBlockIntoFreeList+0xac>)
 800d542:	60fb      	str	r3, [r7, #12]
 800d544:	e002      	b.n	800d54c <prvInsertBlockIntoFreeList+0x14>
 800d546:	68fb      	ldr	r3, [r7, #12]
 800d548:	681b      	ldr	r3, [r3, #0]
 800d54a:	60fb      	str	r3, [r7, #12]
 800d54c:	68fb      	ldr	r3, [r7, #12]
 800d54e:	681b      	ldr	r3, [r3, #0]
 800d550:	687a      	ldr	r2, [r7, #4]
 800d552:	429a      	cmp	r2, r3
 800d554:	d8f7      	bhi.n	800d546 <prvInsertBlockIntoFreeList+0xe>
 800d556:	68fb      	ldr	r3, [r7, #12]
 800d558:	60bb      	str	r3, [r7, #8]
 800d55a:	68fb      	ldr	r3, [r7, #12]
 800d55c:	685b      	ldr	r3, [r3, #4]
 800d55e:	68ba      	ldr	r2, [r7, #8]
 800d560:	4413      	add	r3, r2
 800d562:	687a      	ldr	r2, [r7, #4]
 800d564:	429a      	cmp	r2, r3
 800d566:	d108      	bne.n	800d57a <prvInsertBlockIntoFreeList+0x42>
 800d568:	68fb      	ldr	r3, [r7, #12]
 800d56a:	685a      	ldr	r2, [r3, #4]
 800d56c:	687b      	ldr	r3, [r7, #4]
 800d56e:	685b      	ldr	r3, [r3, #4]
 800d570:	441a      	add	r2, r3
 800d572:	68fb      	ldr	r3, [r7, #12]
 800d574:	605a      	str	r2, [r3, #4]
 800d576:	68fb      	ldr	r3, [r7, #12]
 800d578:	607b      	str	r3, [r7, #4]
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	60bb      	str	r3, [r7, #8]
 800d57e:	687b      	ldr	r3, [r7, #4]
 800d580:	685b      	ldr	r3, [r3, #4]
 800d582:	68ba      	ldr	r2, [r7, #8]
 800d584:	441a      	add	r2, r3
 800d586:	68fb      	ldr	r3, [r7, #12]
 800d588:	681b      	ldr	r3, [r3, #0]
 800d58a:	429a      	cmp	r2, r3
 800d58c:	d118      	bne.n	800d5c0 <prvInsertBlockIntoFreeList+0x88>
 800d58e:	68fb      	ldr	r3, [r7, #12]
 800d590:	681a      	ldr	r2, [r3, #0]
 800d592:	4b15      	ldr	r3, [pc, #84]	; (800d5e8 <prvInsertBlockIntoFreeList+0xb0>)
 800d594:	681b      	ldr	r3, [r3, #0]
 800d596:	429a      	cmp	r2, r3
 800d598:	d00d      	beq.n	800d5b6 <prvInsertBlockIntoFreeList+0x7e>
 800d59a:	687b      	ldr	r3, [r7, #4]
 800d59c:	685a      	ldr	r2, [r3, #4]
 800d59e:	68fb      	ldr	r3, [r7, #12]
 800d5a0:	681b      	ldr	r3, [r3, #0]
 800d5a2:	685b      	ldr	r3, [r3, #4]
 800d5a4:	441a      	add	r2, r3
 800d5a6:	687b      	ldr	r3, [r7, #4]
 800d5a8:	605a      	str	r2, [r3, #4]
 800d5aa:	68fb      	ldr	r3, [r7, #12]
 800d5ac:	681b      	ldr	r3, [r3, #0]
 800d5ae:	681a      	ldr	r2, [r3, #0]
 800d5b0:	687b      	ldr	r3, [r7, #4]
 800d5b2:	601a      	str	r2, [r3, #0]
 800d5b4:	e008      	b.n	800d5c8 <prvInsertBlockIntoFreeList+0x90>
 800d5b6:	4b0c      	ldr	r3, [pc, #48]	; (800d5e8 <prvInsertBlockIntoFreeList+0xb0>)
 800d5b8:	681a      	ldr	r2, [r3, #0]
 800d5ba:	687b      	ldr	r3, [r7, #4]
 800d5bc:	601a      	str	r2, [r3, #0]
 800d5be:	e003      	b.n	800d5c8 <prvInsertBlockIntoFreeList+0x90>
 800d5c0:	68fb      	ldr	r3, [r7, #12]
 800d5c2:	681a      	ldr	r2, [r3, #0]
 800d5c4:	687b      	ldr	r3, [r7, #4]
 800d5c6:	601a      	str	r2, [r3, #0]
 800d5c8:	68fa      	ldr	r2, [r7, #12]
 800d5ca:	687b      	ldr	r3, [r7, #4]
 800d5cc:	429a      	cmp	r2, r3
 800d5ce:	d002      	beq.n	800d5d6 <prvInsertBlockIntoFreeList+0x9e>
 800d5d0:	68fb      	ldr	r3, [r7, #12]
 800d5d2:	687a      	ldr	r2, [r7, #4]
 800d5d4:	601a      	str	r2, [r3, #0]
 800d5d6:	bf00      	nop
 800d5d8:	3714      	adds	r7, #20
 800d5da:	46bd      	mov	sp, r7
 800d5dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5e0:	4770      	bx	lr
 800d5e2:	bf00      	nop
 800d5e4:	200081dc 	.word	0x200081dc
 800d5e8:	200081e4 	.word	0x200081e4

0800d5ec <Reset_Handler>:
 800d5ec:	f8df d034 	ldr.w	sp, [pc, #52]	; 800d624 <LoopFillZerobss+0x14>
 800d5f0:	2100      	movs	r1, #0
 800d5f2:	e003      	b.n	800d5fc <LoopCopyDataInit>

0800d5f4 <CopyDataInit>:
 800d5f4:	4b0c      	ldr	r3, [pc, #48]	; (800d628 <LoopFillZerobss+0x18>)
 800d5f6:	585b      	ldr	r3, [r3, r1]
 800d5f8:	5043      	str	r3, [r0, r1]
 800d5fa:	3104      	adds	r1, #4

0800d5fc <LoopCopyDataInit>:
 800d5fc:	480b      	ldr	r0, [pc, #44]	; (800d62c <LoopFillZerobss+0x1c>)
 800d5fe:	4b0c      	ldr	r3, [pc, #48]	; (800d630 <LoopFillZerobss+0x20>)
 800d600:	1842      	adds	r2, r0, r1
 800d602:	429a      	cmp	r2, r3
 800d604:	d3f6      	bcc.n	800d5f4 <CopyDataInit>
 800d606:	4a0b      	ldr	r2, [pc, #44]	; (800d634 <LoopFillZerobss+0x24>)
 800d608:	e002      	b.n	800d610 <LoopFillZerobss>

0800d60a <FillZerobss>:
 800d60a:	2300      	movs	r3, #0
 800d60c:	f842 3b04 	str.w	r3, [r2], #4

0800d610 <LoopFillZerobss>:
 800d610:	4b09      	ldr	r3, [pc, #36]	; (800d638 <LoopFillZerobss+0x28>)
 800d612:	429a      	cmp	r2, r3
 800d614:	d3f9      	bcc.n	800d60a <FillZerobss>
 800d616:	f7fd f94f 	bl	800a8b8 <SystemInit>
 800d61a:	f000 f817 	bl	800d64c <__libc_init_array>
 800d61e:	f7f6 fbe5 	bl	8003dec <main>
 800d622:	4770      	bx	lr
 800d624:	20030000 	.word	0x20030000
 800d628:	08011134 	.word	0x08011134
 800d62c:	20000000 	.word	0x20000000
 800d630:	200001ec 	.word	0x200001ec
 800d634:	200001ec 	.word	0x200001ec
 800d638:	20008208 	.word	0x20008208

0800d63c <ADC_IRQHandler>:
 800d63c:	e7fe      	b.n	800d63c <ADC_IRQHandler>
	...

0800d640 <__errno>:
 800d640:	4b01      	ldr	r3, [pc, #4]	; (800d648 <__errno+0x8>)
 800d642:	6818      	ldr	r0, [r3, #0]
 800d644:	4770      	bx	lr
 800d646:	bf00      	nop
 800d648:	2000001c 	.word	0x2000001c

0800d64c <__libc_init_array>:
 800d64c:	b570      	push	{r4, r5, r6, lr}
 800d64e:	4d0d      	ldr	r5, [pc, #52]	; (800d684 <__libc_init_array+0x38>)
 800d650:	4c0d      	ldr	r4, [pc, #52]	; (800d688 <__libc_init_array+0x3c>)
 800d652:	1b64      	subs	r4, r4, r5
 800d654:	10a4      	asrs	r4, r4, #2
 800d656:	2600      	movs	r6, #0
 800d658:	42a6      	cmp	r6, r4
 800d65a:	d109      	bne.n	800d670 <__libc_init_array+0x24>
 800d65c:	4d0b      	ldr	r5, [pc, #44]	; (800d68c <__libc_init_array+0x40>)
 800d65e:	4c0c      	ldr	r4, [pc, #48]	; (800d690 <__libc_init_array+0x44>)
 800d660:	f002 ff8e 	bl	8010580 <_init>
 800d664:	1b64      	subs	r4, r4, r5
 800d666:	10a4      	asrs	r4, r4, #2
 800d668:	2600      	movs	r6, #0
 800d66a:	42a6      	cmp	r6, r4
 800d66c:	d105      	bne.n	800d67a <__libc_init_array+0x2e>
 800d66e:	bd70      	pop	{r4, r5, r6, pc}
 800d670:	f855 3b04 	ldr.w	r3, [r5], #4
 800d674:	4798      	blx	r3
 800d676:	3601      	adds	r6, #1
 800d678:	e7ee      	b.n	800d658 <__libc_init_array+0xc>
 800d67a:	f855 3b04 	ldr.w	r3, [r5], #4
 800d67e:	4798      	blx	r3
 800d680:	3601      	adds	r6, #1
 800d682:	e7f2      	b.n	800d66a <__libc_init_array+0x1e>
 800d684:	0801112c 	.word	0x0801112c
 800d688:	0801112c 	.word	0x0801112c
 800d68c:	0801112c 	.word	0x0801112c
 800d690:	08011130 	.word	0x08011130

0800d694 <malloc>:
 800d694:	4b02      	ldr	r3, [pc, #8]	; (800d6a0 <malloc+0xc>)
 800d696:	4601      	mov	r1, r0
 800d698:	6818      	ldr	r0, [r3, #0]
 800d69a:	f000 b88d 	b.w	800d7b8 <_malloc_r>
 800d69e:	bf00      	nop
 800d6a0:	2000001c 	.word	0x2000001c

0800d6a4 <free>:
 800d6a4:	4b02      	ldr	r3, [pc, #8]	; (800d6b0 <free+0xc>)
 800d6a6:	4601      	mov	r1, r0
 800d6a8:	6818      	ldr	r0, [r3, #0]
 800d6aa:	f000 b819 	b.w	800d6e0 <_free_r>
 800d6ae:	bf00      	nop
 800d6b0:	2000001c 	.word	0x2000001c

0800d6b4 <memcpy>:
 800d6b4:	440a      	add	r2, r1
 800d6b6:	4291      	cmp	r1, r2
 800d6b8:	f100 33ff 	add.w	r3, r0, #4294967295
 800d6bc:	d100      	bne.n	800d6c0 <memcpy+0xc>
 800d6be:	4770      	bx	lr
 800d6c0:	b510      	push	{r4, lr}
 800d6c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d6c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d6ca:	4291      	cmp	r1, r2
 800d6cc:	d1f9      	bne.n	800d6c2 <memcpy+0xe>
 800d6ce:	bd10      	pop	{r4, pc}

0800d6d0 <memset>:
 800d6d0:	4402      	add	r2, r0
 800d6d2:	4603      	mov	r3, r0
 800d6d4:	4293      	cmp	r3, r2
 800d6d6:	d100      	bne.n	800d6da <memset+0xa>
 800d6d8:	4770      	bx	lr
 800d6da:	f803 1b01 	strb.w	r1, [r3], #1
 800d6de:	e7f9      	b.n	800d6d4 <memset+0x4>

0800d6e0 <_free_r>:
 800d6e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d6e2:	2900      	cmp	r1, #0
 800d6e4:	d044      	beq.n	800d770 <_free_r+0x90>
 800d6e6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d6ea:	9001      	str	r0, [sp, #4]
 800d6ec:	2b00      	cmp	r3, #0
 800d6ee:	f1a1 0404 	sub.w	r4, r1, #4
 800d6f2:	bfb8      	it	lt
 800d6f4:	18e4      	addlt	r4, r4, r3
 800d6f6:	f001 fd1f 	bl	800f138 <__malloc_lock>
 800d6fa:	4a1e      	ldr	r2, [pc, #120]	; (800d774 <_free_r+0x94>)
 800d6fc:	9801      	ldr	r0, [sp, #4]
 800d6fe:	6813      	ldr	r3, [r2, #0]
 800d700:	b933      	cbnz	r3, 800d710 <_free_r+0x30>
 800d702:	6063      	str	r3, [r4, #4]
 800d704:	6014      	str	r4, [r2, #0]
 800d706:	b003      	add	sp, #12
 800d708:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d70c:	f001 bd1a 	b.w	800f144 <__malloc_unlock>
 800d710:	42a3      	cmp	r3, r4
 800d712:	d908      	bls.n	800d726 <_free_r+0x46>
 800d714:	6825      	ldr	r5, [r4, #0]
 800d716:	1961      	adds	r1, r4, r5
 800d718:	428b      	cmp	r3, r1
 800d71a:	bf01      	itttt	eq
 800d71c:	6819      	ldreq	r1, [r3, #0]
 800d71e:	685b      	ldreq	r3, [r3, #4]
 800d720:	1949      	addeq	r1, r1, r5
 800d722:	6021      	streq	r1, [r4, #0]
 800d724:	e7ed      	b.n	800d702 <_free_r+0x22>
 800d726:	461a      	mov	r2, r3
 800d728:	685b      	ldr	r3, [r3, #4]
 800d72a:	b10b      	cbz	r3, 800d730 <_free_r+0x50>
 800d72c:	42a3      	cmp	r3, r4
 800d72e:	d9fa      	bls.n	800d726 <_free_r+0x46>
 800d730:	6811      	ldr	r1, [r2, #0]
 800d732:	1855      	adds	r5, r2, r1
 800d734:	42a5      	cmp	r5, r4
 800d736:	d10b      	bne.n	800d750 <_free_r+0x70>
 800d738:	6824      	ldr	r4, [r4, #0]
 800d73a:	4421      	add	r1, r4
 800d73c:	1854      	adds	r4, r2, r1
 800d73e:	42a3      	cmp	r3, r4
 800d740:	6011      	str	r1, [r2, #0]
 800d742:	d1e0      	bne.n	800d706 <_free_r+0x26>
 800d744:	681c      	ldr	r4, [r3, #0]
 800d746:	685b      	ldr	r3, [r3, #4]
 800d748:	6053      	str	r3, [r2, #4]
 800d74a:	4421      	add	r1, r4
 800d74c:	6011      	str	r1, [r2, #0]
 800d74e:	e7da      	b.n	800d706 <_free_r+0x26>
 800d750:	d902      	bls.n	800d758 <_free_r+0x78>
 800d752:	230c      	movs	r3, #12
 800d754:	6003      	str	r3, [r0, #0]
 800d756:	e7d6      	b.n	800d706 <_free_r+0x26>
 800d758:	6825      	ldr	r5, [r4, #0]
 800d75a:	1961      	adds	r1, r4, r5
 800d75c:	428b      	cmp	r3, r1
 800d75e:	bf04      	itt	eq
 800d760:	6819      	ldreq	r1, [r3, #0]
 800d762:	685b      	ldreq	r3, [r3, #4]
 800d764:	6063      	str	r3, [r4, #4]
 800d766:	bf04      	itt	eq
 800d768:	1949      	addeq	r1, r1, r5
 800d76a:	6021      	streq	r1, [r4, #0]
 800d76c:	6054      	str	r4, [r2, #4]
 800d76e:	e7ca      	b.n	800d706 <_free_r+0x26>
 800d770:	b003      	add	sp, #12
 800d772:	bd30      	pop	{r4, r5, pc}
 800d774:	200081f4 	.word	0x200081f4

0800d778 <sbrk_aligned>:
 800d778:	b570      	push	{r4, r5, r6, lr}
 800d77a:	4e0e      	ldr	r6, [pc, #56]	; (800d7b4 <sbrk_aligned+0x3c>)
 800d77c:	460c      	mov	r4, r1
 800d77e:	6831      	ldr	r1, [r6, #0]
 800d780:	4605      	mov	r5, r0
 800d782:	b911      	cbnz	r1, 800d78a <sbrk_aligned+0x12>
 800d784:	f000 fcf6 	bl	800e174 <_sbrk_r>
 800d788:	6030      	str	r0, [r6, #0]
 800d78a:	4621      	mov	r1, r4
 800d78c:	4628      	mov	r0, r5
 800d78e:	f000 fcf1 	bl	800e174 <_sbrk_r>
 800d792:	1c43      	adds	r3, r0, #1
 800d794:	d00a      	beq.n	800d7ac <sbrk_aligned+0x34>
 800d796:	1cc4      	adds	r4, r0, #3
 800d798:	f024 0403 	bic.w	r4, r4, #3
 800d79c:	42a0      	cmp	r0, r4
 800d79e:	d007      	beq.n	800d7b0 <sbrk_aligned+0x38>
 800d7a0:	1a21      	subs	r1, r4, r0
 800d7a2:	4628      	mov	r0, r5
 800d7a4:	f000 fce6 	bl	800e174 <_sbrk_r>
 800d7a8:	3001      	adds	r0, #1
 800d7aa:	d101      	bne.n	800d7b0 <sbrk_aligned+0x38>
 800d7ac:	f04f 34ff 	mov.w	r4, #4294967295
 800d7b0:	4620      	mov	r0, r4
 800d7b2:	bd70      	pop	{r4, r5, r6, pc}
 800d7b4:	200081f8 	.word	0x200081f8

0800d7b8 <_malloc_r>:
 800d7b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7bc:	1ccd      	adds	r5, r1, #3
 800d7be:	f025 0503 	bic.w	r5, r5, #3
 800d7c2:	3508      	adds	r5, #8
 800d7c4:	2d0c      	cmp	r5, #12
 800d7c6:	bf38      	it	cc
 800d7c8:	250c      	movcc	r5, #12
 800d7ca:	2d00      	cmp	r5, #0
 800d7cc:	4607      	mov	r7, r0
 800d7ce:	db01      	blt.n	800d7d4 <_malloc_r+0x1c>
 800d7d0:	42a9      	cmp	r1, r5
 800d7d2:	d905      	bls.n	800d7e0 <_malloc_r+0x28>
 800d7d4:	230c      	movs	r3, #12
 800d7d6:	603b      	str	r3, [r7, #0]
 800d7d8:	2600      	movs	r6, #0
 800d7da:	4630      	mov	r0, r6
 800d7dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d7e0:	4e2e      	ldr	r6, [pc, #184]	; (800d89c <_malloc_r+0xe4>)
 800d7e2:	f001 fca9 	bl	800f138 <__malloc_lock>
 800d7e6:	6833      	ldr	r3, [r6, #0]
 800d7e8:	461c      	mov	r4, r3
 800d7ea:	bb34      	cbnz	r4, 800d83a <_malloc_r+0x82>
 800d7ec:	4629      	mov	r1, r5
 800d7ee:	4638      	mov	r0, r7
 800d7f0:	f7ff ffc2 	bl	800d778 <sbrk_aligned>
 800d7f4:	1c43      	adds	r3, r0, #1
 800d7f6:	4604      	mov	r4, r0
 800d7f8:	d14d      	bne.n	800d896 <_malloc_r+0xde>
 800d7fa:	6834      	ldr	r4, [r6, #0]
 800d7fc:	4626      	mov	r6, r4
 800d7fe:	2e00      	cmp	r6, #0
 800d800:	d140      	bne.n	800d884 <_malloc_r+0xcc>
 800d802:	6823      	ldr	r3, [r4, #0]
 800d804:	4631      	mov	r1, r6
 800d806:	4638      	mov	r0, r7
 800d808:	eb04 0803 	add.w	r8, r4, r3
 800d80c:	f000 fcb2 	bl	800e174 <_sbrk_r>
 800d810:	4580      	cmp	r8, r0
 800d812:	d13a      	bne.n	800d88a <_malloc_r+0xd2>
 800d814:	6821      	ldr	r1, [r4, #0]
 800d816:	3503      	adds	r5, #3
 800d818:	1a6d      	subs	r5, r5, r1
 800d81a:	f025 0503 	bic.w	r5, r5, #3
 800d81e:	3508      	adds	r5, #8
 800d820:	2d0c      	cmp	r5, #12
 800d822:	bf38      	it	cc
 800d824:	250c      	movcc	r5, #12
 800d826:	4629      	mov	r1, r5
 800d828:	4638      	mov	r0, r7
 800d82a:	f7ff ffa5 	bl	800d778 <sbrk_aligned>
 800d82e:	3001      	adds	r0, #1
 800d830:	d02b      	beq.n	800d88a <_malloc_r+0xd2>
 800d832:	6823      	ldr	r3, [r4, #0]
 800d834:	442b      	add	r3, r5
 800d836:	6023      	str	r3, [r4, #0]
 800d838:	e00e      	b.n	800d858 <_malloc_r+0xa0>
 800d83a:	6822      	ldr	r2, [r4, #0]
 800d83c:	1b52      	subs	r2, r2, r5
 800d83e:	d41e      	bmi.n	800d87e <_malloc_r+0xc6>
 800d840:	2a0b      	cmp	r2, #11
 800d842:	d916      	bls.n	800d872 <_malloc_r+0xba>
 800d844:	1961      	adds	r1, r4, r5
 800d846:	42a3      	cmp	r3, r4
 800d848:	6025      	str	r5, [r4, #0]
 800d84a:	bf18      	it	ne
 800d84c:	6059      	strne	r1, [r3, #4]
 800d84e:	6863      	ldr	r3, [r4, #4]
 800d850:	bf08      	it	eq
 800d852:	6031      	streq	r1, [r6, #0]
 800d854:	5162      	str	r2, [r4, r5]
 800d856:	604b      	str	r3, [r1, #4]
 800d858:	4638      	mov	r0, r7
 800d85a:	f104 060b 	add.w	r6, r4, #11
 800d85e:	f001 fc71 	bl	800f144 <__malloc_unlock>
 800d862:	f026 0607 	bic.w	r6, r6, #7
 800d866:	1d23      	adds	r3, r4, #4
 800d868:	1af2      	subs	r2, r6, r3
 800d86a:	d0b6      	beq.n	800d7da <_malloc_r+0x22>
 800d86c:	1b9b      	subs	r3, r3, r6
 800d86e:	50a3      	str	r3, [r4, r2]
 800d870:	e7b3      	b.n	800d7da <_malloc_r+0x22>
 800d872:	6862      	ldr	r2, [r4, #4]
 800d874:	42a3      	cmp	r3, r4
 800d876:	bf0c      	ite	eq
 800d878:	6032      	streq	r2, [r6, #0]
 800d87a:	605a      	strne	r2, [r3, #4]
 800d87c:	e7ec      	b.n	800d858 <_malloc_r+0xa0>
 800d87e:	4623      	mov	r3, r4
 800d880:	6864      	ldr	r4, [r4, #4]
 800d882:	e7b2      	b.n	800d7ea <_malloc_r+0x32>
 800d884:	4634      	mov	r4, r6
 800d886:	6876      	ldr	r6, [r6, #4]
 800d888:	e7b9      	b.n	800d7fe <_malloc_r+0x46>
 800d88a:	230c      	movs	r3, #12
 800d88c:	603b      	str	r3, [r7, #0]
 800d88e:	4638      	mov	r0, r7
 800d890:	f001 fc58 	bl	800f144 <__malloc_unlock>
 800d894:	e7a1      	b.n	800d7da <_malloc_r+0x22>
 800d896:	6025      	str	r5, [r4, #0]
 800d898:	e7de      	b.n	800d858 <_malloc_r+0xa0>
 800d89a:	bf00      	nop
 800d89c:	200081f4 	.word	0x200081f4

0800d8a0 <__cvt>:
 800d8a0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d8a4:	ec55 4b10 	vmov	r4, r5, d0
 800d8a8:	2d00      	cmp	r5, #0
 800d8aa:	460e      	mov	r6, r1
 800d8ac:	4619      	mov	r1, r3
 800d8ae:	462b      	mov	r3, r5
 800d8b0:	bfbb      	ittet	lt
 800d8b2:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800d8b6:	461d      	movlt	r5, r3
 800d8b8:	2300      	movge	r3, #0
 800d8ba:	232d      	movlt	r3, #45	; 0x2d
 800d8bc:	700b      	strb	r3, [r1, #0]
 800d8be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d8c0:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800d8c4:	4691      	mov	r9, r2
 800d8c6:	f023 0820 	bic.w	r8, r3, #32
 800d8ca:	bfbc      	itt	lt
 800d8cc:	4622      	movlt	r2, r4
 800d8ce:	4614      	movlt	r4, r2
 800d8d0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d8d4:	d005      	beq.n	800d8e2 <__cvt+0x42>
 800d8d6:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800d8da:	d100      	bne.n	800d8de <__cvt+0x3e>
 800d8dc:	3601      	adds	r6, #1
 800d8de:	2102      	movs	r1, #2
 800d8e0:	e000      	b.n	800d8e4 <__cvt+0x44>
 800d8e2:	2103      	movs	r1, #3
 800d8e4:	ab03      	add	r3, sp, #12
 800d8e6:	9301      	str	r3, [sp, #4]
 800d8e8:	ab02      	add	r3, sp, #8
 800d8ea:	9300      	str	r3, [sp, #0]
 800d8ec:	ec45 4b10 	vmov	d0, r4, r5
 800d8f0:	4653      	mov	r3, sl
 800d8f2:	4632      	mov	r2, r6
 800d8f4:	f000 fd34 	bl	800e360 <_dtoa_r>
 800d8f8:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800d8fc:	4607      	mov	r7, r0
 800d8fe:	d102      	bne.n	800d906 <__cvt+0x66>
 800d900:	f019 0f01 	tst.w	r9, #1
 800d904:	d022      	beq.n	800d94c <__cvt+0xac>
 800d906:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800d90a:	eb07 0906 	add.w	r9, r7, r6
 800d90e:	d110      	bne.n	800d932 <__cvt+0x92>
 800d910:	783b      	ldrb	r3, [r7, #0]
 800d912:	2b30      	cmp	r3, #48	; 0x30
 800d914:	d10a      	bne.n	800d92c <__cvt+0x8c>
 800d916:	2200      	movs	r2, #0
 800d918:	2300      	movs	r3, #0
 800d91a:	4620      	mov	r0, r4
 800d91c:	4629      	mov	r1, r5
 800d91e:	f7f3 f8e3 	bl	8000ae8 <__aeabi_dcmpeq>
 800d922:	b918      	cbnz	r0, 800d92c <__cvt+0x8c>
 800d924:	f1c6 0601 	rsb	r6, r6, #1
 800d928:	f8ca 6000 	str.w	r6, [sl]
 800d92c:	f8da 3000 	ldr.w	r3, [sl]
 800d930:	4499      	add	r9, r3
 800d932:	2200      	movs	r2, #0
 800d934:	2300      	movs	r3, #0
 800d936:	4620      	mov	r0, r4
 800d938:	4629      	mov	r1, r5
 800d93a:	f7f3 f8d5 	bl	8000ae8 <__aeabi_dcmpeq>
 800d93e:	b108      	cbz	r0, 800d944 <__cvt+0xa4>
 800d940:	f8cd 900c 	str.w	r9, [sp, #12]
 800d944:	2230      	movs	r2, #48	; 0x30
 800d946:	9b03      	ldr	r3, [sp, #12]
 800d948:	454b      	cmp	r3, r9
 800d94a:	d307      	bcc.n	800d95c <__cvt+0xbc>
 800d94c:	9b03      	ldr	r3, [sp, #12]
 800d94e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800d950:	1bdb      	subs	r3, r3, r7
 800d952:	4638      	mov	r0, r7
 800d954:	6013      	str	r3, [r2, #0]
 800d956:	b004      	add	sp, #16
 800d958:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d95c:	1c59      	adds	r1, r3, #1
 800d95e:	9103      	str	r1, [sp, #12]
 800d960:	701a      	strb	r2, [r3, #0]
 800d962:	e7f0      	b.n	800d946 <__cvt+0xa6>

0800d964 <__exponent>:
 800d964:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d966:	4603      	mov	r3, r0
 800d968:	2900      	cmp	r1, #0
 800d96a:	bfb8      	it	lt
 800d96c:	4249      	neglt	r1, r1
 800d96e:	f803 2b02 	strb.w	r2, [r3], #2
 800d972:	bfb4      	ite	lt
 800d974:	222d      	movlt	r2, #45	; 0x2d
 800d976:	222b      	movge	r2, #43	; 0x2b
 800d978:	2909      	cmp	r1, #9
 800d97a:	7042      	strb	r2, [r0, #1]
 800d97c:	dd2a      	ble.n	800d9d4 <__exponent+0x70>
 800d97e:	f10d 0407 	add.w	r4, sp, #7
 800d982:	46a4      	mov	ip, r4
 800d984:	270a      	movs	r7, #10
 800d986:	46a6      	mov	lr, r4
 800d988:	460a      	mov	r2, r1
 800d98a:	fb91 f6f7 	sdiv	r6, r1, r7
 800d98e:	fb07 1516 	mls	r5, r7, r6, r1
 800d992:	3530      	adds	r5, #48	; 0x30
 800d994:	2a63      	cmp	r2, #99	; 0x63
 800d996:	f104 34ff 	add.w	r4, r4, #4294967295
 800d99a:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800d99e:	4631      	mov	r1, r6
 800d9a0:	dcf1      	bgt.n	800d986 <__exponent+0x22>
 800d9a2:	3130      	adds	r1, #48	; 0x30
 800d9a4:	f1ae 0502 	sub.w	r5, lr, #2
 800d9a8:	f804 1c01 	strb.w	r1, [r4, #-1]
 800d9ac:	1c44      	adds	r4, r0, #1
 800d9ae:	4629      	mov	r1, r5
 800d9b0:	4561      	cmp	r1, ip
 800d9b2:	d30a      	bcc.n	800d9ca <__exponent+0x66>
 800d9b4:	f10d 0209 	add.w	r2, sp, #9
 800d9b8:	eba2 020e 	sub.w	r2, r2, lr
 800d9bc:	4565      	cmp	r5, ip
 800d9be:	bf88      	it	hi
 800d9c0:	2200      	movhi	r2, #0
 800d9c2:	4413      	add	r3, r2
 800d9c4:	1a18      	subs	r0, r3, r0
 800d9c6:	b003      	add	sp, #12
 800d9c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d9ca:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d9ce:	f804 2f01 	strb.w	r2, [r4, #1]!
 800d9d2:	e7ed      	b.n	800d9b0 <__exponent+0x4c>
 800d9d4:	2330      	movs	r3, #48	; 0x30
 800d9d6:	3130      	adds	r1, #48	; 0x30
 800d9d8:	7083      	strb	r3, [r0, #2]
 800d9da:	70c1      	strb	r1, [r0, #3]
 800d9dc:	1d03      	adds	r3, r0, #4
 800d9de:	e7f1      	b.n	800d9c4 <__exponent+0x60>

0800d9e0 <_printf_float>:
 800d9e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d9e4:	ed2d 8b02 	vpush	{d8}
 800d9e8:	b08d      	sub	sp, #52	; 0x34
 800d9ea:	460c      	mov	r4, r1
 800d9ec:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d9f0:	4616      	mov	r6, r2
 800d9f2:	461f      	mov	r7, r3
 800d9f4:	4605      	mov	r5, r0
 800d9f6:	f001 fb97 	bl	800f128 <_localeconv_r>
 800d9fa:	f8d0 a000 	ldr.w	sl, [r0]
 800d9fe:	4650      	mov	r0, sl
 800da00:	f7f2 fbf6 	bl	80001f0 <strlen>
 800da04:	2300      	movs	r3, #0
 800da06:	930a      	str	r3, [sp, #40]	; 0x28
 800da08:	6823      	ldr	r3, [r4, #0]
 800da0a:	9305      	str	r3, [sp, #20]
 800da0c:	f8d8 3000 	ldr.w	r3, [r8]
 800da10:	f894 b018 	ldrb.w	fp, [r4, #24]
 800da14:	3307      	adds	r3, #7
 800da16:	f023 0307 	bic.w	r3, r3, #7
 800da1a:	f103 0208 	add.w	r2, r3, #8
 800da1e:	f8c8 2000 	str.w	r2, [r8]
 800da22:	e9d3 2300 	ldrd	r2, r3, [r3]
 800da26:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800da2a:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 800da2e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800da32:	9307      	str	r3, [sp, #28]
 800da34:	f8cd 8018 	str.w	r8, [sp, #24]
 800da38:	ee08 0a10 	vmov	s16, r0
 800da3c:	4b9f      	ldr	r3, [pc, #636]	; (800dcbc <_printf_float+0x2dc>)
 800da3e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800da42:	f04f 32ff 	mov.w	r2, #4294967295
 800da46:	f7f3 f881 	bl	8000b4c <__aeabi_dcmpun>
 800da4a:	bb88      	cbnz	r0, 800dab0 <_printf_float+0xd0>
 800da4c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800da50:	4b9a      	ldr	r3, [pc, #616]	; (800dcbc <_printf_float+0x2dc>)
 800da52:	f04f 32ff 	mov.w	r2, #4294967295
 800da56:	f7f3 f85b 	bl	8000b10 <__aeabi_dcmple>
 800da5a:	bb48      	cbnz	r0, 800dab0 <_printf_float+0xd0>
 800da5c:	2200      	movs	r2, #0
 800da5e:	2300      	movs	r3, #0
 800da60:	4640      	mov	r0, r8
 800da62:	4649      	mov	r1, r9
 800da64:	f7f3 f84a 	bl	8000afc <__aeabi_dcmplt>
 800da68:	b110      	cbz	r0, 800da70 <_printf_float+0x90>
 800da6a:	232d      	movs	r3, #45	; 0x2d
 800da6c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800da70:	4b93      	ldr	r3, [pc, #588]	; (800dcc0 <_printf_float+0x2e0>)
 800da72:	4894      	ldr	r0, [pc, #592]	; (800dcc4 <_printf_float+0x2e4>)
 800da74:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800da78:	bf94      	ite	ls
 800da7a:	4698      	movls	r8, r3
 800da7c:	4680      	movhi	r8, r0
 800da7e:	2303      	movs	r3, #3
 800da80:	6123      	str	r3, [r4, #16]
 800da82:	9b05      	ldr	r3, [sp, #20]
 800da84:	f023 0204 	bic.w	r2, r3, #4
 800da88:	6022      	str	r2, [r4, #0]
 800da8a:	f04f 0900 	mov.w	r9, #0
 800da8e:	9700      	str	r7, [sp, #0]
 800da90:	4633      	mov	r3, r6
 800da92:	aa0b      	add	r2, sp, #44	; 0x2c
 800da94:	4621      	mov	r1, r4
 800da96:	4628      	mov	r0, r5
 800da98:	f000 f9d8 	bl	800de4c <_printf_common>
 800da9c:	3001      	adds	r0, #1
 800da9e:	f040 8090 	bne.w	800dbc2 <_printf_float+0x1e2>
 800daa2:	f04f 30ff 	mov.w	r0, #4294967295
 800daa6:	b00d      	add	sp, #52	; 0x34
 800daa8:	ecbd 8b02 	vpop	{d8}
 800daac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dab0:	4642      	mov	r2, r8
 800dab2:	464b      	mov	r3, r9
 800dab4:	4640      	mov	r0, r8
 800dab6:	4649      	mov	r1, r9
 800dab8:	f7f3 f848 	bl	8000b4c <__aeabi_dcmpun>
 800dabc:	b140      	cbz	r0, 800dad0 <_printf_float+0xf0>
 800dabe:	464b      	mov	r3, r9
 800dac0:	2b00      	cmp	r3, #0
 800dac2:	bfbc      	itt	lt
 800dac4:	232d      	movlt	r3, #45	; 0x2d
 800dac6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800daca:	487f      	ldr	r0, [pc, #508]	; (800dcc8 <_printf_float+0x2e8>)
 800dacc:	4b7f      	ldr	r3, [pc, #508]	; (800dccc <_printf_float+0x2ec>)
 800dace:	e7d1      	b.n	800da74 <_printf_float+0x94>
 800dad0:	6863      	ldr	r3, [r4, #4]
 800dad2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800dad6:	9206      	str	r2, [sp, #24]
 800dad8:	1c5a      	adds	r2, r3, #1
 800dada:	d13f      	bne.n	800db5c <_printf_float+0x17c>
 800dadc:	2306      	movs	r3, #6
 800dade:	6063      	str	r3, [r4, #4]
 800dae0:	9b05      	ldr	r3, [sp, #20]
 800dae2:	6861      	ldr	r1, [r4, #4]
 800dae4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800dae8:	2300      	movs	r3, #0
 800daea:	9303      	str	r3, [sp, #12]
 800daec:	ab0a      	add	r3, sp, #40	; 0x28
 800daee:	e9cd b301 	strd	fp, r3, [sp, #4]
 800daf2:	ab09      	add	r3, sp, #36	; 0x24
 800daf4:	ec49 8b10 	vmov	d0, r8, r9
 800daf8:	9300      	str	r3, [sp, #0]
 800dafa:	6022      	str	r2, [r4, #0]
 800dafc:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800db00:	4628      	mov	r0, r5
 800db02:	f7ff fecd 	bl	800d8a0 <__cvt>
 800db06:	9b06      	ldr	r3, [sp, #24]
 800db08:	9909      	ldr	r1, [sp, #36]	; 0x24
 800db0a:	2b47      	cmp	r3, #71	; 0x47
 800db0c:	4680      	mov	r8, r0
 800db0e:	d108      	bne.n	800db22 <_printf_float+0x142>
 800db10:	1cc8      	adds	r0, r1, #3
 800db12:	db02      	blt.n	800db1a <_printf_float+0x13a>
 800db14:	6863      	ldr	r3, [r4, #4]
 800db16:	4299      	cmp	r1, r3
 800db18:	dd41      	ble.n	800db9e <_printf_float+0x1be>
 800db1a:	f1ab 0b02 	sub.w	fp, fp, #2
 800db1e:	fa5f fb8b 	uxtb.w	fp, fp
 800db22:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800db26:	d820      	bhi.n	800db6a <_printf_float+0x18a>
 800db28:	3901      	subs	r1, #1
 800db2a:	465a      	mov	r2, fp
 800db2c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800db30:	9109      	str	r1, [sp, #36]	; 0x24
 800db32:	f7ff ff17 	bl	800d964 <__exponent>
 800db36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800db38:	1813      	adds	r3, r2, r0
 800db3a:	2a01      	cmp	r2, #1
 800db3c:	4681      	mov	r9, r0
 800db3e:	6123      	str	r3, [r4, #16]
 800db40:	dc02      	bgt.n	800db48 <_printf_float+0x168>
 800db42:	6822      	ldr	r2, [r4, #0]
 800db44:	07d2      	lsls	r2, r2, #31
 800db46:	d501      	bpl.n	800db4c <_printf_float+0x16c>
 800db48:	3301      	adds	r3, #1
 800db4a:	6123      	str	r3, [r4, #16]
 800db4c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800db50:	2b00      	cmp	r3, #0
 800db52:	d09c      	beq.n	800da8e <_printf_float+0xae>
 800db54:	232d      	movs	r3, #45	; 0x2d
 800db56:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800db5a:	e798      	b.n	800da8e <_printf_float+0xae>
 800db5c:	9a06      	ldr	r2, [sp, #24]
 800db5e:	2a47      	cmp	r2, #71	; 0x47
 800db60:	d1be      	bne.n	800dae0 <_printf_float+0x100>
 800db62:	2b00      	cmp	r3, #0
 800db64:	d1bc      	bne.n	800dae0 <_printf_float+0x100>
 800db66:	2301      	movs	r3, #1
 800db68:	e7b9      	b.n	800dade <_printf_float+0xfe>
 800db6a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800db6e:	d118      	bne.n	800dba2 <_printf_float+0x1c2>
 800db70:	2900      	cmp	r1, #0
 800db72:	6863      	ldr	r3, [r4, #4]
 800db74:	dd0b      	ble.n	800db8e <_printf_float+0x1ae>
 800db76:	6121      	str	r1, [r4, #16]
 800db78:	b913      	cbnz	r3, 800db80 <_printf_float+0x1a0>
 800db7a:	6822      	ldr	r2, [r4, #0]
 800db7c:	07d0      	lsls	r0, r2, #31
 800db7e:	d502      	bpl.n	800db86 <_printf_float+0x1a6>
 800db80:	3301      	adds	r3, #1
 800db82:	440b      	add	r3, r1
 800db84:	6123      	str	r3, [r4, #16]
 800db86:	65a1      	str	r1, [r4, #88]	; 0x58
 800db88:	f04f 0900 	mov.w	r9, #0
 800db8c:	e7de      	b.n	800db4c <_printf_float+0x16c>
 800db8e:	b913      	cbnz	r3, 800db96 <_printf_float+0x1b6>
 800db90:	6822      	ldr	r2, [r4, #0]
 800db92:	07d2      	lsls	r2, r2, #31
 800db94:	d501      	bpl.n	800db9a <_printf_float+0x1ba>
 800db96:	3302      	adds	r3, #2
 800db98:	e7f4      	b.n	800db84 <_printf_float+0x1a4>
 800db9a:	2301      	movs	r3, #1
 800db9c:	e7f2      	b.n	800db84 <_printf_float+0x1a4>
 800db9e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800dba2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dba4:	4299      	cmp	r1, r3
 800dba6:	db05      	blt.n	800dbb4 <_printf_float+0x1d4>
 800dba8:	6823      	ldr	r3, [r4, #0]
 800dbaa:	6121      	str	r1, [r4, #16]
 800dbac:	07d8      	lsls	r0, r3, #31
 800dbae:	d5ea      	bpl.n	800db86 <_printf_float+0x1a6>
 800dbb0:	1c4b      	adds	r3, r1, #1
 800dbb2:	e7e7      	b.n	800db84 <_printf_float+0x1a4>
 800dbb4:	2900      	cmp	r1, #0
 800dbb6:	bfd4      	ite	le
 800dbb8:	f1c1 0202 	rsble	r2, r1, #2
 800dbbc:	2201      	movgt	r2, #1
 800dbbe:	4413      	add	r3, r2
 800dbc0:	e7e0      	b.n	800db84 <_printf_float+0x1a4>
 800dbc2:	6823      	ldr	r3, [r4, #0]
 800dbc4:	055a      	lsls	r2, r3, #21
 800dbc6:	d407      	bmi.n	800dbd8 <_printf_float+0x1f8>
 800dbc8:	6923      	ldr	r3, [r4, #16]
 800dbca:	4642      	mov	r2, r8
 800dbcc:	4631      	mov	r1, r6
 800dbce:	4628      	mov	r0, r5
 800dbd0:	47b8      	blx	r7
 800dbd2:	3001      	adds	r0, #1
 800dbd4:	d12c      	bne.n	800dc30 <_printf_float+0x250>
 800dbd6:	e764      	b.n	800daa2 <_printf_float+0xc2>
 800dbd8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800dbdc:	f240 80e0 	bls.w	800dda0 <_printf_float+0x3c0>
 800dbe0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800dbe4:	2200      	movs	r2, #0
 800dbe6:	2300      	movs	r3, #0
 800dbe8:	f7f2 ff7e 	bl	8000ae8 <__aeabi_dcmpeq>
 800dbec:	2800      	cmp	r0, #0
 800dbee:	d034      	beq.n	800dc5a <_printf_float+0x27a>
 800dbf0:	4a37      	ldr	r2, [pc, #220]	; (800dcd0 <_printf_float+0x2f0>)
 800dbf2:	2301      	movs	r3, #1
 800dbf4:	4631      	mov	r1, r6
 800dbf6:	4628      	mov	r0, r5
 800dbf8:	47b8      	blx	r7
 800dbfa:	3001      	adds	r0, #1
 800dbfc:	f43f af51 	beq.w	800daa2 <_printf_float+0xc2>
 800dc00:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800dc04:	429a      	cmp	r2, r3
 800dc06:	db02      	blt.n	800dc0e <_printf_float+0x22e>
 800dc08:	6823      	ldr	r3, [r4, #0]
 800dc0a:	07d8      	lsls	r0, r3, #31
 800dc0c:	d510      	bpl.n	800dc30 <_printf_float+0x250>
 800dc0e:	ee18 3a10 	vmov	r3, s16
 800dc12:	4652      	mov	r2, sl
 800dc14:	4631      	mov	r1, r6
 800dc16:	4628      	mov	r0, r5
 800dc18:	47b8      	blx	r7
 800dc1a:	3001      	adds	r0, #1
 800dc1c:	f43f af41 	beq.w	800daa2 <_printf_float+0xc2>
 800dc20:	f04f 0800 	mov.w	r8, #0
 800dc24:	f104 091a 	add.w	r9, r4, #26
 800dc28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dc2a:	3b01      	subs	r3, #1
 800dc2c:	4543      	cmp	r3, r8
 800dc2e:	dc09      	bgt.n	800dc44 <_printf_float+0x264>
 800dc30:	6823      	ldr	r3, [r4, #0]
 800dc32:	079b      	lsls	r3, r3, #30
 800dc34:	f100 8105 	bmi.w	800de42 <_printf_float+0x462>
 800dc38:	68e0      	ldr	r0, [r4, #12]
 800dc3a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800dc3c:	4298      	cmp	r0, r3
 800dc3e:	bfb8      	it	lt
 800dc40:	4618      	movlt	r0, r3
 800dc42:	e730      	b.n	800daa6 <_printf_float+0xc6>
 800dc44:	2301      	movs	r3, #1
 800dc46:	464a      	mov	r2, r9
 800dc48:	4631      	mov	r1, r6
 800dc4a:	4628      	mov	r0, r5
 800dc4c:	47b8      	blx	r7
 800dc4e:	3001      	adds	r0, #1
 800dc50:	f43f af27 	beq.w	800daa2 <_printf_float+0xc2>
 800dc54:	f108 0801 	add.w	r8, r8, #1
 800dc58:	e7e6      	b.n	800dc28 <_printf_float+0x248>
 800dc5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc5c:	2b00      	cmp	r3, #0
 800dc5e:	dc39      	bgt.n	800dcd4 <_printf_float+0x2f4>
 800dc60:	4a1b      	ldr	r2, [pc, #108]	; (800dcd0 <_printf_float+0x2f0>)
 800dc62:	2301      	movs	r3, #1
 800dc64:	4631      	mov	r1, r6
 800dc66:	4628      	mov	r0, r5
 800dc68:	47b8      	blx	r7
 800dc6a:	3001      	adds	r0, #1
 800dc6c:	f43f af19 	beq.w	800daa2 <_printf_float+0xc2>
 800dc70:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800dc74:	4313      	orrs	r3, r2
 800dc76:	d102      	bne.n	800dc7e <_printf_float+0x29e>
 800dc78:	6823      	ldr	r3, [r4, #0]
 800dc7a:	07d9      	lsls	r1, r3, #31
 800dc7c:	d5d8      	bpl.n	800dc30 <_printf_float+0x250>
 800dc7e:	ee18 3a10 	vmov	r3, s16
 800dc82:	4652      	mov	r2, sl
 800dc84:	4631      	mov	r1, r6
 800dc86:	4628      	mov	r0, r5
 800dc88:	47b8      	blx	r7
 800dc8a:	3001      	adds	r0, #1
 800dc8c:	f43f af09 	beq.w	800daa2 <_printf_float+0xc2>
 800dc90:	f04f 0900 	mov.w	r9, #0
 800dc94:	f104 0a1a 	add.w	sl, r4, #26
 800dc98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dc9a:	425b      	negs	r3, r3
 800dc9c:	454b      	cmp	r3, r9
 800dc9e:	dc01      	bgt.n	800dca4 <_printf_float+0x2c4>
 800dca0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dca2:	e792      	b.n	800dbca <_printf_float+0x1ea>
 800dca4:	2301      	movs	r3, #1
 800dca6:	4652      	mov	r2, sl
 800dca8:	4631      	mov	r1, r6
 800dcaa:	4628      	mov	r0, r5
 800dcac:	47b8      	blx	r7
 800dcae:	3001      	adds	r0, #1
 800dcb0:	f43f aef7 	beq.w	800daa2 <_printf_float+0xc2>
 800dcb4:	f109 0901 	add.w	r9, r9, #1
 800dcb8:	e7ee      	b.n	800dc98 <_printf_float+0x2b8>
 800dcba:	bf00      	nop
 800dcbc:	7fefffff 	.word	0x7fefffff
 800dcc0:	08010d54 	.word	0x08010d54
 800dcc4:	08010d58 	.word	0x08010d58
 800dcc8:	08010d60 	.word	0x08010d60
 800dccc:	08010d5c 	.word	0x08010d5c
 800dcd0:	08010d64 	.word	0x08010d64
 800dcd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dcd6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800dcd8:	429a      	cmp	r2, r3
 800dcda:	bfa8      	it	ge
 800dcdc:	461a      	movge	r2, r3
 800dcde:	2a00      	cmp	r2, #0
 800dce0:	4691      	mov	r9, r2
 800dce2:	dc37      	bgt.n	800dd54 <_printf_float+0x374>
 800dce4:	f04f 0b00 	mov.w	fp, #0
 800dce8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800dcec:	f104 021a 	add.w	r2, r4, #26
 800dcf0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800dcf2:	9305      	str	r3, [sp, #20]
 800dcf4:	eba3 0309 	sub.w	r3, r3, r9
 800dcf8:	455b      	cmp	r3, fp
 800dcfa:	dc33      	bgt.n	800dd64 <_printf_float+0x384>
 800dcfc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800dd00:	429a      	cmp	r2, r3
 800dd02:	db3b      	blt.n	800dd7c <_printf_float+0x39c>
 800dd04:	6823      	ldr	r3, [r4, #0]
 800dd06:	07da      	lsls	r2, r3, #31
 800dd08:	d438      	bmi.n	800dd7c <_printf_float+0x39c>
 800dd0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dd0c:	9a05      	ldr	r2, [sp, #20]
 800dd0e:	9909      	ldr	r1, [sp, #36]	; 0x24
 800dd10:	1a9a      	subs	r2, r3, r2
 800dd12:	eba3 0901 	sub.w	r9, r3, r1
 800dd16:	4591      	cmp	r9, r2
 800dd18:	bfa8      	it	ge
 800dd1a:	4691      	movge	r9, r2
 800dd1c:	f1b9 0f00 	cmp.w	r9, #0
 800dd20:	dc35      	bgt.n	800dd8e <_printf_float+0x3ae>
 800dd22:	f04f 0800 	mov.w	r8, #0
 800dd26:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800dd2a:	f104 0a1a 	add.w	sl, r4, #26
 800dd2e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800dd32:	1a9b      	subs	r3, r3, r2
 800dd34:	eba3 0309 	sub.w	r3, r3, r9
 800dd38:	4543      	cmp	r3, r8
 800dd3a:	f77f af79 	ble.w	800dc30 <_printf_float+0x250>
 800dd3e:	2301      	movs	r3, #1
 800dd40:	4652      	mov	r2, sl
 800dd42:	4631      	mov	r1, r6
 800dd44:	4628      	mov	r0, r5
 800dd46:	47b8      	blx	r7
 800dd48:	3001      	adds	r0, #1
 800dd4a:	f43f aeaa 	beq.w	800daa2 <_printf_float+0xc2>
 800dd4e:	f108 0801 	add.w	r8, r8, #1
 800dd52:	e7ec      	b.n	800dd2e <_printf_float+0x34e>
 800dd54:	4613      	mov	r3, r2
 800dd56:	4631      	mov	r1, r6
 800dd58:	4642      	mov	r2, r8
 800dd5a:	4628      	mov	r0, r5
 800dd5c:	47b8      	blx	r7
 800dd5e:	3001      	adds	r0, #1
 800dd60:	d1c0      	bne.n	800dce4 <_printf_float+0x304>
 800dd62:	e69e      	b.n	800daa2 <_printf_float+0xc2>
 800dd64:	2301      	movs	r3, #1
 800dd66:	4631      	mov	r1, r6
 800dd68:	4628      	mov	r0, r5
 800dd6a:	9205      	str	r2, [sp, #20]
 800dd6c:	47b8      	blx	r7
 800dd6e:	3001      	adds	r0, #1
 800dd70:	f43f ae97 	beq.w	800daa2 <_printf_float+0xc2>
 800dd74:	9a05      	ldr	r2, [sp, #20]
 800dd76:	f10b 0b01 	add.w	fp, fp, #1
 800dd7a:	e7b9      	b.n	800dcf0 <_printf_float+0x310>
 800dd7c:	ee18 3a10 	vmov	r3, s16
 800dd80:	4652      	mov	r2, sl
 800dd82:	4631      	mov	r1, r6
 800dd84:	4628      	mov	r0, r5
 800dd86:	47b8      	blx	r7
 800dd88:	3001      	adds	r0, #1
 800dd8a:	d1be      	bne.n	800dd0a <_printf_float+0x32a>
 800dd8c:	e689      	b.n	800daa2 <_printf_float+0xc2>
 800dd8e:	9a05      	ldr	r2, [sp, #20]
 800dd90:	464b      	mov	r3, r9
 800dd92:	4442      	add	r2, r8
 800dd94:	4631      	mov	r1, r6
 800dd96:	4628      	mov	r0, r5
 800dd98:	47b8      	blx	r7
 800dd9a:	3001      	adds	r0, #1
 800dd9c:	d1c1      	bne.n	800dd22 <_printf_float+0x342>
 800dd9e:	e680      	b.n	800daa2 <_printf_float+0xc2>
 800dda0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800dda2:	2a01      	cmp	r2, #1
 800dda4:	dc01      	bgt.n	800ddaa <_printf_float+0x3ca>
 800dda6:	07db      	lsls	r3, r3, #31
 800dda8:	d538      	bpl.n	800de1c <_printf_float+0x43c>
 800ddaa:	2301      	movs	r3, #1
 800ddac:	4642      	mov	r2, r8
 800ddae:	4631      	mov	r1, r6
 800ddb0:	4628      	mov	r0, r5
 800ddb2:	47b8      	blx	r7
 800ddb4:	3001      	adds	r0, #1
 800ddb6:	f43f ae74 	beq.w	800daa2 <_printf_float+0xc2>
 800ddba:	ee18 3a10 	vmov	r3, s16
 800ddbe:	4652      	mov	r2, sl
 800ddc0:	4631      	mov	r1, r6
 800ddc2:	4628      	mov	r0, r5
 800ddc4:	47b8      	blx	r7
 800ddc6:	3001      	adds	r0, #1
 800ddc8:	f43f ae6b 	beq.w	800daa2 <_printf_float+0xc2>
 800ddcc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800ddd0:	2200      	movs	r2, #0
 800ddd2:	2300      	movs	r3, #0
 800ddd4:	f7f2 fe88 	bl	8000ae8 <__aeabi_dcmpeq>
 800ddd8:	b9d8      	cbnz	r0, 800de12 <_printf_float+0x432>
 800ddda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dddc:	f108 0201 	add.w	r2, r8, #1
 800dde0:	3b01      	subs	r3, #1
 800dde2:	4631      	mov	r1, r6
 800dde4:	4628      	mov	r0, r5
 800dde6:	47b8      	blx	r7
 800dde8:	3001      	adds	r0, #1
 800ddea:	d10e      	bne.n	800de0a <_printf_float+0x42a>
 800ddec:	e659      	b.n	800daa2 <_printf_float+0xc2>
 800ddee:	2301      	movs	r3, #1
 800ddf0:	4652      	mov	r2, sl
 800ddf2:	4631      	mov	r1, r6
 800ddf4:	4628      	mov	r0, r5
 800ddf6:	47b8      	blx	r7
 800ddf8:	3001      	adds	r0, #1
 800ddfa:	f43f ae52 	beq.w	800daa2 <_printf_float+0xc2>
 800ddfe:	f108 0801 	add.w	r8, r8, #1
 800de02:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800de04:	3b01      	subs	r3, #1
 800de06:	4543      	cmp	r3, r8
 800de08:	dcf1      	bgt.n	800ddee <_printf_float+0x40e>
 800de0a:	464b      	mov	r3, r9
 800de0c:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800de10:	e6dc      	b.n	800dbcc <_printf_float+0x1ec>
 800de12:	f04f 0800 	mov.w	r8, #0
 800de16:	f104 0a1a 	add.w	sl, r4, #26
 800de1a:	e7f2      	b.n	800de02 <_printf_float+0x422>
 800de1c:	2301      	movs	r3, #1
 800de1e:	4642      	mov	r2, r8
 800de20:	e7df      	b.n	800dde2 <_printf_float+0x402>
 800de22:	2301      	movs	r3, #1
 800de24:	464a      	mov	r2, r9
 800de26:	4631      	mov	r1, r6
 800de28:	4628      	mov	r0, r5
 800de2a:	47b8      	blx	r7
 800de2c:	3001      	adds	r0, #1
 800de2e:	f43f ae38 	beq.w	800daa2 <_printf_float+0xc2>
 800de32:	f108 0801 	add.w	r8, r8, #1
 800de36:	68e3      	ldr	r3, [r4, #12]
 800de38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800de3a:	1a5b      	subs	r3, r3, r1
 800de3c:	4543      	cmp	r3, r8
 800de3e:	dcf0      	bgt.n	800de22 <_printf_float+0x442>
 800de40:	e6fa      	b.n	800dc38 <_printf_float+0x258>
 800de42:	f04f 0800 	mov.w	r8, #0
 800de46:	f104 0919 	add.w	r9, r4, #25
 800de4a:	e7f4      	b.n	800de36 <_printf_float+0x456>

0800de4c <_printf_common>:
 800de4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de50:	4616      	mov	r6, r2
 800de52:	4699      	mov	r9, r3
 800de54:	688a      	ldr	r2, [r1, #8]
 800de56:	690b      	ldr	r3, [r1, #16]
 800de58:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800de5c:	4293      	cmp	r3, r2
 800de5e:	bfb8      	it	lt
 800de60:	4613      	movlt	r3, r2
 800de62:	6033      	str	r3, [r6, #0]
 800de64:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800de68:	4607      	mov	r7, r0
 800de6a:	460c      	mov	r4, r1
 800de6c:	b10a      	cbz	r2, 800de72 <_printf_common+0x26>
 800de6e:	3301      	adds	r3, #1
 800de70:	6033      	str	r3, [r6, #0]
 800de72:	6823      	ldr	r3, [r4, #0]
 800de74:	0699      	lsls	r1, r3, #26
 800de76:	bf42      	ittt	mi
 800de78:	6833      	ldrmi	r3, [r6, #0]
 800de7a:	3302      	addmi	r3, #2
 800de7c:	6033      	strmi	r3, [r6, #0]
 800de7e:	6825      	ldr	r5, [r4, #0]
 800de80:	f015 0506 	ands.w	r5, r5, #6
 800de84:	d106      	bne.n	800de94 <_printf_common+0x48>
 800de86:	f104 0a19 	add.w	sl, r4, #25
 800de8a:	68e3      	ldr	r3, [r4, #12]
 800de8c:	6832      	ldr	r2, [r6, #0]
 800de8e:	1a9b      	subs	r3, r3, r2
 800de90:	42ab      	cmp	r3, r5
 800de92:	dc26      	bgt.n	800dee2 <_printf_common+0x96>
 800de94:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800de98:	1e13      	subs	r3, r2, #0
 800de9a:	6822      	ldr	r2, [r4, #0]
 800de9c:	bf18      	it	ne
 800de9e:	2301      	movne	r3, #1
 800dea0:	0692      	lsls	r2, r2, #26
 800dea2:	d42b      	bmi.n	800defc <_printf_common+0xb0>
 800dea4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800dea8:	4649      	mov	r1, r9
 800deaa:	4638      	mov	r0, r7
 800deac:	47c0      	blx	r8
 800deae:	3001      	adds	r0, #1
 800deb0:	d01e      	beq.n	800def0 <_printf_common+0xa4>
 800deb2:	6823      	ldr	r3, [r4, #0]
 800deb4:	68e5      	ldr	r5, [r4, #12]
 800deb6:	6832      	ldr	r2, [r6, #0]
 800deb8:	f003 0306 	and.w	r3, r3, #6
 800debc:	2b04      	cmp	r3, #4
 800debe:	bf08      	it	eq
 800dec0:	1aad      	subeq	r5, r5, r2
 800dec2:	68a3      	ldr	r3, [r4, #8]
 800dec4:	6922      	ldr	r2, [r4, #16]
 800dec6:	bf0c      	ite	eq
 800dec8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800decc:	2500      	movne	r5, #0
 800dece:	4293      	cmp	r3, r2
 800ded0:	bfc4      	itt	gt
 800ded2:	1a9b      	subgt	r3, r3, r2
 800ded4:	18ed      	addgt	r5, r5, r3
 800ded6:	2600      	movs	r6, #0
 800ded8:	341a      	adds	r4, #26
 800deda:	42b5      	cmp	r5, r6
 800dedc:	d11a      	bne.n	800df14 <_printf_common+0xc8>
 800dede:	2000      	movs	r0, #0
 800dee0:	e008      	b.n	800def4 <_printf_common+0xa8>
 800dee2:	2301      	movs	r3, #1
 800dee4:	4652      	mov	r2, sl
 800dee6:	4649      	mov	r1, r9
 800dee8:	4638      	mov	r0, r7
 800deea:	47c0      	blx	r8
 800deec:	3001      	adds	r0, #1
 800deee:	d103      	bne.n	800def8 <_printf_common+0xac>
 800def0:	f04f 30ff 	mov.w	r0, #4294967295
 800def4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800def8:	3501      	adds	r5, #1
 800defa:	e7c6      	b.n	800de8a <_printf_common+0x3e>
 800defc:	18e1      	adds	r1, r4, r3
 800defe:	1c5a      	adds	r2, r3, #1
 800df00:	2030      	movs	r0, #48	; 0x30
 800df02:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800df06:	4422      	add	r2, r4
 800df08:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800df0c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800df10:	3302      	adds	r3, #2
 800df12:	e7c7      	b.n	800dea4 <_printf_common+0x58>
 800df14:	2301      	movs	r3, #1
 800df16:	4622      	mov	r2, r4
 800df18:	4649      	mov	r1, r9
 800df1a:	4638      	mov	r0, r7
 800df1c:	47c0      	blx	r8
 800df1e:	3001      	adds	r0, #1
 800df20:	d0e6      	beq.n	800def0 <_printf_common+0xa4>
 800df22:	3601      	adds	r6, #1
 800df24:	e7d9      	b.n	800deda <_printf_common+0x8e>
	...

0800df28 <_printf_i>:
 800df28:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800df2c:	7e0f      	ldrb	r7, [r1, #24]
 800df2e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800df30:	2f78      	cmp	r7, #120	; 0x78
 800df32:	4691      	mov	r9, r2
 800df34:	4680      	mov	r8, r0
 800df36:	460c      	mov	r4, r1
 800df38:	469a      	mov	sl, r3
 800df3a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800df3e:	d807      	bhi.n	800df50 <_printf_i+0x28>
 800df40:	2f62      	cmp	r7, #98	; 0x62
 800df42:	d80a      	bhi.n	800df5a <_printf_i+0x32>
 800df44:	2f00      	cmp	r7, #0
 800df46:	f000 80d8 	beq.w	800e0fa <_printf_i+0x1d2>
 800df4a:	2f58      	cmp	r7, #88	; 0x58
 800df4c:	f000 80a3 	beq.w	800e096 <_printf_i+0x16e>
 800df50:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800df54:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800df58:	e03a      	b.n	800dfd0 <_printf_i+0xa8>
 800df5a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800df5e:	2b15      	cmp	r3, #21
 800df60:	d8f6      	bhi.n	800df50 <_printf_i+0x28>
 800df62:	a101      	add	r1, pc, #4	; (adr r1, 800df68 <_printf_i+0x40>)
 800df64:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800df68:	0800dfc1 	.word	0x0800dfc1
 800df6c:	0800dfd5 	.word	0x0800dfd5
 800df70:	0800df51 	.word	0x0800df51
 800df74:	0800df51 	.word	0x0800df51
 800df78:	0800df51 	.word	0x0800df51
 800df7c:	0800df51 	.word	0x0800df51
 800df80:	0800dfd5 	.word	0x0800dfd5
 800df84:	0800df51 	.word	0x0800df51
 800df88:	0800df51 	.word	0x0800df51
 800df8c:	0800df51 	.word	0x0800df51
 800df90:	0800df51 	.word	0x0800df51
 800df94:	0800e0e1 	.word	0x0800e0e1
 800df98:	0800e005 	.word	0x0800e005
 800df9c:	0800e0c3 	.word	0x0800e0c3
 800dfa0:	0800df51 	.word	0x0800df51
 800dfa4:	0800df51 	.word	0x0800df51
 800dfa8:	0800e103 	.word	0x0800e103
 800dfac:	0800df51 	.word	0x0800df51
 800dfb0:	0800e005 	.word	0x0800e005
 800dfb4:	0800df51 	.word	0x0800df51
 800dfb8:	0800df51 	.word	0x0800df51
 800dfbc:	0800e0cb 	.word	0x0800e0cb
 800dfc0:	682b      	ldr	r3, [r5, #0]
 800dfc2:	1d1a      	adds	r2, r3, #4
 800dfc4:	681b      	ldr	r3, [r3, #0]
 800dfc6:	602a      	str	r2, [r5, #0]
 800dfc8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800dfcc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800dfd0:	2301      	movs	r3, #1
 800dfd2:	e0a3      	b.n	800e11c <_printf_i+0x1f4>
 800dfd4:	6820      	ldr	r0, [r4, #0]
 800dfd6:	6829      	ldr	r1, [r5, #0]
 800dfd8:	0606      	lsls	r6, r0, #24
 800dfda:	f101 0304 	add.w	r3, r1, #4
 800dfde:	d50a      	bpl.n	800dff6 <_printf_i+0xce>
 800dfe0:	680e      	ldr	r6, [r1, #0]
 800dfe2:	602b      	str	r3, [r5, #0]
 800dfe4:	2e00      	cmp	r6, #0
 800dfe6:	da03      	bge.n	800dff0 <_printf_i+0xc8>
 800dfe8:	232d      	movs	r3, #45	; 0x2d
 800dfea:	4276      	negs	r6, r6
 800dfec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800dff0:	485e      	ldr	r0, [pc, #376]	; (800e16c <_printf_i+0x244>)
 800dff2:	230a      	movs	r3, #10
 800dff4:	e019      	b.n	800e02a <_printf_i+0x102>
 800dff6:	680e      	ldr	r6, [r1, #0]
 800dff8:	602b      	str	r3, [r5, #0]
 800dffa:	f010 0f40 	tst.w	r0, #64	; 0x40
 800dffe:	bf18      	it	ne
 800e000:	b236      	sxthne	r6, r6
 800e002:	e7ef      	b.n	800dfe4 <_printf_i+0xbc>
 800e004:	682b      	ldr	r3, [r5, #0]
 800e006:	6820      	ldr	r0, [r4, #0]
 800e008:	1d19      	adds	r1, r3, #4
 800e00a:	6029      	str	r1, [r5, #0]
 800e00c:	0601      	lsls	r1, r0, #24
 800e00e:	d501      	bpl.n	800e014 <_printf_i+0xec>
 800e010:	681e      	ldr	r6, [r3, #0]
 800e012:	e002      	b.n	800e01a <_printf_i+0xf2>
 800e014:	0646      	lsls	r6, r0, #25
 800e016:	d5fb      	bpl.n	800e010 <_printf_i+0xe8>
 800e018:	881e      	ldrh	r6, [r3, #0]
 800e01a:	4854      	ldr	r0, [pc, #336]	; (800e16c <_printf_i+0x244>)
 800e01c:	2f6f      	cmp	r7, #111	; 0x6f
 800e01e:	bf0c      	ite	eq
 800e020:	2308      	moveq	r3, #8
 800e022:	230a      	movne	r3, #10
 800e024:	2100      	movs	r1, #0
 800e026:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800e02a:	6865      	ldr	r5, [r4, #4]
 800e02c:	60a5      	str	r5, [r4, #8]
 800e02e:	2d00      	cmp	r5, #0
 800e030:	bfa2      	ittt	ge
 800e032:	6821      	ldrge	r1, [r4, #0]
 800e034:	f021 0104 	bicge.w	r1, r1, #4
 800e038:	6021      	strge	r1, [r4, #0]
 800e03a:	b90e      	cbnz	r6, 800e040 <_printf_i+0x118>
 800e03c:	2d00      	cmp	r5, #0
 800e03e:	d04d      	beq.n	800e0dc <_printf_i+0x1b4>
 800e040:	4615      	mov	r5, r2
 800e042:	fbb6 f1f3 	udiv	r1, r6, r3
 800e046:	fb03 6711 	mls	r7, r3, r1, r6
 800e04a:	5dc7      	ldrb	r7, [r0, r7]
 800e04c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800e050:	4637      	mov	r7, r6
 800e052:	42bb      	cmp	r3, r7
 800e054:	460e      	mov	r6, r1
 800e056:	d9f4      	bls.n	800e042 <_printf_i+0x11a>
 800e058:	2b08      	cmp	r3, #8
 800e05a:	d10b      	bne.n	800e074 <_printf_i+0x14c>
 800e05c:	6823      	ldr	r3, [r4, #0]
 800e05e:	07de      	lsls	r6, r3, #31
 800e060:	d508      	bpl.n	800e074 <_printf_i+0x14c>
 800e062:	6923      	ldr	r3, [r4, #16]
 800e064:	6861      	ldr	r1, [r4, #4]
 800e066:	4299      	cmp	r1, r3
 800e068:	bfde      	ittt	le
 800e06a:	2330      	movle	r3, #48	; 0x30
 800e06c:	f805 3c01 	strble.w	r3, [r5, #-1]
 800e070:	f105 35ff 	addle.w	r5, r5, #4294967295
 800e074:	1b52      	subs	r2, r2, r5
 800e076:	6122      	str	r2, [r4, #16]
 800e078:	f8cd a000 	str.w	sl, [sp]
 800e07c:	464b      	mov	r3, r9
 800e07e:	aa03      	add	r2, sp, #12
 800e080:	4621      	mov	r1, r4
 800e082:	4640      	mov	r0, r8
 800e084:	f7ff fee2 	bl	800de4c <_printf_common>
 800e088:	3001      	adds	r0, #1
 800e08a:	d14c      	bne.n	800e126 <_printf_i+0x1fe>
 800e08c:	f04f 30ff 	mov.w	r0, #4294967295
 800e090:	b004      	add	sp, #16
 800e092:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e096:	4835      	ldr	r0, [pc, #212]	; (800e16c <_printf_i+0x244>)
 800e098:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800e09c:	6829      	ldr	r1, [r5, #0]
 800e09e:	6823      	ldr	r3, [r4, #0]
 800e0a0:	f851 6b04 	ldr.w	r6, [r1], #4
 800e0a4:	6029      	str	r1, [r5, #0]
 800e0a6:	061d      	lsls	r5, r3, #24
 800e0a8:	d514      	bpl.n	800e0d4 <_printf_i+0x1ac>
 800e0aa:	07df      	lsls	r7, r3, #31
 800e0ac:	bf44      	itt	mi
 800e0ae:	f043 0320 	orrmi.w	r3, r3, #32
 800e0b2:	6023      	strmi	r3, [r4, #0]
 800e0b4:	b91e      	cbnz	r6, 800e0be <_printf_i+0x196>
 800e0b6:	6823      	ldr	r3, [r4, #0]
 800e0b8:	f023 0320 	bic.w	r3, r3, #32
 800e0bc:	6023      	str	r3, [r4, #0]
 800e0be:	2310      	movs	r3, #16
 800e0c0:	e7b0      	b.n	800e024 <_printf_i+0xfc>
 800e0c2:	6823      	ldr	r3, [r4, #0]
 800e0c4:	f043 0320 	orr.w	r3, r3, #32
 800e0c8:	6023      	str	r3, [r4, #0]
 800e0ca:	2378      	movs	r3, #120	; 0x78
 800e0cc:	4828      	ldr	r0, [pc, #160]	; (800e170 <_printf_i+0x248>)
 800e0ce:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800e0d2:	e7e3      	b.n	800e09c <_printf_i+0x174>
 800e0d4:	0659      	lsls	r1, r3, #25
 800e0d6:	bf48      	it	mi
 800e0d8:	b2b6      	uxthmi	r6, r6
 800e0da:	e7e6      	b.n	800e0aa <_printf_i+0x182>
 800e0dc:	4615      	mov	r5, r2
 800e0de:	e7bb      	b.n	800e058 <_printf_i+0x130>
 800e0e0:	682b      	ldr	r3, [r5, #0]
 800e0e2:	6826      	ldr	r6, [r4, #0]
 800e0e4:	6961      	ldr	r1, [r4, #20]
 800e0e6:	1d18      	adds	r0, r3, #4
 800e0e8:	6028      	str	r0, [r5, #0]
 800e0ea:	0635      	lsls	r5, r6, #24
 800e0ec:	681b      	ldr	r3, [r3, #0]
 800e0ee:	d501      	bpl.n	800e0f4 <_printf_i+0x1cc>
 800e0f0:	6019      	str	r1, [r3, #0]
 800e0f2:	e002      	b.n	800e0fa <_printf_i+0x1d2>
 800e0f4:	0670      	lsls	r0, r6, #25
 800e0f6:	d5fb      	bpl.n	800e0f0 <_printf_i+0x1c8>
 800e0f8:	8019      	strh	r1, [r3, #0]
 800e0fa:	2300      	movs	r3, #0
 800e0fc:	6123      	str	r3, [r4, #16]
 800e0fe:	4615      	mov	r5, r2
 800e100:	e7ba      	b.n	800e078 <_printf_i+0x150>
 800e102:	682b      	ldr	r3, [r5, #0]
 800e104:	1d1a      	adds	r2, r3, #4
 800e106:	602a      	str	r2, [r5, #0]
 800e108:	681d      	ldr	r5, [r3, #0]
 800e10a:	6862      	ldr	r2, [r4, #4]
 800e10c:	2100      	movs	r1, #0
 800e10e:	4628      	mov	r0, r5
 800e110:	f7f2 f876 	bl	8000200 <memchr>
 800e114:	b108      	cbz	r0, 800e11a <_printf_i+0x1f2>
 800e116:	1b40      	subs	r0, r0, r5
 800e118:	6060      	str	r0, [r4, #4]
 800e11a:	6863      	ldr	r3, [r4, #4]
 800e11c:	6123      	str	r3, [r4, #16]
 800e11e:	2300      	movs	r3, #0
 800e120:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e124:	e7a8      	b.n	800e078 <_printf_i+0x150>
 800e126:	6923      	ldr	r3, [r4, #16]
 800e128:	462a      	mov	r2, r5
 800e12a:	4649      	mov	r1, r9
 800e12c:	4640      	mov	r0, r8
 800e12e:	47d0      	blx	sl
 800e130:	3001      	adds	r0, #1
 800e132:	d0ab      	beq.n	800e08c <_printf_i+0x164>
 800e134:	6823      	ldr	r3, [r4, #0]
 800e136:	079b      	lsls	r3, r3, #30
 800e138:	d413      	bmi.n	800e162 <_printf_i+0x23a>
 800e13a:	68e0      	ldr	r0, [r4, #12]
 800e13c:	9b03      	ldr	r3, [sp, #12]
 800e13e:	4298      	cmp	r0, r3
 800e140:	bfb8      	it	lt
 800e142:	4618      	movlt	r0, r3
 800e144:	e7a4      	b.n	800e090 <_printf_i+0x168>
 800e146:	2301      	movs	r3, #1
 800e148:	4632      	mov	r2, r6
 800e14a:	4649      	mov	r1, r9
 800e14c:	4640      	mov	r0, r8
 800e14e:	47d0      	blx	sl
 800e150:	3001      	adds	r0, #1
 800e152:	d09b      	beq.n	800e08c <_printf_i+0x164>
 800e154:	3501      	adds	r5, #1
 800e156:	68e3      	ldr	r3, [r4, #12]
 800e158:	9903      	ldr	r1, [sp, #12]
 800e15a:	1a5b      	subs	r3, r3, r1
 800e15c:	42ab      	cmp	r3, r5
 800e15e:	dcf2      	bgt.n	800e146 <_printf_i+0x21e>
 800e160:	e7eb      	b.n	800e13a <_printf_i+0x212>
 800e162:	2500      	movs	r5, #0
 800e164:	f104 0619 	add.w	r6, r4, #25
 800e168:	e7f5      	b.n	800e156 <_printf_i+0x22e>
 800e16a:	bf00      	nop
 800e16c:	08010d66 	.word	0x08010d66
 800e170:	08010d77 	.word	0x08010d77

0800e174 <_sbrk_r>:
 800e174:	b538      	push	{r3, r4, r5, lr}
 800e176:	4d06      	ldr	r5, [pc, #24]	; (800e190 <_sbrk_r+0x1c>)
 800e178:	2300      	movs	r3, #0
 800e17a:	4604      	mov	r4, r0
 800e17c:	4608      	mov	r0, r1
 800e17e:	602b      	str	r3, [r5, #0]
 800e180:	f002 f9ee 	bl	8010560 <_sbrk>
 800e184:	1c43      	adds	r3, r0, #1
 800e186:	d102      	bne.n	800e18e <_sbrk_r+0x1a>
 800e188:	682b      	ldr	r3, [r5, #0]
 800e18a:	b103      	cbz	r3, 800e18e <_sbrk_r+0x1a>
 800e18c:	6023      	str	r3, [r4, #0]
 800e18e:	bd38      	pop	{r3, r4, r5, pc}
 800e190:	20008200 	.word	0x20008200

0800e194 <siprintf>:
 800e194:	b40e      	push	{r1, r2, r3}
 800e196:	b500      	push	{lr}
 800e198:	b09c      	sub	sp, #112	; 0x70
 800e19a:	ab1d      	add	r3, sp, #116	; 0x74
 800e19c:	9002      	str	r0, [sp, #8]
 800e19e:	9006      	str	r0, [sp, #24]
 800e1a0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800e1a4:	4809      	ldr	r0, [pc, #36]	; (800e1cc <siprintf+0x38>)
 800e1a6:	9107      	str	r1, [sp, #28]
 800e1a8:	9104      	str	r1, [sp, #16]
 800e1aa:	4909      	ldr	r1, [pc, #36]	; (800e1d0 <siprintf+0x3c>)
 800e1ac:	f853 2b04 	ldr.w	r2, [r3], #4
 800e1b0:	9105      	str	r1, [sp, #20]
 800e1b2:	6800      	ldr	r0, [r0, #0]
 800e1b4:	9301      	str	r3, [sp, #4]
 800e1b6:	a902      	add	r1, sp, #8
 800e1b8:	f001 fbc0 	bl	800f93c <_svfiprintf_r>
 800e1bc:	9b02      	ldr	r3, [sp, #8]
 800e1be:	2200      	movs	r2, #0
 800e1c0:	701a      	strb	r2, [r3, #0]
 800e1c2:	b01c      	add	sp, #112	; 0x70
 800e1c4:	f85d eb04 	ldr.w	lr, [sp], #4
 800e1c8:	b003      	add	sp, #12
 800e1ca:	4770      	bx	lr
 800e1cc:	2000001c 	.word	0x2000001c
 800e1d0:	ffff0208 	.word	0xffff0208

0800e1d4 <_vsniprintf_r>:
 800e1d4:	b530      	push	{r4, r5, lr}
 800e1d6:	4614      	mov	r4, r2
 800e1d8:	2c00      	cmp	r4, #0
 800e1da:	b09b      	sub	sp, #108	; 0x6c
 800e1dc:	4605      	mov	r5, r0
 800e1de:	461a      	mov	r2, r3
 800e1e0:	da05      	bge.n	800e1ee <_vsniprintf_r+0x1a>
 800e1e2:	238b      	movs	r3, #139	; 0x8b
 800e1e4:	6003      	str	r3, [r0, #0]
 800e1e6:	f04f 30ff 	mov.w	r0, #4294967295
 800e1ea:	b01b      	add	sp, #108	; 0x6c
 800e1ec:	bd30      	pop	{r4, r5, pc}
 800e1ee:	f44f 7302 	mov.w	r3, #520	; 0x208
 800e1f2:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e1f6:	bf14      	ite	ne
 800e1f8:	f104 33ff 	addne.w	r3, r4, #4294967295
 800e1fc:	4623      	moveq	r3, r4
 800e1fe:	9302      	str	r3, [sp, #8]
 800e200:	9305      	str	r3, [sp, #20]
 800e202:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e206:	9100      	str	r1, [sp, #0]
 800e208:	9104      	str	r1, [sp, #16]
 800e20a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e20e:	4669      	mov	r1, sp
 800e210:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800e212:	f001 fb93 	bl	800f93c <_svfiprintf_r>
 800e216:	1c43      	adds	r3, r0, #1
 800e218:	bfbc      	itt	lt
 800e21a:	238b      	movlt	r3, #139	; 0x8b
 800e21c:	602b      	strlt	r3, [r5, #0]
 800e21e:	2c00      	cmp	r4, #0
 800e220:	d0e3      	beq.n	800e1ea <_vsniprintf_r+0x16>
 800e222:	9b00      	ldr	r3, [sp, #0]
 800e224:	2200      	movs	r2, #0
 800e226:	701a      	strb	r2, [r3, #0]
 800e228:	e7df      	b.n	800e1ea <_vsniprintf_r+0x16>
	...

0800e22c <vsniprintf>:
 800e22c:	b507      	push	{r0, r1, r2, lr}
 800e22e:	9300      	str	r3, [sp, #0]
 800e230:	4613      	mov	r3, r2
 800e232:	460a      	mov	r2, r1
 800e234:	4601      	mov	r1, r0
 800e236:	4803      	ldr	r0, [pc, #12]	; (800e244 <vsniprintf+0x18>)
 800e238:	6800      	ldr	r0, [r0, #0]
 800e23a:	f7ff ffcb 	bl	800e1d4 <_vsniprintf_r>
 800e23e:	b003      	add	sp, #12
 800e240:	f85d fb04 	ldr.w	pc, [sp], #4
 800e244:	2000001c 	.word	0x2000001c

0800e248 <quorem>:
 800e248:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e24c:	6903      	ldr	r3, [r0, #16]
 800e24e:	690c      	ldr	r4, [r1, #16]
 800e250:	42a3      	cmp	r3, r4
 800e252:	4607      	mov	r7, r0
 800e254:	f2c0 8081 	blt.w	800e35a <quorem+0x112>
 800e258:	3c01      	subs	r4, #1
 800e25a:	f101 0814 	add.w	r8, r1, #20
 800e25e:	f100 0514 	add.w	r5, r0, #20
 800e262:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800e266:	9301      	str	r3, [sp, #4]
 800e268:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800e26c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800e270:	3301      	adds	r3, #1
 800e272:	429a      	cmp	r2, r3
 800e274:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800e278:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800e27c:	fbb2 f6f3 	udiv	r6, r2, r3
 800e280:	d331      	bcc.n	800e2e6 <quorem+0x9e>
 800e282:	f04f 0e00 	mov.w	lr, #0
 800e286:	4640      	mov	r0, r8
 800e288:	46ac      	mov	ip, r5
 800e28a:	46f2      	mov	sl, lr
 800e28c:	f850 2b04 	ldr.w	r2, [r0], #4
 800e290:	b293      	uxth	r3, r2
 800e292:	fb06 e303 	mla	r3, r6, r3, lr
 800e296:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800e29a:	b29b      	uxth	r3, r3
 800e29c:	ebaa 0303 	sub.w	r3, sl, r3
 800e2a0:	f8dc a000 	ldr.w	sl, [ip]
 800e2a4:	0c12      	lsrs	r2, r2, #16
 800e2a6:	fa13 f38a 	uxtah	r3, r3, sl
 800e2aa:	fb06 e202 	mla	r2, r6, r2, lr
 800e2ae:	9300      	str	r3, [sp, #0]
 800e2b0:	9b00      	ldr	r3, [sp, #0]
 800e2b2:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800e2b6:	b292      	uxth	r2, r2
 800e2b8:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800e2bc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800e2c0:	f8bd 3000 	ldrh.w	r3, [sp]
 800e2c4:	4581      	cmp	r9, r0
 800e2c6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800e2ca:	f84c 3b04 	str.w	r3, [ip], #4
 800e2ce:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800e2d2:	d2db      	bcs.n	800e28c <quorem+0x44>
 800e2d4:	f855 300b 	ldr.w	r3, [r5, fp]
 800e2d8:	b92b      	cbnz	r3, 800e2e6 <quorem+0x9e>
 800e2da:	9b01      	ldr	r3, [sp, #4]
 800e2dc:	3b04      	subs	r3, #4
 800e2de:	429d      	cmp	r5, r3
 800e2e0:	461a      	mov	r2, r3
 800e2e2:	d32e      	bcc.n	800e342 <quorem+0xfa>
 800e2e4:	613c      	str	r4, [r7, #16]
 800e2e6:	4638      	mov	r0, r7
 800e2e8:	f001 f9b4 	bl	800f654 <__mcmp>
 800e2ec:	2800      	cmp	r0, #0
 800e2ee:	db24      	blt.n	800e33a <quorem+0xf2>
 800e2f0:	3601      	adds	r6, #1
 800e2f2:	4628      	mov	r0, r5
 800e2f4:	f04f 0c00 	mov.w	ip, #0
 800e2f8:	f858 2b04 	ldr.w	r2, [r8], #4
 800e2fc:	f8d0 e000 	ldr.w	lr, [r0]
 800e300:	b293      	uxth	r3, r2
 800e302:	ebac 0303 	sub.w	r3, ip, r3
 800e306:	0c12      	lsrs	r2, r2, #16
 800e308:	fa13 f38e 	uxtah	r3, r3, lr
 800e30c:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800e310:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800e314:	b29b      	uxth	r3, r3
 800e316:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800e31a:	45c1      	cmp	r9, r8
 800e31c:	f840 3b04 	str.w	r3, [r0], #4
 800e320:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800e324:	d2e8      	bcs.n	800e2f8 <quorem+0xb0>
 800e326:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800e32a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800e32e:	b922      	cbnz	r2, 800e33a <quorem+0xf2>
 800e330:	3b04      	subs	r3, #4
 800e332:	429d      	cmp	r5, r3
 800e334:	461a      	mov	r2, r3
 800e336:	d30a      	bcc.n	800e34e <quorem+0x106>
 800e338:	613c      	str	r4, [r7, #16]
 800e33a:	4630      	mov	r0, r6
 800e33c:	b003      	add	sp, #12
 800e33e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e342:	6812      	ldr	r2, [r2, #0]
 800e344:	3b04      	subs	r3, #4
 800e346:	2a00      	cmp	r2, #0
 800e348:	d1cc      	bne.n	800e2e4 <quorem+0x9c>
 800e34a:	3c01      	subs	r4, #1
 800e34c:	e7c7      	b.n	800e2de <quorem+0x96>
 800e34e:	6812      	ldr	r2, [r2, #0]
 800e350:	3b04      	subs	r3, #4
 800e352:	2a00      	cmp	r2, #0
 800e354:	d1f0      	bne.n	800e338 <quorem+0xf0>
 800e356:	3c01      	subs	r4, #1
 800e358:	e7eb      	b.n	800e332 <quorem+0xea>
 800e35a:	2000      	movs	r0, #0
 800e35c:	e7ee      	b.n	800e33c <quorem+0xf4>
	...

0800e360 <_dtoa_r>:
 800e360:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e364:	ed2d 8b04 	vpush	{d8-d9}
 800e368:	ec57 6b10 	vmov	r6, r7, d0
 800e36c:	b093      	sub	sp, #76	; 0x4c
 800e36e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800e370:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800e374:	9106      	str	r1, [sp, #24]
 800e376:	ee10 aa10 	vmov	sl, s0
 800e37a:	4604      	mov	r4, r0
 800e37c:	9209      	str	r2, [sp, #36]	; 0x24
 800e37e:	930c      	str	r3, [sp, #48]	; 0x30
 800e380:	46bb      	mov	fp, r7
 800e382:	b975      	cbnz	r5, 800e3a2 <_dtoa_r+0x42>
 800e384:	2010      	movs	r0, #16
 800e386:	f7ff f985 	bl	800d694 <malloc>
 800e38a:	4602      	mov	r2, r0
 800e38c:	6260      	str	r0, [r4, #36]	; 0x24
 800e38e:	b920      	cbnz	r0, 800e39a <_dtoa_r+0x3a>
 800e390:	4ba7      	ldr	r3, [pc, #668]	; (800e630 <_dtoa_r+0x2d0>)
 800e392:	21ea      	movs	r1, #234	; 0xea
 800e394:	48a7      	ldr	r0, [pc, #668]	; (800e634 <_dtoa_r+0x2d4>)
 800e396:	f001 fe41 	bl	801001c <__assert_func>
 800e39a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800e39e:	6005      	str	r5, [r0, #0]
 800e3a0:	60c5      	str	r5, [r0, #12]
 800e3a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e3a4:	6819      	ldr	r1, [r3, #0]
 800e3a6:	b151      	cbz	r1, 800e3be <_dtoa_r+0x5e>
 800e3a8:	685a      	ldr	r2, [r3, #4]
 800e3aa:	604a      	str	r2, [r1, #4]
 800e3ac:	2301      	movs	r3, #1
 800e3ae:	4093      	lsls	r3, r2
 800e3b0:	608b      	str	r3, [r1, #8]
 800e3b2:	4620      	mov	r0, r4
 800e3b4:	f000 ff0c 	bl	800f1d0 <_Bfree>
 800e3b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e3ba:	2200      	movs	r2, #0
 800e3bc:	601a      	str	r2, [r3, #0]
 800e3be:	1e3b      	subs	r3, r7, #0
 800e3c0:	bfaa      	itet	ge
 800e3c2:	2300      	movge	r3, #0
 800e3c4:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 800e3c8:	f8c8 3000 	strge.w	r3, [r8]
 800e3cc:	4b9a      	ldr	r3, [pc, #616]	; (800e638 <_dtoa_r+0x2d8>)
 800e3ce:	bfbc      	itt	lt
 800e3d0:	2201      	movlt	r2, #1
 800e3d2:	f8c8 2000 	strlt.w	r2, [r8]
 800e3d6:	ea33 030b 	bics.w	r3, r3, fp
 800e3da:	d11b      	bne.n	800e414 <_dtoa_r+0xb4>
 800e3dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800e3de:	f242 730f 	movw	r3, #9999	; 0x270f
 800e3e2:	6013      	str	r3, [r2, #0]
 800e3e4:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800e3e8:	4333      	orrs	r3, r6
 800e3ea:	f000 8592 	beq.w	800ef12 <_dtoa_r+0xbb2>
 800e3ee:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e3f0:	b963      	cbnz	r3, 800e40c <_dtoa_r+0xac>
 800e3f2:	4b92      	ldr	r3, [pc, #584]	; (800e63c <_dtoa_r+0x2dc>)
 800e3f4:	e022      	b.n	800e43c <_dtoa_r+0xdc>
 800e3f6:	4b92      	ldr	r3, [pc, #584]	; (800e640 <_dtoa_r+0x2e0>)
 800e3f8:	9301      	str	r3, [sp, #4]
 800e3fa:	3308      	adds	r3, #8
 800e3fc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800e3fe:	6013      	str	r3, [r2, #0]
 800e400:	9801      	ldr	r0, [sp, #4]
 800e402:	b013      	add	sp, #76	; 0x4c
 800e404:	ecbd 8b04 	vpop	{d8-d9}
 800e408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e40c:	4b8b      	ldr	r3, [pc, #556]	; (800e63c <_dtoa_r+0x2dc>)
 800e40e:	9301      	str	r3, [sp, #4]
 800e410:	3303      	adds	r3, #3
 800e412:	e7f3      	b.n	800e3fc <_dtoa_r+0x9c>
 800e414:	2200      	movs	r2, #0
 800e416:	2300      	movs	r3, #0
 800e418:	4650      	mov	r0, sl
 800e41a:	4659      	mov	r1, fp
 800e41c:	f7f2 fb64 	bl	8000ae8 <__aeabi_dcmpeq>
 800e420:	ec4b ab19 	vmov	d9, sl, fp
 800e424:	4680      	mov	r8, r0
 800e426:	b158      	cbz	r0, 800e440 <_dtoa_r+0xe0>
 800e428:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800e42a:	2301      	movs	r3, #1
 800e42c:	6013      	str	r3, [r2, #0]
 800e42e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800e430:	2b00      	cmp	r3, #0
 800e432:	f000 856b 	beq.w	800ef0c <_dtoa_r+0xbac>
 800e436:	4883      	ldr	r0, [pc, #524]	; (800e644 <_dtoa_r+0x2e4>)
 800e438:	6018      	str	r0, [r3, #0]
 800e43a:	1e43      	subs	r3, r0, #1
 800e43c:	9301      	str	r3, [sp, #4]
 800e43e:	e7df      	b.n	800e400 <_dtoa_r+0xa0>
 800e440:	ec4b ab10 	vmov	d0, sl, fp
 800e444:	aa10      	add	r2, sp, #64	; 0x40
 800e446:	a911      	add	r1, sp, #68	; 0x44
 800e448:	4620      	mov	r0, r4
 800e44a:	f001 f9a9 	bl	800f7a0 <__d2b>
 800e44e:	f3cb 550a 	ubfx	r5, fp, #20, #11
 800e452:	ee08 0a10 	vmov	s16, r0
 800e456:	2d00      	cmp	r5, #0
 800e458:	f000 8084 	beq.w	800e564 <_dtoa_r+0x204>
 800e45c:	ee19 3a90 	vmov	r3, s19
 800e460:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800e464:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 800e468:	4656      	mov	r6, sl
 800e46a:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 800e46e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800e472:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 800e476:	4b74      	ldr	r3, [pc, #464]	; (800e648 <_dtoa_r+0x2e8>)
 800e478:	2200      	movs	r2, #0
 800e47a:	4630      	mov	r0, r6
 800e47c:	4639      	mov	r1, r7
 800e47e:	f7f1 ff13 	bl	80002a8 <__aeabi_dsub>
 800e482:	a365      	add	r3, pc, #404	; (adr r3, 800e618 <_dtoa_r+0x2b8>)
 800e484:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e488:	f7f2 f8c6 	bl	8000618 <__aeabi_dmul>
 800e48c:	a364      	add	r3, pc, #400	; (adr r3, 800e620 <_dtoa_r+0x2c0>)
 800e48e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e492:	f7f1 ff0b 	bl	80002ac <__adddf3>
 800e496:	4606      	mov	r6, r0
 800e498:	4628      	mov	r0, r5
 800e49a:	460f      	mov	r7, r1
 800e49c:	f7f2 f852 	bl	8000544 <__aeabi_i2d>
 800e4a0:	a361      	add	r3, pc, #388	; (adr r3, 800e628 <_dtoa_r+0x2c8>)
 800e4a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e4a6:	f7f2 f8b7 	bl	8000618 <__aeabi_dmul>
 800e4aa:	4602      	mov	r2, r0
 800e4ac:	460b      	mov	r3, r1
 800e4ae:	4630      	mov	r0, r6
 800e4b0:	4639      	mov	r1, r7
 800e4b2:	f7f1 fefb 	bl	80002ac <__adddf3>
 800e4b6:	4606      	mov	r6, r0
 800e4b8:	460f      	mov	r7, r1
 800e4ba:	f7f2 fb5d 	bl	8000b78 <__aeabi_d2iz>
 800e4be:	2200      	movs	r2, #0
 800e4c0:	9000      	str	r0, [sp, #0]
 800e4c2:	2300      	movs	r3, #0
 800e4c4:	4630      	mov	r0, r6
 800e4c6:	4639      	mov	r1, r7
 800e4c8:	f7f2 fb18 	bl	8000afc <__aeabi_dcmplt>
 800e4cc:	b150      	cbz	r0, 800e4e4 <_dtoa_r+0x184>
 800e4ce:	9800      	ldr	r0, [sp, #0]
 800e4d0:	f7f2 f838 	bl	8000544 <__aeabi_i2d>
 800e4d4:	4632      	mov	r2, r6
 800e4d6:	463b      	mov	r3, r7
 800e4d8:	f7f2 fb06 	bl	8000ae8 <__aeabi_dcmpeq>
 800e4dc:	b910      	cbnz	r0, 800e4e4 <_dtoa_r+0x184>
 800e4de:	9b00      	ldr	r3, [sp, #0]
 800e4e0:	3b01      	subs	r3, #1
 800e4e2:	9300      	str	r3, [sp, #0]
 800e4e4:	9b00      	ldr	r3, [sp, #0]
 800e4e6:	2b16      	cmp	r3, #22
 800e4e8:	d85a      	bhi.n	800e5a0 <_dtoa_r+0x240>
 800e4ea:	9a00      	ldr	r2, [sp, #0]
 800e4ec:	4b57      	ldr	r3, [pc, #348]	; (800e64c <_dtoa_r+0x2ec>)
 800e4ee:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e4f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e4f6:	ec51 0b19 	vmov	r0, r1, d9
 800e4fa:	f7f2 faff 	bl	8000afc <__aeabi_dcmplt>
 800e4fe:	2800      	cmp	r0, #0
 800e500:	d050      	beq.n	800e5a4 <_dtoa_r+0x244>
 800e502:	9b00      	ldr	r3, [sp, #0]
 800e504:	3b01      	subs	r3, #1
 800e506:	9300      	str	r3, [sp, #0]
 800e508:	2300      	movs	r3, #0
 800e50a:	930b      	str	r3, [sp, #44]	; 0x2c
 800e50c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e50e:	1b5d      	subs	r5, r3, r5
 800e510:	1e6b      	subs	r3, r5, #1
 800e512:	9305      	str	r3, [sp, #20]
 800e514:	bf45      	ittet	mi
 800e516:	f1c5 0301 	rsbmi	r3, r5, #1
 800e51a:	9304      	strmi	r3, [sp, #16]
 800e51c:	2300      	movpl	r3, #0
 800e51e:	2300      	movmi	r3, #0
 800e520:	bf4c      	ite	mi
 800e522:	9305      	strmi	r3, [sp, #20]
 800e524:	9304      	strpl	r3, [sp, #16]
 800e526:	9b00      	ldr	r3, [sp, #0]
 800e528:	2b00      	cmp	r3, #0
 800e52a:	db3d      	blt.n	800e5a8 <_dtoa_r+0x248>
 800e52c:	9b05      	ldr	r3, [sp, #20]
 800e52e:	9a00      	ldr	r2, [sp, #0]
 800e530:	920a      	str	r2, [sp, #40]	; 0x28
 800e532:	4413      	add	r3, r2
 800e534:	9305      	str	r3, [sp, #20]
 800e536:	2300      	movs	r3, #0
 800e538:	9307      	str	r3, [sp, #28]
 800e53a:	9b06      	ldr	r3, [sp, #24]
 800e53c:	2b09      	cmp	r3, #9
 800e53e:	f200 8089 	bhi.w	800e654 <_dtoa_r+0x2f4>
 800e542:	2b05      	cmp	r3, #5
 800e544:	bfc4      	itt	gt
 800e546:	3b04      	subgt	r3, #4
 800e548:	9306      	strgt	r3, [sp, #24]
 800e54a:	9b06      	ldr	r3, [sp, #24]
 800e54c:	f1a3 0302 	sub.w	r3, r3, #2
 800e550:	bfcc      	ite	gt
 800e552:	2500      	movgt	r5, #0
 800e554:	2501      	movle	r5, #1
 800e556:	2b03      	cmp	r3, #3
 800e558:	f200 8087 	bhi.w	800e66a <_dtoa_r+0x30a>
 800e55c:	e8df f003 	tbb	[pc, r3]
 800e560:	59383a2d 	.word	0x59383a2d
 800e564:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800e568:	441d      	add	r5, r3
 800e56a:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800e56e:	2b20      	cmp	r3, #32
 800e570:	bfc1      	itttt	gt
 800e572:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800e576:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 800e57a:	fa0b f303 	lslgt.w	r3, fp, r3
 800e57e:	fa26 f000 	lsrgt.w	r0, r6, r0
 800e582:	bfda      	itte	le
 800e584:	f1c3 0320 	rsble	r3, r3, #32
 800e588:	fa06 f003 	lslle.w	r0, r6, r3
 800e58c:	4318      	orrgt	r0, r3
 800e58e:	f7f1 ffc9 	bl	8000524 <__aeabi_ui2d>
 800e592:	2301      	movs	r3, #1
 800e594:	4606      	mov	r6, r0
 800e596:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 800e59a:	3d01      	subs	r5, #1
 800e59c:	930e      	str	r3, [sp, #56]	; 0x38
 800e59e:	e76a      	b.n	800e476 <_dtoa_r+0x116>
 800e5a0:	2301      	movs	r3, #1
 800e5a2:	e7b2      	b.n	800e50a <_dtoa_r+0x1aa>
 800e5a4:	900b      	str	r0, [sp, #44]	; 0x2c
 800e5a6:	e7b1      	b.n	800e50c <_dtoa_r+0x1ac>
 800e5a8:	9b04      	ldr	r3, [sp, #16]
 800e5aa:	9a00      	ldr	r2, [sp, #0]
 800e5ac:	1a9b      	subs	r3, r3, r2
 800e5ae:	9304      	str	r3, [sp, #16]
 800e5b0:	4253      	negs	r3, r2
 800e5b2:	9307      	str	r3, [sp, #28]
 800e5b4:	2300      	movs	r3, #0
 800e5b6:	930a      	str	r3, [sp, #40]	; 0x28
 800e5b8:	e7bf      	b.n	800e53a <_dtoa_r+0x1da>
 800e5ba:	2300      	movs	r3, #0
 800e5bc:	9308      	str	r3, [sp, #32]
 800e5be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e5c0:	2b00      	cmp	r3, #0
 800e5c2:	dc55      	bgt.n	800e670 <_dtoa_r+0x310>
 800e5c4:	2301      	movs	r3, #1
 800e5c6:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e5ca:	461a      	mov	r2, r3
 800e5cc:	9209      	str	r2, [sp, #36]	; 0x24
 800e5ce:	e00c      	b.n	800e5ea <_dtoa_r+0x28a>
 800e5d0:	2301      	movs	r3, #1
 800e5d2:	e7f3      	b.n	800e5bc <_dtoa_r+0x25c>
 800e5d4:	2300      	movs	r3, #0
 800e5d6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e5d8:	9308      	str	r3, [sp, #32]
 800e5da:	9b00      	ldr	r3, [sp, #0]
 800e5dc:	4413      	add	r3, r2
 800e5de:	9302      	str	r3, [sp, #8]
 800e5e0:	3301      	adds	r3, #1
 800e5e2:	2b01      	cmp	r3, #1
 800e5e4:	9303      	str	r3, [sp, #12]
 800e5e6:	bfb8      	it	lt
 800e5e8:	2301      	movlt	r3, #1
 800e5ea:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800e5ec:	2200      	movs	r2, #0
 800e5ee:	6042      	str	r2, [r0, #4]
 800e5f0:	2204      	movs	r2, #4
 800e5f2:	f102 0614 	add.w	r6, r2, #20
 800e5f6:	429e      	cmp	r6, r3
 800e5f8:	6841      	ldr	r1, [r0, #4]
 800e5fa:	d93d      	bls.n	800e678 <_dtoa_r+0x318>
 800e5fc:	4620      	mov	r0, r4
 800e5fe:	f000 fda7 	bl	800f150 <_Balloc>
 800e602:	9001      	str	r0, [sp, #4]
 800e604:	2800      	cmp	r0, #0
 800e606:	d13b      	bne.n	800e680 <_dtoa_r+0x320>
 800e608:	4b11      	ldr	r3, [pc, #68]	; (800e650 <_dtoa_r+0x2f0>)
 800e60a:	4602      	mov	r2, r0
 800e60c:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800e610:	e6c0      	b.n	800e394 <_dtoa_r+0x34>
 800e612:	2301      	movs	r3, #1
 800e614:	e7df      	b.n	800e5d6 <_dtoa_r+0x276>
 800e616:	bf00      	nop
 800e618:	636f4361 	.word	0x636f4361
 800e61c:	3fd287a7 	.word	0x3fd287a7
 800e620:	8b60c8b3 	.word	0x8b60c8b3
 800e624:	3fc68a28 	.word	0x3fc68a28
 800e628:	509f79fb 	.word	0x509f79fb
 800e62c:	3fd34413 	.word	0x3fd34413
 800e630:	08010d95 	.word	0x08010d95
 800e634:	08010dac 	.word	0x08010dac
 800e638:	7ff00000 	.word	0x7ff00000
 800e63c:	08010d91 	.word	0x08010d91
 800e640:	08010d88 	.word	0x08010d88
 800e644:	08010d65 	.word	0x08010d65
 800e648:	3ff80000 	.word	0x3ff80000
 800e64c:	08010f00 	.word	0x08010f00
 800e650:	08010e07 	.word	0x08010e07
 800e654:	2501      	movs	r5, #1
 800e656:	2300      	movs	r3, #0
 800e658:	9306      	str	r3, [sp, #24]
 800e65a:	9508      	str	r5, [sp, #32]
 800e65c:	f04f 33ff 	mov.w	r3, #4294967295
 800e660:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e664:	2200      	movs	r2, #0
 800e666:	2312      	movs	r3, #18
 800e668:	e7b0      	b.n	800e5cc <_dtoa_r+0x26c>
 800e66a:	2301      	movs	r3, #1
 800e66c:	9308      	str	r3, [sp, #32]
 800e66e:	e7f5      	b.n	800e65c <_dtoa_r+0x2fc>
 800e670:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e672:	e9cd 3302 	strd	r3, r3, [sp, #8]
 800e676:	e7b8      	b.n	800e5ea <_dtoa_r+0x28a>
 800e678:	3101      	adds	r1, #1
 800e67a:	6041      	str	r1, [r0, #4]
 800e67c:	0052      	lsls	r2, r2, #1
 800e67e:	e7b8      	b.n	800e5f2 <_dtoa_r+0x292>
 800e680:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e682:	9a01      	ldr	r2, [sp, #4]
 800e684:	601a      	str	r2, [r3, #0]
 800e686:	9b03      	ldr	r3, [sp, #12]
 800e688:	2b0e      	cmp	r3, #14
 800e68a:	f200 809d 	bhi.w	800e7c8 <_dtoa_r+0x468>
 800e68e:	2d00      	cmp	r5, #0
 800e690:	f000 809a 	beq.w	800e7c8 <_dtoa_r+0x468>
 800e694:	9b00      	ldr	r3, [sp, #0]
 800e696:	2b00      	cmp	r3, #0
 800e698:	dd32      	ble.n	800e700 <_dtoa_r+0x3a0>
 800e69a:	4ab7      	ldr	r2, [pc, #732]	; (800e978 <_dtoa_r+0x618>)
 800e69c:	f003 030f 	and.w	r3, r3, #15
 800e6a0:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e6a4:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e6a8:	9b00      	ldr	r3, [sp, #0]
 800e6aa:	05d8      	lsls	r0, r3, #23
 800e6ac:	ea4f 1723 	mov.w	r7, r3, asr #4
 800e6b0:	d516      	bpl.n	800e6e0 <_dtoa_r+0x380>
 800e6b2:	4bb2      	ldr	r3, [pc, #712]	; (800e97c <_dtoa_r+0x61c>)
 800e6b4:	ec51 0b19 	vmov	r0, r1, d9
 800e6b8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800e6bc:	f7f2 f8d6 	bl	800086c <__aeabi_ddiv>
 800e6c0:	f007 070f 	and.w	r7, r7, #15
 800e6c4:	4682      	mov	sl, r0
 800e6c6:	468b      	mov	fp, r1
 800e6c8:	2503      	movs	r5, #3
 800e6ca:	4eac      	ldr	r6, [pc, #688]	; (800e97c <_dtoa_r+0x61c>)
 800e6cc:	b957      	cbnz	r7, 800e6e4 <_dtoa_r+0x384>
 800e6ce:	4642      	mov	r2, r8
 800e6d0:	464b      	mov	r3, r9
 800e6d2:	4650      	mov	r0, sl
 800e6d4:	4659      	mov	r1, fp
 800e6d6:	f7f2 f8c9 	bl	800086c <__aeabi_ddiv>
 800e6da:	4682      	mov	sl, r0
 800e6dc:	468b      	mov	fp, r1
 800e6de:	e028      	b.n	800e732 <_dtoa_r+0x3d2>
 800e6e0:	2502      	movs	r5, #2
 800e6e2:	e7f2      	b.n	800e6ca <_dtoa_r+0x36a>
 800e6e4:	07f9      	lsls	r1, r7, #31
 800e6e6:	d508      	bpl.n	800e6fa <_dtoa_r+0x39a>
 800e6e8:	4640      	mov	r0, r8
 800e6ea:	4649      	mov	r1, r9
 800e6ec:	e9d6 2300 	ldrd	r2, r3, [r6]
 800e6f0:	f7f1 ff92 	bl	8000618 <__aeabi_dmul>
 800e6f4:	3501      	adds	r5, #1
 800e6f6:	4680      	mov	r8, r0
 800e6f8:	4689      	mov	r9, r1
 800e6fa:	107f      	asrs	r7, r7, #1
 800e6fc:	3608      	adds	r6, #8
 800e6fe:	e7e5      	b.n	800e6cc <_dtoa_r+0x36c>
 800e700:	f000 809b 	beq.w	800e83a <_dtoa_r+0x4da>
 800e704:	9b00      	ldr	r3, [sp, #0]
 800e706:	4f9d      	ldr	r7, [pc, #628]	; (800e97c <_dtoa_r+0x61c>)
 800e708:	425e      	negs	r6, r3
 800e70a:	4b9b      	ldr	r3, [pc, #620]	; (800e978 <_dtoa_r+0x618>)
 800e70c:	f006 020f 	and.w	r2, r6, #15
 800e710:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e714:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e718:	ec51 0b19 	vmov	r0, r1, d9
 800e71c:	f7f1 ff7c 	bl	8000618 <__aeabi_dmul>
 800e720:	1136      	asrs	r6, r6, #4
 800e722:	4682      	mov	sl, r0
 800e724:	468b      	mov	fp, r1
 800e726:	2300      	movs	r3, #0
 800e728:	2502      	movs	r5, #2
 800e72a:	2e00      	cmp	r6, #0
 800e72c:	d17a      	bne.n	800e824 <_dtoa_r+0x4c4>
 800e72e:	2b00      	cmp	r3, #0
 800e730:	d1d3      	bne.n	800e6da <_dtoa_r+0x37a>
 800e732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e734:	2b00      	cmp	r3, #0
 800e736:	f000 8082 	beq.w	800e83e <_dtoa_r+0x4de>
 800e73a:	4b91      	ldr	r3, [pc, #580]	; (800e980 <_dtoa_r+0x620>)
 800e73c:	2200      	movs	r2, #0
 800e73e:	4650      	mov	r0, sl
 800e740:	4659      	mov	r1, fp
 800e742:	f7f2 f9db 	bl	8000afc <__aeabi_dcmplt>
 800e746:	2800      	cmp	r0, #0
 800e748:	d079      	beq.n	800e83e <_dtoa_r+0x4de>
 800e74a:	9b03      	ldr	r3, [sp, #12]
 800e74c:	2b00      	cmp	r3, #0
 800e74e:	d076      	beq.n	800e83e <_dtoa_r+0x4de>
 800e750:	9b02      	ldr	r3, [sp, #8]
 800e752:	2b00      	cmp	r3, #0
 800e754:	dd36      	ble.n	800e7c4 <_dtoa_r+0x464>
 800e756:	9b00      	ldr	r3, [sp, #0]
 800e758:	4650      	mov	r0, sl
 800e75a:	4659      	mov	r1, fp
 800e75c:	1e5f      	subs	r7, r3, #1
 800e75e:	2200      	movs	r2, #0
 800e760:	4b88      	ldr	r3, [pc, #544]	; (800e984 <_dtoa_r+0x624>)
 800e762:	f7f1 ff59 	bl	8000618 <__aeabi_dmul>
 800e766:	9e02      	ldr	r6, [sp, #8]
 800e768:	4682      	mov	sl, r0
 800e76a:	468b      	mov	fp, r1
 800e76c:	3501      	adds	r5, #1
 800e76e:	4628      	mov	r0, r5
 800e770:	f7f1 fee8 	bl	8000544 <__aeabi_i2d>
 800e774:	4652      	mov	r2, sl
 800e776:	465b      	mov	r3, fp
 800e778:	f7f1 ff4e 	bl	8000618 <__aeabi_dmul>
 800e77c:	4b82      	ldr	r3, [pc, #520]	; (800e988 <_dtoa_r+0x628>)
 800e77e:	2200      	movs	r2, #0
 800e780:	f7f1 fd94 	bl	80002ac <__adddf3>
 800e784:	46d0      	mov	r8, sl
 800e786:	46d9      	mov	r9, fp
 800e788:	4682      	mov	sl, r0
 800e78a:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 800e78e:	2e00      	cmp	r6, #0
 800e790:	d158      	bne.n	800e844 <_dtoa_r+0x4e4>
 800e792:	4b7e      	ldr	r3, [pc, #504]	; (800e98c <_dtoa_r+0x62c>)
 800e794:	2200      	movs	r2, #0
 800e796:	4640      	mov	r0, r8
 800e798:	4649      	mov	r1, r9
 800e79a:	f7f1 fd85 	bl	80002a8 <__aeabi_dsub>
 800e79e:	4652      	mov	r2, sl
 800e7a0:	465b      	mov	r3, fp
 800e7a2:	4680      	mov	r8, r0
 800e7a4:	4689      	mov	r9, r1
 800e7a6:	f7f2 f9c7 	bl	8000b38 <__aeabi_dcmpgt>
 800e7aa:	2800      	cmp	r0, #0
 800e7ac:	f040 8295 	bne.w	800ecda <_dtoa_r+0x97a>
 800e7b0:	4652      	mov	r2, sl
 800e7b2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800e7b6:	4640      	mov	r0, r8
 800e7b8:	4649      	mov	r1, r9
 800e7ba:	f7f2 f99f 	bl	8000afc <__aeabi_dcmplt>
 800e7be:	2800      	cmp	r0, #0
 800e7c0:	f040 8289 	bne.w	800ecd6 <_dtoa_r+0x976>
 800e7c4:	ec5b ab19 	vmov	sl, fp, d9
 800e7c8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e7ca:	2b00      	cmp	r3, #0
 800e7cc:	f2c0 8148 	blt.w	800ea60 <_dtoa_r+0x700>
 800e7d0:	9a00      	ldr	r2, [sp, #0]
 800e7d2:	2a0e      	cmp	r2, #14
 800e7d4:	f300 8144 	bgt.w	800ea60 <_dtoa_r+0x700>
 800e7d8:	4b67      	ldr	r3, [pc, #412]	; (800e978 <_dtoa_r+0x618>)
 800e7da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e7de:	e9d3 8900 	ldrd	r8, r9, [r3]
 800e7e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e7e4:	2b00      	cmp	r3, #0
 800e7e6:	f280 80d5 	bge.w	800e994 <_dtoa_r+0x634>
 800e7ea:	9b03      	ldr	r3, [sp, #12]
 800e7ec:	2b00      	cmp	r3, #0
 800e7ee:	f300 80d1 	bgt.w	800e994 <_dtoa_r+0x634>
 800e7f2:	f040 826f 	bne.w	800ecd4 <_dtoa_r+0x974>
 800e7f6:	4b65      	ldr	r3, [pc, #404]	; (800e98c <_dtoa_r+0x62c>)
 800e7f8:	2200      	movs	r2, #0
 800e7fa:	4640      	mov	r0, r8
 800e7fc:	4649      	mov	r1, r9
 800e7fe:	f7f1 ff0b 	bl	8000618 <__aeabi_dmul>
 800e802:	4652      	mov	r2, sl
 800e804:	465b      	mov	r3, fp
 800e806:	f7f2 f98d 	bl	8000b24 <__aeabi_dcmpge>
 800e80a:	9e03      	ldr	r6, [sp, #12]
 800e80c:	4637      	mov	r7, r6
 800e80e:	2800      	cmp	r0, #0
 800e810:	f040 8245 	bne.w	800ec9e <_dtoa_r+0x93e>
 800e814:	9d01      	ldr	r5, [sp, #4]
 800e816:	2331      	movs	r3, #49	; 0x31
 800e818:	f805 3b01 	strb.w	r3, [r5], #1
 800e81c:	9b00      	ldr	r3, [sp, #0]
 800e81e:	3301      	adds	r3, #1
 800e820:	9300      	str	r3, [sp, #0]
 800e822:	e240      	b.n	800eca6 <_dtoa_r+0x946>
 800e824:	07f2      	lsls	r2, r6, #31
 800e826:	d505      	bpl.n	800e834 <_dtoa_r+0x4d4>
 800e828:	e9d7 2300 	ldrd	r2, r3, [r7]
 800e82c:	f7f1 fef4 	bl	8000618 <__aeabi_dmul>
 800e830:	3501      	adds	r5, #1
 800e832:	2301      	movs	r3, #1
 800e834:	1076      	asrs	r6, r6, #1
 800e836:	3708      	adds	r7, #8
 800e838:	e777      	b.n	800e72a <_dtoa_r+0x3ca>
 800e83a:	2502      	movs	r5, #2
 800e83c:	e779      	b.n	800e732 <_dtoa_r+0x3d2>
 800e83e:	9f00      	ldr	r7, [sp, #0]
 800e840:	9e03      	ldr	r6, [sp, #12]
 800e842:	e794      	b.n	800e76e <_dtoa_r+0x40e>
 800e844:	9901      	ldr	r1, [sp, #4]
 800e846:	4b4c      	ldr	r3, [pc, #304]	; (800e978 <_dtoa_r+0x618>)
 800e848:	4431      	add	r1, r6
 800e84a:	910d      	str	r1, [sp, #52]	; 0x34
 800e84c:	9908      	ldr	r1, [sp, #32]
 800e84e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800e852:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800e856:	2900      	cmp	r1, #0
 800e858:	d043      	beq.n	800e8e2 <_dtoa_r+0x582>
 800e85a:	494d      	ldr	r1, [pc, #308]	; (800e990 <_dtoa_r+0x630>)
 800e85c:	2000      	movs	r0, #0
 800e85e:	f7f2 f805 	bl	800086c <__aeabi_ddiv>
 800e862:	4652      	mov	r2, sl
 800e864:	465b      	mov	r3, fp
 800e866:	f7f1 fd1f 	bl	80002a8 <__aeabi_dsub>
 800e86a:	9d01      	ldr	r5, [sp, #4]
 800e86c:	4682      	mov	sl, r0
 800e86e:	468b      	mov	fp, r1
 800e870:	4649      	mov	r1, r9
 800e872:	4640      	mov	r0, r8
 800e874:	f7f2 f980 	bl	8000b78 <__aeabi_d2iz>
 800e878:	4606      	mov	r6, r0
 800e87a:	f7f1 fe63 	bl	8000544 <__aeabi_i2d>
 800e87e:	4602      	mov	r2, r0
 800e880:	460b      	mov	r3, r1
 800e882:	4640      	mov	r0, r8
 800e884:	4649      	mov	r1, r9
 800e886:	f7f1 fd0f 	bl	80002a8 <__aeabi_dsub>
 800e88a:	3630      	adds	r6, #48	; 0x30
 800e88c:	f805 6b01 	strb.w	r6, [r5], #1
 800e890:	4652      	mov	r2, sl
 800e892:	465b      	mov	r3, fp
 800e894:	4680      	mov	r8, r0
 800e896:	4689      	mov	r9, r1
 800e898:	f7f2 f930 	bl	8000afc <__aeabi_dcmplt>
 800e89c:	2800      	cmp	r0, #0
 800e89e:	d163      	bne.n	800e968 <_dtoa_r+0x608>
 800e8a0:	4642      	mov	r2, r8
 800e8a2:	464b      	mov	r3, r9
 800e8a4:	4936      	ldr	r1, [pc, #216]	; (800e980 <_dtoa_r+0x620>)
 800e8a6:	2000      	movs	r0, #0
 800e8a8:	f7f1 fcfe 	bl	80002a8 <__aeabi_dsub>
 800e8ac:	4652      	mov	r2, sl
 800e8ae:	465b      	mov	r3, fp
 800e8b0:	f7f2 f924 	bl	8000afc <__aeabi_dcmplt>
 800e8b4:	2800      	cmp	r0, #0
 800e8b6:	f040 80b5 	bne.w	800ea24 <_dtoa_r+0x6c4>
 800e8ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e8bc:	429d      	cmp	r5, r3
 800e8be:	d081      	beq.n	800e7c4 <_dtoa_r+0x464>
 800e8c0:	4b30      	ldr	r3, [pc, #192]	; (800e984 <_dtoa_r+0x624>)
 800e8c2:	2200      	movs	r2, #0
 800e8c4:	4650      	mov	r0, sl
 800e8c6:	4659      	mov	r1, fp
 800e8c8:	f7f1 fea6 	bl	8000618 <__aeabi_dmul>
 800e8cc:	4b2d      	ldr	r3, [pc, #180]	; (800e984 <_dtoa_r+0x624>)
 800e8ce:	4682      	mov	sl, r0
 800e8d0:	468b      	mov	fp, r1
 800e8d2:	4640      	mov	r0, r8
 800e8d4:	4649      	mov	r1, r9
 800e8d6:	2200      	movs	r2, #0
 800e8d8:	f7f1 fe9e 	bl	8000618 <__aeabi_dmul>
 800e8dc:	4680      	mov	r8, r0
 800e8de:	4689      	mov	r9, r1
 800e8e0:	e7c6      	b.n	800e870 <_dtoa_r+0x510>
 800e8e2:	4650      	mov	r0, sl
 800e8e4:	4659      	mov	r1, fp
 800e8e6:	f7f1 fe97 	bl	8000618 <__aeabi_dmul>
 800e8ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e8ec:	9d01      	ldr	r5, [sp, #4]
 800e8ee:	930f      	str	r3, [sp, #60]	; 0x3c
 800e8f0:	4682      	mov	sl, r0
 800e8f2:	468b      	mov	fp, r1
 800e8f4:	4649      	mov	r1, r9
 800e8f6:	4640      	mov	r0, r8
 800e8f8:	f7f2 f93e 	bl	8000b78 <__aeabi_d2iz>
 800e8fc:	4606      	mov	r6, r0
 800e8fe:	f7f1 fe21 	bl	8000544 <__aeabi_i2d>
 800e902:	3630      	adds	r6, #48	; 0x30
 800e904:	4602      	mov	r2, r0
 800e906:	460b      	mov	r3, r1
 800e908:	4640      	mov	r0, r8
 800e90a:	4649      	mov	r1, r9
 800e90c:	f7f1 fccc 	bl	80002a8 <__aeabi_dsub>
 800e910:	f805 6b01 	strb.w	r6, [r5], #1
 800e914:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e916:	429d      	cmp	r5, r3
 800e918:	4680      	mov	r8, r0
 800e91a:	4689      	mov	r9, r1
 800e91c:	f04f 0200 	mov.w	r2, #0
 800e920:	d124      	bne.n	800e96c <_dtoa_r+0x60c>
 800e922:	4b1b      	ldr	r3, [pc, #108]	; (800e990 <_dtoa_r+0x630>)
 800e924:	4650      	mov	r0, sl
 800e926:	4659      	mov	r1, fp
 800e928:	f7f1 fcc0 	bl	80002ac <__adddf3>
 800e92c:	4602      	mov	r2, r0
 800e92e:	460b      	mov	r3, r1
 800e930:	4640      	mov	r0, r8
 800e932:	4649      	mov	r1, r9
 800e934:	f7f2 f900 	bl	8000b38 <__aeabi_dcmpgt>
 800e938:	2800      	cmp	r0, #0
 800e93a:	d173      	bne.n	800ea24 <_dtoa_r+0x6c4>
 800e93c:	4652      	mov	r2, sl
 800e93e:	465b      	mov	r3, fp
 800e940:	4913      	ldr	r1, [pc, #76]	; (800e990 <_dtoa_r+0x630>)
 800e942:	2000      	movs	r0, #0
 800e944:	f7f1 fcb0 	bl	80002a8 <__aeabi_dsub>
 800e948:	4602      	mov	r2, r0
 800e94a:	460b      	mov	r3, r1
 800e94c:	4640      	mov	r0, r8
 800e94e:	4649      	mov	r1, r9
 800e950:	f7f2 f8d4 	bl	8000afc <__aeabi_dcmplt>
 800e954:	2800      	cmp	r0, #0
 800e956:	f43f af35 	beq.w	800e7c4 <_dtoa_r+0x464>
 800e95a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800e95c:	1e6b      	subs	r3, r5, #1
 800e95e:	930f      	str	r3, [sp, #60]	; 0x3c
 800e960:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800e964:	2b30      	cmp	r3, #48	; 0x30
 800e966:	d0f8      	beq.n	800e95a <_dtoa_r+0x5fa>
 800e968:	9700      	str	r7, [sp, #0]
 800e96a:	e049      	b.n	800ea00 <_dtoa_r+0x6a0>
 800e96c:	4b05      	ldr	r3, [pc, #20]	; (800e984 <_dtoa_r+0x624>)
 800e96e:	f7f1 fe53 	bl	8000618 <__aeabi_dmul>
 800e972:	4680      	mov	r8, r0
 800e974:	4689      	mov	r9, r1
 800e976:	e7bd      	b.n	800e8f4 <_dtoa_r+0x594>
 800e978:	08010f00 	.word	0x08010f00
 800e97c:	08010ed8 	.word	0x08010ed8
 800e980:	3ff00000 	.word	0x3ff00000
 800e984:	40240000 	.word	0x40240000
 800e988:	401c0000 	.word	0x401c0000
 800e98c:	40140000 	.word	0x40140000
 800e990:	3fe00000 	.word	0x3fe00000
 800e994:	9d01      	ldr	r5, [sp, #4]
 800e996:	4656      	mov	r6, sl
 800e998:	465f      	mov	r7, fp
 800e99a:	4642      	mov	r2, r8
 800e99c:	464b      	mov	r3, r9
 800e99e:	4630      	mov	r0, r6
 800e9a0:	4639      	mov	r1, r7
 800e9a2:	f7f1 ff63 	bl	800086c <__aeabi_ddiv>
 800e9a6:	f7f2 f8e7 	bl	8000b78 <__aeabi_d2iz>
 800e9aa:	4682      	mov	sl, r0
 800e9ac:	f7f1 fdca 	bl	8000544 <__aeabi_i2d>
 800e9b0:	4642      	mov	r2, r8
 800e9b2:	464b      	mov	r3, r9
 800e9b4:	f7f1 fe30 	bl	8000618 <__aeabi_dmul>
 800e9b8:	4602      	mov	r2, r0
 800e9ba:	460b      	mov	r3, r1
 800e9bc:	4630      	mov	r0, r6
 800e9be:	4639      	mov	r1, r7
 800e9c0:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 800e9c4:	f7f1 fc70 	bl	80002a8 <__aeabi_dsub>
 800e9c8:	f805 6b01 	strb.w	r6, [r5], #1
 800e9cc:	9e01      	ldr	r6, [sp, #4]
 800e9ce:	9f03      	ldr	r7, [sp, #12]
 800e9d0:	1bae      	subs	r6, r5, r6
 800e9d2:	42b7      	cmp	r7, r6
 800e9d4:	4602      	mov	r2, r0
 800e9d6:	460b      	mov	r3, r1
 800e9d8:	d135      	bne.n	800ea46 <_dtoa_r+0x6e6>
 800e9da:	f7f1 fc67 	bl	80002ac <__adddf3>
 800e9de:	4642      	mov	r2, r8
 800e9e0:	464b      	mov	r3, r9
 800e9e2:	4606      	mov	r6, r0
 800e9e4:	460f      	mov	r7, r1
 800e9e6:	f7f2 f8a7 	bl	8000b38 <__aeabi_dcmpgt>
 800e9ea:	b9d0      	cbnz	r0, 800ea22 <_dtoa_r+0x6c2>
 800e9ec:	4642      	mov	r2, r8
 800e9ee:	464b      	mov	r3, r9
 800e9f0:	4630      	mov	r0, r6
 800e9f2:	4639      	mov	r1, r7
 800e9f4:	f7f2 f878 	bl	8000ae8 <__aeabi_dcmpeq>
 800e9f8:	b110      	cbz	r0, 800ea00 <_dtoa_r+0x6a0>
 800e9fa:	f01a 0f01 	tst.w	sl, #1
 800e9fe:	d110      	bne.n	800ea22 <_dtoa_r+0x6c2>
 800ea00:	4620      	mov	r0, r4
 800ea02:	ee18 1a10 	vmov	r1, s16
 800ea06:	f000 fbe3 	bl	800f1d0 <_Bfree>
 800ea0a:	2300      	movs	r3, #0
 800ea0c:	9800      	ldr	r0, [sp, #0]
 800ea0e:	702b      	strb	r3, [r5, #0]
 800ea10:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ea12:	3001      	adds	r0, #1
 800ea14:	6018      	str	r0, [r3, #0]
 800ea16:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ea18:	2b00      	cmp	r3, #0
 800ea1a:	f43f acf1 	beq.w	800e400 <_dtoa_r+0xa0>
 800ea1e:	601d      	str	r5, [r3, #0]
 800ea20:	e4ee      	b.n	800e400 <_dtoa_r+0xa0>
 800ea22:	9f00      	ldr	r7, [sp, #0]
 800ea24:	462b      	mov	r3, r5
 800ea26:	461d      	mov	r5, r3
 800ea28:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ea2c:	2a39      	cmp	r2, #57	; 0x39
 800ea2e:	d106      	bne.n	800ea3e <_dtoa_r+0x6de>
 800ea30:	9a01      	ldr	r2, [sp, #4]
 800ea32:	429a      	cmp	r2, r3
 800ea34:	d1f7      	bne.n	800ea26 <_dtoa_r+0x6c6>
 800ea36:	9901      	ldr	r1, [sp, #4]
 800ea38:	2230      	movs	r2, #48	; 0x30
 800ea3a:	3701      	adds	r7, #1
 800ea3c:	700a      	strb	r2, [r1, #0]
 800ea3e:	781a      	ldrb	r2, [r3, #0]
 800ea40:	3201      	adds	r2, #1
 800ea42:	701a      	strb	r2, [r3, #0]
 800ea44:	e790      	b.n	800e968 <_dtoa_r+0x608>
 800ea46:	4ba6      	ldr	r3, [pc, #664]	; (800ece0 <_dtoa_r+0x980>)
 800ea48:	2200      	movs	r2, #0
 800ea4a:	f7f1 fde5 	bl	8000618 <__aeabi_dmul>
 800ea4e:	2200      	movs	r2, #0
 800ea50:	2300      	movs	r3, #0
 800ea52:	4606      	mov	r6, r0
 800ea54:	460f      	mov	r7, r1
 800ea56:	f7f2 f847 	bl	8000ae8 <__aeabi_dcmpeq>
 800ea5a:	2800      	cmp	r0, #0
 800ea5c:	d09d      	beq.n	800e99a <_dtoa_r+0x63a>
 800ea5e:	e7cf      	b.n	800ea00 <_dtoa_r+0x6a0>
 800ea60:	9a08      	ldr	r2, [sp, #32]
 800ea62:	2a00      	cmp	r2, #0
 800ea64:	f000 80d7 	beq.w	800ec16 <_dtoa_r+0x8b6>
 800ea68:	9a06      	ldr	r2, [sp, #24]
 800ea6a:	2a01      	cmp	r2, #1
 800ea6c:	f300 80ba 	bgt.w	800ebe4 <_dtoa_r+0x884>
 800ea70:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ea72:	2a00      	cmp	r2, #0
 800ea74:	f000 80b2 	beq.w	800ebdc <_dtoa_r+0x87c>
 800ea78:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800ea7c:	9e07      	ldr	r6, [sp, #28]
 800ea7e:	9d04      	ldr	r5, [sp, #16]
 800ea80:	9a04      	ldr	r2, [sp, #16]
 800ea82:	441a      	add	r2, r3
 800ea84:	9204      	str	r2, [sp, #16]
 800ea86:	9a05      	ldr	r2, [sp, #20]
 800ea88:	2101      	movs	r1, #1
 800ea8a:	441a      	add	r2, r3
 800ea8c:	4620      	mov	r0, r4
 800ea8e:	9205      	str	r2, [sp, #20]
 800ea90:	f000 fc56 	bl	800f340 <__i2b>
 800ea94:	4607      	mov	r7, r0
 800ea96:	2d00      	cmp	r5, #0
 800ea98:	dd0c      	ble.n	800eab4 <_dtoa_r+0x754>
 800ea9a:	9b05      	ldr	r3, [sp, #20]
 800ea9c:	2b00      	cmp	r3, #0
 800ea9e:	dd09      	ble.n	800eab4 <_dtoa_r+0x754>
 800eaa0:	42ab      	cmp	r3, r5
 800eaa2:	9a04      	ldr	r2, [sp, #16]
 800eaa4:	bfa8      	it	ge
 800eaa6:	462b      	movge	r3, r5
 800eaa8:	1ad2      	subs	r2, r2, r3
 800eaaa:	9204      	str	r2, [sp, #16]
 800eaac:	9a05      	ldr	r2, [sp, #20]
 800eaae:	1aed      	subs	r5, r5, r3
 800eab0:	1ad3      	subs	r3, r2, r3
 800eab2:	9305      	str	r3, [sp, #20]
 800eab4:	9b07      	ldr	r3, [sp, #28]
 800eab6:	b31b      	cbz	r3, 800eb00 <_dtoa_r+0x7a0>
 800eab8:	9b08      	ldr	r3, [sp, #32]
 800eaba:	2b00      	cmp	r3, #0
 800eabc:	f000 80af 	beq.w	800ec1e <_dtoa_r+0x8be>
 800eac0:	2e00      	cmp	r6, #0
 800eac2:	dd13      	ble.n	800eaec <_dtoa_r+0x78c>
 800eac4:	4639      	mov	r1, r7
 800eac6:	4632      	mov	r2, r6
 800eac8:	4620      	mov	r0, r4
 800eaca:	f000 fcf9 	bl	800f4c0 <__pow5mult>
 800eace:	ee18 2a10 	vmov	r2, s16
 800ead2:	4601      	mov	r1, r0
 800ead4:	4607      	mov	r7, r0
 800ead6:	4620      	mov	r0, r4
 800ead8:	f000 fc48 	bl	800f36c <__multiply>
 800eadc:	ee18 1a10 	vmov	r1, s16
 800eae0:	4680      	mov	r8, r0
 800eae2:	4620      	mov	r0, r4
 800eae4:	f000 fb74 	bl	800f1d0 <_Bfree>
 800eae8:	ee08 8a10 	vmov	s16, r8
 800eaec:	9b07      	ldr	r3, [sp, #28]
 800eaee:	1b9a      	subs	r2, r3, r6
 800eaf0:	d006      	beq.n	800eb00 <_dtoa_r+0x7a0>
 800eaf2:	ee18 1a10 	vmov	r1, s16
 800eaf6:	4620      	mov	r0, r4
 800eaf8:	f000 fce2 	bl	800f4c0 <__pow5mult>
 800eafc:	ee08 0a10 	vmov	s16, r0
 800eb00:	2101      	movs	r1, #1
 800eb02:	4620      	mov	r0, r4
 800eb04:	f000 fc1c 	bl	800f340 <__i2b>
 800eb08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800eb0a:	2b00      	cmp	r3, #0
 800eb0c:	4606      	mov	r6, r0
 800eb0e:	f340 8088 	ble.w	800ec22 <_dtoa_r+0x8c2>
 800eb12:	461a      	mov	r2, r3
 800eb14:	4601      	mov	r1, r0
 800eb16:	4620      	mov	r0, r4
 800eb18:	f000 fcd2 	bl	800f4c0 <__pow5mult>
 800eb1c:	9b06      	ldr	r3, [sp, #24]
 800eb1e:	2b01      	cmp	r3, #1
 800eb20:	4606      	mov	r6, r0
 800eb22:	f340 8081 	ble.w	800ec28 <_dtoa_r+0x8c8>
 800eb26:	f04f 0800 	mov.w	r8, #0
 800eb2a:	6933      	ldr	r3, [r6, #16]
 800eb2c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800eb30:	6918      	ldr	r0, [r3, #16]
 800eb32:	f000 fbb5 	bl	800f2a0 <__hi0bits>
 800eb36:	f1c0 0020 	rsb	r0, r0, #32
 800eb3a:	9b05      	ldr	r3, [sp, #20]
 800eb3c:	4418      	add	r0, r3
 800eb3e:	f010 001f 	ands.w	r0, r0, #31
 800eb42:	f000 8092 	beq.w	800ec6a <_dtoa_r+0x90a>
 800eb46:	f1c0 0320 	rsb	r3, r0, #32
 800eb4a:	2b04      	cmp	r3, #4
 800eb4c:	f340 808a 	ble.w	800ec64 <_dtoa_r+0x904>
 800eb50:	f1c0 001c 	rsb	r0, r0, #28
 800eb54:	9b04      	ldr	r3, [sp, #16]
 800eb56:	4403      	add	r3, r0
 800eb58:	9304      	str	r3, [sp, #16]
 800eb5a:	9b05      	ldr	r3, [sp, #20]
 800eb5c:	4403      	add	r3, r0
 800eb5e:	4405      	add	r5, r0
 800eb60:	9305      	str	r3, [sp, #20]
 800eb62:	9b04      	ldr	r3, [sp, #16]
 800eb64:	2b00      	cmp	r3, #0
 800eb66:	dd07      	ble.n	800eb78 <_dtoa_r+0x818>
 800eb68:	ee18 1a10 	vmov	r1, s16
 800eb6c:	461a      	mov	r2, r3
 800eb6e:	4620      	mov	r0, r4
 800eb70:	f000 fd00 	bl	800f574 <__lshift>
 800eb74:	ee08 0a10 	vmov	s16, r0
 800eb78:	9b05      	ldr	r3, [sp, #20]
 800eb7a:	2b00      	cmp	r3, #0
 800eb7c:	dd05      	ble.n	800eb8a <_dtoa_r+0x82a>
 800eb7e:	4631      	mov	r1, r6
 800eb80:	461a      	mov	r2, r3
 800eb82:	4620      	mov	r0, r4
 800eb84:	f000 fcf6 	bl	800f574 <__lshift>
 800eb88:	4606      	mov	r6, r0
 800eb8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800eb8c:	2b00      	cmp	r3, #0
 800eb8e:	d06e      	beq.n	800ec6e <_dtoa_r+0x90e>
 800eb90:	ee18 0a10 	vmov	r0, s16
 800eb94:	4631      	mov	r1, r6
 800eb96:	f000 fd5d 	bl	800f654 <__mcmp>
 800eb9a:	2800      	cmp	r0, #0
 800eb9c:	da67      	bge.n	800ec6e <_dtoa_r+0x90e>
 800eb9e:	9b00      	ldr	r3, [sp, #0]
 800eba0:	3b01      	subs	r3, #1
 800eba2:	ee18 1a10 	vmov	r1, s16
 800eba6:	9300      	str	r3, [sp, #0]
 800eba8:	220a      	movs	r2, #10
 800ebaa:	2300      	movs	r3, #0
 800ebac:	4620      	mov	r0, r4
 800ebae:	f000 fb31 	bl	800f214 <__multadd>
 800ebb2:	9b08      	ldr	r3, [sp, #32]
 800ebb4:	ee08 0a10 	vmov	s16, r0
 800ebb8:	2b00      	cmp	r3, #0
 800ebba:	f000 81b1 	beq.w	800ef20 <_dtoa_r+0xbc0>
 800ebbe:	2300      	movs	r3, #0
 800ebc0:	4639      	mov	r1, r7
 800ebc2:	220a      	movs	r2, #10
 800ebc4:	4620      	mov	r0, r4
 800ebc6:	f000 fb25 	bl	800f214 <__multadd>
 800ebca:	9b02      	ldr	r3, [sp, #8]
 800ebcc:	2b00      	cmp	r3, #0
 800ebce:	4607      	mov	r7, r0
 800ebd0:	f300 808e 	bgt.w	800ecf0 <_dtoa_r+0x990>
 800ebd4:	9b06      	ldr	r3, [sp, #24]
 800ebd6:	2b02      	cmp	r3, #2
 800ebd8:	dc51      	bgt.n	800ec7e <_dtoa_r+0x91e>
 800ebda:	e089      	b.n	800ecf0 <_dtoa_r+0x990>
 800ebdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ebde:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800ebe2:	e74b      	b.n	800ea7c <_dtoa_r+0x71c>
 800ebe4:	9b03      	ldr	r3, [sp, #12]
 800ebe6:	1e5e      	subs	r6, r3, #1
 800ebe8:	9b07      	ldr	r3, [sp, #28]
 800ebea:	42b3      	cmp	r3, r6
 800ebec:	bfbf      	itttt	lt
 800ebee:	9b07      	ldrlt	r3, [sp, #28]
 800ebf0:	9607      	strlt	r6, [sp, #28]
 800ebf2:	1af2      	sublt	r2, r6, r3
 800ebf4:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 800ebf6:	bfb6      	itet	lt
 800ebf8:	189b      	addlt	r3, r3, r2
 800ebfa:	1b9e      	subge	r6, r3, r6
 800ebfc:	930a      	strlt	r3, [sp, #40]	; 0x28
 800ebfe:	9b03      	ldr	r3, [sp, #12]
 800ec00:	bfb8      	it	lt
 800ec02:	2600      	movlt	r6, #0
 800ec04:	2b00      	cmp	r3, #0
 800ec06:	bfb7      	itett	lt
 800ec08:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 800ec0c:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 800ec10:	1a9d      	sublt	r5, r3, r2
 800ec12:	2300      	movlt	r3, #0
 800ec14:	e734      	b.n	800ea80 <_dtoa_r+0x720>
 800ec16:	9e07      	ldr	r6, [sp, #28]
 800ec18:	9d04      	ldr	r5, [sp, #16]
 800ec1a:	9f08      	ldr	r7, [sp, #32]
 800ec1c:	e73b      	b.n	800ea96 <_dtoa_r+0x736>
 800ec1e:	9a07      	ldr	r2, [sp, #28]
 800ec20:	e767      	b.n	800eaf2 <_dtoa_r+0x792>
 800ec22:	9b06      	ldr	r3, [sp, #24]
 800ec24:	2b01      	cmp	r3, #1
 800ec26:	dc18      	bgt.n	800ec5a <_dtoa_r+0x8fa>
 800ec28:	f1ba 0f00 	cmp.w	sl, #0
 800ec2c:	d115      	bne.n	800ec5a <_dtoa_r+0x8fa>
 800ec2e:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800ec32:	b993      	cbnz	r3, 800ec5a <_dtoa_r+0x8fa>
 800ec34:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800ec38:	0d1b      	lsrs	r3, r3, #20
 800ec3a:	051b      	lsls	r3, r3, #20
 800ec3c:	b183      	cbz	r3, 800ec60 <_dtoa_r+0x900>
 800ec3e:	9b04      	ldr	r3, [sp, #16]
 800ec40:	3301      	adds	r3, #1
 800ec42:	9304      	str	r3, [sp, #16]
 800ec44:	9b05      	ldr	r3, [sp, #20]
 800ec46:	3301      	adds	r3, #1
 800ec48:	9305      	str	r3, [sp, #20]
 800ec4a:	f04f 0801 	mov.w	r8, #1
 800ec4e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800ec50:	2b00      	cmp	r3, #0
 800ec52:	f47f af6a 	bne.w	800eb2a <_dtoa_r+0x7ca>
 800ec56:	2001      	movs	r0, #1
 800ec58:	e76f      	b.n	800eb3a <_dtoa_r+0x7da>
 800ec5a:	f04f 0800 	mov.w	r8, #0
 800ec5e:	e7f6      	b.n	800ec4e <_dtoa_r+0x8ee>
 800ec60:	4698      	mov	r8, r3
 800ec62:	e7f4      	b.n	800ec4e <_dtoa_r+0x8ee>
 800ec64:	f43f af7d 	beq.w	800eb62 <_dtoa_r+0x802>
 800ec68:	4618      	mov	r0, r3
 800ec6a:	301c      	adds	r0, #28
 800ec6c:	e772      	b.n	800eb54 <_dtoa_r+0x7f4>
 800ec6e:	9b03      	ldr	r3, [sp, #12]
 800ec70:	2b00      	cmp	r3, #0
 800ec72:	dc37      	bgt.n	800ece4 <_dtoa_r+0x984>
 800ec74:	9b06      	ldr	r3, [sp, #24]
 800ec76:	2b02      	cmp	r3, #2
 800ec78:	dd34      	ble.n	800ece4 <_dtoa_r+0x984>
 800ec7a:	9b03      	ldr	r3, [sp, #12]
 800ec7c:	9302      	str	r3, [sp, #8]
 800ec7e:	9b02      	ldr	r3, [sp, #8]
 800ec80:	b96b      	cbnz	r3, 800ec9e <_dtoa_r+0x93e>
 800ec82:	4631      	mov	r1, r6
 800ec84:	2205      	movs	r2, #5
 800ec86:	4620      	mov	r0, r4
 800ec88:	f000 fac4 	bl	800f214 <__multadd>
 800ec8c:	4601      	mov	r1, r0
 800ec8e:	4606      	mov	r6, r0
 800ec90:	ee18 0a10 	vmov	r0, s16
 800ec94:	f000 fcde 	bl	800f654 <__mcmp>
 800ec98:	2800      	cmp	r0, #0
 800ec9a:	f73f adbb 	bgt.w	800e814 <_dtoa_r+0x4b4>
 800ec9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800eca0:	9d01      	ldr	r5, [sp, #4]
 800eca2:	43db      	mvns	r3, r3
 800eca4:	9300      	str	r3, [sp, #0]
 800eca6:	f04f 0800 	mov.w	r8, #0
 800ecaa:	4631      	mov	r1, r6
 800ecac:	4620      	mov	r0, r4
 800ecae:	f000 fa8f 	bl	800f1d0 <_Bfree>
 800ecb2:	2f00      	cmp	r7, #0
 800ecb4:	f43f aea4 	beq.w	800ea00 <_dtoa_r+0x6a0>
 800ecb8:	f1b8 0f00 	cmp.w	r8, #0
 800ecbc:	d005      	beq.n	800ecca <_dtoa_r+0x96a>
 800ecbe:	45b8      	cmp	r8, r7
 800ecc0:	d003      	beq.n	800ecca <_dtoa_r+0x96a>
 800ecc2:	4641      	mov	r1, r8
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	f000 fa83 	bl	800f1d0 <_Bfree>
 800ecca:	4639      	mov	r1, r7
 800eccc:	4620      	mov	r0, r4
 800ecce:	f000 fa7f 	bl	800f1d0 <_Bfree>
 800ecd2:	e695      	b.n	800ea00 <_dtoa_r+0x6a0>
 800ecd4:	2600      	movs	r6, #0
 800ecd6:	4637      	mov	r7, r6
 800ecd8:	e7e1      	b.n	800ec9e <_dtoa_r+0x93e>
 800ecda:	9700      	str	r7, [sp, #0]
 800ecdc:	4637      	mov	r7, r6
 800ecde:	e599      	b.n	800e814 <_dtoa_r+0x4b4>
 800ece0:	40240000 	.word	0x40240000
 800ece4:	9b08      	ldr	r3, [sp, #32]
 800ece6:	2b00      	cmp	r3, #0
 800ece8:	f000 80ca 	beq.w	800ee80 <_dtoa_r+0xb20>
 800ecec:	9b03      	ldr	r3, [sp, #12]
 800ecee:	9302      	str	r3, [sp, #8]
 800ecf0:	2d00      	cmp	r5, #0
 800ecf2:	dd05      	ble.n	800ed00 <_dtoa_r+0x9a0>
 800ecf4:	4639      	mov	r1, r7
 800ecf6:	462a      	mov	r2, r5
 800ecf8:	4620      	mov	r0, r4
 800ecfa:	f000 fc3b 	bl	800f574 <__lshift>
 800ecfe:	4607      	mov	r7, r0
 800ed00:	f1b8 0f00 	cmp.w	r8, #0
 800ed04:	d05b      	beq.n	800edbe <_dtoa_r+0xa5e>
 800ed06:	6879      	ldr	r1, [r7, #4]
 800ed08:	4620      	mov	r0, r4
 800ed0a:	f000 fa21 	bl	800f150 <_Balloc>
 800ed0e:	4605      	mov	r5, r0
 800ed10:	b928      	cbnz	r0, 800ed1e <_dtoa_r+0x9be>
 800ed12:	4b87      	ldr	r3, [pc, #540]	; (800ef30 <_dtoa_r+0xbd0>)
 800ed14:	4602      	mov	r2, r0
 800ed16:	f240 21ea 	movw	r1, #746	; 0x2ea
 800ed1a:	f7ff bb3b 	b.w	800e394 <_dtoa_r+0x34>
 800ed1e:	693a      	ldr	r2, [r7, #16]
 800ed20:	3202      	adds	r2, #2
 800ed22:	0092      	lsls	r2, r2, #2
 800ed24:	f107 010c 	add.w	r1, r7, #12
 800ed28:	300c      	adds	r0, #12
 800ed2a:	f7fe fcc3 	bl	800d6b4 <memcpy>
 800ed2e:	2201      	movs	r2, #1
 800ed30:	4629      	mov	r1, r5
 800ed32:	4620      	mov	r0, r4
 800ed34:	f000 fc1e 	bl	800f574 <__lshift>
 800ed38:	9b01      	ldr	r3, [sp, #4]
 800ed3a:	f103 0901 	add.w	r9, r3, #1
 800ed3e:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800ed42:	4413      	add	r3, r2
 800ed44:	9305      	str	r3, [sp, #20]
 800ed46:	f00a 0301 	and.w	r3, sl, #1
 800ed4a:	46b8      	mov	r8, r7
 800ed4c:	9304      	str	r3, [sp, #16]
 800ed4e:	4607      	mov	r7, r0
 800ed50:	4631      	mov	r1, r6
 800ed52:	ee18 0a10 	vmov	r0, s16
 800ed56:	f7ff fa77 	bl	800e248 <quorem>
 800ed5a:	4641      	mov	r1, r8
 800ed5c:	9002      	str	r0, [sp, #8]
 800ed5e:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800ed62:	ee18 0a10 	vmov	r0, s16
 800ed66:	f000 fc75 	bl	800f654 <__mcmp>
 800ed6a:	463a      	mov	r2, r7
 800ed6c:	9003      	str	r0, [sp, #12]
 800ed6e:	4631      	mov	r1, r6
 800ed70:	4620      	mov	r0, r4
 800ed72:	f000 fc8b 	bl	800f68c <__mdiff>
 800ed76:	68c2      	ldr	r2, [r0, #12]
 800ed78:	f109 3bff 	add.w	fp, r9, #4294967295
 800ed7c:	4605      	mov	r5, r0
 800ed7e:	bb02      	cbnz	r2, 800edc2 <_dtoa_r+0xa62>
 800ed80:	4601      	mov	r1, r0
 800ed82:	ee18 0a10 	vmov	r0, s16
 800ed86:	f000 fc65 	bl	800f654 <__mcmp>
 800ed8a:	4602      	mov	r2, r0
 800ed8c:	4629      	mov	r1, r5
 800ed8e:	4620      	mov	r0, r4
 800ed90:	9207      	str	r2, [sp, #28]
 800ed92:	f000 fa1d 	bl	800f1d0 <_Bfree>
 800ed96:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800ed9a:	ea43 0102 	orr.w	r1, r3, r2
 800ed9e:	9b04      	ldr	r3, [sp, #16]
 800eda0:	430b      	orrs	r3, r1
 800eda2:	464d      	mov	r5, r9
 800eda4:	d10f      	bne.n	800edc6 <_dtoa_r+0xa66>
 800eda6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800edaa:	d02a      	beq.n	800ee02 <_dtoa_r+0xaa2>
 800edac:	9b03      	ldr	r3, [sp, #12]
 800edae:	2b00      	cmp	r3, #0
 800edb0:	dd02      	ble.n	800edb8 <_dtoa_r+0xa58>
 800edb2:	9b02      	ldr	r3, [sp, #8]
 800edb4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 800edb8:	f88b a000 	strb.w	sl, [fp]
 800edbc:	e775      	b.n	800ecaa <_dtoa_r+0x94a>
 800edbe:	4638      	mov	r0, r7
 800edc0:	e7ba      	b.n	800ed38 <_dtoa_r+0x9d8>
 800edc2:	2201      	movs	r2, #1
 800edc4:	e7e2      	b.n	800ed8c <_dtoa_r+0xa2c>
 800edc6:	9b03      	ldr	r3, [sp, #12]
 800edc8:	2b00      	cmp	r3, #0
 800edca:	db04      	blt.n	800edd6 <_dtoa_r+0xa76>
 800edcc:	9906      	ldr	r1, [sp, #24]
 800edce:	430b      	orrs	r3, r1
 800edd0:	9904      	ldr	r1, [sp, #16]
 800edd2:	430b      	orrs	r3, r1
 800edd4:	d122      	bne.n	800ee1c <_dtoa_r+0xabc>
 800edd6:	2a00      	cmp	r2, #0
 800edd8:	ddee      	ble.n	800edb8 <_dtoa_r+0xa58>
 800edda:	ee18 1a10 	vmov	r1, s16
 800edde:	2201      	movs	r2, #1
 800ede0:	4620      	mov	r0, r4
 800ede2:	f000 fbc7 	bl	800f574 <__lshift>
 800ede6:	4631      	mov	r1, r6
 800ede8:	ee08 0a10 	vmov	s16, r0
 800edec:	f000 fc32 	bl	800f654 <__mcmp>
 800edf0:	2800      	cmp	r0, #0
 800edf2:	dc03      	bgt.n	800edfc <_dtoa_r+0xa9c>
 800edf4:	d1e0      	bne.n	800edb8 <_dtoa_r+0xa58>
 800edf6:	f01a 0f01 	tst.w	sl, #1
 800edfa:	d0dd      	beq.n	800edb8 <_dtoa_r+0xa58>
 800edfc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800ee00:	d1d7      	bne.n	800edb2 <_dtoa_r+0xa52>
 800ee02:	2339      	movs	r3, #57	; 0x39
 800ee04:	f88b 3000 	strb.w	r3, [fp]
 800ee08:	462b      	mov	r3, r5
 800ee0a:	461d      	mov	r5, r3
 800ee0c:	3b01      	subs	r3, #1
 800ee0e:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800ee12:	2a39      	cmp	r2, #57	; 0x39
 800ee14:	d071      	beq.n	800eefa <_dtoa_r+0xb9a>
 800ee16:	3201      	adds	r2, #1
 800ee18:	701a      	strb	r2, [r3, #0]
 800ee1a:	e746      	b.n	800ecaa <_dtoa_r+0x94a>
 800ee1c:	2a00      	cmp	r2, #0
 800ee1e:	dd07      	ble.n	800ee30 <_dtoa_r+0xad0>
 800ee20:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 800ee24:	d0ed      	beq.n	800ee02 <_dtoa_r+0xaa2>
 800ee26:	f10a 0301 	add.w	r3, sl, #1
 800ee2a:	f88b 3000 	strb.w	r3, [fp]
 800ee2e:	e73c      	b.n	800ecaa <_dtoa_r+0x94a>
 800ee30:	9b05      	ldr	r3, [sp, #20]
 800ee32:	f809 ac01 	strb.w	sl, [r9, #-1]
 800ee36:	4599      	cmp	r9, r3
 800ee38:	d047      	beq.n	800eeca <_dtoa_r+0xb6a>
 800ee3a:	ee18 1a10 	vmov	r1, s16
 800ee3e:	2300      	movs	r3, #0
 800ee40:	220a      	movs	r2, #10
 800ee42:	4620      	mov	r0, r4
 800ee44:	f000 f9e6 	bl	800f214 <__multadd>
 800ee48:	45b8      	cmp	r8, r7
 800ee4a:	ee08 0a10 	vmov	s16, r0
 800ee4e:	f04f 0300 	mov.w	r3, #0
 800ee52:	f04f 020a 	mov.w	r2, #10
 800ee56:	4641      	mov	r1, r8
 800ee58:	4620      	mov	r0, r4
 800ee5a:	d106      	bne.n	800ee6a <_dtoa_r+0xb0a>
 800ee5c:	f000 f9da 	bl	800f214 <__multadd>
 800ee60:	4680      	mov	r8, r0
 800ee62:	4607      	mov	r7, r0
 800ee64:	f109 0901 	add.w	r9, r9, #1
 800ee68:	e772      	b.n	800ed50 <_dtoa_r+0x9f0>
 800ee6a:	f000 f9d3 	bl	800f214 <__multadd>
 800ee6e:	4639      	mov	r1, r7
 800ee70:	4680      	mov	r8, r0
 800ee72:	2300      	movs	r3, #0
 800ee74:	220a      	movs	r2, #10
 800ee76:	4620      	mov	r0, r4
 800ee78:	f000 f9cc 	bl	800f214 <__multadd>
 800ee7c:	4607      	mov	r7, r0
 800ee7e:	e7f1      	b.n	800ee64 <_dtoa_r+0xb04>
 800ee80:	9b03      	ldr	r3, [sp, #12]
 800ee82:	9302      	str	r3, [sp, #8]
 800ee84:	9d01      	ldr	r5, [sp, #4]
 800ee86:	ee18 0a10 	vmov	r0, s16
 800ee8a:	4631      	mov	r1, r6
 800ee8c:	f7ff f9dc 	bl	800e248 <quorem>
 800ee90:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800ee94:	9b01      	ldr	r3, [sp, #4]
 800ee96:	f805 ab01 	strb.w	sl, [r5], #1
 800ee9a:	1aea      	subs	r2, r5, r3
 800ee9c:	9b02      	ldr	r3, [sp, #8]
 800ee9e:	4293      	cmp	r3, r2
 800eea0:	dd09      	ble.n	800eeb6 <_dtoa_r+0xb56>
 800eea2:	ee18 1a10 	vmov	r1, s16
 800eea6:	2300      	movs	r3, #0
 800eea8:	220a      	movs	r2, #10
 800eeaa:	4620      	mov	r0, r4
 800eeac:	f000 f9b2 	bl	800f214 <__multadd>
 800eeb0:	ee08 0a10 	vmov	s16, r0
 800eeb4:	e7e7      	b.n	800ee86 <_dtoa_r+0xb26>
 800eeb6:	9b02      	ldr	r3, [sp, #8]
 800eeb8:	2b00      	cmp	r3, #0
 800eeba:	bfc8      	it	gt
 800eebc:	461d      	movgt	r5, r3
 800eebe:	9b01      	ldr	r3, [sp, #4]
 800eec0:	bfd8      	it	le
 800eec2:	2501      	movle	r5, #1
 800eec4:	441d      	add	r5, r3
 800eec6:	f04f 0800 	mov.w	r8, #0
 800eeca:	ee18 1a10 	vmov	r1, s16
 800eece:	2201      	movs	r2, #1
 800eed0:	4620      	mov	r0, r4
 800eed2:	f000 fb4f 	bl	800f574 <__lshift>
 800eed6:	4631      	mov	r1, r6
 800eed8:	ee08 0a10 	vmov	s16, r0
 800eedc:	f000 fbba 	bl	800f654 <__mcmp>
 800eee0:	2800      	cmp	r0, #0
 800eee2:	dc91      	bgt.n	800ee08 <_dtoa_r+0xaa8>
 800eee4:	d102      	bne.n	800eeec <_dtoa_r+0xb8c>
 800eee6:	f01a 0f01 	tst.w	sl, #1
 800eeea:	d18d      	bne.n	800ee08 <_dtoa_r+0xaa8>
 800eeec:	462b      	mov	r3, r5
 800eeee:	461d      	mov	r5, r3
 800eef0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800eef4:	2a30      	cmp	r2, #48	; 0x30
 800eef6:	d0fa      	beq.n	800eeee <_dtoa_r+0xb8e>
 800eef8:	e6d7      	b.n	800ecaa <_dtoa_r+0x94a>
 800eefa:	9a01      	ldr	r2, [sp, #4]
 800eefc:	429a      	cmp	r2, r3
 800eefe:	d184      	bne.n	800ee0a <_dtoa_r+0xaaa>
 800ef00:	9b00      	ldr	r3, [sp, #0]
 800ef02:	3301      	adds	r3, #1
 800ef04:	9300      	str	r3, [sp, #0]
 800ef06:	2331      	movs	r3, #49	; 0x31
 800ef08:	7013      	strb	r3, [r2, #0]
 800ef0a:	e6ce      	b.n	800ecaa <_dtoa_r+0x94a>
 800ef0c:	4b09      	ldr	r3, [pc, #36]	; (800ef34 <_dtoa_r+0xbd4>)
 800ef0e:	f7ff ba95 	b.w	800e43c <_dtoa_r+0xdc>
 800ef12:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ef14:	2b00      	cmp	r3, #0
 800ef16:	f47f aa6e 	bne.w	800e3f6 <_dtoa_r+0x96>
 800ef1a:	4b07      	ldr	r3, [pc, #28]	; (800ef38 <_dtoa_r+0xbd8>)
 800ef1c:	f7ff ba8e 	b.w	800e43c <_dtoa_r+0xdc>
 800ef20:	9b02      	ldr	r3, [sp, #8]
 800ef22:	2b00      	cmp	r3, #0
 800ef24:	dcae      	bgt.n	800ee84 <_dtoa_r+0xb24>
 800ef26:	9b06      	ldr	r3, [sp, #24]
 800ef28:	2b02      	cmp	r3, #2
 800ef2a:	f73f aea8 	bgt.w	800ec7e <_dtoa_r+0x91e>
 800ef2e:	e7a9      	b.n	800ee84 <_dtoa_r+0xb24>
 800ef30:	08010e07 	.word	0x08010e07
 800ef34:	08010d64 	.word	0x08010d64
 800ef38:	08010d88 	.word	0x08010d88

0800ef3c <std>:
 800ef3c:	2300      	movs	r3, #0
 800ef3e:	b510      	push	{r4, lr}
 800ef40:	4604      	mov	r4, r0
 800ef42:	e9c0 3300 	strd	r3, r3, [r0]
 800ef46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800ef4a:	6083      	str	r3, [r0, #8]
 800ef4c:	8181      	strh	r1, [r0, #12]
 800ef4e:	6643      	str	r3, [r0, #100]	; 0x64
 800ef50:	81c2      	strh	r2, [r0, #14]
 800ef52:	6183      	str	r3, [r0, #24]
 800ef54:	4619      	mov	r1, r3
 800ef56:	2208      	movs	r2, #8
 800ef58:	305c      	adds	r0, #92	; 0x5c
 800ef5a:	f7fe fbb9 	bl	800d6d0 <memset>
 800ef5e:	4b05      	ldr	r3, [pc, #20]	; (800ef74 <std+0x38>)
 800ef60:	6263      	str	r3, [r4, #36]	; 0x24
 800ef62:	4b05      	ldr	r3, [pc, #20]	; (800ef78 <std+0x3c>)
 800ef64:	62a3      	str	r3, [r4, #40]	; 0x28
 800ef66:	4b05      	ldr	r3, [pc, #20]	; (800ef7c <std+0x40>)
 800ef68:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ef6a:	4b05      	ldr	r3, [pc, #20]	; (800ef80 <std+0x44>)
 800ef6c:	6224      	str	r4, [r4, #32]
 800ef6e:	6323      	str	r3, [r4, #48]	; 0x30
 800ef70:	bd10      	pop	{r4, pc}
 800ef72:	bf00      	nop
 800ef74:	0800fdf1 	.word	0x0800fdf1
 800ef78:	0800fe13 	.word	0x0800fe13
 800ef7c:	0800fe4b 	.word	0x0800fe4b
 800ef80:	0800fe6f 	.word	0x0800fe6f

0800ef84 <_cleanup_r>:
 800ef84:	4901      	ldr	r1, [pc, #4]	; (800ef8c <_cleanup_r+0x8>)
 800ef86:	f000 b8af 	b.w	800f0e8 <_fwalk_reent>
 800ef8a:	bf00      	nop
 800ef8c:	08010185 	.word	0x08010185

0800ef90 <__sfmoreglue>:
 800ef90:	b570      	push	{r4, r5, r6, lr}
 800ef92:	2268      	movs	r2, #104	; 0x68
 800ef94:	1e4d      	subs	r5, r1, #1
 800ef96:	4355      	muls	r5, r2
 800ef98:	460e      	mov	r6, r1
 800ef9a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800ef9e:	f7fe fc0b 	bl	800d7b8 <_malloc_r>
 800efa2:	4604      	mov	r4, r0
 800efa4:	b140      	cbz	r0, 800efb8 <__sfmoreglue+0x28>
 800efa6:	2100      	movs	r1, #0
 800efa8:	e9c0 1600 	strd	r1, r6, [r0]
 800efac:	300c      	adds	r0, #12
 800efae:	60a0      	str	r0, [r4, #8]
 800efb0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800efb4:	f7fe fb8c 	bl	800d6d0 <memset>
 800efb8:	4620      	mov	r0, r4
 800efba:	bd70      	pop	{r4, r5, r6, pc}

0800efbc <__sfp_lock_acquire>:
 800efbc:	4801      	ldr	r0, [pc, #4]	; (800efc4 <__sfp_lock_acquire+0x8>)
 800efbe:	f000 b8b8 	b.w	800f132 <__retarget_lock_acquire_recursive>
 800efc2:	bf00      	nop
 800efc4:	200081fd 	.word	0x200081fd

0800efc8 <__sfp_lock_release>:
 800efc8:	4801      	ldr	r0, [pc, #4]	; (800efd0 <__sfp_lock_release+0x8>)
 800efca:	f000 b8b3 	b.w	800f134 <__retarget_lock_release_recursive>
 800efce:	bf00      	nop
 800efd0:	200081fd 	.word	0x200081fd

0800efd4 <__sinit_lock_acquire>:
 800efd4:	4801      	ldr	r0, [pc, #4]	; (800efdc <__sinit_lock_acquire+0x8>)
 800efd6:	f000 b8ac 	b.w	800f132 <__retarget_lock_acquire_recursive>
 800efda:	bf00      	nop
 800efdc:	200081fe 	.word	0x200081fe

0800efe0 <__sinit_lock_release>:
 800efe0:	4801      	ldr	r0, [pc, #4]	; (800efe8 <__sinit_lock_release+0x8>)
 800efe2:	f000 b8a7 	b.w	800f134 <__retarget_lock_release_recursive>
 800efe6:	bf00      	nop
 800efe8:	200081fe 	.word	0x200081fe

0800efec <__sinit>:
 800efec:	b510      	push	{r4, lr}
 800efee:	4604      	mov	r4, r0
 800eff0:	f7ff fff0 	bl	800efd4 <__sinit_lock_acquire>
 800eff4:	69a3      	ldr	r3, [r4, #24]
 800eff6:	b11b      	cbz	r3, 800f000 <__sinit+0x14>
 800eff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800effc:	f7ff bff0 	b.w	800efe0 <__sinit_lock_release>
 800f000:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800f004:	6523      	str	r3, [r4, #80]	; 0x50
 800f006:	4b13      	ldr	r3, [pc, #76]	; (800f054 <__sinit+0x68>)
 800f008:	4a13      	ldr	r2, [pc, #76]	; (800f058 <__sinit+0x6c>)
 800f00a:	681b      	ldr	r3, [r3, #0]
 800f00c:	62a2      	str	r2, [r4, #40]	; 0x28
 800f00e:	42a3      	cmp	r3, r4
 800f010:	bf04      	itt	eq
 800f012:	2301      	moveq	r3, #1
 800f014:	61a3      	streq	r3, [r4, #24]
 800f016:	4620      	mov	r0, r4
 800f018:	f000 f820 	bl	800f05c <__sfp>
 800f01c:	6060      	str	r0, [r4, #4]
 800f01e:	4620      	mov	r0, r4
 800f020:	f000 f81c 	bl	800f05c <__sfp>
 800f024:	60a0      	str	r0, [r4, #8]
 800f026:	4620      	mov	r0, r4
 800f028:	f000 f818 	bl	800f05c <__sfp>
 800f02c:	2200      	movs	r2, #0
 800f02e:	60e0      	str	r0, [r4, #12]
 800f030:	2104      	movs	r1, #4
 800f032:	6860      	ldr	r0, [r4, #4]
 800f034:	f7ff ff82 	bl	800ef3c <std>
 800f038:	68a0      	ldr	r0, [r4, #8]
 800f03a:	2201      	movs	r2, #1
 800f03c:	2109      	movs	r1, #9
 800f03e:	f7ff ff7d 	bl	800ef3c <std>
 800f042:	68e0      	ldr	r0, [r4, #12]
 800f044:	2202      	movs	r2, #2
 800f046:	2112      	movs	r1, #18
 800f048:	f7ff ff78 	bl	800ef3c <std>
 800f04c:	2301      	movs	r3, #1
 800f04e:	61a3      	str	r3, [r4, #24]
 800f050:	e7d2      	b.n	800eff8 <__sinit+0xc>
 800f052:	bf00      	nop
 800f054:	08010d50 	.word	0x08010d50
 800f058:	0800ef85 	.word	0x0800ef85

0800f05c <__sfp>:
 800f05c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f05e:	4607      	mov	r7, r0
 800f060:	f7ff ffac 	bl	800efbc <__sfp_lock_acquire>
 800f064:	4b1e      	ldr	r3, [pc, #120]	; (800f0e0 <__sfp+0x84>)
 800f066:	681e      	ldr	r6, [r3, #0]
 800f068:	69b3      	ldr	r3, [r6, #24]
 800f06a:	b913      	cbnz	r3, 800f072 <__sfp+0x16>
 800f06c:	4630      	mov	r0, r6
 800f06e:	f7ff ffbd 	bl	800efec <__sinit>
 800f072:	3648      	adds	r6, #72	; 0x48
 800f074:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800f078:	3b01      	subs	r3, #1
 800f07a:	d503      	bpl.n	800f084 <__sfp+0x28>
 800f07c:	6833      	ldr	r3, [r6, #0]
 800f07e:	b30b      	cbz	r3, 800f0c4 <__sfp+0x68>
 800f080:	6836      	ldr	r6, [r6, #0]
 800f082:	e7f7      	b.n	800f074 <__sfp+0x18>
 800f084:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800f088:	b9d5      	cbnz	r5, 800f0c0 <__sfp+0x64>
 800f08a:	4b16      	ldr	r3, [pc, #88]	; (800f0e4 <__sfp+0x88>)
 800f08c:	60e3      	str	r3, [r4, #12]
 800f08e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f092:	6665      	str	r5, [r4, #100]	; 0x64
 800f094:	f000 f84c 	bl	800f130 <__retarget_lock_init_recursive>
 800f098:	f7ff ff96 	bl	800efc8 <__sfp_lock_release>
 800f09c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800f0a0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800f0a4:	6025      	str	r5, [r4, #0]
 800f0a6:	61a5      	str	r5, [r4, #24]
 800f0a8:	2208      	movs	r2, #8
 800f0aa:	4629      	mov	r1, r5
 800f0ac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800f0b0:	f7fe fb0e 	bl	800d6d0 <memset>
 800f0b4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800f0b8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800f0bc:	4620      	mov	r0, r4
 800f0be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f0c0:	3468      	adds	r4, #104	; 0x68
 800f0c2:	e7d9      	b.n	800f078 <__sfp+0x1c>
 800f0c4:	2104      	movs	r1, #4
 800f0c6:	4638      	mov	r0, r7
 800f0c8:	f7ff ff62 	bl	800ef90 <__sfmoreglue>
 800f0cc:	4604      	mov	r4, r0
 800f0ce:	6030      	str	r0, [r6, #0]
 800f0d0:	2800      	cmp	r0, #0
 800f0d2:	d1d5      	bne.n	800f080 <__sfp+0x24>
 800f0d4:	f7ff ff78 	bl	800efc8 <__sfp_lock_release>
 800f0d8:	230c      	movs	r3, #12
 800f0da:	603b      	str	r3, [r7, #0]
 800f0dc:	e7ee      	b.n	800f0bc <__sfp+0x60>
 800f0de:	bf00      	nop
 800f0e0:	08010d50 	.word	0x08010d50
 800f0e4:	ffff0001 	.word	0xffff0001

0800f0e8 <_fwalk_reent>:
 800f0e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f0ec:	4606      	mov	r6, r0
 800f0ee:	4688      	mov	r8, r1
 800f0f0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800f0f4:	2700      	movs	r7, #0
 800f0f6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800f0fa:	f1b9 0901 	subs.w	r9, r9, #1
 800f0fe:	d505      	bpl.n	800f10c <_fwalk_reent+0x24>
 800f100:	6824      	ldr	r4, [r4, #0]
 800f102:	2c00      	cmp	r4, #0
 800f104:	d1f7      	bne.n	800f0f6 <_fwalk_reent+0xe>
 800f106:	4638      	mov	r0, r7
 800f108:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f10c:	89ab      	ldrh	r3, [r5, #12]
 800f10e:	2b01      	cmp	r3, #1
 800f110:	d907      	bls.n	800f122 <_fwalk_reent+0x3a>
 800f112:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800f116:	3301      	adds	r3, #1
 800f118:	d003      	beq.n	800f122 <_fwalk_reent+0x3a>
 800f11a:	4629      	mov	r1, r5
 800f11c:	4630      	mov	r0, r6
 800f11e:	47c0      	blx	r8
 800f120:	4307      	orrs	r7, r0
 800f122:	3568      	adds	r5, #104	; 0x68
 800f124:	e7e9      	b.n	800f0fa <_fwalk_reent+0x12>
	...

0800f128 <_localeconv_r>:
 800f128:	4800      	ldr	r0, [pc, #0]	; (800f12c <_localeconv_r+0x4>)
 800f12a:	4770      	bx	lr
 800f12c:	20000170 	.word	0x20000170

0800f130 <__retarget_lock_init_recursive>:
 800f130:	4770      	bx	lr

0800f132 <__retarget_lock_acquire_recursive>:
 800f132:	4770      	bx	lr

0800f134 <__retarget_lock_release_recursive>:
 800f134:	4770      	bx	lr
	...

0800f138 <__malloc_lock>:
 800f138:	4801      	ldr	r0, [pc, #4]	; (800f140 <__malloc_lock+0x8>)
 800f13a:	f7ff bffa 	b.w	800f132 <__retarget_lock_acquire_recursive>
 800f13e:	bf00      	nop
 800f140:	200081fc 	.word	0x200081fc

0800f144 <__malloc_unlock>:
 800f144:	4801      	ldr	r0, [pc, #4]	; (800f14c <__malloc_unlock+0x8>)
 800f146:	f7ff bff5 	b.w	800f134 <__retarget_lock_release_recursive>
 800f14a:	bf00      	nop
 800f14c:	200081fc 	.word	0x200081fc

0800f150 <_Balloc>:
 800f150:	b570      	push	{r4, r5, r6, lr}
 800f152:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800f154:	4604      	mov	r4, r0
 800f156:	460d      	mov	r5, r1
 800f158:	b976      	cbnz	r6, 800f178 <_Balloc+0x28>
 800f15a:	2010      	movs	r0, #16
 800f15c:	f7fe fa9a 	bl	800d694 <malloc>
 800f160:	4602      	mov	r2, r0
 800f162:	6260      	str	r0, [r4, #36]	; 0x24
 800f164:	b920      	cbnz	r0, 800f170 <_Balloc+0x20>
 800f166:	4b18      	ldr	r3, [pc, #96]	; (800f1c8 <_Balloc+0x78>)
 800f168:	4818      	ldr	r0, [pc, #96]	; (800f1cc <_Balloc+0x7c>)
 800f16a:	2166      	movs	r1, #102	; 0x66
 800f16c:	f000 ff56 	bl	801001c <__assert_func>
 800f170:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800f174:	6006      	str	r6, [r0, #0]
 800f176:	60c6      	str	r6, [r0, #12]
 800f178:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800f17a:	68f3      	ldr	r3, [r6, #12]
 800f17c:	b183      	cbz	r3, 800f1a0 <_Balloc+0x50>
 800f17e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f180:	68db      	ldr	r3, [r3, #12]
 800f182:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800f186:	b9b8      	cbnz	r0, 800f1b8 <_Balloc+0x68>
 800f188:	2101      	movs	r1, #1
 800f18a:	fa01 f605 	lsl.w	r6, r1, r5
 800f18e:	1d72      	adds	r2, r6, #5
 800f190:	0092      	lsls	r2, r2, #2
 800f192:	4620      	mov	r0, r4
 800f194:	f000 fb60 	bl	800f858 <_calloc_r>
 800f198:	b160      	cbz	r0, 800f1b4 <_Balloc+0x64>
 800f19a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800f19e:	e00e      	b.n	800f1be <_Balloc+0x6e>
 800f1a0:	2221      	movs	r2, #33	; 0x21
 800f1a2:	2104      	movs	r1, #4
 800f1a4:	4620      	mov	r0, r4
 800f1a6:	f000 fb57 	bl	800f858 <_calloc_r>
 800f1aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f1ac:	60f0      	str	r0, [r6, #12]
 800f1ae:	68db      	ldr	r3, [r3, #12]
 800f1b0:	2b00      	cmp	r3, #0
 800f1b2:	d1e4      	bne.n	800f17e <_Balloc+0x2e>
 800f1b4:	2000      	movs	r0, #0
 800f1b6:	bd70      	pop	{r4, r5, r6, pc}
 800f1b8:	6802      	ldr	r2, [r0, #0]
 800f1ba:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800f1be:	2300      	movs	r3, #0
 800f1c0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800f1c4:	e7f7      	b.n	800f1b6 <_Balloc+0x66>
 800f1c6:	bf00      	nop
 800f1c8:	08010d95 	.word	0x08010d95
 800f1cc:	08010e78 	.word	0x08010e78

0800f1d0 <_Bfree>:
 800f1d0:	b570      	push	{r4, r5, r6, lr}
 800f1d2:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800f1d4:	4605      	mov	r5, r0
 800f1d6:	460c      	mov	r4, r1
 800f1d8:	b976      	cbnz	r6, 800f1f8 <_Bfree+0x28>
 800f1da:	2010      	movs	r0, #16
 800f1dc:	f7fe fa5a 	bl	800d694 <malloc>
 800f1e0:	4602      	mov	r2, r0
 800f1e2:	6268      	str	r0, [r5, #36]	; 0x24
 800f1e4:	b920      	cbnz	r0, 800f1f0 <_Bfree+0x20>
 800f1e6:	4b09      	ldr	r3, [pc, #36]	; (800f20c <_Bfree+0x3c>)
 800f1e8:	4809      	ldr	r0, [pc, #36]	; (800f210 <_Bfree+0x40>)
 800f1ea:	218a      	movs	r1, #138	; 0x8a
 800f1ec:	f000 ff16 	bl	801001c <__assert_func>
 800f1f0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800f1f4:	6006      	str	r6, [r0, #0]
 800f1f6:	60c6      	str	r6, [r0, #12]
 800f1f8:	b13c      	cbz	r4, 800f20a <_Bfree+0x3a>
 800f1fa:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800f1fc:	6862      	ldr	r2, [r4, #4]
 800f1fe:	68db      	ldr	r3, [r3, #12]
 800f200:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800f204:	6021      	str	r1, [r4, #0]
 800f206:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800f20a:	bd70      	pop	{r4, r5, r6, pc}
 800f20c:	08010d95 	.word	0x08010d95
 800f210:	08010e78 	.word	0x08010e78

0800f214 <__multadd>:
 800f214:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f218:	690d      	ldr	r5, [r1, #16]
 800f21a:	4607      	mov	r7, r0
 800f21c:	460c      	mov	r4, r1
 800f21e:	461e      	mov	r6, r3
 800f220:	f101 0c14 	add.w	ip, r1, #20
 800f224:	2000      	movs	r0, #0
 800f226:	f8dc 3000 	ldr.w	r3, [ip]
 800f22a:	b299      	uxth	r1, r3
 800f22c:	fb02 6101 	mla	r1, r2, r1, r6
 800f230:	0c1e      	lsrs	r6, r3, #16
 800f232:	0c0b      	lsrs	r3, r1, #16
 800f234:	fb02 3306 	mla	r3, r2, r6, r3
 800f238:	b289      	uxth	r1, r1
 800f23a:	3001      	adds	r0, #1
 800f23c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800f240:	4285      	cmp	r5, r0
 800f242:	f84c 1b04 	str.w	r1, [ip], #4
 800f246:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800f24a:	dcec      	bgt.n	800f226 <__multadd+0x12>
 800f24c:	b30e      	cbz	r6, 800f292 <__multadd+0x7e>
 800f24e:	68a3      	ldr	r3, [r4, #8]
 800f250:	42ab      	cmp	r3, r5
 800f252:	dc19      	bgt.n	800f288 <__multadd+0x74>
 800f254:	6861      	ldr	r1, [r4, #4]
 800f256:	4638      	mov	r0, r7
 800f258:	3101      	adds	r1, #1
 800f25a:	f7ff ff79 	bl	800f150 <_Balloc>
 800f25e:	4680      	mov	r8, r0
 800f260:	b928      	cbnz	r0, 800f26e <__multadd+0x5a>
 800f262:	4602      	mov	r2, r0
 800f264:	4b0c      	ldr	r3, [pc, #48]	; (800f298 <__multadd+0x84>)
 800f266:	480d      	ldr	r0, [pc, #52]	; (800f29c <__multadd+0x88>)
 800f268:	21b5      	movs	r1, #181	; 0xb5
 800f26a:	f000 fed7 	bl	801001c <__assert_func>
 800f26e:	6922      	ldr	r2, [r4, #16]
 800f270:	3202      	adds	r2, #2
 800f272:	f104 010c 	add.w	r1, r4, #12
 800f276:	0092      	lsls	r2, r2, #2
 800f278:	300c      	adds	r0, #12
 800f27a:	f7fe fa1b 	bl	800d6b4 <memcpy>
 800f27e:	4621      	mov	r1, r4
 800f280:	4638      	mov	r0, r7
 800f282:	f7ff ffa5 	bl	800f1d0 <_Bfree>
 800f286:	4644      	mov	r4, r8
 800f288:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800f28c:	3501      	adds	r5, #1
 800f28e:	615e      	str	r6, [r3, #20]
 800f290:	6125      	str	r5, [r4, #16]
 800f292:	4620      	mov	r0, r4
 800f294:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f298:	08010e07 	.word	0x08010e07
 800f29c:	08010e78 	.word	0x08010e78

0800f2a0 <__hi0bits>:
 800f2a0:	0c03      	lsrs	r3, r0, #16
 800f2a2:	041b      	lsls	r3, r3, #16
 800f2a4:	b9d3      	cbnz	r3, 800f2dc <__hi0bits+0x3c>
 800f2a6:	0400      	lsls	r0, r0, #16
 800f2a8:	2310      	movs	r3, #16
 800f2aa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800f2ae:	bf04      	itt	eq
 800f2b0:	0200      	lsleq	r0, r0, #8
 800f2b2:	3308      	addeq	r3, #8
 800f2b4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800f2b8:	bf04      	itt	eq
 800f2ba:	0100      	lsleq	r0, r0, #4
 800f2bc:	3304      	addeq	r3, #4
 800f2be:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800f2c2:	bf04      	itt	eq
 800f2c4:	0080      	lsleq	r0, r0, #2
 800f2c6:	3302      	addeq	r3, #2
 800f2c8:	2800      	cmp	r0, #0
 800f2ca:	db05      	blt.n	800f2d8 <__hi0bits+0x38>
 800f2cc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800f2d0:	f103 0301 	add.w	r3, r3, #1
 800f2d4:	bf08      	it	eq
 800f2d6:	2320      	moveq	r3, #32
 800f2d8:	4618      	mov	r0, r3
 800f2da:	4770      	bx	lr
 800f2dc:	2300      	movs	r3, #0
 800f2de:	e7e4      	b.n	800f2aa <__hi0bits+0xa>

0800f2e0 <__lo0bits>:
 800f2e0:	6803      	ldr	r3, [r0, #0]
 800f2e2:	f013 0207 	ands.w	r2, r3, #7
 800f2e6:	4601      	mov	r1, r0
 800f2e8:	d00b      	beq.n	800f302 <__lo0bits+0x22>
 800f2ea:	07da      	lsls	r2, r3, #31
 800f2ec:	d423      	bmi.n	800f336 <__lo0bits+0x56>
 800f2ee:	0798      	lsls	r0, r3, #30
 800f2f0:	bf49      	itett	mi
 800f2f2:	085b      	lsrmi	r3, r3, #1
 800f2f4:	089b      	lsrpl	r3, r3, #2
 800f2f6:	2001      	movmi	r0, #1
 800f2f8:	600b      	strmi	r3, [r1, #0]
 800f2fa:	bf5c      	itt	pl
 800f2fc:	600b      	strpl	r3, [r1, #0]
 800f2fe:	2002      	movpl	r0, #2
 800f300:	4770      	bx	lr
 800f302:	b298      	uxth	r0, r3
 800f304:	b9a8      	cbnz	r0, 800f332 <__lo0bits+0x52>
 800f306:	0c1b      	lsrs	r3, r3, #16
 800f308:	2010      	movs	r0, #16
 800f30a:	b2da      	uxtb	r2, r3
 800f30c:	b90a      	cbnz	r2, 800f312 <__lo0bits+0x32>
 800f30e:	3008      	adds	r0, #8
 800f310:	0a1b      	lsrs	r3, r3, #8
 800f312:	071a      	lsls	r2, r3, #28
 800f314:	bf04      	itt	eq
 800f316:	091b      	lsreq	r3, r3, #4
 800f318:	3004      	addeq	r0, #4
 800f31a:	079a      	lsls	r2, r3, #30
 800f31c:	bf04      	itt	eq
 800f31e:	089b      	lsreq	r3, r3, #2
 800f320:	3002      	addeq	r0, #2
 800f322:	07da      	lsls	r2, r3, #31
 800f324:	d403      	bmi.n	800f32e <__lo0bits+0x4e>
 800f326:	085b      	lsrs	r3, r3, #1
 800f328:	f100 0001 	add.w	r0, r0, #1
 800f32c:	d005      	beq.n	800f33a <__lo0bits+0x5a>
 800f32e:	600b      	str	r3, [r1, #0]
 800f330:	4770      	bx	lr
 800f332:	4610      	mov	r0, r2
 800f334:	e7e9      	b.n	800f30a <__lo0bits+0x2a>
 800f336:	2000      	movs	r0, #0
 800f338:	4770      	bx	lr
 800f33a:	2020      	movs	r0, #32
 800f33c:	4770      	bx	lr
	...

0800f340 <__i2b>:
 800f340:	b510      	push	{r4, lr}
 800f342:	460c      	mov	r4, r1
 800f344:	2101      	movs	r1, #1
 800f346:	f7ff ff03 	bl	800f150 <_Balloc>
 800f34a:	4602      	mov	r2, r0
 800f34c:	b928      	cbnz	r0, 800f35a <__i2b+0x1a>
 800f34e:	4b05      	ldr	r3, [pc, #20]	; (800f364 <__i2b+0x24>)
 800f350:	4805      	ldr	r0, [pc, #20]	; (800f368 <__i2b+0x28>)
 800f352:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800f356:	f000 fe61 	bl	801001c <__assert_func>
 800f35a:	2301      	movs	r3, #1
 800f35c:	6144      	str	r4, [r0, #20]
 800f35e:	6103      	str	r3, [r0, #16]
 800f360:	bd10      	pop	{r4, pc}
 800f362:	bf00      	nop
 800f364:	08010e07 	.word	0x08010e07
 800f368:	08010e78 	.word	0x08010e78

0800f36c <__multiply>:
 800f36c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f370:	4691      	mov	r9, r2
 800f372:	690a      	ldr	r2, [r1, #16]
 800f374:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800f378:	429a      	cmp	r2, r3
 800f37a:	bfb8      	it	lt
 800f37c:	460b      	movlt	r3, r1
 800f37e:	460c      	mov	r4, r1
 800f380:	bfbc      	itt	lt
 800f382:	464c      	movlt	r4, r9
 800f384:	4699      	movlt	r9, r3
 800f386:	6927      	ldr	r7, [r4, #16]
 800f388:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800f38c:	68a3      	ldr	r3, [r4, #8]
 800f38e:	6861      	ldr	r1, [r4, #4]
 800f390:	eb07 060a 	add.w	r6, r7, sl
 800f394:	42b3      	cmp	r3, r6
 800f396:	b085      	sub	sp, #20
 800f398:	bfb8      	it	lt
 800f39a:	3101      	addlt	r1, #1
 800f39c:	f7ff fed8 	bl	800f150 <_Balloc>
 800f3a0:	b930      	cbnz	r0, 800f3b0 <__multiply+0x44>
 800f3a2:	4602      	mov	r2, r0
 800f3a4:	4b44      	ldr	r3, [pc, #272]	; (800f4b8 <__multiply+0x14c>)
 800f3a6:	4845      	ldr	r0, [pc, #276]	; (800f4bc <__multiply+0x150>)
 800f3a8:	f240 115d 	movw	r1, #349	; 0x15d
 800f3ac:	f000 fe36 	bl	801001c <__assert_func>
 800f3b0:	f100 0514 	add.w	r5, r0, #20
 800f3b4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800f3b8:	462b      	mov	r3, r5
 800f3ba:	2200      	movs	r2, #0
 800f3bc:	4543      	cmp	r3, r8
 800f3be:	d321      	bcc.n	800f404 <__multiply+0x98>
 800f3c0:	f104 0314 	add.w	r3, r4, #20
 800f3c4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800f3c8:	f109 0314 	add.w	r3, r9, #20
 800f3cc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800f3d0:	9202      	str	r2, [sp, #8]
 800f3d2:	1b3a      	subs	r2, r7, r4
 800f3d4:	3a15      	subs	r2, #21
 800f3d6:	f022 0203 	bic.w	r2, r2, #3
 800f3da:	3204      	adds	r2, #4
 800f3dc:	f104 0115 	add.w	r1, r4, #21
 800f3e0:	428f      	cmp	r7, r1
 800f3e2:	bf38      	it	cc
 800f3e4:	2204      	movcc	r2, #4
 800f3e6:	9201      	str	r2, [sp, #4]
 800f3e8:	9a02      	ldr	r2, [sp, #8]
 800f3ea:	9303      	str	r3, [sp, #12]
 800f3ec:	429a      	cmp	r2, r3
 800f3ee:	d80c      	bhi.n	800f40a <__multiply+0x9e>
 800f3f0:	2e00      	cmp	r6, #0
 800f3f2:	dd03      	ble.n	800f3fc <__multiply+0x90>
 800f3f4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800f3f8:	2b00      	cmp	r3, #0
 800f3fa:	d05a      	beq.n	800f4b2 <__multiply+0x146>
 800f3fc:	6106      	str	r6, [r0, #16]
 800f3fe:	b005      	add	sp, #20
 800f400:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f404:	f843 2b04 	str.w	r2, [r3], #4
 800f408:	e7d8      	b.n	800f3bc <__multiply+0x50>
 800f40a:	f8b3 a000 	ldrh.w	sl, [r3]
 800f40e:	f1ba 0f00 	cmp.w	sl, #0
 800f412:	d024      	beq.n	800f45e <__multiply+0xf2>
 800f414:	f104 0e14 	add.w	lr, r4, #20
 800f418:	46a9      	mov	r9, r5
 800f41a:	f04f 0c00 	mov.w	ip, #0
 800f41e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800f422:	f8d9 1000 	ldr.w	r1, [r9]
 800f426:	fa1f fb82 	uxth.w	fp, r2
 800f42a:	b289      	uxth	r1, r1
 800f42c:	fb0a 110b 	mla	r1, sl, fp, r1
 800f430:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800f434:	f8d9 2000 	ldr.w	r2, [r9]
 800f438:	4461      	add	r1, ip
 800f43a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800f43e:	fb0a c20b 	mla	r2, sl, fp, ip
 800f442:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800f446:	b289      	uxth	r1, r1
 800f448:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800f44c:	4577      	cmp	r7, lr
 800f44e:	f849 1b04 	str.w	r1, [r9], #4
 800f452:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800f456:	d8e2      	bhi.n	800f41e <__multiply+0xb2>
 800f458:	9a01      	ldr	r2, [sp, #4]
 800f45a:	f845 c002 	str.w	ip, [r5, r2]
 800f45e:	9a03      	ldr	r2, [sp, #12]
 800f460:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800f464:	3304      	adds	r3, #4
 800f466:	f1b9 0f00 	cmp.w	r9, #0
 800f46a:	d020      	beq.n	800f4ae <__multiply+0x142>
 800f46c:	6829      	ldr	r1, [r5, #0]
 800f46e:	f104 0c14 	add.w	ip, r4, #20
 800f472:	46ae      	mov	lr, r5
 800f474:	f04f 0a00 	mov.w	sl, #0
 800f478:	f8bc b000 	ldrh.w	fp, [ip]
 800f47c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800f480:	fb09 220b 	mla	r2, r9, fp, r2
 800f484:	4492      	add	sl, r2
 800f486:	b289      	uxth	r1, r1
 800f488:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800f48c:	f84e 1b04 	str.w	r1, [lr], #4
 800f490:	f85c 2b04 	ldr.w	r2, [ip], #4
 800f494:	f8be 1000 	ldrh.w	r1, [lr]
 800f498:	0c12      	lsrs	r2, r2, #16
 800f49a:	fb09 1102 	mla	r1, r9, r2, r1
 800f49e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800f4a2:	4567      	cmp	r7, ip
 800f4a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800f4a8:	d8e6      	bhi.n	800f478 <__multiply+0x10c>
 800f4aa:	9a01      	ldr	r2, [sp, #4]
 800f4ac:	50a9      	str	r1, [r5, r2]
 800f4ae:	3504      	adds	r5, #4
 800f4b0:	e79a      	b.n	800f3e8 <__multiply+0x7c>
 800f4b2:	3e01      	subs	r6, #1
 800f4b4:	e79c      	b.n	800f3f0 <__multiply+0x84>
 800f4b6:	bf00      	nop
 800f4b8:	08010e07 	.word	0x08010e07
 800f4bc:	08010e78 	.word	0x08010e78

0800f4c0 <__pow5mult>:
 800f4c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f4c4:	4615      	mov	r5, r2
 800f4c6:	f012 0203 	ands.w	r2, r2, #3
 800f4ca:	4606      	mov	r6, r0
 800f4cc:	460f      	mov	r7, r1
 800f4ce:	d007      	beq.n	800f4e0 <__pow5mult+0x20>
 800f4d0:	4c25      	ldr	r4, [pc, #148]	; (800f568 <__pow5mult+0xa8>)
 800f4d2:	3a01      	subs	r2, #1
 800f4d4:	2300      	movs	r3, #0
 800f4d6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800f4da:	f7ff fe9b 	bl	800f214 <__multadd>
 800f4de:	4607      	mov	r7, r0
 800f4e0:	10ad      	asrs	r5, r5, #2
 800f4e2:	d03d      	beq.n	800f560 <__pow5mult+0xa0>
 800f4e4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800f4e6:	b97c      	cbnz	r4, 800f508 <__pow5mult+0x48>
 800f4e8:	2010      	movs	r0, #16
 800f4ea:	f7fe f8d3 	bl	800d694 <malloc>
 800f4ee:	4602      	mov	r2, r0
 800f4f0:	6270      	str	r0, [r6, #36]	; 0x24
 800f4f2:	b928      	cbnz	r0, 800f500 <__pow5mult+0x40>
 800f4f4:	4b1d      	ldr	r3, [pc, #116]	; (800f56c <__pow5mult+0xac>)
 800f4f6:	481e      	ldr	r0, [pc, #120]	; (800f570 <__pow5mult+0xb0>)
 800f4f8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800f4fc:	f000 fd8e 	bl	801001c <__assert_func>
 800f500:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800f504:	6004      	str	r4, [r0, #0]
 800f506:	60c4      	str	r4, [r0, #12]
 800f508:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800f50c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800f510:	b94c      	cbnz	r4, 800f526 <__pow5mult+0x66>
 800f512:	f240 2171 	movw	r1, #625	; 0x271
 800f516:	4630      	mov	r0, r6
 800f518:	f7ff ff12 	bl	800f340 <__i2b>
 800f51c:	2300      	movs	r3, #0
 800f51e:	f8c8 0008 	str.w	r0, [r8, #8]
 800f522:	4604      	mov	r4, r0
 800f524:	6003      	str	r3, [r0, #0]
 800f526:	f04f 0900 	mov.w	r9, #0
 800f52a:	07eb      	lsls	r3, r5, #31
 800f52c:	d50a      	bpl.n	800f544 <__pow5mult+0x84>
 800f52e:	4639      	mov	r1, r7
 800f530:	4622      	mov	r2, r4
 800f532:	4630      	mov	r0, r6
 800f534:	f7ff ff1a 	bl	800f36c <__multiply>
 800f538:	4639      	mov	r1, r7
 800f53a:	4680      	mov	r8, r0
 800f53c:	4630      	mov	r0, r6
 800f53e:	f7ff fe47 	bl	800f1d0 <_Bfree>
 800f542:	4647      	mov	r7, r8
 800f544:	106d      	asrs	r5, r5, #1
 800f546:	d00b      	beq.n	800f560 <__pow5mult+0xa0>
 800f548:	6820      	ldr	r0, [r4, #0]
 800f54a:	b938      	cbnz	r0, 800f55c <__pow5mult+0x9c>
 800f54c:	4622      	mov	r2, r4
 800f54e:	4621      	mov	r1, r4
 800f550:	4630      	mov	r0, r6
 800f552:	f7ff ff0b 	bl	800f36c <__multiply>
 800f556:	6020      	str	r0, [r4, #0]
 800f558:	f8c0 9000 	str.w	r9, [r0]
 800f55c:	4604      	mov	r4, r0
 800f55e:	e7e4      	b.n	800f52a <__pow5mult+0x6a>
 800f560:	4638      	mov	r0, r7
 800f562:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f566:	bf00      	nop
 800f568:	08010fc8 	.word	0x08010fc8
 800f56c:	08010d95 	.word	0x08010d95
 800f570:	08010e78 	.word	0x08010e78

0800f574 <__lshift>:
 800f574:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f578:	460c      	mov	r4, r1
 800f57a:	6849      	ldr	r1, [r1, #4]
 800f57c:	6923      	ldr	r3, [r4, #16]
 800f57e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800f582:	68a3      	ldr	r3, [r4, #8]
 800f584:	4607      	mov	r7, r0
 800f586:	4691      	mov	r9, r2
 800f588:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800f58c:	f108 0601 	add.w	r6, r8, #1
 800f590:	42b3      	cmp	r3, r6
 800f592:	db0b      	blt.n	800f5ac <__lshift+0x38>
 800f594:	4638      	mov	r0, r7
 800f596:	f7ff fddb 	bl	800f150 <_Balloc>
 800f59a:	4605      	mov	r5, r0
 800f59c:	b948      	cbnz	r0, 800f5b2 <__lshift+0x3e>
 800f59e:	4602      	mov	r2, r0
 800f5a0:	4b2a      	ldr	r3, [pc, #168]	; (800f64c <__lshift+0xd8>)
 800f5a2:	482b      	ldr	r0, [pc, #172]	; (800f650 <__lshift+0xdc>)
 800f5a4:	f240 11d9 	movw	r1, #473	; 0x1d9
 800f5a8:	f000 fd38 	bl	801001c <__assert_func>
 800f5ac:	3101      	adds	r1, #1
 800f5ae:	005b      	lsls	r3, r3, #1
 800f5b0:	e7ee      	b.n	800f590 <__lshift+0x1c>
 800f5b2:	2300      	movs	r3, #0
 800f5b4:	f100 0114 	add.w	r1, r0, #20
 800f5b8:	f100 0210 	add.w	r2, r0, #16
 800f5bc:	4618      	mov	r0, r3
 800f5be:	4553      	cmp	r3, sl
 800f5c0:	db37      	blt.n	800f632 <__lshift+0xbe>
 800f5c2:	6920      	ldr	r0, [r4, #16]
 800f5c4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800f5c8:	f104 0314 	add.w	r3, r4, #20
 800f5cc:	f019 091f 	ands.w	r9, r9, #31
 800f5d0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800f5d4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800f5d8:	d02f      	beq.n	800f63a <__lshift+0xc6>
 800f5da:	f1c9 0e20 	rsb	lr, r9, #32
 800f5de:	468a      	mov	sl, r1
 800f5e0:	f04f 0c00 	mov.w	ip, #0
 800f5e4:	681a      	ldr	r2, [r3, #0]
 800f5e6:	fa02 f209 	lsl.w	r2, r2, r9
 800f5ea:	ea42 020c 	orr.w	r2, r2, ip
 800f5ee:	f84a 2b04 	str.w	r2, [sl], #4
 800f5f2:	f853 2b04 	ldr.w	r2, [r3], #4
 800f5f6:	4298      	cmp	r0, r3
 800f5f8:	fa22 fc0e 	lsr.w	ip, r2, lr
 800f5fc:	d8f2      	bhi.n	800f5e4 <__lshift+0x70>
 800f5fe:	1b03      	subs	r3, r0, r4
 800f600:	3b15      	subs	r3, #21
 800f602:	f023 0303 	bic.w	r3, r3, #3
 800f606:	3304      	adds	r3, #4
 800f608:	f104 0215 	add.w	r2, r4, #21
 800f60c:	4290      	cmp	r0, r2
 800f60e:	bf38      	it	cc
 800f610:	2304      	movcc	r3, #4
 800f612:	f841 c003 	str.w	ip, [r1, r3]
 800f616:	f1bc 0f00 	cmp.w	ip, #0
 800f61a:	d001      	beq.n	800f620 <__lshift+0xac>
 800f61c:	f108 0602 	add.w	r6, r8, #2
 800f620:	3e01      	subs	r6, #1
 800f622:	4638      	mov	r0, r7
 800f624:	612e      	str	r6, [r5, #16]
 800f626:	4621      	mov	r1, r4
 800f628:	f7ff fdd2 	bl	800f1d0 <_Bfree>
 800f62c:	4628      	mov	r0, r5
 800f62e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f632:	f842 0f04 	str.w	r0, [r2, #4]!
 800f636:	3301      	adds	r3, #1
 800f638:	e7c1      	b.n	800f5be <__lshift+0x4a>
 800f63a:	3904      	subs	r1, #4
 800f63c:	f853 2b04 	ldr.w	r2, [r3], #4
 800f640:	f841 2f04 	str.w	r2, [r1, #4]!
 800f644:	4298      	cmp	r0, r3
 800f646:	d8f9      	bhi.n	800f63c <__lshift+0xc8>
 800f648:	e7ea      	b.n	800f620 <__lshift+0xac>
 800f64a:	bf00      	nop
 800f64c:	08010e07 	.word	0x08010e07
 800f650:	08010e78 	.word	0x08010e78

0800f654 <__mcmp>:
 800f654:	b530      	push	{r4, r5, lr}
 800f656:	6902      	ldr	r2, [r0, #16]
 800f658:	690c      	ldr	r4, [r1, #16]
 800f65a:	1b12      	subs	r2, r2, r4
 800f65c:	d10e      	bne.n	800f67c <__mcmp+0x28>
 800f65e:	f100 0314 	add.w	r3, r0, #20
 800f662:	3114      	adds	r1, #20
 800f664:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800f668:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800f66c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800f670:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800f674:	42a5      	cmp	r5, r4
 800f676:	d003      	beq.n	800f680 <__mcmp+0x2c>
 800f678:	d305      	bcc.n	800f686 <__mcmp+0x32>
 800f67a:	2201      	movs	r2, #1
 800f67c:	4610      	mov	r0, r2
 800f67e:	bd30      	pop	{r4, r5, pc}
 800f680:	4283      	cmp	r3, r0
 800f682:	d3f3      	bcc.n	800f66c <__mcmp+0x18>
 800f684:	e7fa      	b.n	800f67c <__mcmp+0x28>
 800f686:	f04f 32ff 	mov.w	r2, #4294967295
 800f68a:	e7f7      	b.n	800f67c <__mcmp+0x28>

0800f68c <__mdiff>:
 800f68c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f690:	460c      	mov	r4, r1
 800f692:	4606      	mov	r6, r0
 800f694:	4611      	mov	r1, r2
 800f696:	4620      	mov	r0, r4
 800f698:	4690      	mov	r8, r2
 800f69a:	f7ff ffdb 	bl	800f654 <__mcmp>
 800f69e:	1e05      	subs	r5, r0, #0
 800f6a0:	d110      	bne.n	800f6c4 <__mdiff+0x38>
 800f6a2:	4629      	mov	r1, r5
 800f6a4:	4630      	mov	r0, r6
 800f6a6:	f7ff fd53 	bl	800f150 <_Balloc>
 800f6aa:	b930      	cbnz	r0, 800f6ba <__mdiff+0x2e>
 800f6ac:	4b3a      	ldr	r3, [pc, #232]	; (800f798 <__mdiff+0x10c>)
 800f6ae:	4602      	mov	r2, r0
 800f6b0:	f240 2132 	movw	r1, #562	; 0x232
 800f6b4:	4839      	ldr	r0, [pc, #228]	; (800f79c <__mdiff+0x110>)
 800f6b6:	f000 fcb1 	bl	801001c <__assert_func>
 800f6ba:	2301      	movs	r3, #1
 800f6bc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800f6c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6c4:	bfa4      	itt	ge
 800f6c6:	4643      	movge	r3, r8
 800f6c8:	46a0      	movge	r8, r4
 800f6ca:	4630      	mov	r0, r6
 800f6cc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800f6d0:	bfa6      	itte	ge
 800f6d2:	461c      	movge	r4, r3
 800f6d4:	2500      	movge	r5, #0
 800f6d6:	2501      	movlt	r5, #1
 800f6d8:	f7ff fd3a 	bl	800f150 <_Balloc>
 800f6dc:	b920      	cbnz	r0, 800f6e8 <__mdiff+0x5c>
 800f6de:	4b2e      	ldr	r3, [pc, #184]	; (800f798 <__mdiff+0x10c>)
 800f6e0:	4602      	mov	r2, r0
 800f6e2:	f44f 7110 	mov.w	r1, #576	; 0x240
 800f6e6:	e7e5      	b.n	800f6b4 <__mdiff+0x28>
 800f6e8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800f6ec:	6926      	ldr	r6, [r4, #16]
 800f6ee:	60c5      	str	r5, [r0, #12]
 800f6f0:	f104 0914 	add.w	r9, r4, #20
 800f6f4:	f108 0514 	add.w	r5, r8, #20
 800f6f8:	f100 0e14 	add.w	lr, r0, #20
 800f6fc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800f700:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800f704:	f108 0210 	add.w	r2, r8, #16
 800f708:	46f2      	mov	sl, lr
 800f70a:	2100      	movs	r1, #0
 800f70c:	f859 3b04 	ldr.w	r3, [r9], #4
 800f710:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800f714:	fa1f f883 	uxth.w	r8, r3
 800f718:	fa11 f18b 	uxtah	r1, r1, fp
 800f71c:	0c1b      	lsrs	r3, r3, #16
 800f71e:	eba1 0808 	sub.w	r8, r1, r8
 800f722:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800f726:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800f72a:	fa1f f888 	uxth.w	r8, r8
 800f72e:	1419      	asrs	r1, r3, #16
 800f730:	454e      	cmp	r6, r9
 800f732:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800f736:	f84a 3b04 	str.w	r3, [sl], #4
 800f73a:	d8e7      	bhi.n	800f70c <__mdiff+0x80>
 800f73c:	1b33      	subs	r3, r6, r4
 800f73e:	3b15      	subs	r3, #21
 800f740:	f023 0303 	bic.w	r3, r3, #3
 800f744:	3304      	adds	r3, #4
 800f746:	3415      	adds	r4, #21
 800f748:	42a6      	cmp	r6, r4
 800f74a:	bf38      	it	cc
 800f74c:	2304      	movcc	r3, #4
 800f74e:	441d      	add	r5, r3
 800f750:	4473      	add	r3, lr
 800f752:	469e      	mov	lr, r3
 800f754:	462e      	mov	r6, r5
 800f756:	4566      	cmp	r6, ip
 800f758:	d30e      	bcc.n	800f778 <__mdiff+0xec>
 800f75a:	f10c 0203 	add.w	r2, ip, #3
 800f75e:	1b52      	subs	r2, r2, r5
 800f760:	f022 0203 	bic.w	r2, r2, #3
 800f764:	3d03      	subs	r5, #3
 800f766:	45ac      	cmp	ip, r5
 800f768:	bf38      	it	cc
 800f76a:	2200      	movcc	r2, #0
 800f76c:	441a      	add	r2, r3
 800f76e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800f772:	b17b      	cbz	r3, 800f794 <__mdiff+0x108>
 800f774:	6107      	str	r7, [r0, #16]
 800f776:	e7a3      	b.n	800f6c0 <__mdiff+0x34>
 800f778:	f856 8b04 	ldr.w	r8, [r6], #4
 800f77c:	fa11 f288 	uxtah	r2, r1, r8
 800f780:	1414      	asrs	r4, r2, #16
 800f782:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800f786:	b292      	uxth	r2, r2
 800f788:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800f78c:	f84e 2b04 	str.w	r2, [lr], #4
 800f790:	1421      	asrs	r1, r4, #16
 800f792:	e7e0      	b.n	800f756 <__mdiff+0xca>
 800f794:	3f01      	subs	r7, #1
 800f796:	e7ea      	b.n	800f76e <__mdiff+0xe2>
 800f798:	08010e07 	.word	0x08010e07
 800f79c:	08010e78 	.word	0x08010e78

0800f7a0 <__d2b>:
 800f7a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f7a4:	4689      	mov	r9, r1
 800f7a6:	2101      	movs	r1, #1
 800f7a8:	ec57 6b10 	vmov	r6, r7, d0
 800f7ac:	4690      	mov	r8, r2
 800f7ae:	f7ff fccf 	bl	800f150 <_Balloc>
 800f7b2:	4604      	mov	r4, r0
 800f7b4:	b930      	cbnz	r0, 800f7c4 <__d2b+0x24>
 800f7b6:	4602      	mov	r2, r0
 800f7b8:	4b25      	ldr	r3, [pc, #148]	; (800f850 <__d2b+0xb0>)
 800f7ba:	4826      	ldr	r0, [pc, #152]	; (800f854 <__d2b+0xb4>)
 800f7bc:	f240 310a 	movw	r1, #778	; 0x30a
 800f7c0:	f000 fc2c 	bl	801001c <__assert_func>
 800f7c4:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800f7c8:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800f7cc:	bb35      	cbnz	r5, 800f81c <__d2b+0x7c>
 800f7ce:	2e00      	cmp	r6, #0
 800f7d0:	9301      	str	r3, [sp, #4]
 800f7d2:	d028      	beq.n	800f826 <__d2b+0x86>
 800f7d4:	4668      	mov	r0, sp
 800f7d6:	9600      	str	r6, [sp, #0]
 800f7d8:	f7ff fd82 	bl	800f2e0 <__lo0bits>
 800f7dc:	9900      	ldr	r1, [sp, #0]
 800f7de:	b300      	cbz	r0, 800f822 <__d2b+0x82>
 800f7e0:	9a01      	ldr	r2, [sp, #4]
 800f7e2:	f1c0 0320 	rsb	r3, r0, #32
 800f7e6:	fa02 f303 	lsl.w	r3, r2, r3
 800f7ea:	430b      	orrs	r3, r1
 800f7ec:	40c2      	lsrs	r2, r0
 800f7ee:	6163      	str	r3, [r4, #20]
 800f7f0:	9201      	str	r2, [sp, #4]
 800f7f2:	9b01      	ldr	r3, [sp, #4]
 800f7f4:	61a3      	str	r3, [r4, #24]
 800f7f6:	2b00      	cmp	r3, #0
 800f7f8:	bf14      	ite	ne
 800f7fa:	2202      	movne	r2, #2
 800f7fc:	2201      	moveq	r2, #1
 800f7fe:	6122      	str	r2, [r4, #16]
 800f800:	b1d5      	cbz	r5, 800f838 <__d2b+0x98>
 800f802:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800f806:	4405      	add	r5, r0
 800f808:	f8c9 5000 	str.w	r5, [r9]
 800f80c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800f810:	f8c8 0000 	str.w	r0, [r8]
 800f814:	4620      	mov	r0, r4
 800f816:	b003      	add	sp, #12
 800f818:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f81c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800f820:	e7d5      	b.n	800f7ce <__d2b+0x2e>
 800f822:	6161      	str	r1, [r4, #20]
 800f824:	e7e5      	b.n	800f7f2 <__d2b+0x52>
 800f826:	a801      	add	r0, sp, #4
 800f828:	f7ff fd5a 	bl	800f2e0 <__lo0bits>
 800f82c:	9b01      	ldr	r3, [sp, #4]
 800f82e:	6163      	str	r3, [r4, #20]
 800f830:	2201      	movs	r2, #1
 800f832:	6122      	str	r2, [r4, #16]
 800f834:	3020      	adds	r0, #32
 800f836:	e7e3      	b.n	800f800 <__d2b+0x60>
 800f838:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800f83c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800f840:	f8c9 0000 	str.w	r0, [r9]
 800f844:	6918      	ldr	r0, [r3, #16]
 800f846:	f7ff fd2b 	bl	800f2a0 <__hi0bits>
 800f84a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800f84e:	e7df      	b.n	800f810 <__d2b+0x70>
 800f850:	08010e07 	.word	0x08010e07
 800f854:	08010e78 	.word	0x08010e78

0800f858 <_calloc_r>:
 800f858:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f85a:	fba1 2402 	umull	r2, r4, r1, r2
 800f85e:	b94c      	cbnz	r4, 800f874 <_calloc_r+0x1c>
 800f860:	4611      	mov	r1, r2
 800f862:	9201      	str	r2, [sp, #4]
 800f864:	f7fd ffa8 	bl	800d7b8 <_malloc_r>
 800f868:	9a01      	ldr	r2, [sp, #4]
 800f86a:	4605      	mov	r5, r0
 800f86c:	b930      	cbnz	r0, 800f87c <_calloc_r+0x24>
 800f86e:	4628      	mov	r0, r5
 800f870:	b003      	add	sp, #12
 800f872:	bd30      	pop	{r4, r5, pc}
 800f874:	220c      	movs	r2, #12
 800f876:	6002      	str	r2, [r0, #0]
 800f878:	2500      	movs	r5, #0
 800f87a:	e7f8      	b.n	800f86e <_calloc_r+0x16>
 800f87c:	4621      	mov	r1, r4
 800f87e:	f7fd ff27 	bl	800d6d0 <memset>
 800f882:	e7f4      	b.n	800f86e <_calloc_r+0x16>

0800f884 <__ssputs_r>:
 800f884:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f888:	688e      	ldr	r6, [r1, #8]
 800f88a:	429e      	cmp	r6, r3
 800f88c:	4682      	mov	sl, r0
 800f88e:	460c      	mov	r4, r1
 800f890:	4690      	mov	r8, r2
 800f892:	461f      	mov	r7, r3
 800f894:	d838      	bhi.n	800f908 <__ssputs_r+0x84>
 800f896:	898a      	ldrh	r2, [r1, #12]
 800f898:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800f89c:	d032      	beq.n	800f904 <__ssputs_r+0x80>
 800f89e:	6825      	ldr	r5, [r4, #0]
 800f8a0:	6909      	ldr	r1, [r1, #16]
 800f8a2:	eba5 0901 	sub.w	r9, r5, r1
 800f8a6:	6965      	ldr	r5, [r4, #20]
 800f8a8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800f8ac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800f8b0:	3301      	adds	r3, #1
 800f8b2:	444b      	add	r3, r9
 800f8b4:	106d      	asrs	r5, r5, #1
 800f8b6:	429d      	cmp	r5, r3
 800f8b8:	bf38      	it	cc
 800f8ba:	461d      	movcc	r5, r3
 800f8bc:	0553      	lsls	r3, r2, #21
 800f8be:	d531      	bpl.n	800f924 <__ssputs_r+0xa0>
 800f8c0:	4629      	mov	r1, r5
 800f8c2:	f7fd ff79 	bl	800d7b8 <_malloc_r>
 800f8c6:	4606      	mov	r6, r0
 800f8c8:	b950      	cbnz	r0, 800f8e0 <__ssputs_r+0x5c>
 800f8ca:	230c      	movs	r3, #12
 800f8cc:	f8ca 3000 	str.w	r3, [sl]
 800f8d0:	89a3      	ldrh	r3, [r4, #12]
 800f8d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f8d6:	81a3      	strh	r3, [r4, #12]
 800f8d8:	f04f 30ff 	mov.w	r0, #4294967295
 800f8dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f8e0:	6921      	ldr	r1, [r4, #16]
 800f8e2:	464a      	mov	r2, r9
 800f8e4:	f7fd fee6 	bl	800d6b4 <memcpy>
 800f8e8:	89a3      	ldrh	r3, [r4, #12]
 800f8ea:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800f8ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f8f2:	81a3      	strh	r3, [r4, #12]
 800f8f4:	6126      	str	r6, [r4, #16]
 800f8f6:	6165      	str	r5, [r4, #20]
 800f8f8:	444e      	add	r6, r9
 800f8fa:	eba5 0509 	sub.w	r5, r5, r9
 800f8fe:	6026      	str	r6, [r4, #0]
 800f900:	60a5      	str	r5, [r4, #8]
 800f902:	463e      	mov	r6, r7
 800f904:	42be      	cmp	r6, r7
 800f906:	d900      	bls.n	800f90a <__ssputs_r+0x86>
 800f908:	463e      	mov	r6, r7
 800f90a:	6820      	ldr	r0, [r4, #0]
 800f90c:	4632      	mov	r2, r6
 800f90e:	4641      	mov	r1, r8
 800f910:	f000 fd10 	bl	8010334 <memmove>
 800f914:	68a3      	ldr	r3, [r4, #8]
 800f916:	1b9b      	subs	r3, r3, r6
 800f918:	60a3      	str	r3, [r4, #8]
 800f91a:	6823      	ldr	r3, [r4, #0]
 800f91c:	4433      	add	r3, r6
 800f91e:	6023      	str	r3, [r4, #0]
 800f920:	2000      	movs	r0, #0
 800f922:	e7db      	b.n	800f8dc <__ssputs_r+0x58>
 800f924:	462a      	mov	r2, r5
 800f926:	f000 fd1f 	bl	8010368 <_realloc_r>
 800f92a:	4606      	mov	r6, r0
 800f92c:	2800      	cmp	r0, #0
 800f92e:	d1e1      	bne.n	800f8f4 <__ssputs_r+0x70>
 800f930:	6921      	ldr	r1, [r4, #16]
 800f932:	4650      	mov	r0, sl
 800f934:	f7fd fed4 	bl	800d6e0 <_free_r>
 800f938:	e7c7      	b.n	800f8ca <__ssputs_r+0x46>
	...

0800f93c <_svfiprintf_r>:
 800f93c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f940:	4698      	mov	r8, r3
 800f942:	898b      	ldrh	r3, [r1, #12]
 800f944:	061b      	lsls	r3, r3, #24
 800f946:	b09d      	sub	sp, #116	; 0x74
 800f948:	4607      	mov	r7, r0
 800f94a:	460d      	mov	r5, r1
 800f94c:	4614      	mov	r4, r2
 800f94e:	d50e      	bpl.n	800f96e <_svfiprintf_r+0x32>
 800f950:	690b      	ldr	r3, [r1, #16]
 800f952:	b963      	cbnz	r3, 800f96e <_svfiprintf_r+0x32>
 800f954:	2140      	movs	r1, #64	; 0x40
 800f956:	f7fd ff2f 	bl	800d7b8 <_malloc_r>
 800f95a:	6028      	str	r0, [r5, #0]
 800f95c:	6128      	str	r0, [r5, #16]
 800f95e:	b920      	cbnz	r0, 800f96a <_svfiprintf_r+0x2e>
 800f960:	230c      	movs	r3, #12
 800f962:	603b      	str	r3, [r7, #0]
 800f964:	f04f 30ff 	mov.w	r0, #4294967295
 800f968:	e0d1      	b.n	800fb0e <_svfiprintf_r+0x1d2>
 800f96a:	2340      	movs	r3, #64	; 0x40
 800f96c:	616b      	str	r3, [r5, #20]
 800f96e:	2300      	movs	r3, #0
 800f970:	9309      	str	r3, [sp, #36]	; 0x24
 800f972:	2320      	movs	r3, #32
 800f974:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f978:	f8cd 800c 	str.w	r8, [sp, #12]
 800f97c:	2330      	movs	r3, #48	; 0x30
 800f97e:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800fb28 <_svfiprintf_r+0x1ec>
 800f982:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800f986:	f04f 0901 	mov.w	r9, #1
 800f98a:	4623      	mov	r3, r4
 800f98c:	469a      	mov	sl, r3
 800f98e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f992:	b10a      	cbz	r2, 800f998 <_svfiprintf_r+0x5c>
 800f994:	2a25      	cmp	r2, #37	; 0x25
 800f996:	d1f9      	bne.n	800f98c <_svfiprintf_r+0x50>
 800f998:	ebba 0b04 	subs.w	fp, sl, r4
 800f99c:	d00b      	beq.n	800f9b6 <_svfiprintf_r+0x7a>
 800f99e:	465b      	mov	r3, fp
 800f9a0:	4622      	mov	r2, r4
 800f9a2:	4629      	mov	r1, r5
 800f9a4:	4638      	mov	r0, r7
 800f9a6:	f7ff ff6d 	bl	800f884 <__ssputs_r>
 800f9aa:	3001      	adds	r0, #1
 800f9ac:	f000 80aa 	beq.w	800fb04 <_svfiprintf_r+0x1c8>
 800f9b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f9b2:	445a      	add	r2, fp
 800f9b4:	9209      	str	r2, [sp, #36]	; 0x24
 800f9b6:	f89a 3000 	ldrb.w	r3, [sl]
 800f9ba:	2b00      	cmp	r3, #0
 800f9bc:	f000 80a2 	beq.w	800fb04 <_svfiprintf_r+0x1c8>
 800f9c0:	2300      	movs	r3, #0
 800f9c2:	f04f 32ff 	mov.w	r2, #4294967295
 800f9c6:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800f9ca:	f10a 0a01 	add.w	sl, sl, #1
 800f9ce:	9304      	str	r3, [sp, #16]
 800f9d0:	9307      	str	r3, [sp, #28]
 800f9d2:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800f9d6:	931a      	str	r3, [sp, #104]	; 0x68
 800f9d8:	4654      	mov	r4, sl
 800f9da:	2205      	movs	r2, #5
 800f9dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 800f9e0:	4851      	ldr	r0, [pc, #324]	; (800fb28 <_svfiprintf_r+0x1ec>)
 800f9e2:	f7f0 fc0d 	bl	8000200 <memchr>
 800f9e6:	9a04      	ldr	r2, [sp, #16]
 800f9e8:	b9d8      	cbnz	r0, 800fa22 <_svfiprintf_r+0xe6>
 800f9ea:	06d0      	lsls	r0, r2, #27
 800f9ec:	bf44      	itt	mi
 800f9ee:	2320      	movmi	r3, #32
 800f9f0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f9f4:	0711      	lsls	r1, r2, #28
 800f9f6:	bf44      	itt	mi
 800f9f8:	232b      	movmi	r3, #43	; 0x2b
 800f9fa:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800f9fe:	f89a 3000 	ldrb.w	r3, [sl]
 800fa02:	2b2a      	cmp	r3, #42	; 0x2a
 800fa04:	d015      	beq.n	800fa32 <_svfiprintf_r+0xf6>
 800fa06:	9a07      	ldr	r2, [sp, #28]
 800fa08:	4654      	mov	r4, sl
 800fa0a:	2000      	movs	r0, #0
 800fa0c:	f04f 0c0a 	mov.w	ip, #10
 800fa10:	4621      	mov	r1, r4
 800fa12:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fa16:	3b30      	subs	r3, #48	; 0x30
 800fa18:	2b09      	cmp	r3, #9
 800fa1a:	d94e      	bls.n	800faba <_svfiprintf_r+0x17e>
 800fa1c:	b1b0      	cbz	r0, 800fa4c <_svfiprintf_r+0x110>
 800fa1e:	9207      	str	r2, [sp, #28]
 800fa20:	e014      	b.n	800fa4c <_svfiprintf_r+0x110>
 800fa22:	eba0 0308 	sub.w	r3, r0, r8
 800fa26:	fa09 f303 	lsl.w	r3, r9, r3
 800fa2a:	4313      	orrs	r3, r2
 800fa2c:	9304      	str	r3, [sp, #16]
 800fa2e:	46a2      	mov	sl, r4
 800fa30:	e7d2      	b.n	800f9d8 <_svfiprintf_r+0x9c>
 800fa32:	9b03      	ldr	r3, [sp, #12]
 800fa34:	1d19      	adds	r1, r3, #4
 800fa36:	681b      	ldr	r3, [r3, #0]
 800fa38:	9103      	str	r1, [sp, #12]
 800fa3a:	2b00      	cmp	r3, #0
 800fa3c:	bfbb      	ittet	lt
 800fa3e:	425b      	neglt	r3, r3
 800fa40:	f042 0202 	orrlt.w	r2, r2, #2
 800fa44:	9307      	strge	r3, [sp, #28]
 800fa46:	9307      	strlt	r3, [sp, #28]
 800fa48:	bfb8      	it	lt
 800fa4a:	9204      	strlt	r2, [sp, #16]
 800fa4c:	7823      	ldrb	r3, [r4, #0]
 800fa4e:	2b2e      	cmp	r3, #46	; 0x2e
 800fa50:	d10c      	bne.n	800fa6c <_svfiprintf_r+0x130>
 800fa52:	7863      	ldrb	r3, [r4, #1]
 800fa54:	2b2a      	cmp	r3, #42	; 0x2a
 800fa56:	d135      	bne.n	800fac4 <_svfiprintf_r+0x188>
 800fa58:	9b03      	ldr	r3, [sp, #12]
 800fa5a:	1d1a      	adds	r2, r3, #4
 800fa5c:	681b      	ldr	r3, [r3, #0]
 800fa5e:	9203      	str	r2, [sp, #12]
 800fa60:	2b00      	cmp	r3, #0
 800fa62:	bfb8      	it	lt
 800fa64:	f04f 33ff 	movlt.w	r3, #4294967295
 800fa68:	3402      	adds	r4, #2
 800fa6a:	9305      	str	r3, [sp, #20]
 800fa6c:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800fb38 <_svfiprintf_r+0x1fc>
 800fa70:	7821      	ldrb	r1, [r4, #0]
 800fa72:	2203      	movs	r2, #3
 800fa74:	4650      	mov	r0, sl
 800fa76:	f7f0 fbc3 	bl	8000200 <memchr>
 800fa7a:	b140      	cbz	r0, 800fa8e <_svfiprintf_r+0x152>
 800fa7c:	2340      	movs	r3, #64	; 0x40
 800fa7e:	eba0 000a 	sub.w	r0, r0, sl
 800fa82:	fa03 f000 	lsl.w	r0, r3, r0
 800fa86:	9b04      	ldr	r3, [sp, #16]
 800fa88:	4303      	orrs	r3, r0
 800fa8a:	3401      	adds	r4, #1
 800fa8c:	9304      	str	r3, [sp, #16]
 800fa8e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fa92:	4826      	ldr	r0, [pc, #152]	; (800fb2c <_svfiprintf_r+0x1f0>)
 800fa94:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800fa98:	2206      	movs	r2, #6
 800fa9a:	f7f0 fbb1 	bl	8000200 <memchr>
 800fa9e:	2800      	cmp	r0, #0
 800faa0:	d038      	beq.n	800fb14 <_svfiprintf_r+0x1d8>
 800faa2:	4b23      	ldr	r3, [pc, #140]	; (800fb30 <_svfiprintf_r+0x1f4>)
 800faa4:	bb1b      	cbnz	r3, 800faee <_svfiprintf_r+0x1b2>
 800faa6:	9b03      	ldr	r3, [sp, #12]
 800faa8:	3307      	adds	r3, #7
 800faaa:	f023 0307 	bic.w	r3, r3, #7
 800faae:	3308      	adds	r3, #8
 800fab0:	9303      	str	r3, [sp, #12]
 800fab2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fab4:	4433      	add	r3, r6
 800fab6:	9309      	str	r3, [sp, #36]	; 0x24
 800fab8:	e767      	b.n	800f98a <_svfiprintf_r+0x4e>
 800faba:	fb0c 3202 	mla	r2, ip, r2, r3
 800fabe:	460c      	mov	r4, r1
 800fac0:	2001      	movs	r0, #1
 800fac2:	e7a5      	b.n	800fa10 <_svfiprintf_r+0xd4>
 800fac4:	2300      	movs	r3, #0
 800fac6:	3401      	adds	r4, #1
 800fac8:	9305      	str	r3, [sp, #20]
 800faca:	4619      	mov	r1, r3
 800facc:	f04f 0c0a 	mov.w	ip, #10
 800fad0:	4620      	mov	r0, r4
 800fad2:	f810 2b01 	ldrb.w	r2, [r0], #1
 800fad6:	3a30      	subs	r2, #48	; 0x30
 800fad8:	2a09      	cmp	r2, #9
 800fada:	d903      	bls.n	800fae4 <_svfiprintf_r+0x1a8>
 800fadc:	2b00      	cmp	r3, #0
 800fade:	d0c5      	beq.n	800fa6c <_svfiprintf_r+0x130>
 800fae0:	9105      	str	r1, [sp, #20]
 800fae2:	e7c3      	b.n	800fa6c <_svfiprintf_r+0x130>
 800fae4:	fb0c 2101 	mla	r1, ip, r1, r2
 800fae8:	4604      	mov	r4, r0
 800faea:	2301      	movs	r3, #1
 800faec:	e7f0      	b.n	800fad0 <_svfiprintf_r+0x194>
 800faee:	ab03      	add	r3, sp, #12
 800faf0:	9300      	str	r3, [sp, #0]
 800faf2:	462a      	mov	r2, r5
 800faf4:	4b0f      	ldr	r3, [pc, #60]	; (800fb34 <_svfiprintf_r+0x1f8>)
 800faf6:	a904      	add	r1, sp, #16
 800faf8:	4638      	mov	r0, r7
 800fafa:	f7fd ff71 	bl	800d9e0 <_printf_float>
 800fafe:	1c42      	adds	r2, r0, #1
 800fb00:	4606      	mov	r6, r0
 800fb02:	d1d6      	bne.n	800fab2 <_svfiprintf_r+0x176>
 800fb04:	89ab      	ldrh	r3, [r5, #12]
 800fb06:	065b      	lsls	r3, r3, #25
 800fb08:	f53f af2c 	bmi.w	800f964 <_svfiprintf_r+0x28>
 800fb0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fb0e:	b01d      	add	sp, #116	; 0x74
 800fb10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fb14:	ab03      	add	r3, sp, #12
 800fb16:	9300      	str	r3, [sp, #0]
 800fb18:	462a      	mov	r2, r5
 800fb1a:	4b06      	ldr	r3, [pc, #24]	; (800fb34 <_svfiprintf_r+0x1f8>)
 800fb1c:	a904      	add	r1, sp, #16
 800fb1e:	4638      	mov	r0, r7
 800fb20:	f7fe fa02 	bl	800df28 <_printf_i>
 800fb24:	e7eb      	b.n	800fafe <_svfiprintf_r+0x1c2>
 800fb26:	bf00      	nop
 800fb28:	08010fd4 	.word	0x08010fd4
 800fb2c:	08010fde 	.word	0x08010fde
 800fb30:	0800d9e1 	.word	0x0800d9e1
 800fb34:	0800f885 	.word	0x0800f885
 800fb38:	08010fda 	.word	0x08010fda

0800fb3c <__sfputc_r>:
 800fb3c:	6893      	ldr	r3, [r2, #8]
 800fb3e:	3b01      	subs	r3, #1
 800fb40:	2b00      	cmp	r3, #0
 800fb42:	b410      	push	{r4}
 800fb44:	6093      	str	r3, [r2, #8]
 800fb46:	da08      	bge.n	800fb5a <__sfputc_r+0x1e>
 800fb48:	6994      	ldr	r4, [r2, #24]
 800fb4a:	42a3      	cmp	r3, r4
 800fb4c:	db01      	blt.n	800fb52 <__sfputc_r+0x16>
 800fb4e:	290a      	cmp	r1, #10
 800fb50:	d103      	bne.n	800fb5a <__sfputc_r+0x1e>
 800fb52:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fb56:	f000 b98f 	b.w	800fe78 <__swbuf_r>
 800fb5a:	6813      	ldr	r3, [r2, #0]
 800fb5c:	1c58      	adds	r0, r3, #1
 800fb5e:	6010      	str	r0, [r2, #0]
 800fb60:	7019      	strb	r1, [r3, #0]
 800fb62:	4608      	mov	r0, r1
 800fb64:	f85d 4b04 	ldr.w	r4, [sp], #4
 800fb68:	4770      	bx	lr

0800fb6a <__sfputs_r>:
 800fb6a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb6c:	4606      	mov	r6, r0
 800fb6e:	460f      	mov	r7, r1
 800fb70:	4614      	mov	r4, r2
 800fb72:	18d5      	adds	r5, r2, r3
 800fb74:	42ac      	cmp	r4, r5
 800fb76:	d101      	bne.n	800fb7c <__sfputs_r+0x12>
 800fb78:	2000      	movs	r0, #0
 800fb7a:	e007      	b.n	800fb8c <__sfputs_r+0x22>
 800fb7c:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fb80:	463a      	mov	r2, r7
 800fb82:	4630      	mov	r0, r6
 800fb84:	f7ff ffda 	bl	800fb3c <__sfputc_r>
 800fb88:	1c43      	adds	r3, r0, #1
 800fb8a:	d1f3      	bne.n	800fb74 <__sfputs_r+0xa>
 800fb8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800fb90 <_vfiprintf_r>:
 800fb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb94:	460d      	mov	r5, r1
 800fb96:	b09d      	sub	sp, #116	; 0x74
 800fb98:	4614      	mov	r4, r2
 800fb9a:	4698      	mov	r8, r3
 800fb9c:	4606      	mov	r6, r0
 800fb9e:	b118      	cbz	r0, 800fba8 <_vfiprintf_r+0x18>
 800fba0:	6983      	ldr	r3, [r0, #24]
 800fba2:	b90b      	cbnz	r3, 800fba8 <_vfiprintf_r+0x18>
 800fba4:	f7ff fa22 	bl	800efec <__sinit>
 800fba8:	4b89      	ldr	r3, [pc, #548]	; (800fdd0 <_vfiprintf_r+0x240>)
 800fbaa:	429d      	cmp	r5, r3
 800fbac:	d11b      	bne.n	800fbe6 <_vfiprintf_r+0x56>
 800fbae:	6875      	ldr	r5, [r6, #4]
 800fbb0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fbb2:	07d9      	lsls	r1, r3, #31
 800fbb4:	d405      	bmi.n	800fbc2 <_vfiprintf_r+0x32>
 800fbb6:	89ab      	ldrh	r3, [r5, #12]
 800fbb8:	059a      	lsls	r2, r3, #22
 800fbba:	d402      	bmi.n	800fbc2 <_vfiprintf_r+0x32>
 800fbbc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fbbe:	f7ff fab8 	bl	800f132 <__retarget_lock_acquire_recursive>
 800fbc2:	89ab      	ldrh	r3, [r5, #12]
 800fbc4:	071b      	lsls	r3, r3, #28
 800fbc6:	d501      	bpl.n	800fbcc <_vfiprintf_r+0x3c>
 800fbc8:	692b      	ldr	r3, [r5, #16]
 800fbca:	b9eb      	cbnz	r3, 800fc08 <_vfiprintf_r+0x78>
 800fbcc:	4629      	mov	r1, r5
 800fbce:	4630      	mov	r0, r6
 800fbd0:	f000 f9b6 	bl	800ff40 <__swsetup_r>
 800fbd4:	b1c0      	cbz	r0, 800fc08 <_vfiprintf_r+0x78>
 800fbd6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fbd8:	07dc      	lsls	r4, r3, #31
 800fbda:	d50e      	bpl.n	800fbfa <_vfiprintf_r+0x6a>
 800fbdc:	f04f 30ff 	mov.w	r0, #4294967295
 800fbe0:	b01d      	add	sp, #116	; 0x74
 800fbe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbe6:	4b7b      	ldr	r3, [pc, #492]	; (800fdd4 <_vfiprintf_r+0x244>)
 800fbe8:	429d      	cmp	r5, r3
 800fbea:	d101      	bne.n	800fbf0 <_vfiprintf_r+0x60>
 800fbec:	68b5      	ldr	r5, [r6, #8]
 800fbee:	e7df      	b.n	800fbb0 <_vfiprintf_r+0x20>
 800fbf0:	4b79      	ldr	r3, [pc, #484]	; (800fdd8 <_vfiprintf_r+0x248>)
 800fbf2:	429d      	cmp	r5, r3
 800fbf4:	bf08      	it	eq
 800fbf6:	68f5      	ldreq	r5, [r6, #12]
 800fbf8:	e7da      	b.n	800fbb0 <_vfiprintf_r+0x20>
 800fbfa:	89ab      	ldrh	r3, [r5, #12]
 800fbfc:	0598      	lsls	r0, r3, #22
 800fbfe:	d4ed      	bmi.n	800fbdc <_vfiprintf_r+0x4c>
 800fc00:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fc02:	f7ff fa97 	bl	800f134 <__retarget_lock_release_recursive>
 800fc06:	e7e9      	b.n	800fbdc <_vfiprintf_r+0x4c>
 800fc08:	2300      	movs	r3, #0
 800fc0a:	9309      	str	r3, [sp, #36]	; 0x24
 800fc0c:	2320      	movs	r3, #32
 800fc0e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800fc12:	f8cd 800c 	str.w	r8, [sp, #12]
 800fc16:	2330      	movs	r3, #48	; 0x30
 800fc18:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800fddc <_vfiprintf_r+0x24c>
 800fc1c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800fc20:	f04f 0901 	mov.w	r9, #1
 800fc24:	4623      	mov	r3, r4
 800fc26:	469a      	mov	sl, r3
 800fc28:	f813 2b01 	ldrb.w	r2, [r3], #1
 800fc2c:	b10a      	cbz	r2, 800fc32 <_vfiprintf_r+0xa2>
 800fc2e:	2a25      	cmp	r2, #37	; 0x25
 800fc30:	d1f9      	bne.n	800fc26 <_vfiprintf_r+0x96>
 800fc32:	ebba 0b04 	subs.w	fp, sl, r4
 800fc36:	d00b      	beq.n	800fc50 <_vfiprintf_r+0xc0>
 800fc38:	465b      	mov	r3, fp
 800fc3a:	4622      	mov	r2, r4
 800fc3c:	4629      	mov	r1, r5
 800fc3e:	4630      	mov	r0, r6
 800fc40:	f7ff ff93 	bl	800fb6a <__sfputs_r>
 800fc44:	3001      	adds	r0, #1
 800fc46:	f000 80aa 	beq.w	800fd9e <_vfiprintf_r+0x20e>
 800fc4a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fc4c:	445a      	add	r2, fp
 800fc4e:	9209      	str	r2, [sp, #36]	; 0x24
 800fc50:	f89a 3000 	ldrb.w	r3, [sl]
 800fc54:	2b00      	cmp	r3, #0
 800fc56:	f000 80a2 	beq.w	800fd9e <_vfiprintf_r+0x20e>
 800fc5a:	2300      	movs	r3, #0
 800fc5c:	f04f 32ff 	mov.w	r2, #4294967295
 800fc60:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800fc64:	f10a 0a01 	add.w	sl, sl, #1
 800fc68:	9304      	str	r3, [sp, #16]
 800fc6a:	9307      	str	r3, [sp, #28]
 800fc6c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800fc70:	931a      	str	r3, [sp, #104]	; 0x68
 800fc72:	4654      	mov	r4, sl
 800fc74:	2205      	movs	r2, #5
 800fc76:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fc7a:	4858      	ldr	r0, [pc, #352]	; (800fddc <_vfiprintf_r+0x24c>)
 800fc7c:	f7f0 fac0 	bl	8000200 <memchr>
 800fc80:	9a04      	ldr	r2, [sp, #16]
 800fc82:	b9d8      	cbnz	r0, 800fcbc <_vfiprintf_r+0x12c>
 800fc84:	06d1      	lsls	r1, r2, #27
 800fc86:	bf44      	itt	mi
 800fc88:	2320      	movmi	r3, #32
 800fc8a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800fc8e:	0713      	lsls	r3, r2, #28
 800fc90:	bf44      	itt	mi
 800fc92:	232b      	movmi	r3, #43	; 0x2b
 800fc94:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800fc98:	f89a 3000 	ldrb.w	r3, [sl]
 800fc9c:	2b2a      	cmp	r3, #42	; 0x2a
 800fc9e:	d015      	beq.n	800fccc <_vfiprintf_r+0x13c>
 800fca0:	9a07      	ldr	r2, [sp, #28]
 800fca2:	4654      	mov	r4, sl
 800fca4:	2000      	movs	r0, #0
 800fca6:	f04f 0c0a 	mov.w	ip, #10
 800fcaa:	4621      	mov	r1, r4
 800fcac:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fcb0:	3b30      	subs	r3, #48	; 0x30
 800fcb2:	2b09      	cmp	r3, #9
 800fcb4:	d94e      	bls.n	800fd54 <_vfiprintf_r+0x1c4>
 800fcb6:	b1b0      	cbz	r0, 800fce6 <_vfiprintf_r+0x156>
 800fcb8:	9207      	str	r2, [sp, #28]
 800fcba:	e014      	b.n	800fce6 <_vfiprintf_r+0x156>
 800fcbc:	eba0 0308 	sub.w	r3, r0, r8
 800fcc0:	fa09 f303 	lsl.w	r3, r9, r3
 800fcc4:	4313      	orrs	r3, r2
 800fcc6:	9304      	str	r3, [sp, #16]
 800fcc8:	46a2      	mov	sl, r4
 800fcca:	e7d2      	b.n	800fc72 <_vfiprintf_r+0xe2>
 800fccc:	9b03      	ldr	r3, [sp, #12]
 800fcce:	1d19      	adds	r1, r3, #4
 800fcd0:	681b      	ldr	r3, [r3, #0]
 800fcd2:	9103      	str	r1, [sp, #12]
 800fcd4:	2b00      	cmp	r3, #0
 800fcd6:	bfbb      	ittet	lt
 800fcd8:	425b      	neglt	r3, r3
 800fcda:	f042 0202 	orrlt.w	r2, r2, #2
 800fcde:	9307      	strge	r3, [sp, #28]
 800fce0:	9307      	strlt	r3, [sp, #28]
 800fce2:	bfb8      	it	lt
 800fce4:	9204      	strlt	r2, [sp, #16]
 800fce6:	7823      	ldrb	r3, [r4, #0]
 800fce8:	2b2e      	cmp	r3, #46	; 0x2e
 800fcea:	d10c      	bne.n	800fd06 <_vfiprintf_r+0x176>
 800fcec:	7863      	ldrb	r3, [r4, #1]
 800fcee:	2b2a      	cmp	r3, #42	; 0x2a
 800fcf0:	d135      	bne.n	800fd5e <_vfiprintf_r+0x1ce>
 800fcf2:	9b03      	ldr	r3, [sp, #12]
 800fcf4:	1d1a      	adds	r2, r3, #4
 800fcf6:	681b      	ldr	r3, [r3, #0]
 800fcf8:	9203      	str	r2, [sp, #12]
 800fcfa:	2b00      	cmp	r3, #0
 800fcfc:	bfb8      	it	lt
 800fcfe:	f04f 33ff 	movlt.w	r3, #4294967295
 800fd02:	3402      	adds	r4, #2
 800fd04:	9305      	str	r3, [sp, #20]
 800fd06:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800fdec <_vfiprintf_r+0x25c>
 800fd0a:	7821      	ldrb	r1, [r4, #0]
 800fd0c:	2203      	movs	r2, #3
 800fd0e:	4650      	mov	r0, sl
 800fd10:	f7f0 fa76 	bl	8000200 <memchr>
 800fd14:	b140      	cbz	r0, 800fd28 <_vfiprintf_r+0x198>
 800fd16:	2340      	movs	r3, #64	; 0x40
 800fd18:	eba0 000a 	sub.w	r0, r0, sl
 800fd1c:	fa03 f000 	lsl.w	r0, r3, r0
 800fd20:	9b04      	ldr	r3, [sp, #16]
 800fd22:	4303      	orrs	r3, r0
 800fd24:	3401      	adds	r4, #1
 800fd26:	9304      	str	r3, [sp, #16]
 800fd28:	f814 1b01 	ldrb.w	r1, [r4], #1
 800fd2c:	482c      	ldr	r0, [pc, #176]	; (800fde0 <_vfiprintf_r+0x250>)
 800fd2e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800fd32:	2206      	movs	r2, #6
 800fd34:	f7f0 fa64 	bl	8000200 <memchr>
 800fd38:	2800      	cmp	r0, #0
 800fd3a:	d03f      	beq.n	800fdbc <_vfiprintf_r+0x22c>
 800fd3c:	4b29      	ldr	r3, [pc, #164]	; (800fde4 <_vfiprintf_r+0x254>)
 800fd3e:	bb1b      	cbnz	r3, 800fd88 <_vfiprintf_r+0x1f8>
 800fd40:	9b03      	ldr	r3, [sp, #12]
 800fd42:	3307      	adds	r3, #7
 800fd44:	f023 0307 	bic.w	r3, r3, #7
 800fd48:	3308      	adds	r3, #8
 800fd4a:	9303      	str	r3, [sp, #12]
 800fd4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fd4e:	443b      	add	r3, r7
 800fd50:	9309      	str	r3, [sp, #36]	; 0x24
 800fd52:	e767      	b.n	800fc24 <_vfiprintf_r+0x94>
 800fd54:	fb0c 3202 	mla	r2, ip, r2, r3
 800fd58:	460c      	mov	r4, r1
 800fd5a:	2001      	movs	r0, #1
 800fd5c:	e7a5      	b.n	800fcaa <_vfiprintf_r+0x11a>
 800fd5e:	2300      	movs	r3, #0
 800fd60:	3401      	adds	r4, #1
 800fd62:	9305      	str	r3, [sp, #20]
 800fd64:	4619      	mov	r1, r3
 800fd66:	f04f 0c0a 	mov.w	ip, #10
 800fd6a:	4620      	mov	r0, r4
 800fd6c:	f810 2b01 	ldrb.w	r2, [r0], #1
 800fd70:	3a30      	subs	r2, #48	; 0x30
 800fd72:	2a09      	cmp	r2, #9
 800fd74:	d903      	bls.n	800fd7e <_vfiprintf_r+0x1ee>
 800fd76:	2b00      	cmp	r3, #0
 800fd78:	d0c5      	beq.n	800fd06 <_vfiprintf_r+0x176>
 800fd7a:	9105      	str	r1, [sp, #20]
 800fd7c:	e7c3      	b.n	800fd06 <_vfiprintf_r+0x176>
 800fd7e:	fb0c 2101 	mla	r1, ip, r1, r2
 800fd82:	4604      	mov	r4, r0
 800fd84:	2301      	movs	r3, #1
 800fd86:	e7f0      	b.n	800fd6a <_vfiprintf_r+0x1da>
 800fd88:	ab03      	add	r3, sp, #12
 800fd8a:	9300      	str	r3, [sp, #0]
 800fd8c:	462a      	mov	r2, r5
 800fd8e:	4b16      	ldr	r3, [pc, #88]	; (800fde8 <_vfiprintf_r+0x258>)
 800fd90:	a904      	add	r1, sp, #16
 800fd92:	4630      	mov	r0, r6
 800fd94:	f7fd fe24 	bl	800d9e0 <_printf_float>
 800fd98:	4607      	mov	r7, r0
 800fd9a:	1c78      	adds	r0, r7, #1
 800fd9c:	d1d6      	bne.n	800fd4c <_vfiprintf_r+0x1bc>
 800fd9e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800fda0:	07d9      	lsls	r1, r3, #31
 800fda2:	d405      	bmi.n	800fdb0 <_vfiprintf_r+0x220>
 800fda4:	89ab      	ldrh	r3, [r5, #12]
 800fda6:	059a      	lsls	r2, r3, #22
 800fda8:	d402      	bmi.n	800fdb0 <_vfiprintf_r+0x220>
 800fdaa:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800fdac:	f7ff f9c2 	bl	800f134 <__retarget_lock_release_recursive>
 800fdb0:	89ab      	ldrh	r3, [r5, #12]
 800fdb2:	065b      	lsls	r3, r3, #25
 800fdb4:	f53f af12 	bmi.w	800fbdc <_vfiprintf_r+0x4c>
 800fdb8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fdba:	e711      	b.n	800fbe0 <_vfiprintf_r+0x50>
 800fdbc:	ab03      	add	r3, sp, #12
 800fdbe:	9300      	str	r3, [sp, #0]
 800fdc0:	462a      	mov	r2, r5
 800fdc2:	4b09      	ldr	r3, [pc, #36]	; (800fde8 <_vfiprintf_r+0x258>)
 800fdc4:	a904      	add	r1, sp, #16
 800fdc6:	4630      	mov	r0, r6
 800fdc8:	f7fe f8ae 	bl	800df28 <_printf_i>
 800fdcc:	e7e4      	b.n	800fd98 <_vfiprintf_r+0x208>
 800fdce:	bf00      	nop
 800fdd0:	08010e38 	.word	0x08010e38
 800fdd4:	08010e58 	.word	0x08010e58
 800fdd8:	08010e18 	.word	0x08010e18
 800fddc:	08010fd4 	.word	0x08010fd4
 800fde0:	08010fde 	.word	0x08010fde
 800fde4:	0800d9e1 	.word	0x0800d9e1
 800fde8:	0800fb6b 	.word	0x0800fb6b
 800fdec:	08010fda 	.word	0x08010fda

0800fdf0 <__sread>:
 800fdf0:	b510      	push	{r4, lr}
 800fdf2:	460c      	mov	r4, r1
 800fdf4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fdf8:	f000 fae6 	bl	80103c8 <_read_r>
 800fdfc:	2800      	cmp	r0, #0
 800fdfe:	bfab      	itete	ge
 800fe00:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800fe02:	89a3      	ldrhlt	r3, [r4, #12]
 800fe04:	181b      	addge	r3, r3, r0
 800fe06:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800fe0a:	bfac      	ite	ge
 800fe0c:	6563      	strge	r3, [r4, #84]	; 0x54
 800fe0e:	81a3      	strhlt	r3, [r4, #12]
 800fe10:	bd10      	pop	{r4, pc}

0800fe12 <__swrite>:
 800fe12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fe16:	461f      	mov	r7, r3
 800fe18:	898b      	ldrh	r3, [r1, #12]
 800fe1a:	05db      	lsls	r3, r3, #23
 800fe1c:	4605      	mov	r5, r0
 800fe1e:	460c      	mov	r4, r1
 800fe20:	4616      	mov	r6, r2
 800fe22:	d505      	bpl.n	800fe30 <__swrite+0x1e>
 800fe24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe28:	2302      	movs	r3, #2
 800fe2a:	2200      	movs	r2, #0
 800fe2c:	f000 f9f8 	bl	8010220 <_lseek_r>
 800fe30:	89a3      	ldrh	r3, [r4, #12]
 800fe32:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800fe36:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800fe3a:	81a3      	strh	r3, [r4, #12]
 800fe3c:	4632      	mov	r2, r6
 800fe3e:	463b      	mov	r3, r7
 800fe40:	4628      	mov	r0, r5
 800fe42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fe46:	f000 b869 	b.w	800ff1c <_write_r>

0800fe4a <__sseek>:
 800fe4a:	b510      	push	{r4, lr}
 800fe4c:	460c      	mov	r4, r1
 800fe4e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe52:	f000 f9e5 	bl	8010220 <_lseek_r>
 800fe56:	1c43      	adds	r3, r0, #1
 800fe58:	89a3      	ldrh	r3, [r4, #12]
 800fe5a:	bf15      	itete	ne
 800fe5c:	6560      	strne	r0, [r4, #84]	; 0x54
 800fe5e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800fe62:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800fe66:	81a3      	strheq	r3, [r4, #12]
 800fe68:	bf18      	it	ne
 800fe6a:	81a3      	strhne	r3, [r4, #12]
 800fe6c:	bd10      	pop	{r4, pc}

0800fe6e <__sclose>:
 800fe6e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800fe72:	f000 b8f1 	b.w	8010058 <_close_r>
	...

0800fe78 <__swbuf_r>:
 800fe78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fe7a:	460e      	mov	r6, r1
 800fe7c:	4614      	mov	r4, r2
 800fe7e:	4605      	mov	r5, r0
 800fe80:	b118      	cbz	r0, 800fe8a <__swbuf_r+0x12>
 800fe82:	6983      	ldr	r3, [r0, #24]
 800fe84:	b90b      	cbnz	r3, 800fe8a <__swbuf_r+0x12>
 800fe86:	f7ff f8b1 	bl	800efec <__sinit>
 800fe8a:	4b21      	ldr	r3, [pc, #132]	; (800ff10 <__swbuf_r+0x98>)
 800fe8c:	429c      	cmp	r4, r3
 800fe8e:	d12b      	bne.n	800fee8 <__swbuf_r+0x70>
 800fe90:	686c      	ldr	r4, [r5, #4]
 800fe92:	69a3      	ldr	r3, [r4, #24]
 800fe94:	60a3      	str	r3, [r4, #8]
 800fe96:	89a3      	ldrh	r3, [r4, #12]
 800fe98:	071a      	lsls	r2, r3, #28
 800fe9a:	d52f      	bpl.n	800fefc <__swbuf_r+0x84>
 800fe9c:	6923      	ldr	r3, [r4, #16]
 800fe9e:	b36b      	cbz	r3, 800fefc <__swbuf_r+0x84>
 800fea0:	6923      	ldr	r3, [r4, #16]
 800fea2:	6820      	ldr	r0, [r4, #0]
 800fea4:	1ac0      	subs	r0, r0, r3
 800fea6:	6963      	ldr	r3, [r4, #20]
 800fea8:	b2f6      	uxtb	r6, r6
 800feaa:	4283      	cmp	r3, r0
 800feac:	4637      	mov	r7, r6
 800feae:	dc04      	bgt.n	800feba <__swbuf_r+0x42>
 800feb0:	4621      	mov	r1, r4
 800feb2:	4628      	mov	r0, r5
 800feb4:	f000 f966 	bl	8010184 <_fflush_r>
 800feb8:	bb30      	cbnz	r0, 800ff08 <__swbuf_r+0x90>
 800feba:	68a3      	ldr	r3, [r4, #8]
 800febc:	3b01      	subs	r3, #1
 800febe:	60a3      	str	r3, [r4, #8]
 800fec0:	6823      	ldr	r3, [r4, #0]
 800fec2:	1c5a      	adds	r2, r3, #1
 800fec4:	6022      	str	r2, [r4, #0]
 800fec6:	701e      	strb	r6, [r3, #0]
 800fec8:	6963      	ldr	r3, [r4, #20]
 800feca:	3001      	adds	r0, #1
 800fecc:	4283      	cmp	r3, r0
 800fece:	d004      	beq.n	800feda <__swbuf_r+0x62>
 800fed0:	89a3      	ldrh	r3, [r4, #12]
 800fed2:	07db      	lsls	r3, r3, #31
 800fed4:	d506      	bpl.n	800fee4 <__swbuf_r+0x6c>
 800fed6:	2e0a      	cmp	r6, #10
 800fed8:	d104      	bne.n	800fee4 <__swbuf_r+0x6c>
 800feda:	4621      	mov	r1, r4
 800fedc:	4628      	mov	r0, r5
 800fede:	f000 f951 	bl	8010184 <_fflush_r>
 800fee2:	b988      	cbnz	r0, 800ff08 <__swbuf_r+0x90>
 800fee4:	4638      	mov	r0, r7
 800fee6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fee8:	4b0a      	ldr	r3, [pc, #40]	; (800ff14 <__swbuf_r+0x9c>)
 800feea:	429c      	cmp	r4, r3
 800feec:	d101      	bne.n	800fef2 <__swbuf_r+0x7a>
 800feee:	68ac      	ldr	r4, [r5, #8]
 800fef0:	e7cf      	b.n	800fe92 <__swbuf_r+0x1a>
 800fef2:	4b09      	ldr	r3, [pc, #36]	; (800ff18 <__swbuf_r+0xa0>)
 800fef4:	429c      	cmp	r4, r3
 800fef6:	bf08      	it	eq
 800fef8:	68ec      	ldreq	r4, [r5, #12]
 800fefa:	e7ca      	b.n	800fe92 <__swbuf_r+0x1a>
 800fefc:	4621      	mov	r1, r4
 800fefe:	4628      	mov	r0, r5
 800ff00:	f000 f81e 	bl	800ff40 <__swsetup_r>
 800ff04:	2800      	cmp	r0, #0
 800ff06:	d0cb      	beq.n	800fea0 <__swbuf_r+0x28>
 800ff08:	f04f 37ff 	mov.w	r7, #4294967295
 800ff0c:	e7ea      	b.n	800fee4 <__swbuf_r+0x6c>
 800ff0e:	bf00      	nop
 800ff10:	08010e38 	.word	0x08010e38
 800ff14:	08010e58 	.word	0x08010e58
 800ff18:	08010e18 	.word	0x08010e18

0800ff1c <_write_r>:
 800ff1c:	b538      	push	{r3, r4, r5, lr}
 800ff1e:	4d07      	ldr	r5, [pc, #28]	; (800ff3c <_write_r+0x20>)
 800ff20:	4604      	mov	r4, r0
 800ff22:	4608      	mov	r0, r1
 800ff24:	4611      	mov	r1, r2
 800ff26:	2200      	movs	r2, #0
 800ff28:	602a      	str	r2, [r5, #0]
 800ff2a:	461a      	mov	r2, r3
 800ff2c:	f7f9 fd12 	bl	8009954 <_write>
 800ff30:	1c43      	adds	r3, r0, #1
 800ff32:	d102      	bne.n	800ff3a <_write_r+0x1e>
 800ff34:	682b      	ldr	r3, [r5, #0]
 800ff36:	b103      	cbz	r3, 800ff3a <_write_r+0x1e>
 800ff38:	6023      	str	r3, [r4, #0]
 800ff3a:	bd38      	pop	{r3, r4, r5, pc}
 800ff3c:	20008200 	.word	0x20008200

0800ff40 <__swsetup_r>:
 800ff40:	4b32      	ldr	r3, [pc, #200]	; (801000c <__swsetup_r+0xcc>)
 800ff42:	b570      	push	{r4, r5, r6, lr}
 800ff44:	681d      	ldr	r5, [r3, #0]
 800ff46:	4606      	mov	r6, r0
 800ff48:	460c      	mov	r4, r1
 800ff4a:	b125      	cbz	r5, 800ff56 <__swsetup_r+0x16>
 800ff4c:	69ab      	ldr	r3, [r5, #24]
 800ff4e:	b913      	cbnz	r3, 800ff56 <__swsetup_r+0x16>
 800ff50:	4628      	mov	r0, r5
 800ff52:	f7ff f84b 	bl	800efec <__sinit>
 800ff56:	4b2e      	ldr	r3, [pc, #184]	; (8010010 <__swsetup_r+0xd0>)
 800ff58:	429c      	cmp	r4, r3
 800ff5a:	d10f      	bne.n	800ff7c <__swsetup_r+0x3c>
 800ff5c:	686c      	ldr	r4, [r5, #4]
 800ff5e:	89a3      	ldrh	r3, [r4, #12]
 800ff60:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ff64:	0719      	lsls	r1, r3, #28
 800ff66:	d42c      	bmi.n	800ffc2 <__swsetup_r+0x82>
 800ff68:	06dd      	lsls	r5, r3, #27
 800ff6a:	d411      	bmi.n	800ff90 <__swsetup_r+0x50>
 800ff6c:	2309      	movs	r3, #9
 800ff6e:	6033      	str	r3, [r6, #0]
 800ff70:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800ff74:	81a3      	strh	r3, [r4, #12]
 800ff76:	f04f 30ff 	mov.w	r0, #4294967295
 800ff7a:	e03e      	b.n	800fffa <__swsetup_r+0xba>
 800ff7c:	4b25      	ldr	r3, [pc, #148]	; (8010014 <__swsetup_r+0xd4>)
 800ff7e:	429c      	cmp	r4, r3
 800ff80:	d101      	bne.n	800ff86 <__swsetup_r+0x46>
 800ff82:	68ac      	ldr	r4, [r5, #8]
 800ff84:	e7eb      	b.n	800ff5e <__swsetup_r+0x1e>
 800ff86:	4b24      	ldr	r3, [pc, #144]	; (8010018 <__swsetup_r+0xd8>)
 800ff88:	429c      	cmp	r4, r3
 800ff8a:	bf08      	it	eq
 800ff8c:	68ec      	ldreq	r4, [r5, #12]
 800ff8e:	e7e6      	b.n	800ff5e <__swsetup_r+0x1e>
 800ff90:	0758      	lsls	r0, r3, #29
 800ff92:	d512      	bpl.n	800ffba <__swsetup_r+0x7a>
 800ff94:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800ff96:	b141      	cbz	r1, 800ffaa <__swsetup_r+0x6a>
 800ff98:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ff9c:	4299      	cmp	r1, r3
 800ff9e:	d002      	beq.n	800ffa6 <__swsetup_r+0x66>
 800ffa0:	4630      	mov	r0, r6
 800ffa2:	f7fd fb9d 	bl	800d6e0 <_free_r>
 800ffa6:	2300      	movs	r3, #0
 800ffa8:	6363      	str	r3, [r4, #52]	; 0x34
 800ffaa:	89a3      	ldrh	r3, [r4, #12]
 800ffac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800ffb0:	81a3      	strh	r3, [r4, #12]
 800ffb2:	2300      	movs	r3, #0
 800ffb4:	6063      	str	r3, [r4, #4]
 800ffb6:	6923      	ldr	r3, [r4, #16]
 800ffb8:	6023      	str	r3, [r4, #0]
 800ffba:	89a3      	ldrh	r3, [r4, #12]
 800ffbc:	f043 0308 	orr.w	r3, r3, #8
 800ffc0:	81a3      	strh	r3, [r4, #12]
 800ffc2:	6923      	ldr	r3, [r4, #16]
 800ffc4:	b94b      	cbnz	r3, 800ffda <__swsetup_r+0x9a>
 800ffc6:	89a3      	ldrh	r3, [r4, #12]
 800ffc8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ffcc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ffd0:	d003      	beq.n	800ffda <__swsetup_r+0x9a>
 800ffd2:	4621      	mov	r1, r4
 800ffd4:	4630      	mov	r0, r6
 800ffd6:	f000 f95b 	bl	8010290 <__smakebuf_r>
 800ffda:	89a0      	ldrh	r0, [r4, #12]
 800ffdc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ffe0:	f010 0301 	ands.w	r3, r0, #1
 800ffe4:	d00a      	beq.n	800fffc <__swsetup_r+0xbc>
 800ffe6:	2300      	movs	r3, #0
 800ffe8:	60a3      	str	r3, [r4, #8]
 800ffea:	6963      	ldr	r3, [r4, #20]
 800ffec:	425b      	negs	r3, r3
 800ffee:	61a3      	str	r3, [r4, #24]
 800fff0:	6923      	ldr	r3, [r4, #16]
 800fff2:	b943      	cbnz	r3, 8010006 <__swsetup_r+0xc6>
 800fff4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800fff8:	d1ba      	bne.n	800ff70 <__swsetup_r+0x30>
 800fffa:	bd70      	pop	{r4, r5, r6, pc}
 800fffc:	0781      	lsls	r1, r0, #30
 800fffe:	bf58      	it	pl
 8010000:	6963      	ldrpl	r3, [r4, #20]
 8010002:	60a3      	str	r3, [r4, #8]
 8010004:	e7f4      	b.n	800fff0 <__swsetup_r+0xb0>
 8010006:	2000      	movs	r0, #0
 8010008:	e7f7      	b.n	800fffa <__swsetup_r+0xba>
 801000a:	bf00      	nop
 801000c:	2000001c 	.word	0x2000001c
 8010010:	08010e38 	.word	0x08010e38
 8010014:	08010e58 	.word	0x08010e58
 8010018:	08010e18 	.word	0x08010e18

0801001c <__assert_func>:
 801001c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801001e:	4614      	mov	r4, r2
 8010020:	461a      	mov	r2, r3
 8010022:	4b09      	ldr	r3, [pc, #36]	; (8010048 <__assert_func+0x2c>)
 8010024:	681b      	ldr	r3, [r3, #0]
 8010026:	4605      	mov	r5, r0
 8010028:	68d8      	ldr	r0, [r3, #12]
 801002a:	b14c      	cbz	r4, 8010040 <__assert_func+0x24>
 801002c:	4b07      	ldr	r3, [pc, #28]	; (801004c <__assert_func+0x30>)
 801002e:	9100      	str	r1, [sp, #0]
 8010030:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010034:	4906      	ldr	r1, [pc, #24]	; (8010050 <__assert_func+0x34>)
 8010036:	462b      	mov	r3, r5
 8010038:	f000 f8e0 	bl	80101fc <fiprintf>
 801003c:	f000 f9e3 	bl	8010406 <abort>
 8010040:	4b04      	ldr	r3, [pc, #16]	; (8010054 <__assert_func+0x38>)
 8010042:	461c      	mov	r4, r3
 8010044:	e7f3      	b.n	801002e <__assert_func+0x12>
 8010046:	bf00      	nop
 8010048:	2000001c 	.word	0x2000001c
 801004c:	08010fe5 	.word	0x08010fe5
 8010050:	08010ff2 	.word	0x08010ff2
 8010054:	08011020 	.word	0x08011020

08010058 <_close_r>:
 8010058:	b538      	push	{r3, r4, r5, lr}
 801005a:	4d06      	ldr	r5, [pc, #24]	; (8010074 <_close_r+0x1c>)
 801005c:	2300      	movs	r3, #0
 801005e:	4604      	mov	r4, r0
 8010060:	4608      	mov	r0, r1
 8010062:	602b      	str	r3, [r5, #0]
 8010064:	f000 fa44 	bl	80104f0 <_close>
 8010068:	1c43      	adds	r3, r0, #1
 801006a:	d102      	bne.n	8010072 <_close_r+0x1a>
 801006c:	682b      	ldr	r3, [r5, #0]
 801006e:	b103      	cbz	r3, 8010072 <_close_r+0x1a>
 8010070:	6023      	str	r3, [r4, #0]
 8010072:	bd38      	pop	{r3, r4, r5, pc}
 8010074:	20008200 	.word	0x20008200

08010078 <__sflush_r>:
 8010078:	898a      	ldrh	r2, [r1, #12]
 801007a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801007e:	4605      	mov	r5, r0
 8010080:	0710      	lsls	r0, r2, #28
 8010082:	460c      	mov	r4, r1
 8010084:	d458      	bmi.n	8010138 <__sflush_r+0xc0>
 8010086:	684b      	ldr	r3, [r1, #4]
 8010088:	2b00      	cmp	r3, #0
 801008a:	dc05      	bgt.n	8010098 <__sflush_r+0x20>
 801008c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801008e:	2b00      	cmp	r3, #0
 8010090:	dc02      	bgt.n	8010098 <__sflush_r+0x20>
 8010092:	2000      	movs	r0, #0
 8010094:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010098:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801009a:	2e00      	cmp	r6, #0
 801009c:	d0f9      	beq.n	8010092 <__sflush_r+0x1a>
 801009e:	2300      	movs	r3, #0
 80100a0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80100a4:	682f      	ldr	r7, [r5, #0]
 80100a6:	602b      	str	r3, [r5, #0]
 80100a8:	d032      	beq.n	8010110 <__sflush_r+0x98>
 80100aa:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80100ac:	89a3      	ldrh	r3, [r4, #12]
 80100ae:	075a      	lsls	r2, r3, #29
 80100b0:	d505      	bpl.n	80100be <__sflush_r+0x46>
 80100b2:	6863      	ldr	r3, [r4, #4]
 80100b4:	1ac0      	subs	r0, r0, r3
 80100b6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80100b8:	b10b      	cbz	r3, 80100be <__sflush_r+0x46>
 80100ba:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80100bc:	1ac0      	subs	r0, r0, r3
 80100be:	2300      	movs	r3, #0
 80100c0:	4602      	mov	r2, r0
 80100c2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80100c4:	6a21      	ldr	r1, [r4, #32]
 80100c6:	4628      	mov	r0, r5
 80100c8:	47b0      	blx	r6
 80100ca:	1c43      	adds	r3, r0, #1
 80100cc:	89a3      	ldrh	r3, [r4, #12]
 80100ce:	d106      	bne.n	80100de <__sflush_r+0x66>
 80100d0:	6829      	ldr	r1, [r5, #0]
 80100d2:	291d      	cmp	r1, #29
 80100d4:	d82c      	bhi.n	8010130 <__sflush_r+0xb8>
 80100d6:	4a2a      	ldr	r2, [pc, #168]	; (8010180 <__sflush_r+0x108>)
 80100d8:	40ca      	lsrs	r2, r1
 80100da:	07d6      	lsls	r6, r2, #31
 80100dc:	d528      	bpl.n	8010130 <__sflush_r+0xb8>
 80100de:	2200      	movs	r2, #0
 80100e0:	6062      	str	r2, [r4, #4]
 80100e2:	04d9      	lsls	r1, r3, #19
 80100e4:	6922      	ldr	r2, [r4, #16]
 80100e6:	6022      	str	r2, [r4, #0]
 80100e8:	d504      	bpl.n	80100f4 <__sflush_r+0x7c>
 80100ea:	1c42      	adds	r2, r0, #1
 80100ec:	d101      	bne.n	80100f2 <__sflush_r+0x7a>
 80100ee:	682b      	ldr	r3, [r5, #0]
 80100f0:	b903      	cbnz	r3, 80100f4 <__sflush_r+0x7c>
 80100f2:	6560      	str	r0, [r4, #84]	; 0x54
 80100f4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80100f6:	602f      	str	r7, [r5, #0]
 80100f8:	2900      	cmp	r1, #0
 80100fa:	d0ca      	beq.n	8010092 <__sflush_r+0x1a>
 80100fc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8010100:	4299      	cmp	r1, r3
 8010102:	d002      	beq.n	801010a <__sflush_r+0x92>
 8010104:	4628      	mov	r0, r5
 8010106:	f7fd faeb 	bl	800d6e0 <_free_r>
 801010a:	2000      	movs	r0, #0
 801010c:	6360      	str	r0, [r4, #52]	; 0x34
 801010e:	e7c1      	b.n	8010094 <__sflush_r+0x1c>
 8010110:	6a21      	ldr	r1, [r4, #32]
 8010112:	2301      	movs	r3, #1
 8010114:	4628      	mov	r0, r5
 8010116:	47b0      	blx	r6
 8010118:	1c41      	adds	r1, r0, #1
 801011a:	d1c7      	bne.n	80100ac <__sflush_r+0x34>
 801011c:	682b      	ldr	r3, [r5, #0]
 801011e:	2b00      	cmp	r3, #0
 8010120:	d0c4      	beq.n	80100ac <__sflush_r+0x34>
 8010122:	2b1d      	cmp	r3, #29
 8010124:	d001      	beq.n	801012a <__sflush_r+0xb2>
 8010126:	2b16      	cmp	r3, #22
 8010128:	d101      	bne.n	801012e <__sflush_r+0xb6>
 801012a:	602f      	str	r7, [r5, #0]
 801012c:	e7b1      	b.n	8010092 <__sflush_r+0x1a>
 801012e:	89a3      	ldrh	r3, [r4, #12]
 8010130:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010134:	81a3      	strh	r3, [r4, #12]
 8010136:	e7ad      	b.n	8010094 <__sflush_r+0x1c>
 8010138:	690f      	ldr	r7, [r1, #16]
 801013a:	2f00      	cmp	r7, #0
 801013c:	d0a9      	beq.n	8010092 <__sflush_r+0x1a>
 801013e:	0793      	lsls	r3, r2, #30
 8010140:	680e      	ldr	r6, [r1, #0]
 8010142:	bf08      	it	eq
 8010144:	694b      	ldreq	r3, [r1, #20]
 8010146:	600f      	str	r7, [r1, #0]
 8010148:	bf18      	it	ne
 801014a:	2300      	movne	r3, #0
 801014c:	eba6 0807 	sub.w	r8, r6, r7
 8010150:	608b      	str	r3, [r1, #8]
 8010152:	f1b8 0f00 	cmp.w	r8, #0
 8010156:	dd9c      	ble.n	8010092 <__sflush_r+0x1a>
 8010158:	6a21      	ldr	r1, [r4, #32]
 801015a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801015c:	4643      	mov	r3, r8
 801015e:	463a      	mov	r2, r7
 8010160:	4628      	mov	r0, r5
 8010162:	47b0      	blx	r6
 8010164:	2800      	cmp	r0, #0
 8010166:	dc06      	bgt.n	8010176 <__sflush_r+0xfe>
 8010168:	89a3      	ldrh	r3, [r4, #12]
 801016a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801016e:	81a3      	strh	r3, [r4, #12]
 8010170:	f04f 30ff 	mov.w	r0, #4294967295
 8010174:	e78e      	b.n	8010094 <__sflush_r+0x1c>
 8010176:	4407      	add	r7, r0
 8010178:	eba8 0800 	sub.w	r8, r8, r0
 801017c:	e7e9      	b.n	8010152 <__sflush_r+0xda>
 801017e:	bf00      	nop
 8010180:	20400001 	.word	0x20400001

08010184 <_fflush_r>:
 8010184:	b538      	push	{r3, r4, r5, lr}
 8010186:	690b      	ldr	r3, [r1, #16]
 8010188:	4605      	mov	r5, r0
 801018a:	460c      	mov	r4, r1
 801018c:	b913      	cbnz	r3, 8010194 <_fflush_r+0x10>
 801018e:	2500      	movs	r5, #0
 8010190:	4628      	mov	r0, r5
 8010192:	bd38      	pop	{r3, r4, r5, pc}
 8010194:	b118      	cbz	r0, 801019e <_fflush_r+0x1a>
 8010196:	6983      	ldr	r3, [r0, #24]
 8010198:	b90b      	cbnz	r3, 801019e <_fflush_r+0x1a>
 801019a:	f7fe ff27 	bl	800efec <__sinit>
 801019e:	4b14      	ldr	r3, [pc, #80]	; (80101f0 <_fflush_r+0x6c>)
 80101a0:	429c      	cmp	r4, r3
 80101a2:	d11b      	bne.n	80101dc <_fflush_r+0x58>
 80101a4:	686c      	ldr	r4, [r5, #4]
 80101a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80101aa:	2b00      	cmp	r3, #0
 80101ac:	d0ef      	beq.n	801018e <_fflush_r+0xa>
 80101ae:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80101b0:	07d0      	lsls	r0, r2, #31
 80101b2:	d404      	bmi.n	80101be <_fflush_r+0x3a>
 80101b4:	0599      	lsls	r1, r3, #22
 80101b6:	d402      	bmi.n	80101be <_fflush_r+0x3a>
 80101b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80101ba:	f7fe ffba 	bl	800f132 <__retarget_lock_acquire_recursive>
 80101be:	4628      	mov	r0, r5
 80101c0:	4621      	mov	r1, r4
 80101c2:	f7ff ff59 	bl	8010078 <__sflush_r>
 80101c6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80101c8:	07da      	lsls	r2, r3, #31
 80101ca:	4605      	mov	r5, r0
 80101cc:	d4e0      	bmi.n	8010190 <_fflush_r+0xc>
 80101ce:	89a3      	ldrh	r3, [r4, #12]
 80101d0:	059b      	lsls	r3, r3, #22
 80101d2:	d4dd      	bmi.n	8010190 <_fflush_r+0xc>
 80101d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80101d6:	f7fe ffad 	bl	800f134 <__retarget_lock_release_recursive>
 80101da:	e7d9      	b.n	8010190 <_fflush_r+0xc>
 80101dc:	4b05      	ldr	r3, [pc, #20]	; (80101f4 <_fflush_r+0x70>)
 80101de:	429c      	cmp	r4, r3
 80101e0:	d101      	bne.n	80101e6 <_fflush_r+0x62>
 80101e2:	68ac      	ldr	r4, [r5, #8]
 80101e4:	e7df      	b.n	80101a6 <_fflush_r+0x22>
 80101e6:	4b04      	ldr	r3, [pc, #16]	; (80101f8 <_fflush_r+0x74>)
 80101e8:	429c      	cmp	r4, r3
 80101ea:	bf08      	it	eq
 80101ec:	68ec      	ldreq	r4, [r5, #12]
 80101ee:	e7da      	b.n	80101a6 <_fflush_r+0x22>
 80101f0:	08010e38 	.word	0x08010e38
 80101f4:	08010e58 	.word	0x08010e58
 80101f8:	08010e18 	.word	0x08010e18

080101fc <fiprintf>:
 80101fc:	b40e      	push	{r1, r2, r3}
 80101fe:	b503      	push	{r0, r1, lr}
 8010200:	4601      	mov	r1, r0
 8010202:	ab03      	add	r3, sp, #12
 8010204:	4805      	ldr	r0, [pc, #20]	; (801021c <fiprintf+0x20>)
 8010206:	f853 2b04 	ldr.w	r2, [r3], #4
 801020a:	6800      	ldr	r0, [r0, #0]
 801020c:	9301      	str	r3, [sp, #4]
 801020e:	f7ff fcbf 	bl	800fb90 <_vfiprintf_r>
 8010212:	b002      	add	sp, #8
 8010214:	f85d eb04 	ldr.w	lr, [sp], #4
 8010218:	b003      	add	sp, #12
 801021a:	4770      	bx	lr
 801021c:	2000001c 	.word	0x2000001c

08010220 <_lseek_r>:
 8010220:	b538      	push	{r3, r4, r5, lr}
 8010222:	4d07      	ldr	r5, [pc, #28]	; (8010240 <_lseek_r+0x20>)
 8010224:	4604      	mov	r4, r0
 8010226:	4608      	mov	r0, r1
 8010228:	4611      	mov	r1, r2
 801022a:	2200      	movs	r2, #0
 801022c:	602a      	str	r2, [r5, #0]
 801022e:	461a      	mov	r2, r3
 8010230:	f000 f986 	bl	8010540 <_lseek>
 8010234:	1c43      	adds	r3, r0, #1
 8010236:	d102      	bne.n	801023e <_lseek_r+0x1e>
 8010238:	682b      	ldr	r3, [r5, #0]
 801023a:	b103      	cbz	r3, 801023e <_lseek_r+0x1e>
 801023c:	6023      	str	r3, [r4, #0]
 801023e:	bd38      	pop	{r3, r4, r5, pc}
 8010240:	20008200 	.word	0x20008200

08010244 <__swhatbuf_r>:
 8010244:	b570      	push	{r4, r5, r6, lr}
 8010246:	460e      	mov	r6, r1
 8010248:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801024c:	2900      	cmp	r1, #0
 801024e:	b096      	sub	sp, #88	; 0x58
 8010250:	4614      	mov	r4, r2
 8010252:	461d      	mov	r5, r3
 8010254:	da08      	bge.n	8010268 <__swhatbuf_r+0x24>
 8010256:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 801025a:	2200      	movs	r2, #0
 801025c:	602a      	str	r2, [r5, #0]
 801025e:	061a      	lsls	r2, r3, #24
 8010260:	d410      	bmi.n	8010284 <__swhatbuf_r+0x40>
 8010262:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010266:	e00e      	b.n	8010286 <__swhatbuf_r+0x42>
 8010268:	466a      	mov	r2, sp
 801026a:	f000 f8d3 	bl	8010414 <_fstat_r>
 801026e:	2800      	cmp	r0, #0
 8010270:	dbf1      	blt.n	8010256 <__swhatbuf_r+0x12>
 8010272:	9a01      	ldr	r2, [sp, #4]
 8010274:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8010278:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801027c:	425a      	negs	r2, r3
 801027e:	415a      	adcs	r2, r3
 8010280:	602a      	str	r2, [r5, #0]
 8010282:	e7ee      	b.n	8010262 <__swhatbuf_r+0x1e>
 8010284:	2340      	movs	r3, #64	; 0x40
 8010286:	2000      	movs	r0, #0
 8010288:	6023      	str	r3, [r4, #0]
 801028a:	b016      	add	sp, #88	; 0x58
 801028c:	bd70      	pop	{r4, r5, r6, pc}
	...

08010290 <__smakebuf_r>:
 8010290:	898b      	ldrh	r3, [r1, #12]
 8010292:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010294:	079d      	lsls	r5, r3, #30
 8010296:	4606      	mov	r6, r0
 8010298:	460c      	mov	r4, r1
 801029a:	d507      	bpl.n	80102ac <__smakebuf_r+0x1c>
 801029c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80102a0:	6023      	str	r3, [r4, #0]
 80102a2:	6123      	str	r3, [r4, #16]
 80102a4:	2301      	movs	r3, #1
 80102a6:	6163      	str	r3, [r4, #20]
 80102a8:	b002      	add	sp, #8
 80102aa:	bd70      	pop	{r4, r5, r6, pc}
 80102ac:	ab01      	add	r3, sp, #4
 80102ae:	466a      	mov	r2, sp
 80102b0:	f7ff ffc8 	bl	8010244 <__swhatbuf_r>
 80102b4:	9900      	ldr	r1, [sp, #0]
 80102b6:	4605      	mov	r5, r0
 80102b8:	4630      	mov	r0, r6
 80102ba:	f7fd fa7d 	bl	800d7b8 <_malloc_r>
 80102be:	b948      	cbnz	r0, 80102d4 <__smakebuf_r+0x44>
 80102c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80102c4:	059a      	lsls	r2, r3, #22
 80102c6:	d4ef      	bmi.n	80102a8 <__smakebuf_r+0x18>
 80102c8:	f023 0303 	bic.w	r3, r3, #3
 80102cc:	f043 0302 	orr.w	r3, r3, #2
 80102d0:	81a3      	strh	r3, [r4, #12]
 80102d2:	e7e3      	b.n	801029c <__smakebuf_r+0xc>
 80102d4:	4b0d      	ldr	r3, [pc, #52]	; (801030c <__smakebuf_r+0x7c>)
 80102d6:	62b3      	str	r3, [r6, #40]	; 0x28
 80102d8:	89a3      	ldrh	r3, [r4, #12]
 80102da:	6020      	str	r0, [r4, #0]
 80102dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80102e0:	81a3      	strh	r3, [r4, #12]
 80102e2:	9b00      	ldr	r3, [sp, #0]
 80102e4:	6163      	str	r3, [r4, #20]
 80102e6:	9b01      	ldr	r3, [sp, #4]
 80102e8:	6120      	str	r0, [r4, #16]
 80102ea:	b15b      	cbz	r3, 8010304 <__smakebuf_r+0x74>
 80102ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80102f0:	4630      	mov	r0, r6
 80102f2:	f000 f8a1 	bl	8010438 <_isatty_r>
 80102f6:	b128      	cbz	r0, 8010304 <__smakebuf_r+0x74>
 80102f8:	89a3      	ldrh	r3, [r4, #12]
 80102fa:	f023 0303 	bic.w	r3, r3, #3
 80102fe:	f043 0301 	orr.w	r3, r3, #1
 8010302:	81a3      	strh	r3, [r4, #12]
 8010304:	89a0      	ldrh	r0, [r4, #12]
 8010306:	4305      	orrs	r5, r0
 8010308:	81a5      	strh	r5, [r4, #12]
 801030a:	e7cd      	b.n	80102a8 <__smakebuf_r+0x18>
 801030c:	0800ef85 	.word	0x0800ef85

08010310 <__ascii_mbtowc>:
 8010310:	b082      	sub	sp, #8
 8010312:	b901      	cbnz	r1, 8010316 <__ascii_mbtowc+0x6>
 8010314:	a901      	add	r1, sp, #4
 8010316:	b142      	cbz	r2, 801032a <__ascii_mbtowc+0x1a>
 8010318:	b14b      	cbz	r3, 801032e <__ascii_mbtowc+0x1e>
 801031a:	7813      	ldrb	r3, [r2, #0]
 801031c:	600b      	str	r3, [r1, #0]
 801031e:	7812      	ldrb	r2, [r2, #0]
 8010320:	1e10      	subs	r0, r2, #0
 8010322:	bf18      	it	ne
 8010324:	2001      	movne	r0, #1
 8010326:	b002      	add	sp, #8
 8010328:	4770      	bx	lr
 801032a:	4610      	mov	r0, r2
 801032c:	e7fb      	b.n	8010326 <__ascii_mbtowc+0x16>
 801032e:	f06f 0001 	mvn.w	r0, #1
 8010332:	e7f8      	b.n	8010326 <__ascii_mbtowc+0x16>

08010334 <memmove>:
 8010334:	4288      	cmp	r0, r1
 8010336:	b510      	push	{r4, lr}
 8010338:	eb01 0402 	add.w	r4, r1, r2
 801033c:	d902      	bls.n	8010344 <memmove+0x10>
 801033e:	4284      	cmp	r4, r0
 8010340:	4623      	mov	r3, r4
 8010342:	d807      	bhi.n	8010354 <memmove+0x20>
 8010344:	1e43      	subs	r3, r0, #1
 8010346:	42a1      	cmp	r1, r4
 8010348:	d008      	beq.n	801035c <memmove+0x28>
 801034a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801034e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8010352:	e7f8      	b.n	8010346 <memmove+0x12>
 8010354:	4402      	add	r2, r0
 8010356:	4601      	mov	r1, r0
 8010358:	428a      	cmp	r2, r1
 801035a:	d100      	bne.n	801035e <memmove+0x2a>
 801035c:	bd10      	pop	{r4, pc}
 801035e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8010362:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8010366:	e7f7      	b.n	8010358 <memmove+0x24>

08010368 <_realloc_r>:
 8010368:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801036c:	4680      	mov	r8, r0
 801036e:	4614      	mov	r4, r2
 8010370:	460e      	mov	r6, r1
 8010372:	b921      	cbnz	r1, 801037e <_realloc_r+0x16>
 8010374:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010378:	4611      	mov	r1, r2
 801037a:	f7fd ba1d 	b.w	800d7b8 <_malloc_r>
 801037e:	b92a      	cbnz	r2, 801038c <_realloc_r+0x24>
 8010380:	f7fd f9ae 	bl	800d6e0 <_free_r>
 8010384:	4625      	mov	r5, r4
 8010386:	4628      	mov	r0, r5
 8010388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801038c:	f000 f864 	bl	8010458 <_malloc_usable_size_r>
 8010390:	4284      	cmp	r4, r0
 8010392:	4607      	mov	r7, r0
 8010394:	d802      	bhi.n	801039c <_realloc_r+0x34>
 8010396:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 801039a:	d812      	bhi.n	80103c2 <_realloc_r+0x5a>
 801039c:	4621      	mov	r1, r4
 801039e:	4640      	mov	r0, r8
 80103a0:	f7fd fa0a 	bl	800d7b8 <_malloc_r>
 80103a4:	4605      	mov	r5, r0
 80103a6:	2800      	cmp	r0, #0
 80103a8:	d0ed      	beq.n	8010386 <_realloc_r+0x1e>
 80103aa:	42bc      	cmp	r4, r7
 80103ac:	4622      	mov	r2, r4
 80103ae:	4631      	mov	r1, r6
 80103b0:	bf28      	it	cs
 80103b2:	463a      	movcs	r2, r7
 80103b4:	f7fd f97e 	bl	800d6b4 <memcpy>
 80103b8:	4631      	mov	r1, r6
 80103ba:	4640      	mov	r0, r8
 80103bc:	f7fd f990 	bl	800d6e0 <_free_r>
 80103c0:	e7e1      	b.n	8010386 <_realloc_r+0x1e>
 80103c2:	4635      	mov	r5, r6
 80103c4:	e7df      	b.n	8010386 <_realloc_r+0x1e>
	...

080103c8 <_read_r>:
 80103c8:	b538      	push	{r3, r4, r5, lr}
 80103ca:	4d07      	ldr	r5, [pc, #28]	; (80103e8 <_read_r+0x20>)
 80103cc:	4604      	mov	r4, r0
 80103ce:	4608      	mov	r0, r1
 80103d0:	4611      	mov	r1, r2
 80103d2:	2200      	movs	r2, #0
 80103d4:	602a      	str	r2, [r5, #0]
 80103d6:	461a      	mov	r2, r3
 80103d8:	f000 f8ba 	bl	8010550 <_read>
 80103dc:	1c43      	adds	r3, r0, #1
 80103de:	d102      	bne.n	80103e6 <_read_r+0x1e>
 80103e0:	682b      	ldr	r3, [r5, #0]
 80103e2:	b103      	cbz	r3, 80103e6 <_read_r+0x1e>
 80103e4:	6023      	str	r3, [r4, #0]
 80103e6:	bd38      	pop	{r3, r4, r5, pc}
 80103e8:	20008200 	.word	0x20008200

080103ec <__ascii_wctomb>:
 80103ec:	b149      	cbz	r1, 8010402 <__ascii_wctomb+0x16>
 80103ee:	2aff      	cmp	r2, #255	; 0xff
 80103f0:	bf85      	ittet	hi
 80103f2:	238a      	movhi	r3, #138	; 0x8a
 80103f4:	6003      	strhi	r3, [r0, #0]
 80103f6:	700a      	strbls	r2, [r1, #0]
 80103f8:	f04f 30ff 	movhi.w	r0, #4294967295
 80103fc:	bf98      	it	ls
 80103fe:	2001      	movls	r0, #1
 8010400:	4770      	bx	lr
 8010402:	4608      	mov	r0, r1
 8010404:	4770      	bx	lr

08010406 <abort>:
 8010406:	b508      	push	{r3, lr}
 8010408:	2006      	movs	r0, #6
 801040a:	f000 f855 	bl	80104b8 <raise>
 801040e:	2001      	movs	r0, #1
 8010410:	f000 f8b4 	bl	801057c <_exit>

08010414 <_fstat_r>:
 8010414:	b538      	push	{r3, r4, r5, lr}
 8010416:	4d07      	ldr	r5, [pc, #28]	; (8010434 <_fstat_r+0x20>)
 8010418:	2300      	movs	r3, #0
 801041a:	4604      	mov	r4, r0
 801041c:	4608      	mov	r0, r1
 801041e:	4611      	mov	r1, r2
 8010420:	602b      	str	r3, [r5, #0]
 8010422:	f000 f86d 	bl	8010500 <_fstat>
 8010426:	1c43      	adds	r3, r0, #1
 8010428:	d102      	bne.n	8010430 <_fstat_r+0x1c>
 801042a:	682b      	ldr	r3, [r5, #0]
 801042c:	b103      	cbz	r3, 8010430 <_fstat_r+0x1c>
 801042e:	6023      	str	r3, [r4, #0]
 8010430:	bd38      	pop	{r3, r4, r5, pc}
 8010432:	bf00      	nop
 8010434:	20008200 	.word	0x20008200

08010438 <_isatty_r>:
 8010438:	b538      	push	{r3, r4, r5, lr}
 801043a:	4d06      	ldr	r5, [pc, #24]	; (8010454 <_isatty_r+0x1c>)
 801043c:	2300      	movs	r3, #0
 801043e:	4604      	mov	r4, r0
 8010440:	4608      	mov	r0, r1
 8010442:	602b      	str	r3, [r5, #0]
 8010444:	f000 f86c 	bl	8010520 <_isatty>
 8010448:	1c43      	adds	r3, r0, #1
 801044a:	d102      	bne.n	8010452 <_isatty_r+0x1a>
 801044c:	682b      	ldr	r3, [r5, #0]
 801044e:	b103      	cbz	r3, 8010452 <_isatty_r+0x1a>
 8010450:	6023      	str	r3, [r4, #0]
 8010452:	bd38      	pop	{r3, r4, r5, pc}
 8010454:	20008200 	.word	0x20008200

08010458 <_malloc_usable_size_r>:
 8010458:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801045c:	1f18      	subs	r0, r3, #4
 801045e:	2b00      	cmp	r3, #0
 8010460:	bfbc      	itt	lt
 8010462:	580b      	ldrlt	r3, [r1, r0]
 8010464:	18c0      	addlt	r0, r0, r3
 8010466:	4770      	bx	lr

08010468 <_raise_r>:
 8010468:	291f      	cmp	r1, #31
 801046a:	b538      	push	{r3, r4, r5, lr}
 801046c:	4604      	mov	r4, r0
 801046e:	460d      	mov	r5, r1
 8010470:	d904      	bls.n	801047c <_raise_r+0x14>
 8010472:	2316      	movs	r3, #22
 8010474:	6003      	str	r3, [r0, #0]
 8010476:	f04f 30ff 	mov.w	r0, #4294967295
 801047a:	bd38      	pop	{r3, r4, r5, pc}
 801047c:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801047e:	b112      	cbz	r2, 8010486 <_raise_r+0x1e>
 8010480:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8010484:	b94b      	cbnz	r3, 801049a <_raise_r+0x32>
 8010486:	4620      	mov	r0, r4
 8010488:	f000 f830 	bl	80104ec <_getpid_r>
 801048c:	462a      	mov	r2, r5
 801048e:	4601      	mov	r1, r0
 8010490:	4620      	mov	r0, r4
 8010492:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010496:	f000 b817 	b.w	80104c8 <_kill_r>
 801049a:	2b01      	cmp	r3, #1
 801049c:	d00a      	beq.n	80104b4 <_raise_r+0x4c>
 801049e:	1c59      	adds	r1, r3, #1
 80104a0:	d103      	bne.n	80104aa <_raise_r+0x42>
 80104a2:	2316      	movs	r3, #22
 80104a4:	6003      	str	r3, [r0, #0]
 80104a6:	2001      	movs	r0, #1
 80104a8:	e7e7      	b.n	801047a <_raise_r+0x12>
 80104aa:	2400      	movs	r4, #0
 80104ac:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80104b0:	4628      	mov	r0, r5
 80104b2:	4798      	blx	r3
 80104b4:	2000      	movs	r0, #0
 80104b6:	e7e0      	b.n	801047a <_raise_r+0x12>

080104b8 <raise>:
 80104b8:	4b02      	ldr	r3, [pc, #8]	; (80104c4 <raise+0xc>)
 80104ba:	4601      	mov	r1, r0
 80104bc:	6818      	ldr	r0, [r3, #0]
 80104be:	f7ff bfd3 	b.w	8010468 <_raise_r>
 80104c2:	bf00      	nop
 80104c4:	2000001c 	.word	0x2000001c

080104c8 <_kill_r>:
 80104c8:	b538      	push	{r3, r4, r5, lr}
 80104ca:	4d07      	ldr	r5, [pc, #28]	; (80104e8 <_kill_r+0x20>)
 80104cc:	2300      	movs	r3, #0
 80104ce:	4604      	mov	r4, r0
 80104d0:	4608      	mov	r0, r1
 80104d2:	4611      	mov	r1, r2
 80104d4:	602b      	str	r3, [r5, #0]
 80104d6:	f000 f82b 	bl	8010530 <_kill>
 80104da:	1c43      	adds	r3, r0, #1
 80104dc:	d102      	bne.n	80104e4 <_kill_r+0x1c>
 80104de:	682b      	ldr	r3, [r5, #0]
 80104e0:	b103      	cbz	r3, 80104e4 <_kill_r+0x1c>
 80104e2:	6023      	str	r3, [r4, #0]
 80104e4:	bd38      	pop	{r3, r4, r5, pc}
 80104e6:	bf00      	nop
 80104e8:	20008200 	.word	0x20008200

080104ec <_getpid_r>:
 80104ec:	f000 b810 	b.w	8010510 <_getpid>

080104f0 <_close>:
 80104f0:	4b02      	ldr	r3, [pc, #8]	; (80104fc <_close+0xc>)
 80104f2:	2258      	movs	r2, #88	; 0x58
 80104f4:	601a      	str	r2, [r3, #0]
 80104f6:	f04f 30ff 	mov.w	r0, #4294967295
 80104fa:	4770      	bx	lr
 80104fc:	20008200 	.word	0x20008200

08010500 <_fstat>:
 8010500:	4b02      	ldr	r3, [pc, #8]	; (801050c <_fstat+0xc>)
 8010502:	2258      	movs	r2, #88	; 0x58
 8010504:	601a      	str	r2, [r3, #0]
 8010506:	f04f 30ff 	mov.w	r0, #4294967295
 801050a:	4770      	bx	lr
 801050c:	20008200 	.word	0x20008200

08010510 <_getpid>:
 8010510:	4b02      	ldr	r3, [pc, #8]	; (801051c <_getpid+0xc>)
 8010512:	2258      	movs	r2, #88	; 0x58
 8010514:	601a      	str	r2, [r3, #0]
 8010516:	f04f 30ff 	mov.w	r0, #4294967295
 801051a:	4770      	bx	lr
 801051c:	20008200 	.word	0x20008200

08010520 <_isatty>:
 8010520:	4b02      	ldr	r3, [pc, #8]	; (801052c <_isatty+0xc>)
 8010522:	2258      	movs	r2, #88	; 0x58
 8010524:	601a      	str	r2, [r3, #0]
 8010526:	2000      	movs	r0, #0
 8010528:	4770      	bx	lr
 801052a:	bf00      	nop
 801052c:	20008200 	.word	0x20008200

08010530 <_kill>:
 8010530:	4b02      	ldr	r3, [pc, #8]	; (801053c <_kill+0xc>)
 8010532:	2258      	movs	r2, #88	; 0x58
 8010534:	601a      	str	r2, [r3, #0]
 8010536:	f04f 30ff 	mov.w	r0, #4294967295
 801053a:	4770      	bx	lr
 801053c:	20008200 	.word	0x20008200

08010540 <_lseek>:
 8010540:	4b02      	ldr	r3, [pc, #8]	; (801054c <_lseek+0xc>)
 8010542:	2258      	movs	r2, #88	; 0x58
 8010544:	601a      	str	r2, [r3, #0]
 8010546:	f04f 30ff 	mov.w	r0, #4294967295
 801054a:	4770      	bx	lr
 801054c:	20008200 	.word	0x20008200

08010550 <_read>:
 8010550:	4b02      	ldr	r3, [pc, #8]	; (801055c <_read+0xc>)
 8010552:	2258      	movs	r2, #88	; 0x58
 8010554:	601a      	str	r2, [r3, #0]
 8010556:	f04f 30ff 	mov.w	r0, #4294967295
 801055a:	4770      	bx	lr
 801055c:	20008200 	.word	0x20008200

08010560 <_sbrk>:
 8010560:	4a04      	ldr	r2, [pc, #16]	; (8010574 <_sbrk+0x14>)
 8010562:	6811      	ldr	r1, [r2, #0]
 8010564:	4603      	mov	r3, r0
 8010566:	b909      	cbnz	r1, 801056c <_sbrk+0xc>
 8010568:	4903      	ldr	r1, [pc, #12]	; (8010578 <_sbrk+0x18>)
 801056a:	6011      	str	r1, [r2, #0]
 801056c:	6810      	ldr	r0, [r2, #0]
 801056e:	4403      	add	r3, r0
 8010570:	6013      	str	r3, [r2, #0]
 8010572:	4770      	bx	lr
 8010574:	20008204 	.word	0x20008204
 8010578:	20008208 	.word	0x20008208

0801057c <_exit>:
 801057c:	e7fe      	b.n	801057c <_exit>
	...

08010580 <_init>:
 8010580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010582:	bf00      	nop
 8010584:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010586:	bc08      	pop	{r3}
 8010588:	469e      	mov	lr, r3
 801058a:	4770      	bx	lr

0801058c <_fini>:
 801058c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801058e:	bf00      	nop
 8010590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8010592:	bc08      	pop	{r3}
 8010594:	469e      	mov	lr, r3
 8010596:	4770      	bx	lr
